{"root":"0:0:1614","crate_version":"0.3.66","includes_private":false,"index":{"1:14109:141":{"id":"1:14109:141","crate_id":1,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:14110:266","1:14111:507","1:14112:269","1:14113:1066"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6462:9088":{"id":"4:6462:9088","crate_id":4,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6463:13564","4:6464:3481","4:6465:13565","4:6466:13566","4:6467:13567","4:6468:1658"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10562:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3377:9109":{"id":"1:3377:9109","crate_id":1,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3379:171","1:3380:345"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8850:14110":{"id":"1:8850:14110","crate_id":1,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"1:7891:14111","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10274:13360":{"id":"1:10274:13360","crate_id":1,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10275:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:114:1624":{"id":"0:114:1624","crate_id":0,"name":"clear_symbol_cache","span":{"filename":"src/symbolize/mod.rs","begin":[459,0],"end":[464,1]},"visibility":"public","docs":"Attempt to reclaim that cached memory used to symbolicate addresses.\n\nThis method will attempt to release any global data structures that have\notherwise been cached globally or in the thread which typically represent\nparsed DWARF information or similar.\n\n# Caveats\n\nWhile this function is always available it doesn't actually do anything on\nmost implementations. Libraries like dbghelp or libbacktrace do not provide\nfacilities to deallocate state and manage the allocated memory. For now the\n`gimli-symbolize` feature of this crate is the only feature where this\nfunction has any effect.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:0:1614":{"id":"0:0:1614","crate_id":0,"name":"backtrace","span":{"filename":"src/lib.rs","begin":[1,0],"end":[193,12]},"visibility":"public","docs":"A library for acquiring a backtrace at runtime\n\nThis library is meant to supplement the `RUST_BACKTRACE=1` support of the\nstandard library by allowing an acquisition of a backtrace at runtime\nprogrammatically. The backtraces generated by this library do not need to be\nparsed, for example, and expose the functionality of multiple backend\nimplementations.\n\n# Usage\n\nFirst, add this to your Cargo.toml\n\n```toml\n[dependencies]\nbacktrace = \"0.3\"\n```\n\nNext:\n\n```\nfn main() {\n# // Unsafe here so test passes on no_std.\n# #[cfg(feature = \"std\")] {\n    backtrace::trace(|frame| {\n        let ip = frame.ip();\n        let symbol_address = frame.symbol_address();\n\n        // Resolve this instruction pointer to a symbol name\n        backtrace::resolve_frame(frame, |symbol| {\n            if let Some(name) = symbol.name() {\n                // ...\n            }\n            if let Some(filename) = symbol.filename() {\n                // ...\n            }\n        });\n\n        true // keep going to the next frame\n    });\n}\n# }\n```\n\n# Backtrace accuracy\n\nThis crate implements best-effort attempts to get the native backtrace. This\nis not always guaranteed to work, and some platforms don't return any\nbacktrace at all. If your application requires accurate backtraces then it's\nrecommended to closely evaluate this crate to see whether it's suitable\nfor your use case on your target platforms.\n\nEven on supported platforms, there's a number of reasons that backtraces may\nbe less-than-accurate, including but not limited to:\n\n* Unwind information may not be available. This crate primarily implements\n  backtraces by unwinding the stack, but not all functions may have\n  unwinding information (e.g. DWARF unwinding information).\n\n* Rust code may be compiled without unwinding information for some\n  functions. This can also happen for Rust code compiled with\n  `-Cpanic=abort`. You can remedy this, however, with\n  `-Cforce-unwind-tables` as a compiler option.\n\n* Unwind information may be inaccurate or corrupt. In the worst case\n  inaccurate unwind information can lead this library to segfault. In the\n  best case inaccurate information will result in a truncated stack trace.\n\n* Backtraces may not report filenames/line numbers correctly due to missing\n  or corrupt debug information. This won't lead to segfaults unlike corrupt\n  unwinding information, but missing or malformed debug information will\n  mean that filenames and line numbers will not be available. This may be\n  because debug information wasn't generated by the compiler, or it's just\n  missing on the filesystem.\n\n* Not all platforms are supported. For example there's no way to get a\n  backtrace on WebAssembly at the moment.\n\n* Crate features may be disabled. Currently this crate supports using Gimli\n  libbacktrace on non-Windows platforms for reading debuginfo for\n  backtraces. If both crate features are disabled, however, then these\n  platforms will generate a backtrace but be unable to generate symbols for\n  it.\n\nIn most standard workflows for most standard platforms you generally don't\nneed to worry about these caveats. We'll try to fix ones where we can over\ntime, but otherwise it's important to be aware of the limitations of\nunwinding-based backtraces!","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/backtrace\")]","#![deny(missing_docs)]","#![no_std]","#![warn(rust_2018_idioms)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:7","0:10","0:31","0:35","0:38","0:41","0:115","0:133","0:194","0:197","0:200","0:756","0:760","0:763","0:767","0:770","0:773"],"is_stripped":false}},"1:13710:138":{"id":"1:13710:138","crate_id":1,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13711:171","1:13712:1000"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13386:14075":{"id":"1:13386:14075","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"1:49296:13412","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6079:60601":{"id":"5:6079:60601","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8092:2299","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8092:2299","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3367:9107":{"id":"1:3367:9107","crate_id":1,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3369:171","1:3370:340"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:5458:9159":{"id":"25:5458:9159","crate_id":25,"name":"ObjectSymbolTable","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5460:1620","25:5461:9183","25:5462:2018","25:5463:61303"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:733:1518":{"id":"0:733:1518","crate_id":0,"name":"0","span":{"filename":"src/types.rs","begin":[19,10],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"1:3245:2363":{"id":"1:3245:2363","crate_id":1,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13385:13440":{"id":"1:13385:13440","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"1:49290:13413","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:84:1619":{"id":"0:84:1619","crate_id":0,"name":"resolve_unsynchronized","span":{"filename":"src/symbolize/mod.rs","begin":[158,0],"end":[163,1]},"visibility":"public","docs":"Same as `resolve`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available when\nthe `std` feature of this crate isn't compiled in. See the `resolve`\nfunction for more documentation and examples.\n\n# Panics\n\nSee information on `resolve` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["addr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:5547:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3489:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"1:8363:136":{"id":"1:8363:136","crate_id":1,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8365:672"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:23006:14133":{"id":"1:23006:14133","crate_id":1,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"1:23655:14127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22997:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:160:9136":{"id":"25:160:9136","crate_id":25,"name":"Pod","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2837:97":{"id":"1:2837:97","crate_id":1,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2839:1952"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"4:6864:9083":{"id":"4:6864:9083","crate_id":4,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6865:13556"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13377:55830":{"id":"1:13377:55830","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:3382:9111":{"id":"1:3382:9111","crate_id":1,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3384:171","1:3385:1212"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:2135:2666":{"id":"25:2135:2666","crate_id":25,"name":"SectionHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2136:2671","25:2137:13683","25:2138:2475","25:2139:8568","25:2140:8569","25:2141:2708","25:2142:8570","25:2143:8571","25:2144:8572","25:2145:8573","25:2146:8574","25:2147:8575","25:2148:8576","25:2149:886","25:2152:13699","25:2153:2357","25:2156:13700","25:2160:2691","25:2163:2018","25:2166:13701","25:2169:13702","25:2172:11822","25:2175:2727","25:2178:3608","25:2181:13703","25:2184:703","25:2187:13704","25:2190:9735","25:2193:13705","25:2196:13706","25:2199:13707"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/backtrace/libunwind.rs","begin":[125,4],"end":[125,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::_Unwind_Reason_Code","name":"_Unwind_Reason_Code","id":"0:271:2416","glob":true}},"1:13478:1910":{"id":"1:13478:1910","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"1:12936:3125","FromStr::Err":"1:12936:3125"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12936:3125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12936:3125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:3537:14961":{"id":"25:3537:14961","crate_id":25,"name":"MachHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3538:13683","25:3539:2475","25:3540:9160","25:3541:9161","25:3542:49399","25:3543:13685","25:3544:13690","25:3545:13689","25:3546:8960","25:3547:15447","25:3548:15448","25:3549:15451","25:3550:15342","25:3551:15452","25:3552:641","25:3553:1910","25:3556:13686","25:3557:2689","25:3558:61406","25:3561:15418"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13382:59946":{"id":"1:13382:59946","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"4:15862:2076","crate::ops::IndexMut":"1:3548:9051","str::slice_unchecked":"4:15862:2076"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[120,0],"end":[120,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::types::BytesOrWideString","name":"BytesOrWideString","id":"0:729:1623","glob":false}},"1:13472:59963":{"id":"1:13472:59963","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:15856:2071","self::pattern":"1:12997:13388"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13022:13405":{"id":"1:13022:13405","crate_id":1,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13024:13294","1:13025:55691","1:13026:55692"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"1:13016:13406","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3355:9105":{"id":"1:3355:9105","crate_id":1,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3357:1090"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:1652:2665":{"id":"25:1652:2665","crate_id":25,"name":"FileHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:1653:13683","25:1654:13684","25:1655:2475","25:1656:11836","25:1657:2666","25:1658:2664","25:1659:11835","25:1660:11824","25:1661:2668","25:1662:11837","25:1663:11838","25:1664:13685","25:1665:8546","25:1666:8547","25:1667:8548","25:1668:8549","25:1669:8550","25:1670:8551","25:1671:8552","25:1672:8553","25:1673:8554","25:1674:8555","25:1675:8556","25:1676:8557","25:1677:8558","25:1678:8559","25:1679:1910","25:1682:13686","25:1683:13687","25:1684:13688","25:1685:13689","25:1686:13690","25:1687:2689","25:1688:13691","25:1691:13692","25:1694:13693","25:1697:13694","25:1700:13695","25:1703:13696","25:1706:13697","25:1709:2507","25:1712:13698"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13460:59961":{"id":"1:13460:59961","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"1:12997:13388","prim@char":"4:15856:2071"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10270:13359":{"id":"1:10270:13359","crate_id":1,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10271:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6688:9077":{"id":"4:6688:9077","crate_id":4,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6689:56845","4:6690:8889","4:6691:8890","4:6692:8892","4:6693:8891","4:6694:8893","4:6695:8894","4:6696:8896","4:6697:2704","4:6698:8899","4:6699:8900","4:6700:8901","4:6701:8902","4:6702:8903","4:6703:8904","4:6704:8897","4:6705:8898"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10276:13361":{"id":"1:10276:13361","crate_id":1,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10277:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13487:59966":{"id":"1:13487:59966","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"4:15856:2071"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"1:49637:13429","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13486:14491":{"id":"1:13486:14491","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"4:15856:2071"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"1:49628:13428","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3308:9096":{"id":"1:3308:9096","crate_id":1,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3310:171","1:3311:254"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3313:9101":{"id":"1:3313:9101","crate_id":1,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3315:171","1:3316:1334"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6099:60605":{"id":"5:6099:60605","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:1643","`String`":"5:8354:205"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8092:2299","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2892:173":{"id":"1:2892:173","crate_id":1,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2894:593","1:2895:894"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[124,0],"end":[124,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::clear_symbol_cache","name":"clear_symbol_cache","id":"0:114:1624","glob":false}},"4:1079:14489":{"id":"4:1079:14489","crate_id":4,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:1080:1965","4:1081:14415","4:1082:56672","4:1083:56673","4:1084:56674","4:1085:56675","4:1086:56676"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:7798:14572":{"id":"4:7798:14572","crate_id":4,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:7799:56926"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10272:179":{"id":"1:10272:179","crate_id":1,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10273:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13371:293":{"id":"1:13371:293","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"4:15862:2076","`u8`":"4:15873:2085"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:3248:49398":{"id":"25:3248:49398","crate_id":25,"name":"FatArch","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3249:13683","25:3250:15447","25:3251:15448","25:3252:944","25:3253:1283","25:3254:262","25:3255:61298","25:3256:13699","25:3257:2357"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:220:9144":{"id":"25:220:9144","crate_id":25,"name":"ReadRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:222:780","25:223:61250","25:224:61251","25:225:2719","25:226:2472","25:229:13534","25:231:53636","25:234:61252"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13389:26759":{"id":"1:13389:26759","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"4:15862:2076"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"1:49603:13430","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:86:1618":{"id":"0:86:1618","crate_id":0,"name":"resolve_frame_unsynchronized","span":{"filename":"src/symbolize/mod.rs","begin":[174,0],"end":[179,1]},"visibility":"public","docs":"Same as `resolve_frame`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available\nwhen the `std` feature of this crate isn't compiled in. See the\n`resolve_frame` function for more documentation and examples.\n\n# Panics\n\nSee information on `resolve_frame` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["frame",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3489:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"25:5518:9153":{"id":"25:5518:9153","crate_id":25,"name":"SymbolMapEntry","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5519:257"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6080:13508":{"id":"5:6080:13508","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3459:116":{"id":"1:3459:116","crate_id":1,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3460:210","1:3461:532"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:438:12061":{"id":"23:438:12061","crate_id":23,"name":"UnwindOffset","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:440:2703"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"kind":"primitive","inner":"usize"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReaderOffset","id":"23:1185:12060","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13449:59955":{"id":"1:13449:59955","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:41":{"id":"0:41","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[117,58],"end":[117,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::SymbolName","name":"SymbolName","id":"0:100:1621","glob":false}},"5:6086:60603":{"id":"5:6086:60603","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:4629:9013":{"id":"4:4629:9013","crate_id":4,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4630:2472","4:4631:56993","4:4633:56994","4:4634:56995","4:4635:8997","4:4636:56996","4:4637:56719","4:4639:56997","4:4640:13323","4:4641:1917","4:4642:13309","4:4644:3084"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3544:9050":{"id":"1:3544:9050","crate_id":1,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3546:171","1:3547:740"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13425:57399":{"id":"1:13425:57399","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"1:12997:13388","str::rsplitn":"4:15862:2076","prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"1:49424:13421","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13446:59954":{"id":"1:13446:59954","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:12997:13388","`DoubleEndedIterator`":"1:8411:120","str::match_indices":"4:15862:2076","prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"1:49488:13425","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4750:2284":{"id":"1:4750:2284","crate_id":1,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4751:13302","1:4752:56274","1:4753:13304"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3388:9112":{"id":"1:3388:9112","crate_id":1,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3390:171","1:3391:1215"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:4989:14419":{"id":"4:4989:14419","crate_id":4,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4990:3117","4:4991:57181"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6100:14471":{"id":"5:6100:14471","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8436:2364":{"id":"1:8436:2364","crate_id":1,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8437:780","1:8438:2021"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:27:2475":{"id":"25:27:2475","crate_id":25,"name":"Endian","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:28:61439","25:29:61440","25:30:13690","25:31:13689","25:32:61055","25:33:61056","25:34:61057","25:35:61059","25:36:61060","25:37:61061","25:38:61441","25:40:61442","25:42:61443","25:44:61444","25:46:61445","25:48:61446","25:50:55321","25:51:55322","25:52:55323","25:53:55327","25:54:55328","25:55:55329","25:56:61447","25:58:61448","25:60:61449","25:62:61450","25:64:61451","25:66:61452"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:3218:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:1664:12067":{"id":"23:1664:12067","crate_id":23,"name":"LineProgram","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1667:2709","23:1668:61046"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Offset","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12057","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12057","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Offset"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Offset"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReaderOffset","id":"23:1185:12060","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:22:1615":{"id":"0:22:1615","crate_id":0,"name":"trace_unsynchronized","span":{"filename":"src/backtrace/mod.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"Same as `trace`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available\nwhen the `std` feature of this crate isn't compiled in. See the `trace`\nfunction for more documentation and examples.\n\n# Panics\n\nSee information on `trace` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3489:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"1:7891:14111":{"id":"1:7891:14111","crate_id":1,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7892:56389","1:7893:56390","1:7894:56387","1:7895:56385","1:7896:56391","1:7897:56388","1:7898:56386"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2938:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3252:209":{"id":"1:3252:209","crate_id":1,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:2877:2664":{"id":"25:2877:2664","crate_id":25,"name":"CompressionHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2878:13683","25:2879:2475","25:2880:2710","25:2881:2711","25:2882:8805"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13387:1917":{"id":"1:13387:1917","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"1:49306:1957","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13392:26750":{"id":"1:13392:26750","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"1:49612:13426","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3339:9102":{"id":"1:3339:9102","crate_id":1,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3341:255"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:22812:14128":{"id":"1:22812:14128","crate_id":1,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22802:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2897:124":{"id":"1:2897:124","crate_id":1,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3483:1639":{"id":"1:3483:1639","crate_id":1,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3484:567"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:5374:2504":{"id":"25:5374:2504","crate_id":25,"name":"Object","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5377:9160","25:5378:9178","25:5379:9161","25:5380:9179","25:5381:9162","25:5382:9180","25:5383:1620","25:5384:9183","25:5385:9182","25:5386:9184","25:5387:61298","25:5388:61312","25:5389:13689","25:5390:61299","25:5391:769","25:5392:2543","25:5393:2722","25:5394:61300","25:5395:61301","25:5396:2507","25:5397:61302","25:5398:61304","25:5399:61303","25:5400:2018","25:5401:61305","25:5402:11886","25:5403:61306","25:5404:61313","25:5406:61314","25:5407:61307","25:5408:61308","25:5409:61310","25:5410:61315","25:5412:2675","25:5413:61316","25:5414:61317","25:5415:61309","25:5416:61311","25:5417:2568","25:5418:641"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}},{"name":"'file","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'data","bounds":[{"outlives":"'file"}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3146:135":{"id":"1:3146:135","crate_id":1,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3148:669"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:776:1633":{"id":"0:776:1633","crate_id":0,"name":"capture","span":{"filename":"src/capture.rs","begin":[1,0],"end":[555,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:864:1634","0:869:1635","0:884:1636"],"is_stripped":true}},"1:12936:3125":{"id":"1:12936:3125","crate_id":1,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12937:126","1:12938:55551"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:756":{"id":"0:756","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[131,8],"end":[131,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::backtrace::trace","name":"trace","id":"0:20:1630","glob":false}},"1:13390:3170":{"id":"1:13390:3170","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"1:49574:3142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[127,30],"end":[127,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"print::BacktraceFrameFmt","name":"BacktraceFrameFmt","id":"0:175:1627","glob":false}},"0:767":{"id":"0:767","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,32],"end":[133,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::capture::Backtrace","name":"Backtrace","id":"0:864:1634","glob":false}},"1:3742:2289":{"id":"1:3742:2289","crate_id":1,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:161:1626":{"id":"0:161:1626","crate_id":0,"name":"BacktraceFmt","span":{"filename":"src/print.rs","begin":[17,0],"end":[23,1]},"visibility":"public","docs":"A formatter for backtraces.\n\nThis type can be used to print a backtrace regardless of where the backtrace\nitself comes from. If you have a `Backtrace` type then its `Debug`\nimplementation already uses this printing format.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:3486:130":{"id":"1:3486:130","crate_id":1,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3488:365"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3489:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:6962:9080":{"id":"4:6962:9080","crate_id":4,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6963:13555"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3281:2287":{"id":"1:3281:2287","crate_id":1,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3335:9099":{"id":"1:3335:9099","crate_id":1,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3336:171","1:3337:900"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6440:9087":{"id":"4:6440:9087","crate_id":4,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6441:8578","4:6442:8579","4:6443:13558","4:6444:13559","4:6446:13560","4:6448:13561","4:6449:13562","4:6451:13563"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10562:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2928:167":{"id":"1:2928:167","crate_id":1,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2929:404","1:2930:13287","1:2931:11920","1:2932:13292"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2938:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3967:68":{"id":"1:3967:68","crate_id":1,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3968:1408"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"1:13443:59953":{"id":"1:13443:59953","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"4:15856:2071","self::pattern":"1:12997:13388","str::rmatch_indices":"4:15862:2076","`DoubleEndedIterator`":"1:8411:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"1:49470:13424","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:88:1620":{"id":"0:88:1620","crate_id":0,"name":"Symbol","span":{"filename":"src/symbolize/mod.rs","begin":[190,0],"end":[195,1]},"visibility":"public","docs":"A trait representing the resolution of a symbol in a file.\n\nThis trait is yielded as a trait object to the closure given to the\n`backtrace::resolve` function, and it is virtually dispatched as it's\nunknown which implementation is behind it.\n\nA symbol can give contextual information about a function, for example the\nname, filename, line number, precise address, etc. Not all information is\nalways available in a symbol, however, so all methods return an `Option`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:3240:200":{"id":"1:3240:200","crate_id":1,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3351:9103":{"id":"1:3351:9103","crate_id":1,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3353:548"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:175:1627":{"id":"0:175:1627","crate_id":0,"name":"BacktraceFrameFmt","span":{"filename":"src/print.rs","begin":[94,0],"end":[97,1]},"visibility":"public","docs":"A formatter for just one frame of a backtrace.\n\nThis type is created by the `BacktraceFmt::frame` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'fmt","kind":{"lifetime":{"outlives":[]}}},{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:3701:137":{"id":"1:3701:137","crate_id":1,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3703:675"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3696:213","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:783:211":{"id":"5:783:211","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:1965","5:785:2799","5:786:13385"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13027:13404":{"id":"1:13027:13404","crate_id":1,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13381:14504":{"id":"1:13381:14504","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"4:15862:2076","str::slice_mut_unchecked":"4:15862:2076","crate::ops::Index":"1:3544:9050"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"25:5450:9155":{"id":"25:5450:9155","crate_id":25,"name":"ObjectComdat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5452:9179","25:5453:769","25:5454:2019","25:5455:61237","25:5456:886","25:5457:2507"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3372:9108":{"id":"1:3372:9108","crate_id":1,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3374:171","1:3375:342"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3411:9117":{"id":"1:3411:9117","crate_id":1,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3413:1216"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:236:1616":{"id":"0:236:1616","crate_id":0,"name":"Frame","span":{"filename":"src/backtrace/mod.rs","begin":[76,0],"end":[78,1]},"visibility":"public","docs":"A trait representing one frame of a backtrace, yielded to the `trace`\nfunction of this crate.\n\nThe tracing function's closure will be yielded frames, and the frame is\nvirtually dispatched as the underlying implementation is not always known\nuntil runtime.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"4:6862:9081":{"id":"4:6862:9081","crate_id":4,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6863:2601"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:118:1622":{"id":"0:118:1622","crate_id":0,"name":"types","span":{"filename":"src/types.rs","begin":[1,0],"end":[83,1]},"visibility":"crate","docs":"Platform dependent types.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:729:1623"],"is_stripped":true}},"1:13419:59948":{"id":"1:13419:59948","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"`DoubleEndedIterator`":"1:8411:120","str::split":"4:15862:2076","self::pattern":"1:12997:13388","prim@char":"4:15856:2071","str::rsplit_terminator":"4:15862:2076"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"1:49370:13419","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13383:57387":{"id":"1:13383:57387","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"4:15862:2076"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:266:2405":{"id":"0:266:2405","crate_id":0,"name":"uw","span":{"filename":"src/backtrace/libunwind.rs","begin":[124,0],"end":[124,6]},"visibility":{"restricted":{"parent":"0:240:1829","path":"::backtrace::libunwind"}},"docs":"Unwind library interface used for backtraces\n\nNote that dead code is allowed as here are just bindings\niOS doesn't use all of them it but adding more\nplatform-specific configs pollutes the code too much","links":{},"attrs":["#[allow(non_camel_case_types)]","#[allow(non_snake_case)]","#[allow(dead_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:267"],"is_stripped":true}},"1:22961:40742":{"id":"1:22961:40742","crate_id":1,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:22962:16284","1:22963:53694","1:22964:53695"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22954:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13480:14415":{"id":"1:13480:14415","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5744:9077":{"id":"4:5744:9077","crate_id":4,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5745:8601","4:5746:13533","4:5747:8968","4:5748:13542","4:5749:8578","4:5750:8579","4:5751:13543","4:5752:1283","4:5753:13544","4:5754:13545","4:5755:13546","4:5756:13547","4:5757:13548","4:5758:13549","4:5759:13550","4:5760:13551"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:3988:9161":{"id":"25:3988:9161","crate_id":25,"name":"Section","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3989:13683","25:3990:2475","25:3991:15466","25:3993:15458","25:3995:1849","25:3996:1283","25:3997:944","25:3998:262","25:3999:15467","25:4000:15468","25:4001:641","25:4002:886","25:4003:61403","25:4004:13699","25:4005:2357","25:4008:11882"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:8367:151":{"id":"1:8367:151","crate_id":1,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8368:13302","1:8369:9057","1:8370:755"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3394:9113":{"id":"1:3394:9113","crate_id":1,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3396:341"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:736:1518":{"id":"0:736:1518","crate_id":0,"name":"0","span":{"filename":"src/types.rs","begin":[21,9],"end":[21,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u16"}}}}},"1:8411:120":{"id":"1:8411:120","crate_id":1,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8412:13294","1:8413:13295","1:8414:13296","1:8415:13297","1:8419:13298","1:8422:13299"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:5800:14485":{"id":"4:5800:14485","crate_id":4,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5801:8968"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3075:3192":{"id":"1:3075:3192","crate_id":1,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:3074:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3343:9106":{"id":"1:3343:9106","crate_id":1,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3345:1335"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3492:132":{"id":"1:3492:132","crate_id":1,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3494:171","1:3495:367"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13369:1929":{"id":"1:13369:1929","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12468:1922"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13482:56675":{"id":"1:13482:56675","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13363:59942":{"id":"1:13363:59942","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:136:1625":{"id":"0:136:1625","crate_id":0,"name":"print","span":{"filename":"src/print.rs","begin":[1,0],"end":[302,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:161:1626","0:740:1628","0:175:1627"],"is_stripped":true}},"1:13379:55831":{"id":"1:13379:55831","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:3140:74":{"id":"1:3140:74","crate_id":1,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3142:13293"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"5:6406:212":{"id":"5:6406:212","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6407:1376"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3779:2290":{"id":"1:3779:2290","crate_id":1,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:5722:9075":{"id":"4:5722:9075","crate_id":4,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5723:13534","4:5724:13535","4:5725:13536","4:5726:13537"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13451:59956":{"id":"1:13451:59956","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"27:602:15043":{"id":"27:602:15043","crate_id":27,"name":"ResetPolicy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["27:603:61519"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:884:1636":{"id":"0:884:1636","crate_id":0,"name":"BacktraceSymbol","span":{"filename":"src/capture.rs","begin":[103,0],"end":[109,1]},"visibility":"public","docs":"Captured version of a symbol in a backtrace.\n\nThis type is returned as a list from `BacktraceFrame::symbols` and\nrepresents the metadata for a symbol in a backtrace.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"25:2657:11838":{"id":"25:2657:11838","crate_id":25,"name":"Rela","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2658:13683","25:2659:13684","25:2660:2475","25:2661:11785","25:2662:11786","25:2663:11787","25:2664:61292","25:2665:15591"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:869:1635":{"id":"0:869:1635","crate_id":0,"name":"BacktraceFrame","span":{"filename":"src/capture.rs","begin":[49,0],"end":[52,1]},"visibility":"public","docs":"Captured version of a frame in a backtrace.\n\nThis type is returned as a list from `Backtrace::frames` and represents one\nstack frame in a captured backtrace.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"4:5656:1970":{"id":"4:5656:1970","crate_id":4,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5657:1971","4:5658:1929"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10562:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3323:9097":{"id":"1:3323:9097","crate_id":1,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3325:171","1:3326:547"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13362:2021":{"id":"1:13362:2021","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:2991:9161":{"id":"23:2991:9161","crate_id":23,"name":"Section","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:2993:2509","23:2994:2717","23:2995:61081","23:2996:801","23:2999:13102","23:3000:61082","23:3001:53632"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:1221:12057":{"id":"23:1221:12057","crate_id":23,"name":"Reader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1222:2475","23:1223:16005","23:1224:2689","23:1225:780","23:1226:13166","23:1227:3637","23:1228:53630","23:1229:53631","23:1230:53632","23:1231:13334","23:1232:1287","23:1233:53633","23:1234:53634","23:1235:1376","23:1236:53635","23:1237:53636","23:1238:61093","23:1240:2021","23:1241:61094","23:1243:61095","23:1245:61055","23:1247:61059","23:1249:61056","23:1251:61060","23:1253:61057","23:1255:61061","23:1257:61062","23:1259:61063","23:1261:61058","23:1263:61096","23:1264:61097","23:1265:61098","23:1266:61099","23:1268:61100","23:1269:61101","23:1270:61102","23:1273:61103","23:1274:61104","23:1275:61105","23:1276:61106","23:1277:61107"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13453:59957":{"id":"1:13453:59957","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:194:12058":{"id":"23:194:12058","crate_id":23,"name":"ArrayLike","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:195:13302"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"23:189:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:1185:12060":{"id":"23:1185:12060","crate_id":23,"name":"ReaderOffset","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1186:61172","23:1187:61173","23:1188:61174","23:1189:14259","23:1190:61175","23:1191:61176","23:1192:1503","23:1193:2725"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"1:2928:167","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"1:10493:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"1:3308:9096","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AddAssign","id":"1:3339:9102","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"1:3313:9101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[116,0],"end":[116,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve_frame_unsynchronized","name":"resolve_frame_unsynchronized","id":"0:86:1618","glob":false}},"1:13431:59950":{"id":"1:13431:59950","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13373:1655":{"id":"1:13373:1655","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:47356:166"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5738:9078":{"id":"4:5738:9078","crate_id":4,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5739:8968","4:5740:13552"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3548:9051":{"id":"1:3548:9051","crate_id":1,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3550:741"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3544:9050","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5828:13831":{"id":"5:5828:13831","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5830:171","5:5831:421"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13484:59965":{"id":"1:13484:59965","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"4:15856:2071"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"1:49619:13427","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3707:9121":{"id":"1:3707:9121","crate_id":1,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3709:54525"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[117,50],"end":[117,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::Symbol","name":"Symbol","id":"0:88:1620","glob":false}},"25:5419:9157":{"id":"25:5419:9157","crate_id":25,"name":"ObjectSegment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5421:257","25:5422:1283","25:5423:262","25:5424:13699","25:5425:2357","25:5426:9154","25:5427:61237","25:5428:886","25:5429:641"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3149:217":{"id":"1:3149:217","crate_id":1,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3151:127","1:3152:1395"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6793:9087":{"id":"4:6793:9087","crate_id":4,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6794:16746"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10562:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3402:9115":{"id":"1:3402:9115","crate_id":1,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3404:346"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13372:17356":{"id":"1:13372:17356","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"4:15873:2085"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6101:56672":{"id":"5:6101:56672","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"4:15862:2076"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3489:131":{"id":"1:3489:131","crate_id":1,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3491:366"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"1:3492:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4018:14099":{"id":"1:4018:14099","crate_id":1,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4019:57292"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8843:2285":{"id":"1:8843:2285","crate_id":1,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13413:26441":{"id":"1:13413:26441","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"1:12997:13388","prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"1:12789:13431","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3143:149":{"id":"1:3143:149","crate_id":1,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3145:2703"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13725:150":{"id":"1:13725:150","crate_id":1,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13726:171","1:13727:150","1:13728:754"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13361:780":{"id":"1:13361:780","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3360:9110":{"id":"1:3360:9110","crate_id":1,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3361:171","1:3362:939"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[127,16],"end":[127,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"print::BacktraceFmt","name":"BacktraceFmt","id":"0:161:1626","glob":false}},"5:6078":{"id":"5:6078","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5898:1319","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6079:60601","5:6080:13508","5:6083:60602","5:6086:60603","5:6098:60604","5:6099:60605","5:6100:14471","5:6101:56672","5:6102:56673"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13016:13406":{"id":"1:13016:13406","crate_id":1,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13018:14068","1:13019:909","1:13020:56310","1:13021:56311"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6083:60602":{"id":"5:6083:60602","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13456:59959":{"id":"1:13456:59959","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3347:9104":{"id":"1:3347:9104","crate_id":1,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3349:880"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:2862:104":{"id":"1:2862:104","crate_id":1,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2863:397","1:2864:399"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:9223:2844":{"id":"1:9223:2844","crate_id":1,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13396:2713":{"id":"1:13396:2713","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"4:15856:2071","self::pattern":"1:12997:13388"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3696:213":{"id":"1:3696:213","crate_id":1,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3697:171","1:3698:9121","1:3699:674","1:3700:358"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"1:3701:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3696:213","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:3777:9160":{"id":"25:3777:9160","crate_id":25,"name":"Segment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3778:13683","25:3779:2475","25:3780:9161","25:3781:61293","25:3782:8596","25:3783:15455","25:3784:15458","25:3786:15459","25:3787:15460","25:3788:15461","25:3789:15462","25:3790:15327","25:3791:15328","25:3792:15463","25:3793:641","25:3794:886","25:3795:13699","25:3796:2357","25:3799:2507"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3137:75":{"id":"1:3137:75","crate_id":1,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3139:294"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13375:17344":{"id":"1:13375:17344","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:47356:166"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5832:13832":{"id":"5:5832:13832","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5834:171","5:5835:26845"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3329:9100":{"id":"1:3329:9100","crate_id":1,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3331:171","1:3332:1089"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3406:9116":{"id":"1:3406:9116","crate_id":1,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3408:1213"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10205:1935":{"id":"1:10205:1935","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10206:1509","1:10207:56186","1:10209:2902"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13469:59962":{"id":"1:13469:59962","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"1:12997:13388","prim@char":"4:15856:2071"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:5430:9156":{"id":"25:5430:9156","crate_id":25,"name":"ObjectSection","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5432:15382","25:5433:740","25:5434:257","25:5435:1283","25:5436:262","25:5437:13699","25:5438:2357","25:5439:9154","25:5440:61412","25:5441:61413","25:5442:61415","25:5443:61237","25:5444:886","25:5445:61414","25:5446:61403","25:5447:769","25:5448:11882","25:5449:641"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13428:57401":{"id":"1:13428:57401","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"1:12997:13388","prim@char":"4:15856:2071","str::splitn":"4:15862:2076"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"1:49442:13420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13393:53733":{"id":"1:13393:53733","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"1:12997:13388","prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:5464:9158":{"id":"25:5464:9158","crate_id":25,"name":"ObjectSymbol","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5466:740","25:5467:61237","25:5468:886","25:5469:257","25:5470:1283","25:5471:769","25:5472:2510","25:5473:11881","25:5474:13710","25:5475:13711","25:5476:61481","25:5477:61482","25:5478:13998","25:5479:61483","25:5480:61484","25:5481:641"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13384:57388":{"id":"1:13384:57388","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"4:15862:2076"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5650:1972":{"id":"4:5650:1972","crate_id":4,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5651:2767","4:5652:13278"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10562:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10897:203":{"id":"1:10897:203","crate_id":1,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:10899:171","1:10900:1655","1:10901:17344","1:10902:55830","1:10903:55831","1:10904:740","1:10905:741"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10888:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:457:12063":{"id":"23:457:12063","crate_id":23,"name":"UnwindSection","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:459:16005","23:460:13182","23:462:61190","23:463:61191","23:465:61192","23:467:61193","23:469:61194"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12057","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"_UnwindSectionPrivate","id":"23:447:12062","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13370:59945":{"id":"1:13370:59945","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:864:1634":{"id":"0:864:1634","crate_id":0,"name":"Backtrace","span":{"filename":"src/capture.rs","begin":[26,0],"end":[32,1]},"visibility":"public","docs":"Representation of an owned and self-contained backtrace.\n\nThis structure can be used to capture a backtrace at various points in a\nprogram and later used to inspect what the backtrace was at that time.\n\n`Backtrace` supports pretty-printing of backtraces through its `Debug`\nimplementation.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"4:4711:14450":{"id":"4:4711:14450","crate_id":4,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4712:59417","4:4713:59418","4:4714:59419","4:4716:14449","4:4717:59420","4:4719:53633","4:4720:3170"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"4:4629:9013","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:740:1628":{"id":"0:740:1628","crate_id":0,"name":"PrintFmt","span":{"filename":"src/print.rs","begin":[27,0],"end":[34,1]},"visibility":"public","docs":"The styles of printing that we can print","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:741:1987","0:743:1989"],"impls":[]}},"1:13391:59947":{"id":"1:13391:59947","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"1:49584:13415","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:5142:15012":{"id":"25:5142:15012","crate_id":25,"name":"ImageThunkData","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5143:61","25:5144:61271","25:5145:15042","25:5146:257"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3398:9114":{"id":"1:3398:9114","crate_id":1,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3400:343"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6560:9089":{"id":"4:6560:9089","crate_id":4,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6561:13568","4:6562:13569"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3218:115":{"id":"1:3218:115","crate_id":1,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3219:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:5788:9074":{"id":"4:5788:9074","crate_id":4,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5789:13533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:4250:49399":{"id":"25:4250:49399","crate_id":25,"name":"Nlist","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4251:13683","25:4252:2475","25:4253:15579","25:4254:2728","25:4255:15580","25:4256:15329","25:4257:15581","25:4258:886","25:4261:61385","25:4262:13710","25:4263:13711","25:4264:61386"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:8565:157":{"id":"1:8565:157","crate_id":1,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8566:13302","1:8567:909","1:8568:13303","1:8571:13304","1:8572:484","1:8574:13305","1:8577:13306","1:8578:13307","1:8579:13308","1:8580:13309","1:8582:13310","1:8584:13311","1:8585:13312","1:8587:828","1:8590:13313","1:8597:2696","1:8599:2564","1:8602:2563","1:8603:13314","1:8604:13315","1:8606:13316","1:8608:13317","1:8611:1287","1:8612:3084","1:8613:13318","1:8617:13319","1:8620:13320","1:8621:13321","1:8622:13322","1:8624:13323","1:8625:2303","1:8627:13324","1:8630:13325","1:8632:13326","1:8642:13327","1:8657:13328","1:8659:13329","1:8663:13330","1:8672:13331","1:8675:13332","1:8677:13333","1:8680:265","1:8687:283","1:8694:13334","1:8701:13335","1:8710:13336","1:8720:1001","1:8727:13337","1:8734:13287","1:8735:11920","1:8736:13289","1:8748:13288","1:8755:13286","1:8767:13285","1:8774:13338","1:8775:13339","1:8780:13340","1:8783:13341","1:8786:13342","1:8787:13343","1:8789:8496","1:8791:404","1:8794:13344","1:8797:984","1:8800:13345","1:8803:593","1:8806:13346","1:8809:894","1:8811:813","1:8813:779","1:8815:701","1:8817:684","1:8819:13347","1:8820:13348","1:8828:13349"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3684:9119":{"id":"1:3684:9119","crate_id":1,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3615:9052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13437:2099":{"id":"1:13437:2099","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"1:8411:120","self::pattern":"1:12997:13388","str::matches":"4:15862:2076","prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"1:49524:13422","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:2839:11824":{"id":"25:2839:11824","crate_id":25,"name":"Dyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2840:13683","25:2841:2475","25:2842:11788","25:2843:11789","25:2844:61393","25:2845:61394","25:2846:61395","25:2847:2186","25:2850:61396"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:6866:9084":{"id":"4:6866:9084","crate_id":4,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6867:13557"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3250:106":{"id":"1:3250:106","crate_id":1,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13440:59952":{"id":"1:13440:59952","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:12997:13388","str::matches":"4:15862:2076","`DoubleEndedIterator`":"1:8411:120","prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"1:49542:13423","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13388:26721":{"id":"1:13388:26721","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"4:15862:2076"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"1:49594:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:763":{"id":"0:763","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[132,43],"end":[132,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve_frame","name":"resolve_frame","id":"0:70:1632","glob":false}},"1:3472:2225":{"id":"1:3472:2225","crate_id":1,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3473:534"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3459:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:5778:9076":{"id":"4:5778:9076","crate_id":4,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5779:13538","4:5780:13539","4:5781:13540","4:5782:13541"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10493:142":{"id":"1:10493:142","crate_id":1,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10494:703","1:10496:55763"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10255:109":{"id":"1:10255:109","crate_id":1,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10256:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10264:13356":{"id":"1:10264:13356","crate_id":1,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10265:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13483:56676":{"id":"1:13483:56676","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5792:14484":{"id":"4:5792:14484","crate_id":4,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5793:56834"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10562:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:2946:11835":{"id":"25:2946:11835","crate_id":25,"name":"NoteHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2947:2475","25:2948:11809","25:2949:11810","25:2950:2728"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10538:14016":{"id":"1:10538:14016","crate_id":1,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10539:146","1:10540:26232","1:10541:55920"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3615:9052":{"id":"1:3615:9052","crate_id":1,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3617:53731","1:3618:53732","1:3619:53733"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"4:6790:14416":{"id":"4:6790:14416","crate_id":4,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6791:56900","4:6792:59588"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10562:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:760":{"id":"0:760","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[132,34],"end":[132,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve","name":"resolve","id":"0:68:1631","glob":false}},"1:8330:14202":{"id":"1:8330:14202","crate_id":1,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8332:8496"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3249:206":{"id":"1:3249:206","crate_id":1,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10266:13357":{"id":"1:10266:13357","crate_id":1,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10267:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:62:12052":{"id":"23:62:12052","crate_id":23,"name":"Endianity","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:63:13690","23:64:13689","23:65:61055","23:67:61056","23:69:61057","23:71:61058","23:73:61059","23:74:61060","23:75:61061","23:76:61062","23:77:61063","23:78:55321","23:79:55322","23:80:55323"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:3218:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10503:146":{"id":"1:10503:146","crate_id":1,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10504:640","1:10505:1936","1:10506:55320","1:10507:55321","1:10508:55322","1:10509:55323","1:10510:55324","1:10511:55325","1:10512:55326","1:10513:55327","1:10514:55328","1:10515:55329","1:10516:55330","1:10517:55331","1:10518:55332","1:10519:1509"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:13:1614":{"id":"0:13:1614","crate_id":0,"name":"backtrace","span":{"filename":"src/backtrace/mod.rs","begin":[1,0],"end":[162,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:20:1630","0:22:1615","0:236:1616"],"is_stripped":true}},"0:734:1959":{"id":"0:734:1959","crate_id":0,"name":"Wide","span":{"filename":"src/types.rs","begin":[21,4],"end":[21,19]},"visibility":"default","docs":"Wide strings typically from Windows.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u16"}}}}]}},"1:13402:13334":{"id":"1:13402:13334","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"1:12997:13388","`None`":"1:47356:166","prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:14183:2298":{"id":"1:14183:2298","crate_id":1,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:14184:2593","1:14185:56503","1:14186:56504","1:14187:56505","1:14188:56506","1:14189:56507","1:14190:13323"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8376:2365":{"id":"1:8376:2365","crate_id":1,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8378:2762","1:8380:13300","1:8381:13301"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10262:119":{"id":"1:10262:119","crate_id":1,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10263:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:741:1987":{"id":"0:741:1987","crate_id":0,"name":"Short","span":{"filename":"src/print.rs","begin":[29,4],"end":[29,9]},"visibility":"default","docs":"Prints a terser backtrace which ideally only contains relevant information","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:68:1631":{"id":"0:68:1631","crate_id":0,"name":"resolve","span":{"filename":"src/symbolize/mod.rs","begin":[61,0],"end":[64,1]},"visibility":"public","docs":"Resolve an address to a symbol, passing the symbol to the specified\nclosure.\n\nThis function will look up the given address in areas such as the local\nsymbol table, dynamic symbol table, or DWARF debug info (depending on the\nactivated implementation) to find symbols to yield.\n\nThe closure may not be called if resolution could not be performed, and it\nalso may be called more than once in the case of inlined functions.\n\nSymbols yielded represent the execution at the specified `addr`, returning\nfile/line pairs for that address (if available).\n\nNote that if you have a `Frame` then it's recommended to use the\n`resolve_frame` function instead of this one.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        let ip = frame.ip();\n\n        backtrace::resolve(ip, |symbol| {\n            // ...\n        });\n\n        false // only look at the top frame\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["addr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:5547:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3489:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"25:1878:11836":{"id":"25:1878:11836","crate_id":25,"name":"ProgramHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:1879:2671","25:1880:13683","25:1881:2475","25:1882:8562","25:1883:8566","25:1884:8563","25:1885:2804","25:1886:8564","25:1887:8565","25:1888:2803","25:1889:8567","25:1890:13699","25:1891:2357","25:1894:13700","25:1898:9154","25:1901:11822","25:1904:2727"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3153:216":{"id":"1:3153:216","crate_id":1,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3155:127","1:3156:1394"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:100:1621":{"id":"0:100:1621","crate_id":0,"name":"SymbolName","span":{"filename":"src/symbolize/mod.rs","begin":[318,0],"end":[322,1]},"visibility":"public","docs":"A wrapper around a symbol name to provide ergonomic accessors to the\ndemangled name, the raw bytes, the raw string, etc.","links":{},"attrs":["#[allow(dead_code)]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:9222:2845":{"id":"1:9222:2845","crate_id":1,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:70:1632":{"id":"0:70:1632","crate_id":0,"name":"resolve_frame","span":{"filename":"src/symbolize/mod.rs","begin":[103,0],"end":[106,1]},"visibility":"public","docs":"Resolve a previously capture frame to a symbol, passing the symbol to the\nspecified closure.\n\nThis function performs the same function as `resolve` except that it takes a\n`Frame` as an argument instead of an address. This can allow some platform\nimplementations of backtracing to provide more accurate symbol information\nor information about inline frames for example. It's recommended to use this\nif you can.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        backtrace::resolve_frame(frame, |symbol| {\n            // ...\n        });\n\n        false // only look at the top frame\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["frame",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3489:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:8326:14203":{"id":"1:8326:14203","crate_id":1,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8328:13343"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:2631:11837":{"id":"25:2631:11837","crate_id":25,"name":"Rel","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2632:13683","25:2633:13684","25:2634:2475","25:2635:11785","25:2636:11786","25:2637:61292","25:2638:15591"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:4620:15016":{"id":"25:4620:15016","crate_id":25,"name":"ImageNtHeaders","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4621:49479","25:4622:15012","25:4623:13685","25:4624:61505","25:4625:15743","25:4626:15744","25:4627:15745","25:4628:1910","25:4631:2507","25:4634:2018"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13410:53633":{"id":"1:13410:53633","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"1:8411:120","prim@char":"4:15856:2071","str::split_whitespace":"4:15862:2076","str::rsplit":"4:15862:2076","self::pattern":"1:12997:13388"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"1:49320:13418","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6102:56673":{"id":"5:6102:56673","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"4:15862:2076"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,48],"end":[113,53]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::backtrace::Frame","name":"Frame","id":"0:236:1616","glob":false}},"1:13364:59943":{"id":"1:13364:59943","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:4686:1935":{"id":"4:4686:1935","crate_id":4,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4687:1936","4:4688:59300","4:4690:59301","4:4691:14860","4:4692:59302","4:4693:59303","4:4694:2902","4:4703:13323"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3248:207":{"id":"1:3248:207","crate_id":1,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:773":{"id":"0:773","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,59],"end":[133,74]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::capture::BacktraceSymbol","name":"BacktraceSymbol","id":"0:884:1636","glob":false}},"1:13399:57403":{"id":"1:13399:57403","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"1:12997:13388","prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13466:57404":{"id":"1:13466:57404","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:15856:2071","self::pattern":"1:12997:13388"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:9340:14486":{"id":"4:9340:14486","crate_id":4,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:9341:56906","4:9342:56907","4:9343:56908","4:9344:56909","4:9345:14324","4:9346:41066","4:9347:56905"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10562:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3318:9098":{"id":"1:3318:9098","crate_id":1,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3320:171","1:3321:879"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:592:12064":{"id":"23:592:12064","crate_id":23,"name":"UnwindContextStorage","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:594:61051","23:595:61049"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12057","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13007:13403":{"id":"1:13007:13403","crate_id":1,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13009:13406","1:13010:56050","1:13011:56051","1:13012:56052","1:13013:56054","1:13014:56053","1:13015:56055"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:770":{"id":"0:770","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,43],"end":[133,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::capture::BacktraceFrame","name":"BacktraceFrame","id":"0:869:1635","glob":false}},"1:8846:13665":{"id":"1:8846:13665","crate_id":1,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13475:59964":{"id":"1:13475:59964","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"1:12997:13388","prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:20:1630":{"id":"0:20:1630","crate_id":0,"name":"trace","span":{"filename":"src/backtrace/mod.rs","begin":[51,0],"end":[54,1]},"visibility":"public","docs":"Inspects the current call-stack, passing all active frames into the closure\nprovided to calculate a stack trace.\n\nThis function is the workhorse of this library in calculating the stack\ntraces for a program. The given closure `cb` is yielded instances of a\n`Frame` which represent information about that call frame on the stack. The\nclosure is yielded frames in a top-down fashion (most recently called\nfunctions first).\n\nThe closure's return value is an indication of whether the backtrace should\ncontinue. A return value of `false` will terminate the backtrace and return\nimmediately.\n\nOnce a `Frame` is acquired you will likely want to call `backtrace::resolve`\nto convert the `ip` (instruction pointer) or symbol address to a `Symbol`\nthrough which the name and/or filename/line number can be learned.\n\nNote that this is a relatively low-level function and if you'd like to, for\nexample, capture a backtrace to be inspected later, then the `Backtrace`\ntype may be more appropriate.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        // ...\n\n        true // continue the backtrace\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3489:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"4:5730:9079":{"id":"4:5730:9079","crate_id":4,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5731:8968","4:5732:13553","4:5733:13554"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:2938:174":{"id":"1:2938:174","crate_id":1,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2940:984","1:2941:813","1:2942:779","1:2943:701","1:2944:684"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:743:1989":{"id":"0:743:1989","crate_id":0,"name":"Full","span":{"filename":"src/print.rs","begin":[31,4],"end":[31,8]},"visibility":"default","docs":"Prints a backtrace that contains all possible information","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:13366:59944":{"id":"1:13366:59944","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"4:15862:2076"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:35":{"id":"0:35","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[117,26],"end":[117,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve_unsynchronized","name":"resolve_unsynchronized","id":"0:84:1619","glob":false}},"1:13406:13299":{"id":"1:13406:13299","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:47356:166","self::pattern":"1:12997:13388","prim@char":"4:15856:2071"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13416:57397":{"id":"1:13416:57397","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"4:15856:2071","self::pattern":"1:12997:13388","`DoubleEndedIterator`":"1:8411:120","str::split":"4:15862:2076"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"1:49338:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:729:1623":{"id":"0:729:1623","crate_id":0,"name":"BytesOrWideString","span":{"filename":"src/types.rs","begin":[17,0],"end":[22,1]},"visibility":"public","docs":"A platform independent representation of a string. When working with `std`\nenabled it is recommended to the convenience methods for providing\nconversions to `std` types.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:731:1957","0:734:1959"],"impls":[]}},"0:44:1617":{"id":"0:44:1617","crate_id":0,"name":"symbolize","span":{"filename":"src/symbolize/mod.rs","begin":[1,0],"end":[485,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:68:1631","0:70:1632","0:84:1619","0:86:1618","0:88:1620","0:100:1621","0:114:1624"],"is_stripped":true}},"25:4637:49479":{"id":"25:4637:49479","crate_id":25,"name":"ImageOptionalHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4638:8960","25:4639:15708","25:4640:15709","25:4641:15710","25:4642:15711","25:4643:15712","25:4644:15713","25:4645:15714","25:4646:15715","25:4647:2038","25:4648:15716","25:4649:15717","25:4650:15718","25:4651:15719","25:4652:15720","25:4653:15721","25:4654:15722","25:4655:15723","25:4656:15724","25:4657:15725","25:4658:15726","25:4659:15727","25:4660:15728","25:4661:15729","25:4662:15730","25:4663:15731","25:4664:15732","25:4665:15733","25:4666:15734","25:4667:15735"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13463:2779":{"id":"1:13463:2779","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:15856:2071","self::pattern":"1:12997:13388"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3526:2291":{"id":"1:3526:2291","crate_id":1,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3528:226","1:3529:196","1:3530:55726"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:2431:2668":{"id":"25:2431:2668","crate_id":25,"name":"Sym","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2432:13683","25:2433:2475","25:2434:2705","25:2435:8560","25:2436:13708","25:2437:2697","25:2438:8561","25:2439:13709","25:2440:2700","25:2441:2702","25:2442:2704","25:2443:886","25:2446:13710","25:2447:13711"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13481:56674":{"id":"1:13481:56674","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12444:13576":{"id":"1:12444:13576","crate_id":1,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12445:13302","1:12446:56381"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:4704:9015":{"id":"4:4704:9015","crate_id":4,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4705:59129","4:4706:3318","4:4707:59130","4:4708:59131"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,26],"end":[113,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::backtrace::trace_unsynchronized","name":"trace_unsynchronized","id":"0:22:1615","glob":false}},"23:2121:12078":{"id":"23:2121:12078","crate_id":23,"name":"EvaluationStorage","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:2123:61049","23:2124:61050","23:2125:195"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12057","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:240:1829":{"id":"0:240:1829","crate_id":0,"name":"libunwind","span":{"filename":"src/backtrace/libunwind.rs","begin":[1,0],"end":[267,1]},"visibility":{"restricted":{"parent":"0:13:1614","path":"::backtrace"}},"docs":"Backtrace support using libunwind/gcc_s/etc APIs.\n\nThis module contains the ability to unwind the stack using libunwind-style\nAPIs. Note that there's a whole bunch of implementations of the\nlibunwind-like API, and this is just trying to be compatible with most of\nthem all at once instead of being picky.\n\nThe libunwind API is powered by `_Unwind_Backtrace` and is in practice very\nreliable at generating a backtrace. It's not entirely clear how it does it\n(frame pointers? eh_frame info? both?) but it seems to work!\n\nMost of the complexity of this module is handling the various platform\ndifferences across libunwind implementations. Otherwise this is a pretty\nstraightforward Rust binding to the libunwind APIs.\n\nThis is the default unwinding API for all non-Windows platforms currently.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"1:13457:59960":{"id":"1:13457:59960","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"1:12997:13388","prim@char":"4:15856:2071"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"1:13027:13404","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:337:1949":{"id":"0:337:1949","crate_id":0,"name":"gimli","span":{"filename":"src/symbolize/gimli.rs","begin":[1,0],"end":[462,1]},"visibility":{"restricted":{"parent":"0:44:1617","path":"::symbolize"}},"docs":"Support for symbolication using the `gimli` crate on crates.io\n\nThis is the default symbolication implementation for Rust.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"1:13360":{"id":"1:13360","crate_id":1,"name":null,"span":null,"visibility":{"restricted":{"parent":"1:12457:1319","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["1:13361:780","1:13362:2021","1:13363:59942","1:13364:59943","1:13366:59944","1:13369:1929","1:13370:59945","1:13371:293","1:13372:17356","1:13373:1655","1:13375:17344","1:13377:55830","1:13379:55831","1:13381:14504","1:13382:59946","1:13383:57387","1:13384:57388","1:13385:13440","1:13386:14075","1:13387:1917","1:13388:26721","1:13389:26759","1:13390:3170","1:13391:59947","1:13392:26750","1:13393:53733","1:13396:2713","1:13399:57403","1:13402:13334","1:13406:13299","1:13410:53633","1:13413:26441","1:13416:57397","1:13419:59948","1:13422:59949","1:13425:57399","1:13428:57401","1:13431:59950","1:13434:59951","1:13437:2099","1:13440:59952","1:13443:59953","1:13446:59954","1:13449:59955","1:13451:59956","1:13453:59957","1:13455:59958","1:13456:59959","1:13457:59960","1:13460:59961","1:13463:2779","1:13466:57404","1:13469:59962","1:13472:59963","1:13475:59964","1:13478:1910","1:13480:14415","1:13481:56674","1:13482:56675","1:13483:56676","1:13484:59965","1:13486:14491","1:13487:59966"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13434:59951":{"id":"1:13434:59951","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13422:59949":{"id":"1:13422:59949","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"4:15856:2071","str::split":"4:15862:2076","str::split_terminator":"4:15862:2076","self::pattern":"1:12997:13388"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"1:49388:13417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13007:13403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13022:13405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10268:13358":{"id":"1:10268:13358","crate_id":1,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10269:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[127,49],"end":[127,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"print::PrintFmt","name":"PrintFmt","id":"0:740:1628","glob":false}},"5:6098:60604":{"id":"5:6098:60604","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13455:59958":{"id":"1:13455:59958","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:2576:127":{"id":"4:2576:127","crate_id":4,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:2577:53882","4:2579:1614","4:2580:57290","4:2581:57291","4:2582:57292"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:10262:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2840:12047":{"id":"1:2840:12047","crate_id":1,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2842:53628"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3245:2363","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:23655:14127":{"id":"1:23655:14127","crate_id":1,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:23656:14132"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:23651:14134","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:731:1957":{"id":"0:731:1957","crate_id":0,"name":"Bytes","span":{"filename":"src/types.rs","begin":[19,4],"end":[19,19]},"visibility":"default","docs":"A slice, typically provided on Unix platforms.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]}}},"paths":{"23:7054:13036":{"crate_id":23,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"6:4341:6644":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:53160:14156":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"4:1655:14531":{"crate_id":4,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:9689:61029":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:46850:16512":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:49929:16756":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:10410:16748":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"24:1515:4494":{"crate_id":24,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"23:8794:13097":{"crate_id":23,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"4:4629:9013":{"crate_id":4,"path":["std","io","Read"],"kind":"trait"},"12:866:9055":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"18:766:15261":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:9440:9176":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"12:0:2127":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"17:13477:15823":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:6413:3143":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:4127:6626":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"23:8344:13083":{"crate_id":23,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:11628:9535":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"23:8098:13067":{"crate_id":23,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"25:12067:9189":{"crate_id":25,"path":["object","read","SectionIndex"],"kind":"struct"},"12:2032:14509":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:1522:4494":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"24:4403:6653":{"crate_id":24,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:14073:191":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"16:6219:13037":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"24:5221:7258":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"23:6596:13020":{"crate_id":23,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"24:571:3616":{"crate_id":24,"path":["libc","unix","iovec"],"kind":"struct"},"27:41:14818":{"crate_id":27,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:50028:13393":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"6:5347:7264":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"23:8401:13086":{"crate_id":23,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"4:2937:169":{"crate_id":4,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:8146:9057":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"24:4471:6661":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"23:5141:12651":{"crate_id":23,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"25:10339:61037":{"crate_id":25,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"25:12656:9538":{"crate_id":25,"path":["object","elf","Rela64"],"kind":"struct"},"17:2314:11833":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:48140:13359":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"25:6200:2662":{"crate_id":25,"path":["object","elf","NT_GNU_BUILD_ID"],"kind":"constant"},"23:6982:13032":{"crate_id":23,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:616:3622":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"25:13478:15532":{"crate_id":25,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"25:10732:16675":{"crate_id":25,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"25:11533:16686":{"crate_id":25,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"4:2163:9057":{"crate_id":4,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:4955:12783":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:10887:15376":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"23:6804:2508":{"crate_id":23,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:6101:13029":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"25:83:2474":{"crate_id":25,"path":["object","endian","NativeEndian"],"kind":"typedef"},"1:53297:16595":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"5:4623:224":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"4:1528:14526":{"crate_id":4,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"4:15866:2078":{"crate_id":4,"path":["std","f32"],"kind":"primitive"},"24:3855:6598":{"crate_id":24,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:10236:11842":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"23:3514:12102":{"crate_id":23,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"25:13634:15554":{"crate_id":25,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"25:10959:2667":{"crate_id":25,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"14:47:1834":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"25:14434:15798":{"crate_id":25,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"4:11135:14420":{"crate_id":4,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"16:5273:13001":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:12182:15477":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"25:12524:9492":{"crate_id":25,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:11499:9435":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"5:2772:14746":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:12155:15473":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"4:15867:2079":{"crate_id":4,"path":["std","f64"],"kind":"primitive"},"24:536:3613":{"crate_id":24,"path":["libc","unix","rusage"],"kind":"struct"},"24:577:3617":{"crate_id":24,"path":["libc","unix","pollfd"],"kind":"struct"},"6:4060:6618":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"4:11267:16359":{"crate_id":4,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"25:11367:15341":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:13898:15953":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:3779:2290":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:11555:9493":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:13453:15816":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"5:1592:3117":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:9882:648":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"4:4686:1935":{"crate_id":4,"path":["std","io","Write"],"kind":"trait"},"4:8135:13992":{"crate_id":4,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:2381:2324":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"24:5248:7238":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"25:10084:9175":{"crate_id":25,"path":["object","endian","I16Bytes"],"kind":"struct"},"25:12289:9198":{"crate_id":25,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:12671:15570":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"25:2135:2666":{"crate_id":25,"path":["object","read","elf","section","SectionHeader"],"kind":"trait"},"23:6564:13018":{"crate_id":23,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"5:5898:1319":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"5:7252:15134":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"23:8808:13098":{"crate_id":23,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"4:8030:13992":{"crate_id":4,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"20:189:1834":{"crate_id":20,"path":["rustc_demangle","Demangle"],"kind":"struct"},"20:47:1834":{"crate_id":20,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"4:7258:16737":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"26:169:53047":{"crate_id":26,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:7894:13099":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:12982:15645":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:10477:11849":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:5672:13016":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:52797:14149":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:49752:14057":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:2176:13678":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"26:136:53045":{"crate_id":26,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:46288:14407":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:24:589":{"crate_id":1,"path":["core","env"],"kind":"macro"},"6:5386:7268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"26:705:15251":{"crate_id":26,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"4:15875:2087":{"crate_id":4,"path":["std","u32"],"kind":"primitive"},"23:6684:12054":{"crate_id":23,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"26:621:15250":{"crate_id":26,"path":["memchr","cow","Imp"],"kind":"struct"},"1:12997:13388":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"17:13637:15868":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"18:644:14996":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:7439:15134":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"24:1651:4508":{"crate_id":24,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"4:13698:14574":{"crate_id":4,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:607:9162":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:2928:167":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"25:1652:2665":{"crate_id":25,"path":["object","read","elf","file","FileHeader"],"kind":"trait"},"5:7628:9061":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:4101:6623":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"9:234:14795":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"24:4357:6647":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:8266:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:9296:9151":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:22537:13284":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"4:2598:16736":{"crate_id":4,"path":["std","error","from","StringError"],"kind":"struct"},"5:1658:14521":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:47543:9057":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"5:6647:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:1658:4508":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"25:10933:11831":{"crate_id":25,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:6464:13049":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:3946:9053":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:46653:14215":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"24:4033:6615":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"18:866:14990":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"25:10519:9182":{"crate_id":25,"path":["object","read","any","SymbolTable"],"kind":"struct"},"4:15862:2076":{"crate_id":4,"path":["std","str"],"kind":"primitive"},"2:0:419":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"23:8747:13094":{"crate_id":23,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:13272:15774":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"28:46:15227":{"crate_id":28,"path":["adler","algo","U32X4"],"kind":"struct"},"4:13851:16781":{"crate_id":4,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"24:5123:7209":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:46834:16511":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"24:4412:6654":{"crate_id":24,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:10255:109":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"17:10266:11830":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"6:5998:7677":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"25:12813:9722":{"crate_id":25,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:3506:12111":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"25:11249:11880":{"crate_id":25,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"5:5832:13832":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"4:5788:9074":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"6:157:3278":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"24:1589:4503":{"crate_id":24,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:3892:6601":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"25:11520:16685":{"crate_id":25,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"26:611:14994":{"crate_id":26,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:51303:14179":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"18:0:2128":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:531:3611":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:3743:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"22:153:2294":{"crate_id":22,"path":["addr2line","Context"],"kind":"struct"},"4:12662:128":{"crate_id":4,"path":["std","sys","unix","fs","File"],"kind":"struct"},"25:13109:15464":{"crate_id":25,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"23:8767:13095":{"crate_id":23,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:4325:6642":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"27:920:11968":{"crate_id":27,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:7406:13082":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:3343:9106":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:24047:18645":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"16:3338:12106":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"4:15092:14506":{"crate_id":4,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:3323:9097":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"24:4120:6626":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"25:11405:49420":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:11750:9709":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:3714:12142":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"25:12391:15406":{"crate_id":25,"path":["object","archive","Header"],"kind":"struct"},"4:4711:14450":{"crate_id":4,"path":["std","io","BufRead"],"kind":"trait"},"1:46563:14206":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:10950:16693":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"13:0:2124":{"crate_id":13,"path":["std_detect"],"kind":"module"},"18:620:15250":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:4506:12659":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"25:12042:9188":{"crate_id":25,"path":["object","read","ObjectKind"],"kind":"enum"},"1:51554:14154":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:2945:12090":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:11616:9502":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:2251:13522":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"14:231:14676":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:6152:13033":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:12327:15494":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"4:1486:9053":{"crate_id":4,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"4:6962:9080":{"crate_id":4,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"4:4602:14441":{"crate_id":4,"path":["std","io","Guard"],"kind":"struct"},"1:4750:2284":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:49306:1957":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"23:2121:12078":{"crate_id":23,"path":["gimli","read","op","EvaluationStorage"],"kind":"trait"},"1:51069:14166":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:10543:14017":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:3918:6603":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:4046:6616":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"25:13557:15542":{"crate_id":25,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"23:6918:13027":{"crate_id":23,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"24:4424:6656":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"4:10941:14461":{"crate_id":4,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:46314:14266":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:1736:4517":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:47406:13581":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"23:6239:13005":{"crate_id":23,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:12936:3125":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:3406:9116":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"4:11341:14665":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"24:4418:6655":{"crate_id":24,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"26:886:14991":{"crate_id":26,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:8377:14674":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"4:14152:14467":{"crate_id":4,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"4:9763:15173":{"crate_id":4,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"25:14844:15924":{"crate_id":25,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"23:1185:12060":{"crate_id":23,"path":["gimli","read","reader","ReaderOffset"],"kind":"trait"},"23:8895:13101":{"crate_id":23,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"4:15857:2072":{"crate_id":4,"path":["std","unit"],"kind":"primitive"},"25:14673:15860":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"23:5924:12984":{"crate_id":23,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:7786:13092":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"4:4360:14602":{"crate_id":4,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:3268:3136":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:5001:2311":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:49637:13429":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"16:6391:13047":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"26:775:15251":{"crate_id":26,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:2794:12084":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:7392:13081":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:1547:4498":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"4:2192:14511":{"crate_id":4,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:9344:13403":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:51092:14170":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:50909:16534":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:49524:13422":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"4:11109:14214":{"crate_id":4,"path":["std","io","Take"],"kind":"struct"},"24:5234:7237":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"4:4473:14465":{"crate_id":4,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:52261:14155":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:4255:2281":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:8849:9148":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"25:11665:16687":{"crate_id":25,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:9222:2845":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:7279:14942":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"25:10681:49301":{"crate_id":25,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:24547:2243":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:48672:14018":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"4:8491:14551":{"crate_id":4,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"23:8150:13072":{"crate_id":23,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"24:1693:4512":{"crate_id":24,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:11970:15446":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:46451:14191":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:22565:56046":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"25:9785:9169":{"crate_id":25,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:4095:6622":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:46879:16516":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"26:730:61039":{"crate_id":26,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:12010:15453":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:53376:16600":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"24:1623:4507":{"crate_id":24,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:2840:12047":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"24:6903:6796":{"crate_id":24,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:6682:13058":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:4018:14099":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"4:1045:13994":{"crate_id":4,"path":["std","thread","JoinHandle"],"kind":"struct"},"24:4340:6645":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"25:11059:11832":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:48422:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"4:1156:1636":{"crate_id":4,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:13119:15741":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"23:5199:12659":{"crate_id":23,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"24:5160:7252":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:14000:15978":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"24:1729:4517":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"25:11035:11834":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:51579:14136":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"24:504:3608":{"crate_id":24,"path":["libc","unix","group"],"kind":"struct"},"23:8710:13092":{"crate_id":23,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:46473:14192":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:46622:14212":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"9:996:11895":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:50036:13396":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"4:11601:3119":{"crate_id":4,"path":["std","path","Ancestors"],"kind":"struct"},"6:6858:6789":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:5488:13010":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"4:6862:9081":{"crate_id":4,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:3394:9113":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"25:13761:15576":{"crate_id":25,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:8365:14673":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"24:150:3278":{"crate_id":24,"path":["libc","unix","FILE"],"kind":"enum"},"5:4438:3117":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"4:15855:2070":{"crate_id":4,"path":["std","never"],"kind":"primitive"},"25:10529:61036":{"crate_id":25,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:55897:14122":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"23:3162:12088":{"crate_id":23,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"4:15042:14498":{"crate_id":4,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"25:12644:9537":{"crate_id":25,"path":["object","elf","Rel64"],"kind":"struct"},"4:11129:3142":{"crate_id":4,"path":["std","io","Lines"],"kind":"struct"},"1:50279:158":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"6:6935:8238":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:10204:195":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"25:11903:9199":{"crate_id":25,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"23:7174:13044":{"crate_id":23,"path":["gimli","read","line","LineRows"],"kind":"struct"},"23:8330:13082":{"crate_id":23,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"4:12003:56715":{"crate_id":4,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"24:4138:6627":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:7378:13080":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:8411:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:56003:225":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:1760:4519":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"23:6756:13023":{"crate_id":23,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:3402:9115":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:49370:13419":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"4:11195:14584":{"crate_id":4,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"5:7766:223":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"23:8203:14942":{"crate_id":23,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:4083:6621":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:4431:6656":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:47356:166":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"23:5364:12724":{"crate_id":23,"path":["gimli","constants","DwId"],"kind":"struct"},"17:10599:16682":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:9769:61035":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:10377:11832":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"24:1556:4500":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:3347:9104":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"4:0:1310":{"crate_id":4,"path":["std"],"kind":"module"},"25:13283:15485":{"crate_id":25,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"23:6789:14910":{"crate_id":23,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"4:5861:14658":{"crate_id":4,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"23:7335:3143":{"crate_id":23,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:5152:2321":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"23:7566:13057":{"crate_id":23,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:3357:14510":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"4:12065:14552":{"crate_id":4,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"25:12557:9499":{"crate_id":25,"path":["object","elf","Sym32"],"kind":"struct"},"25:3777:9160":{"crate_id":25,"path":["object","read","macho","segment","Segment"],"kind":"trait"},"6:3997:6610":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:47483:195":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"6:670:3653":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"11:54:14875":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"27:706:14774":{"crate_id":27,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"25:702:1620":{"crate_id":25,"path":["object","read","any","Symbol"],"kind":"struct"},"16:7146:13065":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"23:5966:13001":{"crate_id":23,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"4:15861:2075":{"crate_id":4,"path":["std","slice"],"kind":"primitive"},"4:10861:14460":{"crate_id":4,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:3140:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"25:10479:9181":{"crate_id":25,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"4:11542:3115":{"crate_id":4,"path":["std","path","Component"],"kind":"enum"},"4:14509:118":{"crate_id":4,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:12118:15469":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"25:12607:9502":{"crate_id":25,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:4470:6660":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:47475:178":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:47955:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"4:5656:1970":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:3149:217":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"24:5285:7262":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"4:9177:16738":{"crate_id":4,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"4:12174:2343":{"crate_id":4,"path":["std","sync","once","OnceState"],"kind":"struct"},"25:11808:9197":{"crate_id":25,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:53277:16593":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:13842:15945":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:8436:2364":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:5269:7259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:3548:9051":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:3033:1965":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"25:13029:15450":{"crate_id":25,"path":["object","macho","MachHeader32"],"kind":"struct"},"12:2315:61021":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"25:10775:14967":{"crate_id":25,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:9943:61031":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:49121:13578":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:5978:7675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:46334:2227":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:3391:14511":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"4:897:13999":{"crate_id":4,"path":["std","thread","scoped","Scope"],"kind":"struct"},"9:1020:11896":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:5522:13012":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"6:4494:6662":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"25:14226:15748":{"crate_id":25,"path":["object","pe","Guid"],"kind":"struct"},"1:50060:13402":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:11539:9492":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"23:6825:13024":{"crate_id":23,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:49817:14059":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"23:8188:13075":{"crate_id":23,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"4:8196:15157":{"crate_id":4,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"25:13721:15571":{"crate_id":25,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"4:2401:13772":{"crate_id":4,"path":["std","env","VarsOs"],"kind":"struct"},"25:12785:9720":{"crate_id":25,"path":["object","elf","Vernaux"],"kind":"struct"},"16:3365:12107":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:3939:12292":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"25:13695:15569":{"crate_id":25,"path":["object","macho","IdentCommand"],"kind":"struct"},"25:12998:15444":{"crate_id":25,"path":["object","macho","FatHeader"],"kind":"struct"},"1:49542:13423":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"12:937:14524":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:3336:14683":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:6474:14199":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"4:10666:14532":{"crate_id":4,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"16:547:14905":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:10938:16692":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:4112:6624":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"4:6322:14633":{"crate_id":4,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:13733:15906":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"4:7335:176":{"crate_id":4,"path":["std","path","PathBuf"],"kind":"struct"},"1:11281:13416":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"24:3944:6605":{"crate_id":24,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:47871:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"5:1689:14739":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"23:3611:12106":{"crate_id":23,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:4008:16672":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"24:4176:6629":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:7761:13091":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"4:5984:14667":{"crate_id":4,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"4:3190:128":{"crate_id":4,"path":["std","fs","File"],"kind":"struct"},"4:11116:1957":{"crate_id":4,"path":["std","io","Bytes"],"kind":"struct"},"16:5407:13005":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"24:5364:7266":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"24:4088:6622":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"24:5393:7269":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"20:194:2260":{"crate_id":20,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"25:12443:2673":{"crate_id":25,"path":["object","elf","FileHeader64"],"kind":"struct"},"24:6044:4433":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:50934:14177":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"18:885:14991":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:5632:13015":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"27:613:15046":{"crate_id":27,"path":["miniz_oxide","inflate","stream","FullReset"],"kind":"struct"},"6:5359:7265":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:4241:6634":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:161:3279":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:49442:13420":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"25:10208:1957":{"crate_id":25,"path":["object","read","util","Bytes"],"kind":"struct"},"16:6768:14933":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"4:12184:2351":{"crate_id":4,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:52021:14175":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:8363:136":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:13942:15968":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:51174:14146":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"24:4265:6636":{"crate_id":24,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"4:14492:129":{"crate_id":4,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:3074:14134":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:9961:9185":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:9971:61028":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:13348:15791":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:52104:14160":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"24:5556:7308":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"4:9631:15172":{"crate_id":4,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"5:8432:9053":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"25:10741:16676":{"crate_id":25,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"6:591:3618":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:4066:6619":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:12494:15538":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:4347:6645":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"4:6085:14626":{"crate_id":4,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"23:93:2474":{"crate_id":23,"path":["gimli","endianity","NativeEndian"],"kind":"typedef"},"4:10449:1637":{"crate_id":4,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"12:112:61026":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"24:4196:6631":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:23651:14134":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"23:3537:12103":{"crate_id":23,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"4:1306:143":{"crate_id":4,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:46347:14356":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:4293:6638":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"18:774:15251":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:7821:14231":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"4:12043:3117":{"crate_id":4,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"24:1610:4505":{"crate_id":24,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:9600:61032":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:13978:15972":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"24:3971:6608":{"crate_id":24,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"28:0:2126":{"crate_id":28,"path":["adler"],"kind":"module"},"17:13394:15800":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"4:9768:15174":{"crate_id":4,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"1:11319:13585":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"24:3959:6607":{"crate_id":24,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:47997:2338":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"12:840:14518":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:3713:9123":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"25:10369:61029":{"crate_id":25,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:5006:2312":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"25:10120:9176":{"crate_id":25,"path":["object","endian","I32Bytes"],"kind":"struct"},"5:8354:205":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"12:396:14891":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"12:2018:9053":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"4:1432:13581":{"crate_id":4,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:3249:206":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"4:14461:16381":{"crate_id":4,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:46214:14410":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:5384:13004":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:5996:13025":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:4459:6659":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"23:7084:13038":{"crate_id":23,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:10081:2667":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"24:4220:6633":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"23:8473:13088":{"crate_id":23,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"27:769:14778":{"crate_id":27,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"25:15006:15968":{"crate_id":25,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:13710:138":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"24:625:3624":{"crate_id":24,"path":["libc","unix","protoent"],"kind":"struct"},"4:11192:14428":{"crate_id":4,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"25:13735:15574":{"crate_id":25,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"4:699:3086":{"crate_id":4,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:3492:132":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"27:602:15043":{"crate_id":27,"path":["miniz_oxide","inflate","stream","ResetPolicy"],"kind":"trait"},"1:3240:200":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"6:5191:7254":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:5130:7209":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:12287:15490":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"5:7207:9055":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:6759:14441":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"23:7921:13062":{"crate_id":23,"path":["gimli","read","op","Piece"],"kind":"struct"},"4:10589:13990":{"crate_id":4,"path":["std","thread","ThreadId"],"kind":"struct"},"23:7702:13060":{"crate_id":23,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:12195:15478":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"14:189:1834":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"25:14604:15844":{"crate_id":25,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:53414:16602":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:11434:2672":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"9:692:14776":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"4:10936:14581":{"crate_id":4,"path":["std","io","error","Custom"],"kind":"struct"},"4:786:15175":{"crate_id":4,"path":["std","thread","local","fast","Key"],"kind":"struct"},"16:6949:14937":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"23:7640:14929":{"crate_id":23,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:4439:6657":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:47398:3117":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"25:627:9162":{"crate_id":25,"path":["object","read","any","Comdat"],"kind":"struct"},"23:438:12061":{"crate_id":23,"path":["gimli","read","cfi","UnwindOffset"],"kind":"trait"},"1:53238:14141":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:45762:185":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"25:11222:11879":{"crate_id":25,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"4:8413:14706":{"crate_id":4,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"26:678:142":{"crate_id":26,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:13906:56223":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"24:5971:7675":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:24128:2251":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"16:3264:12103":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:12582:15551":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"25:2608:11848":{"crate_id":25,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"4:6698:8899":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:9264:9147":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:6569:14926":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"23:4373:12133":{"crate_id":23,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"5:5531:2337":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:6005:3395":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"23:5397:12732":{"crate_id":23,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:7236:13073":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"25:160:9136":{"crate_id":25,"path":["object","pod","Pod"],"kind":"trait"},"4:9591:15171":{"crate_id":4,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"18:820:14986":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"25:10786:14968":{"crate_id":25,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"25:10808:14970":{"crate_id":25,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:46412:2221":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:12610:15556":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"5:5870:15143":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"5:1602:13581":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"25:14330:15775":{"crate_id":25,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"23:6354:13012":{"crate_id":23,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"25:13131:15465":{"crate_id":25,"path":["object","macho","Section32"],"kind":"struct"},"4:14158:14465":{"crate_id":4,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:12552:15548":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:1235:14742":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:3990:6609":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:11378:9202":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"20:244:2262":{"crate_id":20,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"23:7513:13054":{"crate_id":23,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:3696:213":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"16:6176:13035":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"4:15859:2073":{"crate_id":4,"path":["std","pointer"],"kind":"primitive"},"23:3593:12105":{"crate_id":23,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:51602:14139":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"25:9657:9165":{"crate_id":25,"path":["object","common","ComdatKind"],"kind":"enum"},"23:7666:14931":{"crate_id":23,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:3889:14707":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:511:3608":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"25:15064:15978":{"crate_id":25,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:3153:216":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"23:457:12063":{"crate_id":23,"path":["gimli","read","cfi","UnwindSection"],"kind":"trait"},"5:8154:184":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"23:1664:12067":{"crate_id":23,"path":["gimli","read","line","LineProgram"],"kind":"trait"},"12:354:16280":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"23:8174:13074":{"crate_id":23,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"24:5262:7259":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:7606:9060":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:13574:15852":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:11169:13431":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"23:7558:13056":{"crate_id":23,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"5:6968:1480":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"25:13503:15535":{"crate_id":25,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"25:11331:16682":{"crate_id":25,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"24:4380:6650":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"5:5:1480":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:49612:13426":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"4:15361:1616":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"4:4041:195":{"crate_id":4,"path":["std","io","error","Result"],"kind":"typedef"},"25:14976:15960":{"crate_id":25,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:52447:14161":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:45972:14287":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:23891:16398":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:6597:56273":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"12:181:14893":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:5433:13007":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:12946:15614":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:13240:15762":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"22:269:3151":{"crate_id":22,"path":["addr2line","RangeAttributes"],"kind":"struct"},"5:1457:14530":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"12:1762:15132":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:3522:12112":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:11337:9200":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:5421:13006":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"25:4337:14963":{"crate_id":25,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:11374:13420":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"24:4388:6651":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"24:6093:7680":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:10128:14970":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:45913:13100":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"24:5400:7270":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:50957:14165":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"5:8284:2277":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:5563:7308":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:11304:9198":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"24:4442:6658":{"crate_id":24,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:56042:225":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:8162:14672":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"23:8728:13093":{"crate_id":23,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:3684:9119":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"24:4186:6630":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:13172:15747":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:46482:14193":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:3429:12109":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"5:1011:3117":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:5274:7260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"19:0:981":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:69:2300":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:49844:14060":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"25:13955:15594":{"crate_id":25,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"23:0:1949":{"crate_id":23,"path":["gimli"],"kind":"module"},"14:216:2268":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"26:637:15251":{"crate_id":26,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:32226:56172":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"1:46632:14213":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:3281:2287":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:47703:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"24:5214:7257":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:46204:14409":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:12789:13431":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:13306:15777":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:49723:14051":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"25:14628:15849":{"crate_id":25,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:12456:15534":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"5:1215:14741":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"24:6061:4436":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"24:5152:7251":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:7195:13069":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:53312:16596":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"23:6933:13028":{"crate_id":23,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:3367:9107":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:5221:7257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"23:6867:14918":{"crate_id":23,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"4:1463:14519":{"crate_id":4,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:13296:15776":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"25:13792:15582":{"crate_id":25,"path":["object","macho","Nlist64"],"kind":"struct"},"25:10797:14969":{"crate_id":25,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"20:0:1664":{"crate_id":20,"path":["rustc_demangle"],"kind":"module"},"1:46258:14405":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"25:9960:2670":{"crate_id":25,"path":["object","endian","BigEndian"],"kind":"struct"},"25:13681:15568":{"crate_id":25,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:6744:14931":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"18:650:14993":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:10106:14968":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"25:294:16669":{"crate_id":25,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:1690:4511":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"24:1547:4499":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"23:6253:13006":{"crate_id":23,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"24:4045:6617":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"25:14638:15852":{"crate_id":25,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"25:14701:15868":{"crate_id":25,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:10584:14962":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:13590:15855":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"25:14354:15777":{"crate_id":25,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:6401:14198":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:46252:13428":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"4:6702:8903":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:49895:14062":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"24:5515:7306":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"4:9624:16838":{"crate_id":4,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"1:46612:14211":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:7843:13095":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:10001:49301":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"25:5487:14134":{"crate_id":25,"path":["object","read","private","Sealed"],"kind":"trait"},"25:2839:11824":{"crate_id":25,"path":["object","read","elf","dynamic","Dyn"],"kind":"trait"},"25:9814:9170":{"crate_id":25,"path":["object","common","FileFlags"],"kind":"enum"},"1:46520:16507":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"24:6214:7688":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:13788:15925":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:11588:9500":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"4:1505:14523":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:47414:9057":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"6:1723:4515":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:50982:14157":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"25:12171:9194":{"crate_id":25,"path":["object","read","ObjectMap"],"kind":"struct"},"26:838:13406":{"crate_id":26,"path":["memchr","memmem","Searcher"],"kind":"struct"},"25:5450:9155":{"crate_id":25,"path":["object","read","traits","ObjectComdat"],"kind":"trait"},"16:3549:12115":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"23:3089:12085":{"crate_id":23,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"23:209:12059":{"crate_id":23,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:49239:13590":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:10258:109":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"25:11768:16698":{"crate_id":25,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"9:41:14818":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"16:3145:12098":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:23984:14273":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:8124:14734":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"4:15854:2069":{"crate_id":4,"path":["std","bool"],"kind":"primitive"},"1:3472:2225":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"4:12179:2350":{"crate_id":4,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"25:9890:9173":{"crate_id":25,"path":["object","common","SymbolFlags"],"kind":"enum"},"18:811:14985":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:11101:13581":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:4215:6632":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"24:4510:6665":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"20:56:9213":{"crate_id":20,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"25:14691:15863":{"crate_id":25,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:5790:13021":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"4:4475:14466":{"crate_id":4,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"24:1710:4514":{"crate_id":24,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"25:13748:15575":{"crate_id":25,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:5330:2670":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"24:71:2791":{"crate_id":24,"path":["libc","unix","size_t"],"kind":"typedef"},"1:46422:2222":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:7891:14111":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"17:9186:9172":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:25121:2234":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:12442:15532":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"12:2045:14511":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"12:556:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:46591:14209":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"6:5420:7272":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"4:9636:16839":{"crate_id":4,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"4:15350:1616":{"crate_id":4,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:6087:13028":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:1533:4496":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"4:1501:14522":{"crate_id":4,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"4:10837:118":{"crate_id":4,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:1602:4504":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"25:13777:15578":{"crate_id":25,"path":["object","macho","Nlist32"],"kind":"struct"},"1:46859:14474":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:8843:2285":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"25:12985:15442":{"crate_id":25,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"5:3965:15134":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"23:1221:12057":{"crate_id":23,"path":["gimli","read","reader","Reader"],"kind":"trait"},"24:4394:6652":{"crate_id":24,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:22865:14132":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:49159:13594":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:6028:4460":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:4145:6627":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:2060:14441":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:24063:18654":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"25:12838:9734":{"crate_id":25,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:49424:13421":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:10926:16691":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"25:84:2474":{"crate_id":25,"path":["object","endian","NativeEndian"],"kind":"constant"},"18:896:14992":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"27:467:2743":{"crate_id":27,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"25:14541:15823":{"crate_id":25,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"4:2159:3117":{"crate_id":4,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:12712:15575":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"25:14962:15953":{"crate_id":25,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"25:13379:15499":{"crate_id":25,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"23:5110:12645":{"crate_id":23,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:5505:13011":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:9937:14296":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:4013:6612":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:12795:15592":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"4:2175:14508":{"crate_id":4,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"23:8908:127":{"crate_id":23,"path":["gimli","read","Error"],"kind":"enum"},"17:10420:11825":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:10516:11852":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:51943:14168":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:6887:6793":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:13054:15706":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"25:13218:15477":{"crate_id":25,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:50309:2297":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"25:5899:2663":{"crate_id":25,"path":["object","elf","SHF_COMPRESSED"],"kind":"constant"},"1:24025:18653":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:11871:13595":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"24:3861:6599":{"crate_id":24,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"25:12363:9202":{"crate_id":25,"path":["object","read","CompressedData"],"kind":"struct"},"4:5955:14663":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"23:194:12058":{"crate_id":23,"path":["gimli","read","util","ArrayLike"],"kind":"trait"},"5:6667:2337":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"25:12729:9706":{"crate_id":25,"path":["object","elf","Versym"],"kind":"struct"},"25:14529:15822":{"crate_id":25,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"25:10721:16674":{"crate_id":25,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:11482:9213":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"4:7444:175":{"crate_id":4,"path":["std","path","Path"],"kind":"struct"},"17:13963:15971":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:13685:15905":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"23:8257:13078":{"crate_id":23,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"4:4434:14469":{"crate_id":4,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:5736:13018":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:6910:6796":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:7216:13071":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"24:6148:7683":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"4:15871:2083":{"crate_id":4,"path":["std","i64"],"kind":"primitive"},"19:117:16230":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"9:776:14815":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:46227:13429":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:49584:13415":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"25:27:2475":{"crate_id":25,"path":["object","endian","Endian"],"kind":"trait"},"9:469:2743":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"23:8662:13090":{"crate_id":23,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:12307:15493":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"25:12144:9193":{"crate_id":25,"path":["object","read","SymbolMapName"],"kind":"struct"},"25:12758:9716":{"crate_id":25,"path":["object","elf","Verdaux"],"kind":"struct"},"1:2274:13521":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:47389:13302":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:22812:14128":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:12507:15539":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"25:11089:11826":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"25:13646:15556":{"crate_id":25,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:6644:13057":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:9759:9180":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:5548:7307":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:4193:6630":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:46581:14208":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"26:867:14990":{"crate_id":26,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:45737:184":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"25:11852:15015":{"crate_id":25,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"25:2431:2668":{"crate_id":25,"path":["object","read","elf","symbol","Sym"],"kind":"trait"},"17:10468:11850":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:24377:2242":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:52654:14181":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:9088:9168":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:7205:13070":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"25:11843:15014":{"crate_id":25,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"24:5352:7265":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"26:668:14998":{"crate_id":26,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:5068:2317":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:13620:15861":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"24:4463:6660":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:45852:9118":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:53266:16592":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"23:6427:13014":{"crate_id":23,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:53391:16601":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:3172:12099":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:3382:9111":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"25:14087:15700":{"crate_id":25,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"4:7510:119":{"crate_id":4,"path":["std","path","Display"],"kind":"struct"},"4:10805:8996":{"crate_id":4,"path":["std","fs","Permissions"],"kind":"struct"},"1:4888:2326":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:12741:15578":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:51111:16535":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"16:4417:12645":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"25:0:1663":{"crate_id":25,"path":["object"],"kind":"module"},"25:560:9161":{"crate_id":25,"path":["object","read","any","Section"],"kind":"struct"},"1:48703:16527":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"25:11986:9186":{"crate_id":25,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:0:477":{"crate_id":1,"path":["core"],"kind":"module"},"1:48383:133":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"24:1615:4506":{"crate_id":24,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"23:8227:13077":{"crate_id":23,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"23:6504:13016":{"crate_id":23,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:10095:14967":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:3398:9114":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"4:13480:13783":{"crate_id":4,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:56055:225":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:12754:13436":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:10071:14972":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:9731:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"4:9063:2346":{"crate_id":4,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"24:5541:7307":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:9839:9182":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"25:11116:11876":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"4:5377:14617":{"crate_id":4,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:49916:14064":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"24:5991:7677":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:12467:15535":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:9245:9146":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"25:14596:15841":{"crate_id":25,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:46160:14261":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:22605:56144":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"4:11159:14421":{"crate_id":4,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"4:10562:14134":{"crate_id":4,"path":["std","sealed","Sealed"],"kind":"trait"},"24:1901:4657":{"crate_id":24,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"16:7467:13085":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:13884:15951":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:3318:9098":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"24:5998:3395":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:8299:14356":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"27:608:15045":{"crate_id":27,"path":["miniz_oxide","inflate","stream","ZeroReset"],"kind":"struct"},"23:3665:12108":{"crate_id":23,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"4:6618:1017":{"crate_id":4,"path":["std","os","unix","prelude"],"kind":"module"},"18:829:14987":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:7226:13072":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"5:2548:14747":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:11640:9536":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"25:12322:9200":{"crate_id":25,"path":["object","read","CompressionFormat"],"kind":"enum"},"23:3638:12107":{"crate_id":23,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:6200:7686":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:3489:131":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"4:14823:15180":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:13446:15813":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"24:1533:4497":{"crate_id":24,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:24445:2240":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"24:4299:6640":{"crate_id":24,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:5456:13008":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:12343:15499":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"16:3320:12105":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:10801:16686":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"12:853:14519":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"25:14344:15776":{"crate_id":25,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:6636:8049":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:4300:6639":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:50099:14364":{"crate_id":1,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"4:15856:2071":{"crate_id":4,"path":["std","char"],"kind":"primitive"},"5:1680:184":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"25:11149:11850":{"crate_id":25,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"25:14611:15845":{"crate_id":25,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"24:3998:6611":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"5:374:2302":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:50212:16532":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"25:13409:15518":{"crate_id":25,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:13016:13406":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"25:11170:11878":{"crate_id":25,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:3743:14956":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"27:27:14817":{"crate_id":27,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"1:50265:14317":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:3488:12110":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"12:2309:16284":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:11678:9539":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"25:5419:9157":{"crate_id":25,"path":["object","read","traits","ObjectSegment"],"kind":"trait"},"4:4570:14474":{"crate_id":4,"path":["std","io","util","Repeat"],"kind":"struct"},"5:3035:16294":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"23:5427:12737":{"crate_id":23,"path":["gimli","constants","DwInl"],"kind":"struct"},"25:15042:15972":{"crate_id":25,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"24:4208:6632":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:5436:15989":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"25:2549:11864":{"crate_id":25,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"25:14874:15930":{"crate_id":25,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"23:7098:13039":{"crate_id":23,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:13282:15775":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:4401:6652":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:8902:9145":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"4:12051:14549":{"crate_id":4,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:7514:13087":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"23:3218:12090":{"crate_id":23,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"25:10984:11829":{"crate_id":25,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"25:10916:11842":{"crate_id":25,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"24:4059:6619":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:10673:49420":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"24:5946:4432":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"4:8806:162":{"crate_id":4,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"4:8383:13992":{"crate_id":4,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"17:11779:9717":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:46442:14189":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:49488:13425":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:52987:14153":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"24:3950:6606":{"crate_id":24,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:4345:9057":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:24581:2248":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:49112:13580":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:4133:2789":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:13318:15780":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:6424:13048":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:3041:12094":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:525:3610":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"25:11924:15385":{"crate_id":25,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:2753:568":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:9034:9166":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:21:660":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"4:7798:14572":{"crate_id":4,"path":["std","process","Termination"],"kind":"trait"},"17:10458:11877":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"25:11209:11851":{"crate_id":25,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:22582:56146":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"26:830:14987":{"crate_id":26,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"27:829:3113":{"crate_id":27,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"24:6178:7685":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:3034:59762":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"12:2009:9057":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"4:10363:1620":{"crate_id":4,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"4:6202:14632":{"crate_id":4,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:11822:9722":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:49130:13579":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"23:7160:13043":{"crate_id":23,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"24:5184:7254":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"4:7735:14568":{"crate_id":4,"path":["std","process","Stdio"],"kind":"struct"},"1:3137:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:4997:2310":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"17:13627:15863":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:5255:7238":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"4:10650:42301":{"crate_id":4,"path":["std","backtrace","RawFrame"],"kind":"enum"},"23:3027:12082":{"crate_id":23,"path":["gimli","common","Encoding"],"kind":"struct"},"1:11360:13421":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"4:14526:56842":{"crate_id":4,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:47787:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:9574:2669":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:4301:13581":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:3246:2288":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:23971:2236":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"4:11165:14426":{"crate_id":4,"path":["std","net","ip","IpAddr"],"kind":"enum"},"17:13370:15796":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:13924:15962":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"4:10798:8995":{"crate_id":4,"path":["std","fs","OpenOptions"],"kind":"struct"},"4:15878:2090":{"crate_id":4,"path":["std","isize"],"kind":"primitive"},"1:46534:14197":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:45829:189":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"25:13046:15453":{"crate_id":25,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:3486:130":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:9224:2843":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:52183:14148":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:6899:6795":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"25:526:9160":{"crate_id":25,"path":["object","read","any","Segment"],"kind":"struct"},"17:12040:15456":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"12:1253:14531":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:22802:14134":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"25:1275:16671":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"23:7491:14926":{"crate_id":23,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:3335:9099":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"24:3965:6452":{"crate_id":24,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"23:5483:12743":{"crate_id":23,"path":["gimli","constants","DwDsc"],"kind":"struct"},"25:11955:53274":{"crate_id":25,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:6269:13045":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:24615:2245":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:51500:14147":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"4:12169:1646":{"crate_id":4,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"9:963:11894":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"24:4039:6616":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:56029:225":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"4:11992:56798":{"crate_id":4,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"25:11715:16694":{"crate_id":25,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"12:2039:14510":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"4:15879:2091":{"crate_id":4,"path":["std","usize"],"kind":"primitive"},"24:3983:6609":{"crate_id":24,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:3951:6605":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:7073:13063":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:6208:13036":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"25:10840:15338":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:14109:141":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"23:3006:12055":{"crate_id":23,"path":["gimli","common","Format"],"kind":"enum"},"1:9942:14297":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"23:8818:13099":{"crate_id":23,"path":["gimli","read","value","ValueType"],"kind":"enum"},"24:4026:6614":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:7250:13074":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"4:1646:14530":{"crate_id":4,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"25:5142:15012":{"crate_id":25,"path":["object","read","pe","import","ImageThunkData"],"kind":"trait"},"4:3331:9003":{"crate_id":4,"path":["std","fs","read_link"],"kind":"function"},"25:11934:53273":{"crate_id":25,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:51038:14178":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"13:120:48443":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"26:850:14988":{"crate_id":26,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:6185:7685":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:2892:173":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:8954:9164":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:11402:13582":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"4:4704:9015":{"crate_id":4,"path":["std","io","Seek"],"kind":"trait"},"26:645:14996":{"crate_id":26,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:48496:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"4:4363:14603":{"crate_id":4,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:681:1620":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"0:0:1614":{"crate_id":0,"path":["backtrace"],"kind":"module"},"25:11640:15376":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:4501:6663":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"23:5545:12755":{"crate_id":23,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:10403:11839":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:11519:9436":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"25:11566:14959":{"crate_id":25,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:578:3616":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"25:12800:9721":{"crate_id":25,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:46145:13428":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:46189:14264":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:9726:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"4:15876:2088":{"crate_id":4,"path":["std","u64"],"kind":"primitive"},"17:10052:16675":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"25:11790:15040":{"crate_id":25,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"4:3132:2131":{"crate_id":4,"path":["std","fs"],"kind":"module"},"24:5938:3526":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"20:231:14676":{"crate_id":20,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"4:7935:16775":{"crate_id":4,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:13725:150":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"25:10576:61034":{"crate_id":25,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:12725:15576":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:3707:9121":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"16:6577:13053":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"4:11612:3120":{"crate_id":4,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:13377:15797":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"23:8068:13065":{"crate_id":23,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:7295:13076":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"23:4632:12292":{"crate_id":23,"path":["gimli","constants","DwTag"],"kind":"struct"},"4:11937:171":{"crate_id":4,"path":["std","process","Output"],"kind":"struct"},"6:5292:7262":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"4:11224:16353":{"crate_id":4,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"5:5088:648":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:9162:9170":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"25:2631:11837":{"crate_id":25,"path":["object","read","elf","relocation","Rel"],"kind":"trait"},"12:1667:14899":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"4:9340:14486":{"crate_id":4,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"23:8119:13069":{"crate_id":23,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"26:897:14992":{"crate_id":26,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"25:11236:11852":{"crate_id":25,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"4:8391:3113":{"crate_id":4,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"6:6100:7680":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"24:4105:6624":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"23:6039:16001":{"crate_id":23,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:11199:9195":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"25:14238:15753":{"crate_id":25,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:8846:13665":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"12:2013:9055":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:3324:3117":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"4:14673:14432":{"crate_id":4,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"6:1563:4500":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:22603:56148":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"24:5421:7273":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:11406:15406":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:50256:14316":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:49388:13417":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:46151:16496":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:5855:12054":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"4:15877:2089":{"crate_id":4,"path":["std","u128"],"kind":"primitive"},"25:10820:9182":{"crate_id":25,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:2816:12085":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"9:722:14777":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:51531:14151":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"12:2025:14508":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"4:15860:2074":{"crate_id":4,"path":["std","array"],"kind":"primitive"},"6:605:3620":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"4:14155:14469":{"crate_id":4,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:7342:13079":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:3245:2363":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:53338:16598":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:11947:15438":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:7185:13068":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"4:14884:14569":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:50048:13399":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"4:15606:2477":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"25:11180:11875":{"crate_id":25,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:10215:134":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"17:12699:15574":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:47913:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"24:5305:7263":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:9332:2721":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"4:12671:15176":{"crate_id":4,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:51453:14159":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"25:12955:15434":{"crate_id":25,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:13760:15918":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:12917:15594":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"23:7542:14924":{"crate_id":23,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:7420:13083":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"23:6304:13009":{"crate_id":23,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"18:739:16667":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"4:14019:15177":{"crate_id":4,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"12:2303:16283":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"25:13076:15456":{"crate_id":25,"path":["object","macho","LcStr"],"kind":"struct"},"6:5407:7270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"14:56:9213":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"4:6700:8901":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"25:12540:9493":{"crate_id":25,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"7:85:48170":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"25:9840:9171":{"crate_id":25,"path":["object","common","SegmentFlags"],"kind":"enum"},"4:4397:14468":{"crate_id":4,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:3800:12178":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"25:12970:15438":{"crate_id":25,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"4:6462:9088":{"crate_id":4,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:5953:4432":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:6864:6790":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"25:2877:2664":{"crate_id":25,"path":["object","read","elf","compression","CompressionHeader"],"kind":"trait"},"17:13799:15929":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"24:4432:6657":{"crate_id":24,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"4:10607:13976":{"crate_id":4,"path":["std","thread","Thread"],"kind":"struct"},"1:3248:207":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"24:584:3618":{"crate_id":24,"path":["libc","unix","winsize"],"kind":"struct"},"17:12275:15489":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"18:837:13406":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"4:11988:16375":{"crate_id":4,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"4:4647:9012":{"crate_id":4,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:5547:1762":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"17:13532:15841":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"25:12705:9596":{"crate_id":25,"path":["object","elf","Dyn32"],"kind":"struct"},"18:136:53045":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"12:1235:14888":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"24:4016:6613":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"25:11691:16692":{"crate_id":25,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:4511:6664":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"27:604:15044":{"crate_id":27,"path":["miniz_oxide","inflate","stream","MinReset"],"kind":"struct"},"25:9581:9163":{"crate_id":25,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:3118:12097":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:3701:137":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"25:13984:15614":{"crate_id":25,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"25:11278:15023":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:7024:14940":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:12783:15585":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:1584:4502":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"25:299:16670":{"crate_id":25,"path":["object","read","util","DebugLen"],"kind":"struct"},"23:3116:12086":{"crate_id":23,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"18:660:14997":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"23:8219:13076":{"crate_id":23,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:4852:2325":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:4734:12737":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"4:12085:14553":{"crate_id":4,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:6051:4433":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:13154:15742":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:7884:13098":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"25:11102:11825":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:12645:15568":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:10543:15022":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"24:6117:7682":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"25:10048:9174":{"crate_id":25,"path":["object","endian","U64Bytes"],"kind":"struct"},"4:13334:14630":{"crate_id":4,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"9:809:3113":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:4614:12717":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:1622:4506":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"4:5971:14666":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:48392:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"26:802:14984":{"crate_id":26,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:10975:16695":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:1676:4510":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:7738:13090":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:46492:14194":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:12457:1319":{"crate_id":1,"path":["core","str"],"kind":"module"},"1:49906:14063":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:11915:15409":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"24:74:2441":{"crate_id":24,"path":["libc","unix","uintptr_t"],"kind":"typedef"},"4:3522:14456":{"crate_id":4,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"9:603:15047":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:50032:13395":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"4:12010:16376":{"crate_id":4,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"23:5516:12751":{"crate_id":23,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:51679:16541":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:4932:1645":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"23:8495:13089":{"crate_id":23,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"24:3938:6604":{"crate_id":24,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:5969:3484":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:5927:13023":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:2773:12083":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"23:7604:13058":{"crate_id":23,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"5:8449:9054":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"16:3091:12096":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"4:13499:16780":{"crate_id":4,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:46235:14404":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:49603:13430":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:13912:15960":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"6:563:3614":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:5379:7267":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:632:3624":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:46364:2226":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:11001:16697":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:46295:14408":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"4:1419:3117":{"crate_id":4,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:6021:14918":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"4:14929:16386":{"crate_id":4,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"20:216:2268":{"crate_id":20,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"23:8780:13096":{"crate_id":23,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"23:4923:12558":{"crate_id":23,"path":["gimli","constants","DwAt"],"kind":"struct"},"25:11878:15034":{"crate_id":25,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"23:6464:13015":{"crate_id":23,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:10558:15025":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:11147:9192":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:14:1936":{"crate_id":1,"path":["core","write"],"kind":"macro"},"9:686:14774":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"17:13062:15707":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"23:5688:12798":{"crate_id":23,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:57291:16610":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"16:5707:14903":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"1:49320:13418":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"6:4317:6641":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"18:729:61039":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:11015:16698":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:8929:9163":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"18:610:14994":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"18:712:13284":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:569:3615":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"4:14466:8995":{"crate_id":4,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"25:5430:9156":{"crate_id":25,"path":["object","read","traits","ObjectSection"],"kind":"trait"},"12:1200:14887":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"4:8911:1647":{"crate_id":4,"path":["std","sync","once","Once"],"kind":"struct"},"17:10353:11834":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"23:5170:12655":{"crate_id":23,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:11082:9189":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"4:11980:14571":{"crate_id":4,"path":["std","process","ExitCode"],"kind":"struct"},"6:5428:7273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"4:15868:2080":{"crate_id":4,"path":["std","i8"],"kind":"primitive"},"4:6864:9083":{"crate_id":4,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:23930:16400":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:13554:15846":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"24:6232:7689":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:23999:16408":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"6:5459:7274":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"25:14477:15806":{"crate_id":25,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:23556:13577":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"6:4517:6665":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:12208:15480":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:300:195":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:13506:15831":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"23:7413:13050":{"crate_id":23,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"5:8330:2276":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:4331:6643":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:0:1949":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:6072:13027":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"15:230:3146":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:12444:13576":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:1838:15134":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:9005:9165":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"5:7106:15148":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"4:4989:14419":{"crate_id":4,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"6:3978:6608":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:543:3613":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"5:8183:9057":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"12:463:61022":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"4:6440:9087":{"crate_id":4,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"14:11:1834":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"25:13017:15449":{"crate_id":25,"path":["object","macho","FatArch64"],"kind":"struct"},"5:8348:16298":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"24:1526:4496":{"crate_id":24,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"23:3241:12091":{"crate_id":23,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"23:3291:12093":{"crate_id":23,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"26:651:14993":{"crate_id":26,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:48711:16528":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"23:6583:13019":{"crate_id":23,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"25:12619:9535":{"crate_id":25,"path":["object","elf","Rel32"],"kind":"struct"},"4:11336:14662":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:46274:13427":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"23:3765:12110":{"crate_id":23,"path":["gimli","common","DwoId"],"kind":"struct"},"23:7346:13048":{"crate_id":23,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:4005:6611":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:10224:16680":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"25:14425:15797":{"crate_id":25,"path":["object","pe","ImageRelocation"],"kind":"struct"},"25:10449:61035":{"crate_id":25,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"25:11741:16696":{"crate_id":25,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:5123:2319":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:5282:7261":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"18:677:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"24:1669:4510":{"crate_id":24,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"4:9715:14610":{"crate_id":4,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"27:947:2744":{"crate_id":27,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"4:2366:589":{"crate_id":4,"path":["std","env"],"kind":"module"},"17:9065:9167":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:11932:15434":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"25:12826:9733":{"crate_id":25,"path":["object","elf","HashHeader"],"kind":"struct"},"4:15335:57360":{"crate_id":4,"path":["std","panicking","Hook"],"kind":"enum"},"24:4504:6664":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:4210:9055":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:49290:13413":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"25:14654:15855":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"25:11315:14962":{"crate_id":25,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"15:248:3147":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:11186:9194":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"5:1630:14518":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:5884:15146":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"4:1194:16837":{"crate_id":4,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"25:2657:11838":{"crate_id":25,"path":["object","read","elf","relocation","Rela"],"kind":"trait"},"1:53453:16603":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:10489:11851":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"23:4175:12115":{"crate_id":23,"path":["gimli","arch","X86"],"kind":"struct"},"1:3377:9109":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"16:7870:13097":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:4890:12768":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:48903:14413":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:51759:16543":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:10435:11876":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:3967:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"12:377:14892":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:1540:4497":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"23:7440:13051":{"crate_id":23,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:8189:9057":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:49738:14054":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"4:14817:15179":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"4:10656:14514":{"crate_id":4,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"5:6406:212":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:5568:14118":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:48119:13357":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:13540:15844":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"26:791:14983":{"crate_id":26,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:47745:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"4:3645:14452":{"crate_id":4,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:6731:14930":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"23:5455:12740":{"crate_id":23,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:9223:2844":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:47661:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"25:10280:61032":{"crate_id":25,"path":["object","read","any","FileInternal"],"kind":"enum"},"1:8367:151":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"4:14686:14571":{"crate_id":4,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"25:12132:9192":{"crate_id":25,"path":["object","read","SymbolMap"],"kind":"struct"},"23:6337:13011":{"crate_id":23,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"4:11056:14475":{"crate_id":4,"path":["std","io","util","Sink"],"kind":"struct"},"1:51236:14135":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:12771:9199":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"25:14251:15758":{"crate_id":25,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"24:518:3610":{"crate_id":24,"path":["libc","unix","timeval"],"kind":"struct"},"25:10880:16678":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:6085:7678":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:55990:225":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"24:5275:7261":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:13819:15932":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"12:892:14877":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"6:4410:6653":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"23:4493:12178":{"crate_id":23,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:7333:13078":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:22954:14134":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:10912:16687":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"16:4852:12755":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"24:6863:6791":{"crate_id":24,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"23:7112:13040":{"crate_id":23,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:10200:16678":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"16:7174:13067":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"25:9554:9145":{"crate_id":25,"path":["object","common","AddressSize"],"kind":"enum"},"4:8693:2341":{"crate_id":4,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"25:14852:15925":{"crate_id":25,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"4:3315:2514":{"crate_id":4,"path":["std","fs","metadata"],"kind":"function"},"17:12385:15520":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"24:5462:7275":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"5:4510:14718":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"1:57312:16611":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"4:10673:13778":{"crate_id":4,"path":["std","env","VarError"],"kind":"enum"},"4:8484:14550":{"crate_id":4,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:50040:13397":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"12:1688:14900":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:8092:2299":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:3258:1914":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"25:14997:15966":{"crate_id":25,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"5:4237:15134":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:32037:2233":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:2897:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"24:4066:6620":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:3862:6598":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"4:2751:14492":{"crate_id":4,"path":["std","error","Report"],"kind":"struct"},"24:5452:7274":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:3459:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:10611:16683":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"25:13087:15457":{"crate_id":25,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"24:4310:6641":{"crate_id":24,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"24:5190:7255":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:53323:16597":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:294:16669":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"18:704:15251":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:6949:14681":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"5:4694:15139":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:49198:13593":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:47527:3117":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"4:14669:13785":{"crate_id":4,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"25:9686:9166":{"crate_id":25,"path":["object","common","SymbolKind"],"kind":"enum"},"17:12568:15549":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:8070:14473":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"25:14810:15912":{"crate_id":25,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:22550:56046":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:13007:13403":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:10160:15338":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"14:0:1664":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:5945:3526":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:12431:15530":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"4:9142:2349":{"crate_id":4,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:10502:11879":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"25:12906:15409":{"crate_id":25,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:3331:14509":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"23:5228:12663":{"crate_id":23,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"4:14441:14418":{"crate_id":4,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"9:1075:11899":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:46552:14200":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"24:5379:7268":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"25:11964:15388":{"crate_id":25,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:13356:15794":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"25:1878:11836":{"crate_id":25,"path":["object","read","elf","segment","ProgramHeader"],"kind":"trait"},"4:11077:9016":{"crate_id":4,"path":["std","io","SeekFrom"],"kind":"enum"},"4:11525:3114":{"crate_id":4,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:12756:15582":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:10529:11880":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"25:9740:9168":{"crate_id":25,"path":["object","common","RelocationKind"],"kind":"enum"},"25:12216:9196":{"crate_id":25,"path":["object","read","Import"],"kind":"struct"},"4:11162:14422":{"crate_id":4,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"5:8116:9055":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"18:636:15251":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:13933:15966":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:584:3617":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:6155:7683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:4395:6651":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:11126:13418":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:10205:1935":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"5:5783:15134":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"4:14456:16379":{"crate_id":4,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"24:3911:6603":{"crate_id":24,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"4:3699:14459":{"crate_id":4,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:46663:14204":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"25:11579:14960":{"crate_id":25,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"27:0:1662":{"crate_id":27,"path":["miniz_oxide"],"kind":"module"},"3:0:2121":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"12:2005:3117":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"23:648:14905":{"crate_id":23,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:5228:7258":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:4448:12651":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:8326:14203":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:52230:14152":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:13488:15827":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"25:13421:15520":{"crate_id":25,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:5312:7263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"4:1442:9057":{"crate_id":4,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:5078:2318":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"12:968:14526":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"24:4076:6621":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"5:1486:14531":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:3329:9100":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:13429:15806":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:4419:6654":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"4:10424:1627":{"crate_id":4,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"23:447:12062":{"crate_id":23,"path":["gimli","read","cfi","_UnwindSectionPrivate"],"kind":"trait"},"17:9133:9169":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"4:15272:14624":{"crate_id":4,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"23:7946:14940":{"crate_id":23,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"4:6560:9089":{"crate_id":4,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"23:4230:12116":{"crate_id":23,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:3218:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"6:4183:6629":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:12537:15544":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"23:8041:13064":{"crate_id":23,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:4120:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"4:3333:2775":{"crate_id":4,"path":["std","fs","canonicalize"],"kind":"function"},"24:5203:7256":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"23:5988:12053":{"crate_id":23,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"25:13618:15551":{"crate_id":25,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:5828:13831":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"4:12209:9022":{"crate_id":4,"path":["std","time","SystemTime"],"kind":"struct"},"24:5980:7676":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"25:14396:15791":{"crate_id":25,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"25:12005:9187":{"crate_id":25,"path":["object","read","FileKind"],"kind":"enum"},"25:14948:15951":{"crate_id":25,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"4:9730:14611":{"crate_id":4,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"4:1623:14528":{"crate_id":4,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:4262:6635":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:9210:9173":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"23:3067:12084":{"crate_id":23,"path":["gimli","common","Register"],"kind":"struct"},"1:7633:13310":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:3250:106":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"8:0:1629":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"24:4487:6662":{"crate_id":24,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:11904:13596":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"25:10566:9183":{"crate_id":25,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"26:767:15261":{"crate_id":26,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"24:5178:7253":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:5472:13009":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"12:976:14527":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"23:3961:12113":{"crate_id":23,"path":["gimli","arch","AArch64"],"kind":"struct"},"12:761:13581":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:12480:15537":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"23:6539:13017":{"crate_id":23,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"23:6320:13010":{"crate_id":23,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:6591:13054":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"12:925:14520":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"25:12770:9717":{"crate_id":25,"path":["object","elf","Verneed"],"kind":"struct"},"4:13835:14566":{"crate_id":4,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"16:7571:13089":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"25:14570:15831":{"crate_id":25,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:13022:13405":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"23:6007:9147":{"crate_id":23,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"24:6084:7679":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"23:7476:13052":{"crate_id":23,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"23:5307:12717":{"crate_id":23,"path":["gimli","constants","DwLang"],"kind":"struct"},"25:5518:9153":{"crate_id":25,"path":["object","read","SymbolMapEntry"],"kind":"trait"},"5:1613:9057":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:5414:7271":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:7158:13066":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:10827:14960":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"6:6106:7681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:4203:6631":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:1554:4499":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:5185:7253":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:6239:7689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"23:7012:13034":{"crate_id":23,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"4:10584:13982":{"crate_id":4,"path":["std","thread","Builder"],"kind":"struct"},"24:1701:4513":{"crate_id":24,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"24:63:2201":{"crate_id":24,"path":["libc","unix","c_int"],"kind":"typedef"},"4:10694:14750":{"crate_id":4,"path":["std","error","private","Internal"],"kind":"struct"},"6:4364:6647":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:3064:12095":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"24:598:3620":{"crate_id":24,"path":["libc","unix","sigval"],"kind":"struct"},"12:877:9053":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"23:7130:13041":{"crate_id":23,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"24:5962:3484":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"24:1737:4518":{"crate_id":24,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"9:1056:11897":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:9799:9181":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:3966:6607":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"22:230:3146":{"crate_id":22,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"4:13873:14568":{"crate_id":4,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"16:5314:9147":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"25:10489:61033":{"crate_id":25,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:4306:6640":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"23:3046:12083":{"crate_id":23,"path":["gimli","common","LineEncoding"],"kind":"struct"},"24:6078:7678":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:7549:13088":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:46543:14205":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"4:11329:14420":{"crate_id":4,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:6636:13056":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"5:2257:14744":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"9:27:14817":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"6:6644:8050":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"25:11948:15387":{"crate_id":25,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:3372:9108":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"4:14233:13976":{"crate_id":4,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:6491:13050":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"23:62:12052":{"crate_id":23,"path":["gimli","endianity","Endianity"],"kind":"trait"},"1:7719:14190":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"24:4006:6612":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"25:11302:15026":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"24:4494:6663":{"crate_id":24,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"25:10997:11828":{"crate_id":25,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"4:2181:14509":{"crate_id":4,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:6357:13046":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"23:6619:13021":{"crate_id":23,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"23:5583:12768":{"crate_id":23,"path":["gimli","constants","DwLns"],"kind":"struct"},"4:1450:14518":{"crate_id":4,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"23:3702:12109":{"crate_id":23,"path":["gimli","common","SectionId"],"kind":"enum"},"25:13064:15454":{"crate_id":25,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:3604:12116":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:6554:13052":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"25:10272:128":{"crate_id":25,"path":["object","read","any","File"],"kind":"struct"},"6:6068:4436":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:50202:191":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"25:13831:15592":{"crate_id":25,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:12685:15571":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"24:603:3621":{"crate_id":24,"path":["libc","unix","itimerval"],"kind":"struct"},"16:6110:13030":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"16:2866:12087":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:2912:12089":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:13609:15860":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:52908:14169":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:49263:13411":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:13222:16749":{"crate_id":1,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"17:10149:9183":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:5375:14401":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"4:15191:14429":{"crate_id":4,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:48359:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"24:4113:6625":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"4:5738:9078":{"crate_id":4,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"5:1648:14520":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"25:13244:15480":{"crate_id":25,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:9476:9177":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"25:11728:16695":{"crate_id":25,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"25:13543:15539":{"crate_id":25,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"4:11244:56713":{"crate_id":4,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:10331:9182":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"24:1658:4509":{"crate_id":24,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"23:5079:12639":{"crate_id":23,"path":["gimli","constants","DwLle"],"kind":"struct"},"23:7995:13063":{"crate_id":23,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:12715:13437":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"5:4594:15137":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"17:12659:15569":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"4:2793:14493":{"crate_id":4,"path":["std","error","Indented"],"kind":"struct"},"4:5778:9076":{"crate_id":4,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"4:10635:42300":{"crate_id":4,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:3881:6600":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"4:11965:14570":{"crate_id":4,"path":["std","process","ExitStatusError"],"kind":"struct"},"5:4638:15139":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"4:12229:14542":{"crate_id":4,"path":["std","time","SystemTimeError"],"kind":"struct"},"24:609:3622":{"crate_id":24,"path":["libc","unix","tms"],"kind":"struct"},"4:5722:9075":{"crate_id":4,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:7823:13094":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"25:13204:15346":{"crate_id":25,"path":["object","macho","Dylib"],"kind":"struct"},"25:11355:16684":{"crate_id":25,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"25:10829:9183":{"crate_id":25,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:10028:16673":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"5:783:211":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"4:11950:14569":{"crate_id":4,"path":["std","process","ExitStatus"],"kind":"struct"},"6:537:3612":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:12095:15465":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:3945:6604":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:5469:7275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"23:6972:13031":{"crate_id":23,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:7264:13075":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"4:10845:14596":{"crate_id":4,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:7303:13077":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"23:8685:13091":{"crate_id":23,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:10270:13359":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:13402:15802":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"25:10708:16673":{"crate_id":25,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"25:14218:15747":{"crate_id":25,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"27:1016:11895":{"crate_id":27,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:2484:11864":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:13746:15912":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:24513:2238":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"4:5744:9077":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"24:4293:6639":{"crate_id":24,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:2991:12092":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:14012:2294":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"25:12184:9195":{"crate_id":25,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"23:592:12064":{"crate_id":23,"path":["gimli","read","cfi","UnwindContextStorage"],"kind":"trait"},"5:5310:190":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:12373:15518":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"23:3185:12089":{"crate_id":23,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"4:7930:13991":{"crate_id":4,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"23:3139:12087":{"crate_id":23,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:8127:55086":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"4:12098:14554":{"crate_id":4,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"4:1136:1634":{"crate_id":4,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:610:3621":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:47552:168":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"26:721:15253":{"crate_id":26,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"23:6265:13007":{"crate_id":23,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"25:5903:2660":{"crate_id":25,"path":["object","elf","ELFCOMPRESS_ZLIB"],"kind":"constant"},"4:7680:14566":{"crate_id":4,"path":["std","process","Command"],"kind":"struct"},"18:152:53046":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"25:14836:15921":{"crate_id":25,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:53199:14176":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"25:12239:9197":{"crate_id":25,"path":["object","read","Export"],"kind":"struct"},"6:5987:7676":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"25:14662:15856":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"25:14797:15906":{"crate_id":25,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"4:2460:13789":{"crate_id":4,"path":["std","env","Args"],"kind":"struct"},"25:3920:14956":{"crate_id":25,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"4:5963:14664":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"18:169:53047":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:51197:14150":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"5:1441:14528":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:3018:12093":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:6124:7682":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"4:11433:3041":{"crate_id":4,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"25:10761:2667":{"crate_id":25,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:4637:14441":{"crate_id":1,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"24:1683:4511":{"crate_id":24,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:49220:13591":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"4:15326:16389":{"crate_id":4,"path":["std","alloc","System"],"kind":"struct"},"25:14379:15786":{"crate_id":25,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"18:744:61040":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"4:15827:1623":{"crate_id":4,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"5:7368:9057":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:5132:2320":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"12:2331:3124":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"25:14501:15814":{"crate_id":25,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"1:11077:3117":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"23:8160:13073":{"crate_id":23,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:11767:9716":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"24:6928:8238":{"crate_id":24,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"24:1577:4502":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:10268:13358":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"5:3370:14684":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"25:10156:9177":{"crate_id":25,"path":["object","endian","I64Bytes"],"kind":"struct"},"25:11832:15013":{"crate_id":25,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:12142:15470":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"4:4357:14601":{"crate_id":4,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:10211:16679":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"25:14442:15800":{"crate_id":25,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:10041:16674":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:27932:2235":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"25:14618:15846":{"crate_id":25,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"24:1540:4498":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"24:5413:7272":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"4:2462:13790":{"crate_id":4,"path":["std","env","ArgsOs"],"kind":"struct"},"6:3905:6602":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:2889:12088":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"24:6805:8211":{"crate_id":24,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:2265:14115":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"6:1630:4507":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:45806:187":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:22997:14134":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:13836:16750":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"4:3317:9000":{"crate_id":4,"path":["std","fs","symlink_metadata"],"kind":"function"},"27:742:14777":{"crate_id":27,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"23:3337:12095":{"crate_id":23,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:4478:6661":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"24:6099:7681":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"24:3885:6601":{"crate_id":24,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"23:4465:12175":{"crate_id":23,"path":["gimli","constants","DwCfa"],"kind":"struct"},"6:1617:4505":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:7042:14941":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"25:13178:15470":{"crate_id":25,"path":["object","macho","Fvmlib"],"kind":"struct"},"18:667:14998":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"25:11861:9196":{"crate_id":25,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:5175:2322":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"25:10329:9178":{"crate_id":25,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"23:6998:13033":{"crate_id":23,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"24:1565:4501":{"crate_id":24,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:49594:13414":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:13598:15856":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"26:740:16667":{"crate_id":26,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"25:14749:15905":{"crate_id":25,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:49149:13587":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:13772:15921":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"4:1476:9055":{"crate_id":4,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:7810:15148":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"25:10946:11830":{"crate_id":25,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"25:11990:127":{"crate_id":25,"path":["object","read","Error"],"kind":"struct"},"1:10262:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"16:5346:13002":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"23:8109:13068":{"crate_id":23,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:3308:9096":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"23:8377:13084":{"crate_id":23,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"4:1522:14525":{"crate_id":4,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:10503:146":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"16:2733:12055":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"4:2576:127":{"crate_id":4,"path":["std","error","Error"],"kind":"trait"},"4:7120:3040":{"crate_id":4,"path":["std","panic","always_abort"],"kind":"function"},"24:0:785":{"crate_id":24,"path":["libc"],"kind":"module"},"25:3537:14961":{"crate_id":25,"path":["object","read","macho","file","MachHeader"],"kind":"trait"},"25:12343:9201":{"crate_id":25,"path":["object","read","CompressedFileRange"],"kind":"struct"},"4:70:1470":{"crate_id":4,"path":["std","prelude","v1"],"kind":"module"},"17:542:9161":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"24:81:3212":{"crate_id":24,"path":["libc","unix","DIR"],"kind":"enum"},"10:0:2125":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:22806:14126":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:47619:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"5:432:1643":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"26:152:53046":{"crate_id":26,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:50086:14363":{"crate_id":1,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"1:38669:3191":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:22961:40742":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:11809:9721":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"12:930:14523":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"4:15874:2086":{"crate_id":4,"path":["std","u16"],"kind":"primitive"},"1:13027:13404":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"5:7835:15153":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"24:1595:4504":{"crate_id":24,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:4704:12732":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:48410:107":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"5:5410:14441":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:10814:14959":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"25:13467:15530":{"crate_id":25,"path":["object","macho","DylibReference"],"kind":"struct"},"4:2166:9055":{"crate_id":4,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"4:11049:14473":{"crate_id":4,"path":["std","io","util","Empty"],"kind":"struct"},"16:3218:12101":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"25:11754:16697":{"crate_id":25,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:12234:15483":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:6518:13051":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:1717:4514":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"4:2399:13771":{"crate_id":4,"path":["std","env","Vars"],"kind":"struct"},"24:1753:4519":{"crate_id":24,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"24:4274:6637":{"crate_id":24,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:2543:11848":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"6:6852:6788":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"24:4324:6643":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:3252:209":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:45920:14114":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"12:469:61023":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:10279:2667":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"25:13588:15548":{"crate_id":25,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:12408:15529":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:4358:6646":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"23:189:14134":{"crate_id":23,"path":["gimli","read","util","sealed","Sealed"],"kind":"trait"},"16:6691:13059":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:11847:9734":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"25:9499:9148":{"crate_id":25,"path":["object","common","Architecture"],"kind":"enum"},"5:2195:15136":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:3742:2289":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"25:11196:11853":{"crate_id":25,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:1527:4495":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:24093:16421":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"14:194:2260":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:13582:15853":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"25:13363:15494":{"crate_id":25,"path":["object","macho","SymtabCommand"],"kind":"struct"},"25:12595:9501":{"crate_id":25,"path":["object","elf","Syminfo32"],"kind":"struct"},"26:713:13284":{"crate_id":26,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:47577:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"25:12484:9435":{"crate_id":25,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:13986:15975":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"24:6607:3565":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:74:1414":{"crate_id":1,"path":["core","u32"],"kind":"module"},"17:13810:15930":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"18:857:14989":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:10844:9182":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"25:11703:16693":{"crate_id":25,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:1572:4501":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"4:8741:2352":{"crate_id":4,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"4:12154:2342":{"crate_id":4,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:6870:6791":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"25:14552:15827":{"crate_id":25,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"4:15251:14617":{"crate_id":4,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:48133:13358":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:6812:8211":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:11277:9150":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"25:10891:16679":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:48377:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:2862:104":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"6:4227:6633":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:45892:14100":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"4:10788:8992":{"crate_id":4,"path":["std","fs","Metadata"],"kind":"struct"},"16:3287:12104":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"23:7386:13049":{"crate_id":23,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"24:5407:7271":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"25:10751:14972":{"crate_id":25,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:5595:13014":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"4:15872:2084":{"crate_id":4,"path":["std","i128"],"kind":"primitive"},"23:7653:14930":{"crate_id":23,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:9659:61037":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:7477:13086":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"4:11361:14634":{"crate_id":4,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"4:14949:14541":{"crate_id":4,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:46868:16514":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"4:7795:3333":{"crate_id":4,"path":["std","process","exit"],"kind":"function"},"12:784:14521":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"24:592:3619":{"crate_id":24,"path":["libc","unix","linger"],"kind":"struct"},"1:49229:13589":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:4790:12743":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:4281:6637":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:4033:6614":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"23:6956:13030":{"crate_id":23,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:299:16670":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:11726:9597":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:10962:16694":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"24:4234:6634":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:5167:7252":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"24:4318:6642":{"crate_id":24,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"25:10613:9184":{"crate_id":25,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"24:4248:2281":{"crate_id":24,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"4:13946:14567":{"crate_id":4,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"4:10699:14191":{"crate_id":4,"path":["std","error","Chain"],"kind":"struct"},"26:755:61041":{"crate_id":26,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"25:14267:15761":{"crate_id":25,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"25:13298:15488":{"crate_id":25,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:52296:14137":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:12521:15542":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"12:1100:14528":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:51864:14180":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:4073:6620":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:10493:142":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"23:8266:13079":{"crate_id":23,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:9551:9149":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:51216:16536":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"25:2946:11835":{"crate_id":25,"path":["object","read","elf","note","NoteHeader"],"kind":"trait"},"4:12059:9057":{"crate_id":4,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:13760:56271":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:47535:13581":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:53113:14138":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"25:5393:2722":{"crate_id":25,"path":["object","read","traits","Object","section_by_name"],"kind":"foreign_type"},"1:8143:2309":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"4:15881:2093":{"crate_id":4,"path":["std","fn"],"kind":"primitive"},"1:3355:9105":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"4:1534:14527":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:3483:1639":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"25:12717:9597":{"crate_id":25,"path":["object","elf","Dyn64"],"kind":"struct"},"1:12678:13435":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"5:3295:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:6881:6792":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"4:1497:14521":{"crate_id":4,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:4033:14105":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"25:11085:11839":{"crate_id":25,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:13465:15822":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"25:3248:49398":{"crate_id":25,"path":["object","read","macho","fat","FatArch"],"kind":"trait"},"1:48480:13355":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:50888:16533":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"25:13191:15473":{"crate_id":25,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"24:530:3612":{"crate_id":24,"path":["libc","unix","rlimit"],"kind":"struct"},"1:2837:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"24:4126:2789":{"crate_id":24,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"25:11892:15382":{"crate_id":25,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"4:9464:16861":{"crate_id":4,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:4304:12607":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"26:745:61040":{"crate_id":26,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"23:3391:12097":{"crate_id":23,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:3241:12102":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"25:1351:14973":{"crate_id":25,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:55977:225":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"25:14906:15945":{"crate_id":25,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"24:4334:6644":{"crate_id":24,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"9:0:1662":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:46841:1647":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:47466:2628":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"25:13270:15483":{"crate_id":25,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"4:2031:145":{"crate_id":4,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"4:15870:2082":{"crate_id":4,"path":["std","i32"],"kind":"primitive"},"25:2577:11827":{"crate_id":25,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"5:1091:15134":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"26:695:14999":{"crate_id":26,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:11246:13597":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:10276:13361":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"4:3995:14583":{"crate_id":4,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"4:5792:14484":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:51727:16542":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"22:331:2585":{"crate_id":22,"path":["addr2line","Location"],"kind":"struct"},"4:14479:16384":{"crate_id":4,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:0:1663":{"crate_id":17,"path":["object"],"kind":"module"},"16:6718:14929":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"25:14108:15707":{"crate_id":25,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"23:5043:12628":{"crate_id":23,"path":["gimli","constants","DwAte"],"kind":"struct"},"4:4263:9014":{"crate_id":4,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"17:13205:15758":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"12:1159:14885":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"25:12631:9536":{"crate_id":25,"path":["object","elf","Rela32"],"kind":"struct"},"5:6470:9055":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:24007:16409":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"12:2323:16286":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:13098:15736":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:1934:9053":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"6:5210:7256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"25:14306:15770":{"crate_id":25,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:11993:15450":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"25:11978:15391":{"crate_id":25,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:13801:177":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:24683:2247":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"16:4922:12775":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:23006:14133":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:5594:766":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:38732:3137":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:3351:9103":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:11794:9720":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"23:8080:13066":{"crate_id":23,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"4:11502:3113":{"crate_id":4,"path":["std","path","State"],"kind":"enum"},"4:823:15175":{"crate_id":4,"path":["std","thread","local","os","Key"],"kind":"struct"},"23:8852:13100":{"crate_id":23,"path":["gimli","read","value","Value"],"kind":"enum"},"16:5029:12807":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"25:11289:15025":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"4:13571:14577":{"crate_id":4,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"25:10651:61028":{"crate_id":25,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"23:6947:13029":{"crate_id":23,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:8249:14535":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:13041:15700":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"4:3195:2472":{"crate_id":4,"path":["std","fs","read"],"kind":"function"},"16:7119:13064":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"24:663:3653":{"crate_id":24,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:3143:149":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"23:3264:12092":{"crate_id":23,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"18:801:14984":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"25:12504:9436":{"crate_id":25,"path":["object","elf","SectionHeader64"],"kind":"struct"},"25:11129:11843":{"crate_id":25,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:8565:157":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"23:6860:13026":{"crate_id":23,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"23:7729:13061":{"crate_id":23,"path":["gimli","read","op","Operation"],"kind":"enum"},"23:5334:12719":{"crate_id":23,"path":["gimli","constants","DwAddr"],"kind":"struct"},"23:4036:12114":{"crate_id":23,"path":["gimli","arch","RiscV"],"kind":"struct"},"24:6886:6794":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:6856:14201":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:6136:13032":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"9:157:14788":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"16:5753:13019":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:11981:15449":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:23749:14331":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"5:3767:13581":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"27:1076:11897":{"crate_id":27,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"25:10231:9149":{"crate_id":25,"path":["object","read","util","ByteString"],"kind":"struct"},"26:821:14986":{"crate_id":26,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"25:13807:9199":{"crate_id":25,"path":["object","macho","Relocation"],"kind":"struct"},"1:24717:2244":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:11388:13584":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:37512:13284":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"27:1040:11896":{"crate_id":27,"path":["miniz_oxide","MZError"],"kind":"enum"},"24:6857:6790":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"24:4157:6628":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:13547:15845":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:11714:9596":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"25:12576:9500":{"crate_id":25,"path":["object","elf","Sym64"],"kind":"struct"},"17:510:9160":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"25:11679:16691":{"crate_id":25,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:5522:7306":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"18:782:15251":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:1236:16671":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"25:13343:15493":{"crate_id":25,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"23:6878:2473":{"crate_id":23,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"4:10374:1621":{"crate_id":4,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"25:10254:2669":{"crate_id":25,"path":["object","read","util","StringTable"],"kind":"struct"},"17:2512:11827":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"14:250:2267":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:7856:13096":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:32278:56174":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"24:6629:8049":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"12:1651:14898":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"27:983:11894":{"crate_id":27,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"4:2187:14510":{"crate_id":4,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"4:12130:14556":{"crate_id":4,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:12598:15554":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:49211:13588":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"24:556:3614":{"crate_id":24,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"16:4350:12628":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"5:8236:3124":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"7:0:1459":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:11358:9201":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:10407:11826":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"4:10853:14458":{"crate_id":4,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"25:6193:2661":{"crate_id":25,"path":["object","elf","ELF_NOTE_GNU"],"kind":"static"},"9:927:2744":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"6:6214:7687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:10264:13356":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"16:4535:12663":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"6:4523:6666":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:9933:9184":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"27:1097:11899":{"crate_id":27,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"23:7886:2585":{"crate_id":23,"path":["gimli","read","op","Location"],"kind":"enum"},"25:10399:9179":{"crate_id":25,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:48907:13603":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"25:11343:16683":{"crate_id":25,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:51381:14171":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"24:3898:6602":{"crate_id":24,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"4:1021:13992":{"crate_id":4,"path":["std","thread","Packet"],"kind":"struct"},"23:7191:13045":{"crate_id":23,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"25:13707:15570":{"crate_id":25,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:46329:100":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"4:3343:9008":{"crate_id":4,"path":["std","fs","read_dir"],"kind":"function"},"25:13231:15478":{"crate_id":25,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"23:6412:14902":{"crate_id":23,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"25:13444:15529":{"crate_id":25,"path":["object","macho","DylibModule64"],"kind":"struct"},"24:6193:7686":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:24115:2237":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"25:14824:15918":{"crate_id":25,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"25:11546:15373":{"crate_id":25,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"6:6614:3565":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"12:812:14522":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"4:10793:8993":{"crate_id":4,"path":["std","fs","ReadDir"],"kind":"struct"},"16:6605:13055":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:4387:6650":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"4:14910:9022":{"crate_id":4,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"16:5580:14902":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"4:15213:14616":{"crate_id":4,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"25:13819:15585":{"crate_id":25,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:37488:168":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:50220:180":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"4:2170:9053":{"crate_id":4,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"23:6192:13003":{"crate_id":23,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:23913:14277":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:10317:11828":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:53286:16594":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:47423:2585":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"23:4407:12142":{"crate_id":23,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:7804:13093":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"25:10623:61031":{"crate_id":25,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"4:4436:14470":{"crate_id":4,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:3075:3192":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:13258:15770":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"24:3990:6610":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"12:774:9057":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:45783:188":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:6807:13061":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"25:14509:15815":{"crate_id":25,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"5:3754:3117":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"24:1722:4516":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"24:4053:6618":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"25:5374:2504":{"crate_id":25,"path":["object","read","traits","Object"],"kind":"trait"},"24:6169:7684":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:5400:7269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"25:14684:15861":{"crate_id":25,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"4:15073:14500":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"24:1520:4495":{"crate_id":24,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:10623:16684":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"23:94:2474":{"crate_id":23,"path":["gimli","endianity","NativeEndian"],"kind":"constant"},"1:49628:13428":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"23:3364:12096":{"crate_id":23,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:13192:15753":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"5:2325:14743":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:12468:1922":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"25:14100:15706":{"crate_id":25,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"25:11617:15375":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"24:4255:6635":{"crate_id":24,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"24:5521:6514":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:10609:1288":{"crate_id":1,"path":["core","slice"],"kind":"module"},"6:4425:6655":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:4377:6649":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:6893:6794":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:49700:14050":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:3146:135":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:49881:14061":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"25:14404:15794":{"crate_id":25,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:5371:7266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"23:6216:13004":{"crate_id":23,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:48126:13356":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"28:54:14875":{"crate_id":28,"path":["adler","Adler32"],"kind":"struct"},"6:599:3619":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:9649:9178":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"4:11065:9011":{"crate_id":4,"path":["std","io","IoSlice"],"kind":"struct"},"4:12189:14541":{"crate_id":4,"path":["std","time","Instant"],"kind":"struct"},"23:4997:12607":{"crate_id":23,"path":["gimli","constants","DwForm"],"kind":"struct"},"5:8316:2275":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"23:5615:12775":{"crate_id":23,"path":["gimli","constants","DwLne"],"kind":"struct"},"27:712:14776":{"crate_id":27,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"25:13604:15549":{"crate_id":25,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"25:14144:15736":{"crate_id":25,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:3615:9052":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:13331:15786":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:4823:12751":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"4:7632:14563":{"crate_id":4,"path":["std","process","ChildStdin"],"kind":"struct"},"23:3491:12101":{"crate_id":23,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:5528:6514":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"4:1637:14529":{"crate_id":4,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"11:0:2126":{"crate_id":11,"path":["adler"],"kind":"module"},"20:250:2267":{"crate_id":20,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"24:617:3623":{"crate_id":24,"path":["libc","unix","servent"],"kind":"struct"},"17:10140:9182":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:50064:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"24:5429:15989":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:1908:4657":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"23:6393:13013":{"crate_id":23,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:12028:15454":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"27:234:14795":{"crate_id":27,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"17:12247:15485":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"4:14516:9011":{"crate_id":4,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"6:3972:6452":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:13221:15761":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:49139:13586":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"23:6023:2670":{"crate_id":23,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"18:754:61041":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"4:3621:15155":{"crate_id":4,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:11696:9540":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"25:11263:15022":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"23:7022:13035":{"crate_id":23,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:4762:12740":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:2968:12091":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:6126:13031":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"4:12332:13789":{"crate_id":4,"path":["std","sys","unix","args","Args"],"kind":"struct"},"5:994:14732":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"4:10819:129":{"crate_id":4,"path":["std","fs","FileType"],"kind":"struct"},"6:624:3623":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"24:4364:6648":{"crate_id":24,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:6176:7684":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:46173:14262":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:11045:9187":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"4:8292:13992":{"crate_id":4,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"5:8132:59635":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"25:11779:15032":{"crate_id":25,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:13386:15798":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"4:5933:14661":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:10897:203":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:1942:1976":{"crate_id":1,"path":["core","mem"],"kind":"module"},"1:48444:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"16:7928:13100":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:4040:6615":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:11835:9733":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:12004:15183":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"25:10439:9180":{"crate_id":25,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"4:4695:57191":{"crate_id":4,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"25:14165:15741":{"crate_id":25,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"16:4641:12719":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:49278:13410":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"25:12313:9199":{"crate_id":25,"path":["object","read","Relocation"],"kind":"struct"},"1:4:966":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"16:5561:13013":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"25:14561:15830":{"crate_id":25,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"25:11913:15035":{"crate_id":25,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:11604:9501":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:10635:15341":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:9404:9175":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:51783:16544":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:11208:13583":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:45927:2318":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"17:11100:9190":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:8850:14110":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"25:13006:15446":{"crate_id":25,"path":["object","macho","FatArch32"],"kind":"struct"},"24:5372:7267":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"25:4620:15016":{"crate_id":25,"path":["object","read","pe","file","ImageNtHeaders"],"kind":"trait"},"1:51005:14145":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"25:12103:9191":{"crate_id":25,"path":["object","read","SymbolSection"],"kind":"enum"},"25:13323:15490":{"crate_id":25,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"25:13573:15544":{"crate_id":25,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"12:1118:14529":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:2305:14760":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:5960:14910":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:50056:13401":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"4:8976:2353":{"crate_id":4,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"25:14320:15774":{"crate_id":25,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:5360:13003":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:5241:7237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:10864:15375":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:7453:13084":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:23946:16403":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"4:7618:14562":{"crate_id":4,"path":["std","process","Child"],"kind":"struct"},"17:11572:9499":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"4:14801:15178":{"crate_id":4,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"4:15869:2081":{"crate_id":4,"path":["std","i16"],"kind":"primitive"},"16:4230:12558":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:3339:9102":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:10448:11843":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:1700:4512":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:8376:2365":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:1669:14522":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"4:9858:15175":{"crate_id":4,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"4:11384:3395":{"crate_id":4,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:24411:2239":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:3360:9110":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"25:14517:15816":{"crate_id":25,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"4:8842:16738":{"crate_id":4,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"23:6842:13025":{"crate_id":23,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"26:661:14997":{"crate_id":26,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"25:14366:15780":{"crate_id":25,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"25:13516:15537":{"crate_id":25,"path":["object","macho","UuidCommand"],"kind":"struct"},"25:14418:15796":{"crate_id":25,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:11665:9538":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"23:7313:13047":{"crate_id":23,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:4164:6628":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:10274:13360":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"23:7690:14933":{"crate_id":23,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:9849:61036":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"18:720:15253":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:12073:15464":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"4:15822:2531":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:6999:13062":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"24:6207:7687":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"16:5975:2508":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:46502:14195":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"5:923:14731":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"23:3783:12111":{"crate_id":23,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"23:8316:13081":{"crate_id":23,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"5:3834:15134":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"23:7964:14941":{"crate_id":23,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:4477:12655":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"25:14494:15813":{"crate_id":25,"path":["object","pe","ImageImportByName"],"kind":"struct"},"4:10563:14001":{"crate_id":4,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:3526:2291":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:10179:15340":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:4695:14183":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"4:14979:16387":{"crate_id":4,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"23:7065:13037":{"crate_id":23,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"23:7144:13042":{"crate_id":23,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:49338:13416":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"9:900:11968":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"5:3043:16773":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:13497:15830":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"4:11099:14191":{"crate_id":4,"path":["std","io","Chain"],"kind":"struct"},"23:3468:12100":{"crate_id":23,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:6166:13034":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"25:13668:15567":{"crate_id":25,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:11962:15444":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"4:7666:14565":{"crate_id":4,"path":["std","process","ChildStderr"],"kind":"struct"},"24:5267:7260":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:48693:3113":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"17:10988:16696":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:3195:12100":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:49470:13424":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:51627:14140":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:0:266":{"crate_id":5,"path":["alloc"],"kind":"module"},"20:204:1833":{"crate_id":20,"path":["rustc_demangle","try_demangle"],"kind":"function"},"4:3198:8997":{"crate_id":4,"path":["std","fs","read_to_string"],"kind":"function"},"24:6916:8237":{"crate_id":24,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:13520:15838":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"18:790:14983":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:4671:12724":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"12:429:14890":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:5941:179":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"25:11818:15033":{"crate_id":25,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"24:4452:6659":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:2938:174":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:51143:14158":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"23:3418:12098":{"crate_id":23,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"12:1855:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:10888:14134":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"23:8284:184":{"crate_id":23,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"4:11931:14567":{"crate_id":4,"path":["std","process","CommandArgs"],"kind":"struct"},"1:14022:14318":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"23:7613:13059":{"crate_id":23,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"4:2934:170":{"crate_id":4,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"4:15058:14499":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:6091:7679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"25:14646:15853":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"24:4351:6646":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:0:785":{"crate_id":6,"path":["libc"],"kind":"module"},"1:10266:13357":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"24:1716:4515":{"crate_id":24,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:3483:9053":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"16:4995:12798":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"25:11158:11849":{"crate_id":25,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:2843:12086":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"27:618:15047":{"crate_id":27,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"23:2991:9161":{"crate_id":23,"path":["gimli","read","Section"],"kind":"trait"},"24:562:3615":{"crate_id":24,"path":["libc","unix","hostent"],"kind":"struct"},"25:4250:49399":{"crate_id":25,"path":["object","read","macho","symbol","Nlist"],"kind":"trait"},"25:14883:15932":{"crate_id":25,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:53257:16591":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:22584:56149":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"25:15050:15975":{"crate_id":25,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:9280:2670":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:12262:15488":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:51255:16537":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:13564:15849":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:51990:14172":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:53361:16599":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"4:5800:14485":{"crate_id":4,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"23:4339:12124":{"crate_id":23,"path":["gimli","constants","DwSect"],"kind":"struct"},"4:6790:14416":{"crate_id":4,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"4:5501:14624":{"crate_id":4,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"4:1492:14520":{"crate_id":4,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"4:11355:14618":{"crate_id":4,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:23820:14333":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"23:6644:13022":{"crate_id":23,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"4:11380:14417":{"crate_id":4,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"23:3560:12104":{"crate_id":23,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:32378:56173":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"12:1144:14530":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:6923:8237":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:5717:13017":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:3392:12108":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"25:4637:49479":{"crate_id":25,"path":["object","read","pe","file","ImageOptionalHeader"],"kind":"trait"},"16:6366:3144":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:5766:13020":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"25:15027:15971":{"crate_id":25,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:8107:14733":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"4:11585:3116":{"crate_id":4,"path":["std","path","Components"],"kind":"struct"},"1:45645:9124":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"4:4043:127":{"crate_id":4,"path":["std","io","error","Error"],"kind":"struct"},"25:14584:15838":{"crate_id":25,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"4:5730:9079":{"crate_id":4,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"15:0:1661":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:88:3212":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:47457:2842":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"4:10574:57355":{"crate_id":4,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:11254:9197":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"4:3192:8994":{"crate_id":4,"path":["std","fs","DirEntry"],"kind":"struct"},"16:5231:12984":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"4:14987:14575":{"crate_id":4,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:1311:14973":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"24:4516:6666":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:3957:6606":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"25:14200:15742":{"crate_id":25,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:3544:9050":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:45885:9120":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"4:2437:13783":{"crate_id":4,"path":["std","env","SplitPaths"],"kind":"struct"},"1:2492:2293":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:47829:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"22:0:1661":{"crate_id":22,"path":["addr2line"],"kind":"module"},"25:14988:15962":{"crate_id":25,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"4:8477:192":{"crate_id":4,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:10253:11831":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"24:6880:6793":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"4:14897:14570":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"25:14450:15802":{"crate_id":25,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:48664:16524":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:13227:26625":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"4:15863:2077":{"crate_id":4,"path":["std","tuple"],"kind":"primitive"},"1:32177:9048":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"25:3988:9161":{"crate_id":25,"path":["object","read","macho","section","Section"],"kind":"trait"},"1:3388:9112":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"23:8302:13080":{"crate_id":23,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"18:849:14988":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:12632:15567":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"4:903:14000":{"crate_id":4,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"4:4395:14467":{"crate_id":4,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:6014:13026":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"4:1161:42302":{"crate_id":4,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"4:6688:9077":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"22:248:3147":{"crate_id":22,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"27:796:14815":{"crate_id":27,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"4:6866:9084":{"crate_id":4,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:56016:225":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:45721:186":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:49185:13592":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"24:154:3279":{"crate_id":24,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:4023:6613":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:49769:14058":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"12:747:3117":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"25:13492:15534":{"crate_id":25,"path":["object","macho","TwolevelHint"],"kind":"struct"},"25:11388:15343":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"24:6845:6788":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:2169:567":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"23:7279:13046":{"crate_id":23,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"25:12741:9709":{"crate_id":25,"path":["object","elf","Verdef"],"kind":"struct"},"6:6221:7688":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12168:15346":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:48656:14019":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:50297:14236":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"4:1153:1635":{"crate_id":4,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"25:14286:15762":{"crate_id":25,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:10656:15343":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"24:5340:7264":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"24:3874:6600":{"crate_id":24,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:11026:9186":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:53050:14173":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"25:9944:9147":{"crate_id":25,"path":["object","endian","LittleEndian"],"kind":"struct"},"25:9925:9146":{"crate_id":25,"path":["object","endian","Endianness"],"kind":"enum"},"1:3725:14021":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:24751:2249":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:23655:14127":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"7:38:2416":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"25:13257:15481":{"crate_id":25,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:24649:2246":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"5:6683:14701":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"9:749:14778":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"24:6637:8050":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:5197:7255":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"25:10641:9185":{"crate_id":25,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"12:160:14889":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:3868:6599":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"5:6252:9060":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:9809:61033":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:4707:14184":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:11231:9196":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:1708:4513":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"24:6851:6789":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:9729:61030":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:50052:13400":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:32218:13680":{"crate_id":1,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"4:6793:9087":{"crate_id":4,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:13780:15924":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:6252:13044":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"4:11595:3117":{"crate_id":4,"path":["std","path","Iter"],"kind":"struct"},"1:49619:13427":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"26:0:2128":{"crate_id":26,"path":["memchr"],"kind":"module"},"16:6780:13060":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:11653:9537":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:11738:9706":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"25:9717:9167":{"crate_id":25,"path":["object","common","SymbolScope"],"kind":"enum"},"1:2201:1037":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"6:4371:6648":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"4:7978:15157":{"crate_id":4,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"6:1729:4516":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:2754:12082":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:8101:9057":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"25:13154:15469":{"crate_id":25,"path":["object","macho","Section64"],"kind":"struct"},"6:4272:6636":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"24:4286:6638":{"crate_id":24,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:13180:15748":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:8330:14202":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"23:3445:12099":{"crate_id":23,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"25:13530:15538":{"crate_id":25,"path":["object","macho","RpathCommand"],"kind":"struct"},"25:12687:9540":{"crate_id":25,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:24100:2250":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:12051:15457":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:6032:2473":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"23:3314:12094":{"crate_id":23,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"23:6178:13002":{"crate_id":23,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"4:8642:2339":{"crate_id":4,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:51404:14174":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"23:3799:12112":{"crate_id":23,"path":["gimli","arch","Arm"],"kind":"struct"},"25:11597:9182":{"crate_id":25,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:1596:4503":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"25:9866:9172":{"crate_id":25,"path":["object","common","SectionFlags"],"kind":"enum"},"1:46464:2407":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"25:10859:15340":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"23:7527:13055":{"crate_id":23,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:3877:14460":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:11118:9191":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:519:3609":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:4157:14963":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:46281:14406":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:3313:9101":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"14:244:2262":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:11328:9199":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"25:9606:9164":{"crate_id":25,"path":["object","common","SectionKind"],"kind":"enum"},"1:46600:14210":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"25:14020:15645":{"crate_id":25,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"24:4094:6623":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:10117:14969":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"20:11:1834":{"crate_id":20,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"6:1665:4509":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:10571:15026":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"13:232:16279":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:24479:2241":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"26:783:15251":{"crate_id":26,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"21:0:1629":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"1:46511:14196":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:14183:2298":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"17:9528:1957":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"25:14863:15929":{"crate_id":25,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"4:11189:14427":{"crate_id":4,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"25:4187:16672":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"23:8391:13085":{"crate_id":23,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"24:524:3611":{"crate_id":24,"path":["libc","unix","timespec"],"kind":"struct"},"23:7871:14937":{"crate_id":23,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"24:6892:6795":{"crate_id":24,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:10272:179":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"4:5650:1972":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"4:7652:14564":{"crate_id":4,"path":["std","process","ChildStdout"],"kind":"struct"},"16:5815:13022":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:5295:12053":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"4:10931:14580":{"crate_id":4,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"23:8129:13070":{"crate_id":23,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"4:15086:14505":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"5:2213:14686":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:46572:14207":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"25:10012:2721":{"crate_id":25,"path":["object","endian","U32Bytes"],"kind":"struct"},"23:5648:12783":{"crate_id":23,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:45673:2292":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"25:12085:9190":{"crate_id":25,"path":["object","read","SymbolIndex"],"kind":"struct"},"4:12114:14555":{"crate_id":4,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:50044:13398":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"4:1511:14524":{"crate_id":4,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:48681:146":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"4:1079:14489":{"crate_id":4,"path":["std","ascii","AsciiExt"],"kind":"trait"},"25:14079:15697":{"crate_id":25,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"25:12262:9150":{"crate_id":25,"path":["object","read","CodeView"],"kind":"struct"},"16:6238:13043":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"6:1744:4518":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:4449:6658":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"5:3365:14508":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:32212:9049":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"12:1180:14886":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:49574:3142":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"4:15873:2085":{"crate_id":4,"path":["std","u8"],"kind":"primitive"},"1:4719:102":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:49061:14310":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"27:157:14788":{"crate_id":27,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"4:11281:14618":{"crate_id":4,"path":["std","net","tcp","Incoming"],"kind":"struct"},"5:1472:14529":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"23:6770:179":{"crate_id":23,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"4:11451:3103":{"crate_id":4,"path":["std","path","Prefix"],"kind":"enum"},"4:5374:14616":{"crate_id":4,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"4:9066:2347":{"crate_id":4,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"4:6940:9085":{"crate_id":4,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"25:12669:9539":{"crate_id":25,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"26:858:14989":{"crate_id":26,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"4:15880:2092":{"crate_id":4,"path":["std","reference"],"kind":"primitive"},"4:11287:14619":{"crate_id":4,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:11458:2673":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"4:15838:1628":{"crate_id":4,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"25:14929:15946":{"crate_id":25,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"12:949:14525":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"25:5464:9158":{"crate_id":25,"path":["object","read","traits","ObjectSymbol"],"kind":"trait"},"4:12669:8993":{"crate_id":4,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"25:12467:9213":{"crate_id":25,"path":["object","elf","Ident"],"kind":"struct"},"23:6288:13008":{"crate_id":23,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:11159:9193":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:4386:12639":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"4:10690:13785":{"crate_id":4,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:6964:2585":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"4:11347:14629":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"24:512:3609":{"crate_id":24,"path":["libc","unix","utimbuf"],"kind":"struct"},"4:11292:14620":{"crate_id":4,"path":["std","net","Shutdown"],"kind":"enum"},"5:1195:59800":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"23:7499:13053":{"crate_id":23,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:7360:184":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"25:5458:9159":{"crate_id":25,"path":["object","read","traits","ObjectSymbolTable"],"kind":"trait"},"4:3611:14457":{"crate_id":4,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:4052:6617":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"11:46:15227":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"15:269:3151":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:5159:7251":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"25:14209:15746":{"crate_id":25,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:3772:12175":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:10061:16676":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"24:6021:4460":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:13163:15746":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:23008:14132":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:13073:14053":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"4:7289:16737":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:10304:11829":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"4:11406:9082":{"crate_id":4,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:13865:15946":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"18:694:14999":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"25:11139:11877":{"crate_id":25,"path":["object","read","elf","note","Note"],"kind":"struct"},"23:5722:12807":{"crate_id":23,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:46643:14214":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"25:2375:11833":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"5:3039:16772":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"25:11011:9182":{"crate_id":25,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:12221:15481":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:9896:61034":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:49296:13412":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:10538:14016":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"23:7288:3144":{"crate_id":23,"path":["gimli","read","line","LineRow"],"kind":"struct"},"25:10904:16680":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:1639:14519":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"25:9976:9151":{"crate_id":25,"path":["object","endian","U16Bytes"],"kind":"struct"},"23:8140:13071":{"crate_id":23,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:9719:9179":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:3411:9117":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:12738:13434":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"23:8438:13087":{"crate_id":23,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"4:11122:13418":{"crate_id":4,"path":["std","io","Split"],"kind":"struct"},"4:8928:14644":{"crate_id":4,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"17:9368:9174":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"25:220:9144":{"crate_id":25,"path":["object","read","read_ref","ReadRef"],"kind":"trait"},"17:10788:16685":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"25:12419:2672":{"crate_id":25,"path":["object","elf","FileHeader32"],"kind":"struct"},"24:6874:6792":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"25:10409:61030":{"crate_id":25,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"25:13311:15489":{"crate_id":25,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:6620:14924":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"26:812:14985":{"crate_id":26,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:9886:9183":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:51350:14167":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"24:4370:6649":{"crate_id":24,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"4:8649:2340":{"crate_id":4,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"}},"external_crates":{"26":{"name":"memchr","html_root_url":null},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"rustc_demangle","html_root_url":null},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"libc","html_root_url":null},"25":{"name":"object","html_root_url":null},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"28":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"27":{"name":"miniz_oxide","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"gimli","html_root_url":null},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"addr2line","html_root_url":null},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"4":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":16}