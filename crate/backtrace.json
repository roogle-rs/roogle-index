{"root":"0:0","crate_version":"0.3.64","includes_private":false,"index":{"1:12249":{"id":"1:12249","crate_id":1,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12251","1:12252","1:12253","1:12254","1:12255","1:12256","1:12257"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:20":{"id":"0:20","crate_id":0,"name":"trace","span":{"filename":"src/backtrace/mod.rs","begin":[51,0],"end":[54,1]},"visibility":"public","docs":"Inspects the current call-stack, passing all active frames into the closure\nprovided to calculate a stack trace.\n\nThis function is the workhorse of this library in calculating the stack\ntraces for a program. The given closure `cb` is yielded instances of a\n`Frame` which represent information about that call frame on the stack. The\nclosure is yielded frames in a top-down fashion (most recently called\nfunctions first).\n\nThe closure's return value is an indication of whether the backtrace should\ncontinue. A return value of `false` will terminate the backtrace and return\nimmediately.\n\nOnce a `Frame` is acquired you will likely want to call `backtrace::resolve`\nto convert the `ip` (instruction pointer) or symbol address to a `Symbol`\nthrough which the name and/or filename/line number can be learned.\n\nNote that this is a relatively low-level function and if you'd like to, for\nexample, capture a backtrace to be inspected later, then the `Backtrace`\ntype may be more appropriate.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        // ...\n\n        true // continue the backtrace\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3262","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:1:2619-0:175":{"id":"b:1:2619-0:175","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3108":{"id":"1:3108","crate_id":1,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3109","1:3110"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:1:2947-0:100":{"id":"b:1:2947-0:100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:841":{"id":"0:841","crate_id":0,"name":"symbol_address","span":{"filename":"src/capture.rs","begin":[284,4],"end":[286,5]},"visibility":"public","docs":"Same as `Frame::symbol_address`\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:236":{"id":"b:1:2622-0:236","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:3026-0:729":{"id":"a:1:3026-0:729","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:667-0:864":{"id":"b:5:667-0:864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:669","5:670","5:671"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3477":{"id":"1:3477","crate_id":1,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3479"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:1:3736-0:161":{"id":"b:1:3736-0:161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2958-0:88":{"id":"b:1:2958-0:88","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12178":{"id":"1:12178","crate_id":1,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12179","1:12180"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3299":{"id":"1:3299","crate_id":1,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3301","1:3302","1:3303"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12680":{"id":"1:12680","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"4:15818","prim@char":"4:15813","`DoubleEndedIterator`":"1:7746","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"1:48055","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3736-0:729":{"id":"b:1:3736-0:729","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:68":{"id":"0:68","crate_id":0,"name":"resolve","span":{"filename":"src/symbolize/mod.rs","begin":[61,0],"end":[64,1]},"visibility":"public","docs":"Resolve an address to a symbol, passing the symbol to the specified\nclosure.\n\nThis function will look up the given address in areas such as the local\nsymbol table, dynamic symbol table, or DWARF debug info (depending on the\nactivated implementation) to find symbols to yield.\n\nThe closure may not be called if resolution could not be performed, and it\nalso may be called more than once in the case of inlined functions.\n\nSymbols yielded represent the execution at the specified `addr`, returning\nfile/line pairs for that address (if available).\n\nNote that if you have a `Frame` then it's recommended to use the\n`resolve_frame` function instead of this one.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        let ip = frame.ip();\n\n        backtrace::resolve(ip, |symbol| {\n            // ...\n        });\n\n        false // only look at the top frame\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["addr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3262","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:172":{"id":"0:172","crate_id":0,"name":"add_context","span":{"filename":"src/print.rs","begin":[63,4],"end":[67,5]},"visibility":"public","docs":"Prints a preamble for the backtrace about to be printed.\n\nThis is required on some platforms for backtraces to be fully\nsymbolicated later, and otherwise this should just be the first method\nyou call after creating a `BacktraceFmt`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:5241":{"id":"25:5241","crate_id":25,"name":"Object","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5244","25:5245","25:5246","25:5247","25:5248","25:5249","25:5250","25:5251","25:5252","25:5253","25:5254","25:5255","25:5256","25:5257","25:5258","25:5259","25:5260","25:5261","25:5262","25:5263","25:5264","25:5265","25:5266","25:5267","25:5268","25:5269","25:5270","25:5271","25:5273","25:5274","25:5275","25:5276","25:5277","25:5279","25:5280","25:5281","25:5282","25:5283","25:5284","25:5285"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}},{"name":"'file","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'data","bounds":[{"outlives":"'file"}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5353","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"4:5665":{"id":"4:5665","crate_id":4,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5666","4:5667"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:3014-0:729":{"id":"a:1:3014-0:729","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3256":{"id":"1:3256","crate_id":1,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3257"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12615":{"id":"1:12615","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:45964"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3014":{"id":"1:3014","crate_id":1,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12626":{"id":"1:12626","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"4:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"1:47809","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13420":{"id":"1:13420","crate_id":1,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13421","1:13422","1:13423","1:13424","1:13425","1:13426","1:13427"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2961":{"id":"1:2961","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:37397","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:844":{"id":"0:844","crate_id":0,"name":"symbols","span":{"filename":"src/capture.rs","begin":[314,4],"end":[316,5]},"visibility":"public","docs":"Returns the list of symbols that this frame corresponds to.\n\nNormally there is only one symbol per frame, but sometimes if a number\nof functions are inlined into one frame then multiple symbols will be\nreturned. The first symbol listed is the \"innermost function\", whereas\nthe last symbol is the outermost (last caller).\n\nNote that if this frame came from an unresolved backtrace then this will\nreturn an empty list.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:970":{"id":"4:970","crate_id":4,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:971","4:972","4:973","4:974","4:975","4:976","4:977"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:92":{"id":"0:92","crate_id":0,"name":"addr","span":{"filename":"src/symbolize/mod.rs","begin":[212,4],"end":[214,5]},"visibility":"public","docs":"Returns the starting address of this function.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3055-0:869":{"id":"a:1:3055-0:869","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:9532":{"id":"1:9532","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9533","1:9534","1:9536"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12683":{"id":"1:12683","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:12239","prim@char":"4:15813","str::rmatch_indices":"4:15818","`DoubleEndedIterator`":"1:7746"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"1:47983","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5753":{"id":"4:5753","crate_id":4,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5754","4:5755","4:5756","4:5757","4:5758","4:5759","4:5760","4:5761","4:5762","4:5763","4:5764","4:5765","4:5766","4:5767","4:5768","4:5769"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3457":{"id":"1:3457","crate_id":1,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3388","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:8621-0:884":{"id":"a:1:8621-0:884","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2622-0:88":{"id":"b:1:2622-0:88","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12703":{"id":"1:12703","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:15813","self::pattern":"1:12239"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5797":{"id":"4:5797","crate_id":4,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5798"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2923":{"id":"1:2923","crate_id":1,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2925","1:2926"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12631":{"id":"1:12631","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.4.0\", reason = \"use lines() instead now\")]","#[inline]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"1:48097","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:2406":{"id":"25:2406","crate_id":25,"name":"Sym","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2407","25:2408","25:2409","25:2410","25:2411","25:2412","25:2413","25:2414","25:2415","25:2416","25:2417","25:2418","25:2421","25:2422"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:12625":{"id":"1:12625","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"4:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"1:47803","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:827":{"id":"0:827","crate_id":0,"name":"resolve","span":{"filename":"src/capture.rs","begin":[218,4],"end":[240,5]},"visibility":"public","docs":"If this backtrace was created from `new_unresolved` then this function\nwill resolve all addresses in the backtrace to their symbolic names.\n\nIf this backtrace has been previously resolved or was created through\n`new`, this function does nothing.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:114":{"id":"0:114","crate_id":0,"name":"clear_symbol_cache","span":{"filename":"src/symbolize/mod.rs","begin":[459,0],"end":[464,1]},"visibility":"public","docs":"Attempt to reclaim that cached memory used to symbolicate addresses.\n\nThis method will attempt to release any global data structures that have\notherwise been cached globally or in the thread which typically represent\nparsed DWARF information or similar.\n\n# Caveats\n\nWhile this function is always available it doesn't actually do anything on\nmost implementations. Libraries like dbghelp or libbacktrace do not provide\nfacilities to deallocate state and manage the allocated memory. For now the\n`gimli-symbolize` feature of this crate is the only feature where this\nfunction has any effect.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:107":{"id":"0:107","crate_id":0,"name":"new","span":{"filename":"src/symbolize/mod.rs","begin":[326,4],"end":[341,5]},"visibility":"public","docs":"Creates a new symbol name from the raw underlying bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bytes",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:161":{"id":"0:161","crate_id":0,"name":"BacktraceFmt","span":{"filename":"src/print.rs","begin":[17,0],"end":[23,1]},"visibility":"public","docs":"A formatter for backtraces.\n\nThis type can be used to print a backtrace regardless of where the backtrace\nitself comes from. If you have a `Backtrace` type then its `Debug`\nimplementation already uses this printing format.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:168","a:1:8621-0:161","a:1:3026-0:161","a:1:3014-0:161","a:1:8620-0:161","a:1:3055-0:161","b:1:2619-0:161","b:1:2943-0:161","b:1:3736-0:161","b:1:2622-0:161","b:1:2958-0:161","b:1:2953-0:161","b:1:2947-0:161"]}},"a:1:3055-0:864":{"id":"a:1:3055-0:864","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3474":{"id":"1:3474","crate_id":1,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3476"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3469","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12696":{"id":"1:12696","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason = \"superseded by `trim_end`\",\nsuggestion = \"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2947-0:88":{"id":"b:1:2947-0:88","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3245":{"id":"1:3245","crate_id":1,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3246"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3232","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"23:62":{"id":"23:62","crate_id":23,"name":"Endianity","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:63","23:64","23:65","23:67","23:69","23:71","23:73","23:74","23:75","23:76","23:77","23:78","23:79","23:80"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:2992","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:855":{"id":"0:855","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[371,0],"end":[406,1]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:856"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:7702":{"id":"1:7702","crate_id":1,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7703","1:7704","1:7705"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:1:2947-0:175":{"id":"b:1:2947-0:175","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:3014-0:161":{"id":"a:1:3014-0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"1:2914":{"id":"1:2914","crate_id":1,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2916"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"1:3022":{"id":"1:3022","crate_id":1,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:173":{"id":"0:173","crate_id":0,"name":"frame","span":{"filename":"src/print.rs","begin":[74,4],"end":[79,5]},"visibility":"public","docs":"Adds a frame to the backtrace output.\n\nThis commit returns an RAII instance of a `BacktraceFrameFmt` which can be used\nto actually print a frame, and on destruction it will increment the\nframe counter.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3102":{"id":"1:3102","crate_id":1,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3104","1:3105"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:96":{"id":"0:96","crate_id":0,"name":"lineno","span":{"filename":"src/symbolize/mod.rs","begin":[234,4],"end":[236,5]},"visibility":"public","docs":"Returns the line number for where this symbol is currently executing.\n\nThis return value is typically `Some` if `filename` returns `Some`, and\nis consequently subject to similar caveats.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8167":{"id":"1:8167","crate_id":1,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7894","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:753":{"id":"0:753","crate_id":0,"name":null,"span":{"filename":"src/print.rs","begin":[26,26],"end":[26,35]},"visibility":{"restricted":{"parent":"0:136","path":"::print"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"1:3022","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:132":{"id":"0:132","crate_id":0,"name":"fmt","span":{"filename":"src/types.rs","begin":[80,4],"end":[82,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:1664":{"id":"23:1664","crate_id":23,"name":"LineProgram","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1667","23:1668"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null}}},{"name":"Offset","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Offset","self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Offset","binding":{"equality":{"type":{"kind":"generic","inner":"Offset"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"generic","inner":"Offset"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReaderOffset","id":"23:1185","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"bounds":[],"implementors":[]}},"1:12693":{"id":"1:12693","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\nassert_eq!(\" Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3128":{"id":"1:3128","crate_id":1,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3130"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3116":{"id":"1:3116","crate_id":1,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3118"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:740":{"id":"0:740","crate_id":0,"name":"PrintFmt","span":{"filename":"src/print.rs","begin":[27,0],"end":[34,1]},"visibility":"public","docs":"The styles of printing that we can print","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:741","0:743"],"impls":["a:1:8621-0:740","a:1:3026-0:740","a:1:3014-0:740","a:1:8620-0:740","a:1:3055-0:740","b:1:2619-0:740","b:1:2943-0:740","b:1:3736-0:740","b:1:2622-0:740","b:1:2958-0:740","b:1:2953-0:740","b:1:2947-0:740","b:5:667-0:740","0:747","0:748","0:750","0:751","0:753","0:754"]}},"a:1:8621-0:236":{"id":"a:1:8621-0:236","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:236":{"id":"0:236","crate_id":0,"name":"Frame","span":{"filename":"src/backtrace/mod.rs","begin":[76,0],"end":[78,1]},"visibility":"public","docs":"A trait representing one frame of a backtrace, yielded to the `trace`\nfunction of this crate.\n\nThe tracing function's closure will be yielded frames, and the frame is\nvirtually dispatched as the underlying implementation is not always known\nuntil runtime.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:24","a:1:8621-0:236","a:1:3026-0:236","a:1:3014-0:236","a:1:8620-0:236","a:1:3055-0:236","b:1:2619-0:236","b:1:2943-0:236","b:1:3736-0:236","b:1:2622-0:236","b:1:2958-0:236","b:1:2953-0:236","b:1:2947-0:236","b:5:667-0:236","0:238","0:29","0:835"]}},"1:2962":{"id":"1:2962","crate_id":1,"name":"try_from","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:46091","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:1853":{"id":"25:1853","crate_id":25,"name":"ProgramHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:1854","25:1855","25:1856","25:1857","25:1858","25:1859","25:1860","25:1861","25:1862","25:1863","25:1864","25:1865","25:1866","25:1869","25:1873","25:1876","25:1879"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:2947-0:884":{"id":"b:1:2947-0:884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"4:7786":{"id":"4:7786","crate_id":4,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:7787"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"23:592":{"id":"23:592","crate_id":23,"name":"UnwindContextStorage","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:594","23:595"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"bounds":[],"implementors":[]}},"23:1185":{"id":"23:1185","crate_id":23,"name":"ReaderOffset","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1186","23:1187","23:1188","23:1189","23:1190","23:1191","23:1192","23:1193"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"1:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"1:9789","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"1:3081","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AddAssign","id":"1:3112","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"1:3086","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"25:5330":{"id":"25:5330","crate_id":25,"name":"ObjectSymbol","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5332","25:5333","25:5334","25:5335","25:5336","25:5337","25:5338","25:5339","25:5340","25:5341","25:5342","25:5343","25:5344","25:5345","25:5346","25:5347"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5353","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:8620":{"id":"1:8620","crate_id":1,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:9603":{"id":"1:9603","crate_id":1,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9604"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:109":{"id":"0:109","crate_id":0,"name":"as_str","span":{"filename":"src/symbolize/mod.rs","begin":[346,4],"end":[351,5]},"visibility":"public","docs":"Returns the raw (mangled) symbol name as a `str` if the symbol is valid utf-8.\n\nUse the `Display` implementation if you want the demangled version.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2619-0:740":{"id":"b:1:2619-0:740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:3026-0:161":{"id":"a:1:3026-0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:1:8620-0:729":{"id":"a:1:8620-0:729","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:3055-0:175":{"id":"a:1:3055-0:175","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'fmt","kind":{"lifetime":{"outlives":[]}}},{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'a","bounds":[{"outlives":"'fmt"}]}},{"region_predicate":{"lifetime":"'b","bounds":[{"outlives":"'fmt"}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3124":{"id":"1:3124","crate_id":1,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3126"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"5:669":{"id":"5:669","crate_id":5,"name":"Owned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"T"},"generics":{"params":[],"where_predicates":[]}}},"1:9597":{"id":"1:9597","crate_id":1,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9598"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12642":{"id":"1:12642","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"4:15813","self::pattern":"1:12239","`None`":"1:45964"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2849":{"id":"1:2849","crate_id":1,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:2848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:2622-0:884":{"id":"b:1:2622-0:884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:28":{"id":"0:28","crate_id":0,"name":"module_base_address","span":{"filename":"src/backtrace/mod.rs","begin":[114,4],"end":[116,5]},"visibility":"public","docs":"Returns the base address of the module to which the frame belongs.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12650":{"id":"1:12650","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::rsplit":"4:15818","`DoubleEndedIterator`":"1:7746","str::split_whitespace":"4:15818","self::pattern":"1:12239","prim@char":"4:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"1:47833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:4991":{"id":"4:4991","crate_id":4,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4992","4:4993"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"5:5421":{"id":"5:5421","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5742":{"id":"5:5742","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5743"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"25:2852":{"id":"25:2852","crate_id":25,"name":"CompressionHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2853","25:2854","25:2855","25:2856","25:2857"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:849":{"id":"0:849","crate_id":0,"name":"addr","span":{"filename":"src/capture.rs","begin":[336,4],"end":[338,5]},"visibility":"public","docs":"Same as `Symbol::addr`\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12727":{"id":"1:12727","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{}\", c);\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"4:15813"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"1:48150","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12646":{"id":"1:12646","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the rightmost match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"4:15813","`None`":"1:45964","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3026-0:236":{"id":"a:1:3026-0:236","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2953-0:100":{"id":"b:1:2953-0:100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:861":{"id":"0:861","crate_id":0,"name":"fmt","span":{"filename":"src/capture.rs","begin":[415,4],"end":[420,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3014-0:100":{"id":"a:1:3014-0:100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:187":{"id":"0:187","crate_id":0,"name":"print_raw_with_column","span":{"filename":"src/print.rs","begin":[181,4],"end":[199,5]},"visibility":"public","docs":"Adds a raw frame to the backtrace output, including column information.\n\nThis method, like the previous, takes the raw arguments in case\nthey're being source from different locations. Note that this may be\ncalled multiple times for one frame.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["frame_ip",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["symbol_name",{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["filename",{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["lineno",{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}],["colno",{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3736-0:236":{"id":"b:1:3736-0:236","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"25:5316":{"id":"25:5316","crate_id":25,"name":"ObjectComdat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5318","25:5319","25:5320","25:5321","25:5322","25:5323"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5353","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:183":{"id":"0:183","crate_id":0,"name":"backtrace_symbol","span":{"filename":"src/print.rs","begin":[128,4],"end":[146,5]},"visibility":"public","docs":"Prints a `BacktraceSymbol` within a `BacktraceFrame`.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["frame",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["symbol",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6798":{"id":"4:6798","crate_id":4,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6799","4:6800"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:12621":{"id":"1:12621","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"4:15818","crate::ops::Index":"1:3317","str::slice_mut_unchecked":"4:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.29.0\", reason =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]","#[inline]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:729":{"id":"b:1:2622-0:729","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:834":{"id":"0:834","crate_id":0,"name":"from","span":{"filename":"src/capture.rs","begin":[244,4],"end":[249,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["frames",{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"27:606":{"id":"27:606","crate_id":27,"name":"ResetPolicy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["27:607"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:842":{"id":"0:842","crate_id":0,"name":"module_base_address","span":{"filename":"src/capture.rs","begin":[294,4],"end":[298,5]},"visibility":"public","docs":"Same as `Frame::module_base_address`\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3026-0:864":{"id":"a:1:3026-0:864","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:182":{"id":"0:182","crate_id":0,"name":"backtrace_frame","span":{"filename":"src/print.rs","begin":[110,4],"end":[119,5]},"visibility":"public","docs":"Prints a `BacktraceFrame` with this frame formatter.\n\nThis will recursively print all `BacktraceSymbol` instances within the\n`BacktraceFrame`.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["frame",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2943-0:869":{"id":"b:1:2943-0:869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3469":{"id":"1:3469","crate_id":1,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3470","1:3471","1:3472","1:3473"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"1:3474","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3469","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:8621-0:729":{"id":"a:1:8621-0:729","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:739":{"id":"0:739","crate_id":0,"name":"fmt","span":{"filename":"src/types.rs","begin":[16,9],"end":[16,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7746":{"id":"1:7746","crate_id":1,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7747","1:7748","1:7749","1:7750","1:7754","1:7757"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7894","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:2958-0:175":{"id":"b:1:2958-0:175","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:8620-0:884":{"id":"a:1:8620-0:884","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2958-0:236":{"id":"b:1:2958-0:236","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12677":{"id":"1:12677","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"1:7746","self::pattern":"1:12239","str::matches":"4:15818","prim@char":"4:15813"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"1:48037","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:22834":{"id":"1:22834","crate_id":1,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:22835"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22830","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:3055-0:161":{"id":"a:1:3055-0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'b","bounds":[{"outlives":"'a"}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:12613":{"id":"1:12613","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:45964"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8620-0:869":{"id":"a:1:8620-0:869","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"25:4584":{"id":"25:4584","crate_id":25,"name":"ImageOptionalHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4585","25:4586","25:4587","25:4588","25:4589","25:4590","25:4591","25:4592","25:4593","25:4594","25:4595","25:4596","25:4597","25:4598","25:4599","25:4600","25:4601","25:4602","25:4603","25:4604","25:4605","25:4606","25:4607","25:4608","25:4609","25:4610","25:4611","25:4612","25:4613","25:4614"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"4:6870":{"id":"4:6870","crate_id":4,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6871"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:238":{"id":"0:238","crate_id":0,"name":null,"span":{"filename":"src/backtrace/mod.rs","begin":[75,9],"end":[75,14]},"visibility":{"restricted":{"parent":"0:13","path":"::backtrace"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:239"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:6470":{"id":"4:6470","crate_id":4,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6471","4:6472","4:6473","4:6474","4:6475","4:6476"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:22191":{"id":"1:22191","crate_id":1,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"1:22834","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22182","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:0":{"id":"0:0","crate_id":0,"name":"backtrace","span":{"filename":"src/lib.rs","begin":[1,0],"end":[193,12]},"visibility":"public","docs":"A library for acquiring a backtrace at runtime\n\nThis library is meant to supplement the `RUST_BACKTRACE=1` support of the\nstandard library by allowing an acquisition of a backtrace at runtime\nprogrammatically. The backtraces generated by this library do not need to be\nparsed, for example, and expose the functionality of multiple backend\nimplementations.\n\n# Usage\n\nFirst, add this to your Cargo.toml\n\n```toml\n[dependencies]\nbacktrace = \"0.3\"\n```\n\nNext:\n\n```\nfn main() {\n# // Unsafe here so test passes on no_std.\n# #[cfg(feature = \"std\")] {\n    backtrace::trace(|frame| {\n        let ip = frame.ip();\n        let symbol_address = frame.symbol_address();\n\n        // Resolve this instruction pointer to a symbol name\n        backtrace::resolve_frame(frame, |symbol| {\n            if let Some(name) = symbol.name() {\n                // ...\n            }\n            if let Some(filename) = symbol.filename() {\n                // ...\n            }\n        });\n\n        true // keep going to the next frame\n    });\n}\n# }\n```\n\n# Backtrace accuracy\n\nThis crate implements best-effort attempts to get the native backtrace. This\nis not always guaranteed to work, and some platforms don't return any\nbacktrace at all. If your application requires accurate backtraces then it's\nrecommended to closely evaluate this crate to see whether it's suitable\nfor your use case on your target platforms.\n\nEven on supported platforms, there's a number of reasons that backtraces may\nbe less-than-accurate, including but not limited to:\n\n* Unwind information may not be available. This crate primarily implements\n  backtraces by unwinding the stack, but not all functions may have\n  unwinding information (e.g. DWARF unwinding information).\n\n* Rust code may be compiled without unwinding information for some\n  functions. This can also happen for Rust code compiled with\n  `-Cpanic=abort`. You can remedy this, however, with\n  `-Cforce-unwind-tables` as a compiler option.\n\n* Unwind information may be inaccurate or corrupt. In the worst case\n  inaccurate unwind information can lead this library to segfault. In the\n  best case inaccurate information will result in a truncated stack trace.\n\n* Backtraces may not report filenames/line numbers correctly due to missing\n  or corrupt debug information. This won't lead to segfaults unlike corrupt\n  unwinding information, but missing or malformed debug information will\n  mean that filenames and line numbers will not be available. This may be\n  because debug information wasn't generated by the compiler, or it's just\n  missing on the filesystem.\n\n* Not all platforms are supported. For example there's no way to get a\n  backtrace on WebAssembly at the moment.\n\n* Crate features may be disabled. Currently this crate supports using Gimli\n  libbacktrace on non-Windows platforms for reading debuginfo for\n  backtraces. If both crate features are disabled, however, then these\n  platforms will generate a backtrace but be unable to generate symbols for\n  it.\n\nIn most standard workflows for most standard platforms you generally don't\nneed to worry about these caveats. We'll try to fix ones where we can over\ntime, but otherwise it's important to be aware of the limitations of\nunwinding-based backtraces!","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/backtrace\")]","#![deny(missing_docs)]","#![no_std]","#![warn(rust_2018_idioms)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:22","0:236","0:86","0:84","0:88","0:100","0:729","0:114","0:161","0:175","0:740","0:20","0:68","0:70","0:864","0:869","0:884"]}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"src/backtrace/mod.rs","begin":[119,0],"end":[126,1]},"visibility":{"restricted":{"parent":"0:13","path":"::backtrace"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:30"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2953-0:161":{"id":"b:1:2953-0:161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:853":{"id":"0:853","crate_id":0,"name":"lineno","span":{"filename":"src/capture.rs","begin":[356,4],"end":[358,5]},"visibility":"public","docs":"Same as `Symbol::lineno`\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:186":{"id":"0:186","crate_id":0,"name":"print_raw","span":{"filename":"src/print.rs","begin":[166,4],"end":[174,5]},"visibility":"public","docs":"Adds a raw frame to the backtrace output.\n\nThis method, unlike the previous, takes the raw arguments in case\nthey're being source from different locations. Note that this may be\ncalled multiple times for one frame.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["frame_ip",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["symbol_name",{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["filename",{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}],["lineno",{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:671":{"id":"5:671","crate_id":5,"name":"clone_into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:1221":{"id":"23:1221","crate_id":23,"name":"Reader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1222","23:1223","23:1224","23:1225","23:1226","23:1227","23:1228","23:1229","23:1230","23:1231","23:1232","23:1233","23:1234","23:1235","23:1236","23:1237","23:1238","23:1240","23:1241","23:1243","23:1245","23:1247","23:1249","23:1251","23:1253","23:1255","23:1257","23:1259","23:1261","23:1263","23:1264","23:1265","23:1266","23:1268","23:1269","23:1270","23:1273","23:1274","23:1275","23:1276","23:1277"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:884":{"id":"0:884","crate_id":0,"name":"BacktraceSymbol","span":{"filename":"src/capture.rs","begin":[103,0],"end":[109,1]},"visibility":"public","docs":"Captured version of a symbol in a backtrace.\n\nThis type is returned as a list from `BacktraceFrame::symbols` and\nrepresents the metadata for a symbol in a backtrace.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:846","a:1:8621-0:884","a:1:3026-0:884","a:1:3014-0:884","a:1:8620-0:884","a:1:3055-0:884","b:1:2619-0:884","b:1:2943-0:884","b:1:3736-0:884","b:1:2622-0:884","b:1:2958-0:884","b:1:2953-0:884","b:1:2947-0:884","b:5:667-0:884","0:890","0:862"]}},"1:8621":{"id":"1:8621","crate_id":1,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/print.rs","begin":[36,0],"end":[89,1]},"visibility":{"restricted":{"parent":"0:136","path":"::print"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["0:171","0:172","0:173","0:174"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3321":{"id":"1:3321","crate_id":1,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3323"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3317","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:872":{"id":"0:872","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[48,9],"end":[48,14]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:873"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3262":{"id":"1:3262","crate_id":1,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3264"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"1:3265","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:3055-0:729":{"id":"a:1:3055-0:729","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:12629":{"id":"1:12629","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"4:15818"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"1:48116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3014-0:740":{"id":"a:1:3014-0:740","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"4:5747":{"id":"4:5747","crate_id":4,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5748","4:5749"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2911":{"id":"1:2911","crate_id":1,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2913"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"4:6874":{"id":"4:6874","crate_id":4,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6875"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12718":{"id":"1:12718","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"1:12178","FromStr::Err":"1:12179"},"attrs":["#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:46091","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12178","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12178","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8620-0:161":{"id":"a:1:8620-0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"1:9582":{"id":"1:9582","crate_id":1,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9583"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:5:667-0:740":{"id":"b:5:667-0:740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:669","5:670","5:671"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:112":{"id":"0:112","crate_id":0,"name":"as_bytes","span":{"filename":"src/symbolize/mod.rs","begin":[354,4],"end":[356,5]},"visibility":"public","docs":"Returns the raw symbol name as a list of bytes","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12600":{"id":"1:12600","crate_id":1,"name":null,"span":null,"visibility":{"restricted":{"parent":"1:11699","path":"::str"}},"docs":null,"links":{},"attrs":["#[lang = \"str\"]","#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["1:12601","1:12602","1:12603","1:12604","1:12606","1:12609","1:12610","1:12611","1:12612","1:12613","1:12615","1:12617","1:12619","1:12621","1:12622","1:12623","1:12624","1:12625","1:12626","1:12627","1:12628","1:12629","1:12630","1:12631","1:12632","1:12633","1:12636","1:12639","1:12642","1:12646","1:12650","1:12653","1:12656","1:12659","1:12662","1:12665","1:12668","1:12671","1:12674","1:12677","1:12680","1:12683","1:12686","1:12689","1:12691","1:12693","1:12695","1:12696","1:12697","1:12700","1:12703","1:12706","1:12709","1:12712","1:12715","1:12718","1:12720","1:12721","1:12722","1:12723","1:12724","1:12726","1:12727"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:667-0:869":{"id":"b:5:667-0:869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:669","5:670","5:671"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:867":{"id":"0:867","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[23,9],"end":[23,14]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:868"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12601":{"id":"1:12601","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"4:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2958-0:729":{"id":"b:1:2958-0:729","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:754":{"id":"0:754","crate_id":0,"name":null,"span":{"filename":"src/print.rs","begin":[26,26],"end":[26,35]},"visibility":{"restricted":{"parent":"0:136","path":"::print"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:755"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:3026-0:884":{"id":"a:1:3026-0:884","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:3055-0:884":{"id":"a:1:3055-0:884","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:3026-0:100":{"id":"a:1:3026-0:100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:839":{"id":"0:839","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[267,0],"end":[317,1]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:840","0:841","0:842","0:844"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2949":{"id":"1:2949","crate_id":1,"name":"from","span":null,"visibility":"public","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:751":{"id":"0:751","crate_id":0,"name":null,"span":{"filename":"src/print.rs","begin":[26,22],"end":[26,24]},"visibility":{"restricted":{"parent":"0:136","path":"::print"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:84":{"id":"0:84","crate_id":0,"name":"resolve_unsynchronized","span":{"filename":"src/symbolize/mod.rs","begin":[158,0],"end":[163,1]},"visibility":"public","docs":"Same as `resolve`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available when\nthe `std` feature of this crate isn't compiled in. See the `resolve`\nfunction for more documentation and examples.\n\n# Panics\n\nSee information on `resolve` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["addr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3262","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"0:731":{"id":"0:731","crate_id":0,"name":"Bytes","span":{"filename":"src/types.rs","begin":[19,4],"end":[19,19]},"visibility":"default","docs":"A slice, typically provided on Unix platforms.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]}},"1:9599":{"id":"1:9599","crate_id":1,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9600"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:1:2947-0:236":{"id":"b:1:2947-0:236","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2943-0:864":{"id":"b:1:2943-0:864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2619-0:236":{"id":"b:1:2619-0:236","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"25:5066":{"id":"25:5066","crate_id":25,"name":"ImageThunkData","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5067","25:5068","25:5069","25:5070"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:95":{"id":"0:95","crate_id":0,"name":"colno","span":{"filename":"src/symbolize/mod.rs","begin":[226,4],"end":[228,5]},"visibility":"public","docs":"Returns the column number for where this symbol is currently executing.\n\nOnly gimli currently provides a value here and even then only if `filename`\nreturns `Some`, and so it is then consequently subject to similar caveats.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2943-0:88":{"id":"b:1:2943-0:88","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12604":{"id":"1:12604","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2953-0:236":{"id":"b:1:2953-0:236","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:9789":{"id":"1:9789","crate_id":1,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9790","1:9792"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2624":{"id":"1:2624","crate_id":1,"name":"borrow_mut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8621-0:869":{"id":"a:1:8621-0:869","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2958-0:869":{"id":"b:1:2958-0:869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:171":{"id":"0:171","crate_id":0,"name":"new","span":{"filename":"src/print.rs","begin":[44,4],"end":[56,5]},"visibility":"public","docs":"Create a new `BacktraceFmt` which will write output to the provided\n`fmt`.\n\nThe `format` argument will control the style in which the backtrace is\nprinted, and the `print_path` argument will be used to print the\n`BytesOrWideString` instances of filenames. This type itself doesn't do\nany printing of filenames, but this callback is required to do so.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["fmt",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}}}}],["format",{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],["print_path",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3262","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}},{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"param_names":[{"outlives":"'b"}]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5731":{"id":"4:5731","crate_id":4,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5732","4:5733","4:5734","4:5735"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:7665":{"id":"1:7665","crate_id":1,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7667"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12709":{"id":"1:12709","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"1:12239","prim@char":"4:15813"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3145":{"id":"1:3145","crate_id":1,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3147","1:3148"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"25:2110":{"id":"25:2110","crate_id":25,"name":"SectionHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2111","25:2112","25:2113","25:2114","25:2115","25:2116","25:2117","25:2118","25:2119","25:2120","25:2121","25:2122","25:2123","25:2124","25:2127","25:2128","25:2131","25:2135","25:2138","25:2141","25:2144","25:2147","25:2150","25:2153","25:2156","25:2159","25:2162","25:2165","25:2168","25:2171","25:2174"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:2958-0:884":{"id":"b:1:2958-0:884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:860":{"id":"0:860","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[414,0],"end":[421,1]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:861"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12695":{"id":"1:12695","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason = \"superseded by `trim_start`\",\nsuggestion = \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3055-0:88":{"id":"a:1:3055-0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:333":{"id":"0:333","crate_id":0,"name":"fmt","span":{"filename":"src/symbolize/mod.rs","begin":[398,12],"end":[404,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12686":{"id":"1:12686","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"4:15818","prim@char":"4:15813","self::pattern":"1:12239","`DoubleEndedIterator`":"1:7746"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"1:48001","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:100":{"id":"b:1:2622-0:100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"4:4703":{"id":"4:4703","crate_id":4,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4704","4:4705","4:4706","4:4707"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"4:6450":{"id":"4:6450","crate_id":4,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6451","4:6452","4:6453","4:6454","4:6456","4:6458","4:6459"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"4:5809":{"id":"4:5809","crate_id":4,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5810"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3232":{"id":"1:3232","crate_id":1,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3233","1:3234"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:1:3055-0:740":{"id":"a:1:3055-0:740","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:3014-0:175":{"id":"a:1:3014-0:175","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'fmt","kind":{"lifetime":{"outlives":[]}}},{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:91":{"id":"0:91","crate_id":0,"name":"name","span":{"filename":"src/symbolize/mod.rs","begin":[207,4],"end":[209,5]},"visibility":"public","docs":"Returns the name of this function.\n\nThe returned structure can be used to query various properties about the\nsymbol name:\n\n* The `Display` implementation will print out the demangled symbol.\n* The raw `str` value of the symbol can be accessed (if it's valid\n  utf-8).\n* The raw bytes for the symbol name can be accessed.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12623":{"id":"1:12623","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"4:15818"},"attrs":["#[inline]","#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:175":{"id":"0:175","crate_id":0,"name":"BacktraceFrameFmt","span":{"filename":"src/print.rs","begin":[94,0],"end":[97,1]},"visibility":"public","docs":"A formatter for just one frame of a backtrace.\n\nThis type is created by the `BacktraceFmt::frame` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'fmt","kind":{"lifetime":{"outlives":[]}}},{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:181","a:1:8621-0:175","a:1:3026-0:175","a:1:3014-0:175","a:1:8620-0:175","a:1:3055-0:175","b:1:2619-0:175","b:1:2943-0:175","b:1:3736-0:175","b:1:2622-0:175","b:1:2958-0:175","b:1:2953-0:175","b:1:2947-0:175","0:191"]}},"1:11686":{"id":"1:11686","crate_id":1,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:11687","1:11688"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3024":{"id":"1:3024","crate_id":1,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:9601":{"id":"1:9601","crate_id":1,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9602"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:1:2953-0:729":{"id":"b:1:2953-0:729","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5440":{"id":"5:5440","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12656":{"id":"1:12656","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:12239","prim@char":"4:15813","`DoubleEndedIterator`":"1:7746","str::split":"4:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"1:47851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:840":{"id":"0:840","crate_id":0,"name":"ip","span":{"filename":"src/capture.rs","begin":[274,4],"end":[276,5]},"visibility":"public","docs":"Same as `Frame::ip`\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12700":{"id":"1:12700","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:15813","self::pattern":"1:12239"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/types.rs","begin":[79,0],"end":[83,1]},"visibility":{"restricted":{"parent":"0:118","path":"::types"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:9589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:132"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12653":{"id":"1:12653","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"4:15813","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"1:12031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:161":{"id":"b:1:2622-0:161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:239":{"id":"0:239","crate_id":0,"name":"clone","span":{"filename":"src/backtrace/mod.rs","begin":[75,9],"end":[75,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2943-0:884":{"id":"b:1:2943-0:884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"4:6872":{"id":"4:6872","crate_id":4,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6873"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3133":{"id":"1:3133","crate_id":1,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3134","1:3135"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"25:4567":{"id":"25:4567","crate_id":25,"name":"ImageNtHeaders","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4568","25:4569","25:4570","25:4571","25:4572","25:4573","25:4574","25:4575","25:4578","25:4581"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:12697":{"id":"1:12697","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"4:15813","self::pattern":"1:12239"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"1:12269","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9593":{"id":"1:9593","crate_id":1,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9594"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:1:3026-0:88":{"id":"a:1:3026-0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:836":{"id":"0:836","crate_id":0,"name":"from","span":{"filename":"src/capture.rs","begin":[253,4],"end":[258,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["frame",{"kind":"resolved_path","inner":{"name":"crate::Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:9315":{"id":"4:9315","crate_id":4,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:9316","4:9317","4:9318","4:9319","4:9320","4:9321","4:9322"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:2943-0:729":{"id":"b:1:2943-0:729","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"4:4685":{"id":"4:4685","crate_id":4,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4686","4:4687","4:4689","4:4690","4:4691","4:4692","4:4693","4:4702"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/types.rs","begin":[25,0],"end":[76,1]},"visibility":{"restricted":{"parent":"0:118","path":"::types"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:121","0:123"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2943-0:161":{"id":"b:1:2943-0:161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"25:1631":{"id":"25:1631","crate_id":25,"name":"FileHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:1632","25:1633","25:1634","25:1635","25:1636","25:1637","25:1638","25:1639","25:1640","25:1641","25:1642","25:1643","25:1644","25:1645","25:1646","25:1647","25:1648","25:1649","25:1650","25:1651","25:1652","25:1653","25:1654","25:1655","25:1656","25:1657","25:1658","25:1661","25:1662","25:1663","25:1664","25:1665","25:1666","25:1667","25:1670","25:1673","25:1676","25:1679","25:1682","25:1685","25:1688","25:1691"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:12659":{"id":"1:12659","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"4:15813","`DoubleEndedIterator`":"1:7746","str::split":"4:15818","str::rsplit_terminator":"4:15818","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"1:47883","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:2632":{"id":"25:2632","crate_id":25,"name":"Rela","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2633","25:2634","25:2635","25:2636","25:2637","25:2638","25:2639","25:2640"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/print.rs","begin":[99,0],"end":[296,1]},"visibility":{"restricted":{"parent":"0:136","path":"::print"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"lifetime":"'_"},{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"items":["0:182","0:183","0:185","0:186","0:187"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2616":{"id":"1:2616","crate_id":1,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2618"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:99":{"id":"0:99","crate_id":0,"name":"fmt","span":{"filename":"src/symbolize/mod.rs","begin":[257,4],"end":[277,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6568":{"id":"4:6568","crate_id":4,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6569","4:6570"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:868":{"id":"0:868","crate_id":0,"name":"clone","span":{"filename":"src/capture.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12627":{"id":"1:12627","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"1:47819","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2619-0:869":{"id":"b:1:2619-0:869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"25:3489":{"id":"25:3489","crate_id":25,"name":"MachHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3490","25:3491","25:3492","25:3493","25:3494","25:3495","25:3496","25:3497","25:3498","25:3499","25:3500","25:3501","25:3502","25:3503","25:3504","25:3505","25:3508","25:3509","25:3510","25:3513"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:3736-0:864":{"id":"b:1:3736-0:864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:8170":{"id":"1:8170","crate_id":1,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7894","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:847":{"id":"0:847","crate_id":0,"name":"name","span":{"filename":"src/capture.rs","begin":[326,4],"end":[328,5]},"visibility":"public","docs":"Same as `Symbol::name`\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:121":{"id":"0:121","crate_id":0,"name":"to_str_lossy","span":{"filename":"src/types.rs","begin":[33,4],"end":[40,5]},"visibility":"public","docs":"Lossy converts to a `Cow<str>`, will allocate if `Bytes` is not valid\nUTF-8 or if `BytesOrWideString` is `Wide`.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:672","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/symbolize/mod.rs","begin":[397,8],"end":[405,9]},"visibility":{"restricted":{"parent":"0:44","path":"::symbolize"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:9589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:333"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:24":{"id":"0:24","crate_id":0,"name":null,"span":{"filename":"src/backtrace/mod.rs","begin":[80,0],"end":[117,1]},"visibility":{"restricted":{"parent":"0:13","path":"::backtrace"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:25","0:26","0:27","0:28"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:851":{"id":"0:851","crate_id":0,"name":"filename","span":{"filename":"src/capture.rs","begin":[346,4],"end":[348,5]},"visibility":"public","docs":"Same as `Symbol::filename`\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Path","id":"4:7439","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:858":{"id":"0:858","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[408,0],"end":[412,1]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:2992","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:859"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2943-0:175":{"id":"b:1:2943-0:175","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3549":{"id":"1:3549","crate_id":1,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:174":{"id":"0:174","crate_id":0,"name":"finish","span":{"filename":"src/print.rs","begin":[85,4],"end":[88,5]},"visibility":"public","docs":"Completes the backtrace output.\n\nThis is currently a no-op but is added for future compatibility with\nbacktrace formats.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8620-0:864":{"id":"a:1:8620-0:864","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:821":{"id":"0:821","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[111,0],"end":[241,1]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:822","0:823","0:826","0:827"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12603":{"id":"1:12603","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:869":{"id":"0:869","crate_id":0,"name":"BacktraceFrame","span":{"filename":"src/capture.rs","begin":[49,0],"end":[52,1]},"visibility":"public","docs":"Captured version of a frame in a backtrace.\n\nThis type is returned as a list from `Backtrace::frames` and represents one\nstack frame in a captured backtrace.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:839","a:1:8621-0:869","a:1:3026-0:869","a:1:3014-0:869","a:1:8620-0:869","a:1:3055-0:869","b:1:2619-0:869","b:1:2943-0:869","b:1:3736-0:869","b:1:2622-0:869","b:1:2958-0:869","b:1:2953-0:869","b:1:2947-0:869","b:5:667-0:869","0:872","0:835","0:860"]}},"b:1:3736-0:869":{"id":"b:1:3736-0:869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12726":{"id":"1:12726","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{}\", c);\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"4:15813"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"1:48141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:854":{"id":"0:854","crate_id":0,"name":"colno","span":{"filename":"src/capture.rs","begin":[366,4],"end":[368,5]},"visibility":"public","docs":"Same as `Symbol::colno`\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:736":{"id":"0:736","crate_id":0,"name":"0","span":{"filename":"src/types.rs","begin":[21,9],"end":[21,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u16"}}}}},"a:1:3014-0:869":{"id":"a:1:3014-0:869","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:12264":{"id":"1:12264","crate_id":1,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:12266","1:12267","1:12268"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"1:12258","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:2670":{"id":"1:2670","crate_id":1,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3171":{"id":"1:3171","crate_id":1,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3173"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:837":{"id":"0:837","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[261,0],"end":[265,1]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:838"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12674":{"id":"1:12674","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5746":{"id":"5:5746","crate_id":5,"name":"to_string","span":null,"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2947-0:864":{"id":"b:1:2947-0:864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:3736-0:88":{"id":"b:1:3736-0:88","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12639":{"id":"1:12639","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"1:12239","prim@char":"4:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12624":{"id":"1:12624","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"4:15818"},"attrs":["#[inline]","#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12632":{"id":"1:12632","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"1:48125","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3055-0:236":{"id":"a:1:3055-0:236","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"25:3935":{"id":"25:3935","crate_id":25,"name":"Section","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3936","25:3937","25:3938","25:3940","25:3942","25:3943","25:3944","25:3945","25:3946","25:3947","25:3948","25:3949","25:3950","25:3951","25:3952","25:3955"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:7894":{"id":"1:7894","crate_id":1,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7895","1:7896","1:7897","1:7898","1:7900","1:7903","1:7904","1:7905","1:7906","1:7908","1:7910","1:7911","1:7913","1:7916","1:7923","1:7925","1:7928","1:7929","1:7930","1:7932","1:7934","1:7937","1:7938","1:7939","1:7943","1:7946","1:7947","1:7948","1:7950","1:7951","1:7953","1:7956","1:7966","1:7981","1:7983","1:7987","1:7996","1:7999","1:8001","1:8004","1:8011","1:8018","1:8025","1:8034","1:8044","1:8051","1:8058","1:8059","1:8060","1:8072","1:8079","1:8091","1:8098","1:8099","1:8104","1:8107","1:8110","1:8111","1:8113","1:8115","1:8118","1:8121","1:8124","1:8127","1:8130","1:8133","1:8135","1:8137","1:8139","1:8141","1:8143","1:8144","1:8152"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:94":{"id":"0:94","crate_id":0,"name":"filename_raw","span":{"filename":"src/symbolize/mod.rs","begin":[218,4],"end":[220,5]},"visibility":"public","docs":"Returns the raw filename as a slice. This is mainly useful for `no_std`\nenvironments.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3736-0:884":{"id":"b:1:3736-0:884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:9595":{"id":"1:9595","crate_id":1,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9596"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"4:6962":{"id":"4:6962","crate_id":4,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6963"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:25":{"id":"0:25","crate_id":0,"name":"ip","span":{"filename":"src/backtrace/mod.rs","begin":[89,4],"end":[91,5]},"visibility":"public","docs":"Returns the current instruction pointer of this frame.\n\nThis is normally the next instruction to execute in the frame, but not\nall implementations list this with 100% accuracy (but it's generally\npretty close).\n\nIt is recommended to pass this value to `backtrace::resolve` to turn it\ninto a symbol name.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:5384":{"id":"25:5384","crate_id":25,"name":"SymbolMapEntry","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5385"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12668":{"id":"1:12668","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"1:12239","prim@char":"4:15813","str::splitn":"4:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"1:47955","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:826":{"id":"0:826","crate_id":0,"name":"frames","span":{"filename":"src/capture.rs","begin":[204,4],"end":[206,5]},"visibility":"public","docs":"Returns the frames from when this backtrace was captured.\n\nThe first entry of this slice is likely the function `Backtrace::new`,\nand the last frame is likely something about how this thread or the main\nfunction started.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3184":{"id":"1:3184","crate_id":1,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3186"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3026":{"id":"1:3026","crate_id":1,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:823":{"id":"0:823","crate_id":0,"name":"new_unresolved","span":{"filename":"src/capture.rs","begin":[169,4],"end":[171,5]},"visibility":"public","docs":"Similar to `new` except that this does not resolve any symbols, this\nsimply captures the backtrace as a list of addresses.\n\nAt a later time the `resolve` function can be called to resolve this\nbacktrace's symbols into readable names. This function exists because\nthe resolution process can sometimes take a significant amount of time\nwhereas any one backtrace may only be rarely printed.\n\n# Examples\n\n```\nuse backtrace::Backtrace;\n\nlet mut current_backtrace = Backtrace::new_unresolved();\nprintln!(\"{:?}\", current_backtrace); // no symbol names\ncurrent_backtrace.resolve();\nprintln!(\"{:?}\", current_backtrace); // symbol names now present\n```\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12269":{"id":"1:12269","crate_id":1,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:30":{"id":"0:30","crate_id":0,"name":"fmt","span":{"filename":"src/backtrace/mod.rs","begin":[120,4],"end":[125,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12633":{"id":"1:12633","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"1:12239","prim@char":"4:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:457":{"id":"23:457","crate_id":23,"name":"UnwindSection","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:459","23:460","23:462","23:463","23:465","23:467","23:469"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"_UnwindSectionPrivate","id":"23:447","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3175":{"id":"1:3175","crate_id":1,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3177"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"23:2121":{"id":"23:2121","crate_id":23,"name":"EvaluationStorage","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:2123","23:2124","23:2125"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"bounds":[],"implementors":[]}},"0:890":{"id":"0:890","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[100,9],"end":[100,14]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:891"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2619-0:864":{"id":"b:1:2619-0:864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3140":{"id":"1:3140","crate_id":1,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3142","1:3143"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12630":{"id":"1:12630","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"1:48087","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:873":{"id":"0:873","crate_id":0,"name":"clone","span":{"filename":"src/capture.rs","begin":[48,9],"end":[48,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:869":{"id":"b:1:2622-0:869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:192":{"id":"0:192","crate_id":0,"name":"drop","span":{"filename":"src/print.rs","begin":[299,4],"end":[301,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/print.rs","begin":[298,0],"end":[302,1]},"visibility":{"restricted":{"parent":"0:136","path":"::print"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Drop","id":"1:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"lifetime":"'_"},{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"items":["0:192"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:3014-0:864":{"id":"a:1:3014-0:864","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3155":{"id":"1:3155","crate_id":1,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3157","1:3158"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"5:5444":{"id":"5:5444","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"4:15818"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3736-0:740":{"id":"b:1:3736-0:740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5425":{"id":"5:5425","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9799":{"id":"1:9799","crate_id":1,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9800","1:9801","1:9802","1:9803","1:9804","1:9805","1:9806","1:9807","1:9808","1:9809","1:9810","1:9811","1:9812","1:9813"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2635":{"id":"1:2635","crate_id":1,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2636","1:2637"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"5:5172":{"id":"5:5172","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5174","5:5175"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"5:5176":{"id":"5:5176","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5178","5:5179"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:864":{"id":"0:864","crate_id":0,"name":"Backtrace","span":{"filename":"src/capture.rs","begin":[26,0],"end":[32,1]},"visibility":"public","docs":"Representation of an owned and self-contained backtrace.\n\nThis structure can be used to capture a backtrace at various points in a\nprogram and later used to inspect what the backtrace was at that time.\n\n`Backtrace` supports pretty-printing of backtraces through its `Debug`\nimplementation.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:821","a:1:8621-0:864","a:1:3026-0:864","a:1:3014-0:864","a:1:8620-0:864","a:1:3055-0:864","b:1:2619-0:864","b:1:2943-0:864","b:1:3736-0:864","b:1:2622-0:864","b:1:2958-0:864","b:1:2953-0:864","b:1:2947-0:864","b:5:667-0:864","0:867","0:833","0:837","0:855","0:858"]}},"a:1:8620-0:88":{"id":"a:1:8620-0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2619-0:161":{"id":"b:1:2619-0:161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:86":{"id":"0:86","crate_id":0,"name":"resolve_frame_unsynchronized","span":{"filename":"src/symbolize/mod.rs","begin":[174,0],"end":[179,1]},"visibility":"public","docs":"Same as `resolve_frame`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available\nwhen the `std` feature of this crate isn't compiled in. See the\n`resolve_frame` function for more documentation and examples.\n\n# Panics\n\nSee information on `resolve_frame` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["frame",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3262","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"b:1:2943-0:740":{"id":"b:1:2943-0:740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"4:5739":{"id":"4:5739","crate_id":4,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5740","4:5741","4:5742"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2920":{"id":"1:2920","crate_id":1,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2922"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"25:3724":{"id":"25:3724","crate_id":25,"name":"Segment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3725","25:3726","25:3727","25:3728","25:3729","25:3730","25:3731","25:3733","25:3734","25:3735","25:3736","25:3737","25:3738","25:3739","25:3740","25:3741","25:3742","25:3743","25:3746"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:2943-0:100":{"id":"b:1:2943-0:100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:743":{"id":"0:743","crate_id":0,"name":"Full","span":{"filename":"src/print.rs","begin":[31,4],"end":[31,8]},"visibility":"default","docs":"Prints a backtrace that contains all possible information","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:3317":{"id":"1:3317","crate_id":1,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3319","1:3320"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"1:3120":{"id":"1:3120","crate_id":1,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3122"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"25:220":{"id":"25:220","crate_id":25,"name":"ReadRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:222","25:223","25:224","25:225","25:226","25:229","25:231","25:234"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:3026-0:740":{"id":"a:1:3026-0:740","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2619-0:729":{"id":"b:1:2619-0:729","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:833":{"id":"0:833","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[243,0],"end":[250,1]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:834"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5744-0:729":{"id":"b:5:5744-0:729","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:9589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:5742","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["5:5746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:8621-0:100":{"id":"a:1:8621-0:100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3091":{"id":"1:3091","crate_id":1,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3093","1:3094"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"25:5286":{"id":"25:5286","crate_id":25,"name":"ObjectSegment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5288","25:5289","25:5290","25:5291","25:5292","25:5293","25:5294","25:5295"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5353","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3055":{"id":"1:3055","crate_id":1,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:1:3026-0:175":{"id":"a:1:3026-0:175","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'fmt","kind":{"lifetime":{"outlives":[]}}},{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:859":{"id":"0:859","crate_id":0,"name":"default","span":{"filename":"src/capture.rs","begin":[409,4],"end":[411,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3736-0:100":{"id":"b:1:3736-0:100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:8621-0:88":{"id":"a:1:8621-0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:9591":{"id":"1:9591","crate_id":1,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9592"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12619":{"id":"1:12619","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:2665":{"id":"1:2665","crate_id":1,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2667","1:2668"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"0:729":{"id":"0:729","crate_id":0,"name":"BytesOrWideString","span":{"filename":"src/types.rs","begin":[17,0],"end":[22,1]},"visibility":"public","docs":"A platform independent representation of a string. When working with `std`\nenabled it is recommended to the convenience methods for providing\nconversions to `std` types.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:731","0:734"],"impls":["0:119","a:1:8621-0:729","a:1:3026-0:729","a:1:3014-0:729","a:1:8620-0:729","a:1:3055-0:729","b:1:2619-0:729","b:1:2943-0:729","b:1:3736-0:729","b:1:2622-0:729","b:1:2958-0:729","b:1:2953-0:729","b:1:2947-0:729","b:5:5744-0:729","0:737","0:130"]}},"1:12689":{"id":"1:12689","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:5324":{"id":"25:5324","crate_id":25,"name":"ObjectSymbolTable","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5326","25:5327","25:5328","25:5329"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5353","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3167":{"id":"1:3167","crate_id":1,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3169"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2701":{"id":"1:2701","crate_id":1,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2702","1:2703","1:2704","1:2705"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:12617":{"id":"1:12617","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3014-0:884":{"id":"a:1:3014-0:884","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:12606":{"id":"1:12606","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"4:15818"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:5296":{"id":"25:5296","crate_id":25,"name":"ObjectSection","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5298","25:5299","25:5300","25:5301","25:5302","25:5303","25:5304","25:5305","25:5306","25:5307","25:5308","25:5309","25:5310","25:5311","25:5312","25:5313","25:5314","25:5315"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5353","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:2947-0:729":{"id":"b:1:2947-0:729","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:3026-0:869":{"id":"a:1:3026-0:869","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:2991":{"id":"23:2991","crate_id":23,"name":"Section","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:2993","23:2994","23:2995","23:2996","23:2999","23:3000","23:3001"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"25:160":{"id":"25:160","crate_id":25,"name":"Pod","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:2953-0:175":{"id":"b:1:2953-0:175","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:8620-0:236":{"id":"a:1:8620-0:236","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5443":{"id":"5:5443","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"4:15818"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8621-0:175":{"id":"a:1:8621-0:175","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'fmt","kind":{"lifetime":{"outlives":[]}}},{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"1:12662":{"id":"1:12662","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"4:15818","self::pattern":"1:12239","prim@char":"4:15813","str::split_terminator":"4:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"1:47901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:856":{"id":"0:856","crate_id":0,"name":"fmt","span":{"filename":"src/capture.rs","begin":[372,4],"end":[405,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3014-0:236":{"id":"a:1:3014-0:236","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2947-0:740":{"id":"b:1:2947-0:740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2953-0:88":{"id":"b:1:2953-0:88","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2917":{"id":"1:2917","crate_id":1,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2919"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"25:2606":{"id":"25:2606","crate_id":25,"name":"Rel","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2607","25:2608","25:2609","25:2610","25:2611","25:2612","25:2613"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3150":{"id":"1:3150","crate_id":1,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3152","1:3153"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:835":{"id":"0:835","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[252,0],"end":[259,1]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:836"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:734":{"id":"0:734","crate_id":0,"name":"Wide","span":{"filename":"src/types.rs","begin":[21,4],"end":[21,19]},"visibility":"default","docs":"Wide strings typically from Windows.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u16"}}}}]}},"5:670":{"id":"5:670","crate_id":5,"name":"to_owned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2927":{"id":"1:2927","crate_id":1,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2929","1:2930"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:846":{"id":"0:846","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[319,0],"end":[369,1]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:847","0:849","0:851","0:853","0:854"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12965":{"id":"1:12965","crate_id":1,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12966","1:12967","1:12968"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:26":{"id":"0:26","crate_id":0,"name":"sp","span":{"filename":"src/backtrace/mod.rs","begin":[97,4],"end":[99,5]},"visibility":"public","docs":"Returns the current stack pointer of this frame.\n\nIn the case that a backend cannot recover the stack pointer for this\nframe, a null pointer is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:22041":{"id":"1:22041","crate_id":1,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22031","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:97":{"id":"0:97","crate_id":0,"name":"filename","span":{"filename":"src/symbolize/mod.rs","begin":[251,4],"end":[253,5]},"visibility":"public","docs":"Returns the file name where this function was defined.\n\nThis is currently only available when libbacktrace or gimli is being\nused (e.g. unix platforms other) and when a binary is compiled with\ndebuginfo. If neither of these conditions is met then this will likely\nreturn `None`.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[allow(unreachable_code)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Path","id":"4:7439","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4374":{"id":"1:4374","crate_id":1,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4375","1:4376","1:4377"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12724":{"id":"1:12724","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{}\", c);\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"4:15813"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"1:48132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:822":{"id":"0:822","crate_id":0,"name":"new","span":{"filename":"src/capture.rs","begin":[139,4],"end":[143,5]},"visibility":"public","docs":"Captures a backtrace at the callsite of this function, returning an\nowned representation.\n\nThis function is useful for representing a backtrace as an object in\nRust. This returned value can be sent across threads and printed\nelsewhere, and the purpose of this value is to be entirely self\ncontained.\n\nNote that on some platforms acquiring a full backtrace and resolving it\ncan be extremely expensive. If the cost is too much for your application\nit's recommended to instead use `Backtrace::new_unresolved()` which\navoids the symbol resolution step (which typically takes the longest)\nand allows deferring that to a later date.\n\n# Examples\n\n```\nuse backtrace::Backtrace;\n\nlet current_backtrace = Backtrace::new();\n```\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":["#[inline(never)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9830":{"id":"1:9830","crate_id":1,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9831","1:9832","1:9833"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3179":{"id":"1:3179","crate_id":1,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3181"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:749":{"id":"0:749","crate_id":0,"name":"clone","span":{"filename":"src/print.rs","begin":[26,15],"end":[26,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:334":{"id":"0:334","crate_id":0,"name":null,"span":{"filename":"src/symbolize/mod.rs","begin":[433,8],"end":[441,9]},"visibility":{"restricted":{"parent":"0:44","path":"::symbolize"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:336"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2947-0:869":{"id":"b:1:2947-0:869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12612":{"id":"1:12612","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"4:15827"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:438":{"id":"23:438","crate_id":23,"name":"UnwindOffset","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:440"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"kind":"primitive","inner":"usize"}}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReaderOffset","id":"23:1185","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"5:5420":{"id":"5:5420","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5240","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[lang = \"str_alloc\"]","#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5421","5:5422","5:5425","5:5428","5:5440","5:5441","5:5442","5:5443","5:5444"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12622":{"id":"1:12622","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"4:15818","crate::ops::IndexMut":"1:3321","str::slice_unchecked":"4:15818"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[rustc_deprecated(since = \"1.29.0\", reason =\n\"use `get_unchecked_mut(begin..end)` instead\")]","#[inline]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:2956":{"id":"1:2956","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"1:7711":{"id":"1:7711","crate_id":1,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7713","1:7715","1:7716"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3512":{"id":"1:3512","crate_id":1,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"b:1:2619-0:100":{"id":"b:1:2619-0:100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2957":{"id":"1:2957","crate_id":1,"name":"try_into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:46091","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2953-0:869":{"id":"b:1:2953-0:869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:733":{"id":"0:733","crate_id":0,"name":"0","span":{"filename":"src/types.rs","begin":[19,10],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"a:1:8620-0:740":{"id":"a:1:8620-0:740","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:12609":{"id":"1:12609","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:11710"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[inline(always)]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12628":{"id":"1:12628","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"4:15818"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"1:48107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2992":{"id":"1:2992","crate_id":1,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2993"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:750":{"id":"0:750","crate_id":0,"name":null,"span":{"filename":"src/print.rs","begin":[26,22],"end":[26,24]},"visibility":{"restricted":{"parent":"0:136","path":"::print"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"1:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2622-0:175":{"id":"b:1:2622-0:175","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12722":{"id":"1:12722","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6696":{"id":"4:6696","crate_id":4,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6697","4:6698","4:6699","4:6700","4:6701","4:6702","4:6703","4:6704","4:6705","4:6706","4:6707","4:6708","4:6709","4:6710","4:6711","4:6712","4:6713"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12712":{"id":"1:12712","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:15813","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason =\n\"superseded by `trim_start_matches`\", suggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8620-0:100":{"id":"a:1:8620-0:100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3738":{"id":"1:3738","crate_id":1,"name":"type_id","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:44613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:4628":{"id":"4:4628","crate_id":4,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4629","4:4630","4:4632","4:4633","4:4634","4:4635","4:4636","4:4638","4:4639","4:4640","4:4641","4:4643"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12723":{"id":"1:12723","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5428":{"id":"5:5428","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:336":{"id":"0:336","crate_id":0,"name":"fmt","span":{"filename":"src/symbolize/mod.rs","begin":[434,12],"end":[440,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2958-0:864":{"id":"b:1:2958-0:864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:755":{"id":"0:755","crate_id":0,"name":"eq","span":{"filename":"src/print.rs","begin":[26,26],"end":[26,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:737":{"id":"0:737","crate_id":0,"name":null,"span":{"filename":"src/types.rs","begin":[16,9],"end":[16,14]},"visibility":{"restricted":{"parent":"0:118","path":"::types"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesOrWideString","id":"0:729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:739"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12258":{"id":"1:12258","crate_id":1,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:12260","1:12261","1:12262","1:12263"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:5:5744-0:100":{"id":"b:5:5744-0:100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:9589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:5742","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["5:5746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:70":{"id":"0:70","crate_id":0,"name":"resolve_frame","span":{"filename":"src/symbolize/mod.rs","begin":[103,0],"end":[106,1]},"visibility":"public","docs":"Resolve a previously capture frame to a symbol, passing the symbol to the\nspecified closure.\n\nThis function performs the same function as `resolve` except that it takes a\n`Frame` as an argument instead of an address. This can allow some platform\nimplementations of backtracing to provide more accurate symbol information\nor information about inline frames for example. It's recommended to use this\nif you can.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        backtrace::resolve_frame(frame, |symbol| {\n            // ...\n        });\n\n        false // only look at the top frame\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["frame",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3262","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"5:663":{"id":"5:663","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:664","5:665","5:666"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:741":{"id":"0:741","crate_id":0,"name":"Short","span":{"filename":"src/print.rs","begin":[29,4],"end":[29,9]},"visibility":"default","docs":"Prints a terser backtrace which ideally only contains relevant information","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:1:2619-0:884":{"id":"b:1:2619-0:884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:10168":{"id":"1:10168","crate_id":1,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:10170","1:10171","1:10172","1:10173","1:10174","1:10175","1:10176"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10159","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"5:5442":{"id":"5:5442","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8621-0:740":{"id":"a:1:8621-0:740","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:12721":{"id":"1:12721","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:88":{"id":"0:88","crate_id":0,"name":"Symbol","span":{"filename":"src/symbolize/mod.rs","begin":[190,0],"end":[195,1]},"visibility":"public","docs":"A trait representing the resolution of a symbol in a file.\n\nThis trait is yielded as a trait object to the closure given to the\n`backtrace::resolve` function, and it is virtually dispatched as it's\nunknown which implementation is behind it.\n\nA symbol can give contextual information about a function, for example the\nname, filename, line number, precise address, etc. Not all information is\nalways available in a symbol, however, so all methods return an `Option`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:90","a:1:8621-0:88","a:1:3026-0:88","a:1:3014-0:88","a:1:8620-0:88","a:1:3055-0:88","b:1:2619-0:88","b:1:2943-0:88","b:1:3736-0:88","b:1:2622-0:88","b:1:2958-0:88","b:1:2953-0:88","b:1:2947-0:88","0:98"]}},"b:1:2953-0:864":{"id":"b:1:2953-0:864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2712":{"id":"1:2712","crate_id":1,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2714","1:2715","1:2716","1:2717","1:2718"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:3014-0:88":{"id":"a:1:3014-0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"4:5787":{"id":"4:5787","crate_id":4,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5788","4:5789","4:5790","4:5791"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3023":{"id":"1:3023","crate_id":1,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2946":{"id":"1:2946","crate_id":1,"name":"into","span":null,"visibility":"public","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2920"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5441":{"id":"5:5441","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:315","`String`":"5:7626"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5659":{"id":"4:5659","crate_id":4,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5660","4:5661"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:2958-0:740":{"id":"b:1:2958-0:740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"25:4197":{"id":"25:4197","crate_id":25,"name":"Nlist","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4198","25:4199","25:4200","25:4201","25:4202","25:4203","25:4204","25:4205","25:4208","25:4209","25:4210","25:4211"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3734":{"id":"1:3734","crate_id":1,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3735"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementors":[]}},"b:1:2953-0:884":{"id":"b:1:2953-0:884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/symbolize/mod.rs","begin":[197,0],"end":[254,1]},"visibility":{"restricted":{"parent":"0:44","path":"::symbolize"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:91","0:92","0:94","0:95","0:96","0:97"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12950":{"id":"1:12950","crate_id":1,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12951","1:12952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:7661":{"id":"1:7661","crate_id":1,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7663"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3019":{"id":"1:3019","crate_id":1,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12665":{"id":"1:12665","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"1:12239","prim@char":"4:15813","str::rsplitn":"4:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"1:47937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3388":{"id":"1:3388","crate_id":1,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3390","1:3391","1:3392"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"5:5422":{"id":"5:5422","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8621-0:161":{"id":"a:1:8621-0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"1:12671":{"id":"1:12671","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2958-0:100":{"id":"b:1:2958-0:100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:27":{"id":"0:27","crate_id":0,"name":"symbol_address","span":{"filename":"src/backtrace/mod.rs","begin":[109,4],"end":[111,5]},"visibility":"public","docs":"Returns the starting symbol address of the frame of this function.\n\nThis will attempt to rewind the instruction pointer returned by `ip` to\nthe start of the function, returning that value. In some cases, however,\nbackends will just return `ip` from this function.\n\nThe returned value can sometimes be used if `backtrace::resolve` failed\non the `ip` given above.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:4968","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:667-0:236":{"id":"b:5:667-0:236","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:669","5:670","5:671"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:7698":{"id":"1:7698","crate_id":1,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7700"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"25:27":{"id":"25:27","crate_id":25,"name":"Endian","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:28","25:29","25:30","25:31","25:32","25:33","25:34","25:35","25:36","25:37","25:38","25:40","25:42","25:44","25:46","25:48","25:50","25:51","25:52","25:53","25:54","25:55","25:56","25:58","25:60","25:62","25:64","25:66"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:2992","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:2622-0:864":{"id":"b:1:2622-0:864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"25:2921":{"id":"25:2921","crate_id":25,"name":"NoteHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2922","25:2923","25:2924","25:2925"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:3055-0:100":{"id":"a:1:3055-0:100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:12610":{"id":"1:12610","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]","#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:740":{"id":"b:1:2622-0:740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3086":{"id":"1:3086","crate_id":1,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3088","1:3089"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:22":{"id":"0:22","crate_id":0,"name":"trace_unsynchronized","span":{"filename":"src/backtrace/mod.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"Same as `trace`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available\nwhen the `std` feature of this crate isn't compiled in. See the `trace`\nfunction for more documentation and examples.\n\n# Panics\n\nSee information on `trace` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3262","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"25:3209":{"id":"25:3209","crate_id":25,"name":"FatArch","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3210","25:3211","25:3212","25:3213","25:3214","25:3215","25:3216","25:3217","25:3218"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"4:6801":{"id":"4:6801","crate_id":4,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6802"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:185":{"id":"0:185","crate_id":0,"name":"symbol","span":{"filename":"src/print.rs","begin":[150,4],"end":[159,5]},"visibility":"public","docs":"Prints a raw traced `Frame` and `Symbol`, typically from within the raw\ncallbacks of this crate.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["frame",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["symbol",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"super::Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2958-0:161":{"id":"b:1:2958-0:161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2621":{"id":"1:2621","crate_id":1,"name":"borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2613":{"id":"1:2613","crate_id":1,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2615"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"1:3259":{"id":"1:3259","crate_id":1,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3261"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3262","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3096":{"id":"1:3096","crate_id":1,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3098","1:3099"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12715":{"id":"1:12715","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"1:12239","prim@char":"4:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason =\n\"superseded by `trim_end_matches`\", suggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3161":{"id":"1:3161","crate_id":1,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3163","1:3164"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3265":{"id":"1:3265","crate_id":1,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3267","1:3268"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"4:4710":{"id":"4:4710","crate_id":4,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4711","4:4712","4:4713","4:4715","4:4716","4:4718","4:4719"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"4:4628","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:12720":{"id":"1:12720","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13349":{"id":"1:13349","crate_id":1,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13350","1:13351","1:13352","1:13353"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"4:2453":{"id":"4:2453","crate_id":4,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:2454","4:2456","4:2457","4:2458"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:9589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"b:1:3736-0:175":{"id":"b:1:3736-0:175","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12706":{"id":"1:12706","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"1:12239","prim@char":"4:15813"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3081":{"id":"1:3081","crate_id":1,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3083","1:3084"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:7771":{"id":"1:7771","crate_id":1,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7772","1:7773"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7894","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:8620-0:175":{"id":"a:1:8620-0:175","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'fmt","kind":{"lifetime":{"outlives":[]}}},{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFrameFmt","id":"0:175","args":{"angle_bracketed":{"args":[{"lifetime":"'fmt"},{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:1:8621-0:864":{"id":"a:1:8621-0:864","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Backtrace","id":"0:864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:838":{"id":"0:838","crate_id":0,"name":"into","span":{"filename":"src/capture.rs","begin":[262,4],"end":[264,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BacktraceFrame","id":"0:869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2953-0:740":{"id":"b:1:2953-0:740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:862":{"id":"0:862","crate_id":0,"name":null,"span":{"filename":"src/capture.rs","begin":[423,0],"end":[433,1]},"visibility":{"restricted":{"parent":"0:776","path":"::capture"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:863"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:5801":{"id":"4:5801","crate_id":4,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5802"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:12691":{"id":"1:12691","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\nassert_eq!(\"Hello\\tworld\\t\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:891":{"id":"0:891","crate_id":0,"name":"clone","span":{"filename":"src/capture.rs","begin":[100,9],"end":[100,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2943-0:236":{"id":"b:1:2943-0:236","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:667-0:884":{"id":"b:5:667-0:884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceSymbol","id":"0:884","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:669","5:670","5:671"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2619-0:88":{"id":"b:1:2619-0:88","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/symbolize/mod.rs","begin":[324,0],"end":[357,1]},"visibility":{"restricted":{"parent":"0:44","path":"::symbolize"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SymbolName","id":"0:100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:107","0:109","0:112"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12611":{"id":"1:12611","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"4:15827","str::as_mut_ptr":"4:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:863":{"id":"0:863","crate_id":0,"name":"fmt","span":{"filename":"src/capture.rs","begin":[424,4],"end":[432,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3112":{"id":"1:3112","crate_id":1,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3114"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"25:2814":{"id":"25:2814","crate_id":25,"name":"Dyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2815","25:2816","25:2817","25:2818","25:2819","25:2820","25:2821","25:2822","25:2825"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:747":{"id":"0:747","crate_id":0,"name":null,"span":{"filename":"src/print.rs","begin":[26,9],"end":[26,13]},"visibility":{"restricted":{"parent":"0:136","path":"::print"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"23:194":{"id":"23:194","crate_id":23,"name":"ArrayLike","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:195"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"23:189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:100":{"id":"0:100","crate_id":0,"name":"SymbolName","span":{"filename":"src/symbolize/mod.rs","begin":[318,0],"end":[322,1]},"visibility":"public","docs":"A wrapper around a symbol name to provide ergonomic accessors to the\ndemangled name, the raw bytes, the raw string, etc.","links":{},"attrs":["#[allow(dead_code)]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:105","a:1:8621-0:100","a:1:3026-0:100","a:1:3014-0:100","a:1:8620-0:100","a:1:3055-0:100","b:1:2619-0:100","b:1:2943-0:100","b:1:3736-0:100","b:1:2622-0:100","b:1:2958-0:100","b:1:2953-0:100","b:1:2947-0:100","b:5:5744-0:100","0:331","0:334"]}},"b:1:2947-0:161":{"id":"b:1:2947-0:161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BacktraceFmt","id":"0:161","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:748":{"id":"0:748","crate_id":0,"name":null,"span":{"filename":"src/print.rs","begin":[26,15],"end":[26,20]},"visibility":{"restricted":{"parent":"0:136","path":"::print"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PrintFmt","id":"0:740","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:749"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12602":{"id":"1:12602","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98":{"id":"0:98","crate_id":0,"name":null,"span":{"filename":"src/symbolize/mod.rs","begin":[256,0],"end":[278,1]},"visibility":{"restricted":{"parent":"0:44","path":"::symbolize"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:99"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:7251":{"id":"1:7251","crate_id":1,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7252","1:7253","1:7254","1:7255","1:7256","1:7257","1:7258"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:8174":{"id":"1:8174","crate_id":1,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"1:7251","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:12636":{"id":"1:12636","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"1:12239","prim@char":"4:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9589":{"id":"1:9589","crate_id":1,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9590"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:123":{"id":"0:123","crate_id":0,"name":"into_path_buf","span":{"filename":"src/types.rs","begin":[48,4],"end":[75,5]},"visibility":"public","docs":"Provides a `Path` representation of `BytesOrWideString`.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"PathBuf","id":"4:7330","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"25:14250":{"crate_id":25,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"23:5079":{"crate_id":23,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:2911":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"26:766":{"crate_id":26,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:11304":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"24:649":{"crate_id":24,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:4264":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"23:6354":{"crate_id":23,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:11458":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:10623":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:7661":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:8620":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:50500":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"4:12097":{"crate_id":4,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"24:581":{"crate_id":24,"path":["libc","unix","linger"],"kind":"struct"},"24:3985":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:51418":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"9:900":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"23:8377":{"crate_id":23,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:49602":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"23:8080":{"crate_id":23,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"25:11898":{"crate_id":25,"path":["object","read","Export"],"kind":"struct"},"6:3972":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:6744":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"6:4220":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:2512":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"26:896":{"crate_id":26,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"4:10856":{"crate_id":4,"path":["std","fs","OpenOptions"],"kind":"struct"},"5:4665":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"23:6878":{"crate_id":23,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"5:5401":{"crate_id":5,"path":["backtrace","Output"],"kind":"typedef"},"25:14436":{"crate_id":25,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:7932":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","take_while"],"kind":"foreign_type"},"17:12385":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"25:12376":{"crate_id":25,"path":["object","elf","Dyn64"],"kind":"struct"},"25:13433":{"crate_id":25,"path":["object","macho","RelocationInfo"],"kind":"struct"},"25:11086":{"crate_id":25,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"25:9555":{"crate_id":25,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:6464":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"24:1516":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:5352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:13574":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:3734":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"4:7915":{"crate_id":4,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"4:1377":{"crate_id":4,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:21815":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"24:1583":{"crate_id":24,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:10081":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"25:5758":{"crate_id":25,"path":["object","elf","SHF_COMPRESSED"],"kind":"constant"},"17:12982":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"25:5066":{"crate_id":25,"path":["object","read","pe","import","ImageThunkData"],"kind":"trait"},"1:7904":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","nth"],"kind":"foreign_type"},"27:1097":{"crate_id":27,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"4:11983":{"crate_id":4,"path":["std","process","Output"],"kind":"struct"},"6:3952":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"24:5002":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:8143":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","is_sorted"],"kind":"foreign_type"},"17:9839":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:6366":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:23242":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"5:6542":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:13799":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"5:6022":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:3377":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"23:6684":{"crate_id":23,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:5186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"25:13445":{"crate_id":25,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:13172":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"24:3763":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:4280":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:2314":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"23:3089":{"crate_id":23,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:3365":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"24:5010":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:6852":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"25:13117":{"crate_id":25,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"26:660":{"crate_id":26,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:4590":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:12756":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"4:14105":{"crate_id":4,"path":["std","sys","unix","rwlock","RWLock"],"kind":"struct"},"1:49860":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:11981":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:3929":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:13429":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:10266":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"4:4470":{"crate_id":4,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:9943":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"12:2331":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"23:8895":{"crate_id":23,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:11026":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"25:5241":{"crate_id":25,"path":["object","read","traits","Object"],"kind":"trait"},"24:4064":{"crate_id":24,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"4:3357":{"crate_id":4,"path":["std","fs","read_dir"],"kind":"function"},"16:6391":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:9689":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"4:3331":{"crate_id":4,"path":["std","fs","symlink_metadata"],"kind":"function"},"25:3935":{"crate_id":25,"path":["object","read","macho","section","Section"],"kind":"trait"},"23:7112":{"crate_id":23,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:48116":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"5:3046":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"5:4173":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:10962":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:45081":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:10635":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"23:8160":{"crate_id":23,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"22:331":{"crate_id":22,"path":["addr2line","Location"],"kind":"struct"},"24:1676":{"crate_id":24,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"4:11222":{"crate_id":4,"path":["std","net","ip","IpAddr"],"kind":"enum"},"25:220":{"crate_id":25,"path":["object","read","read_ref","ReadRef"],"kind":"trait"},"14:216":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:9597":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"12:2323":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"4:2253":{"crate_id":4,"path":["std","env"],"kind":"module"},"17:12771":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"23:7871":{"crate_id":23,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:9296":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:6152":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"25:12745":{"crate_id":25,"path":["object","macho","Section32"],"kind":"struct"},"4:11216":{"crate_id":4,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"17:10571":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:2866":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"4:8977":{"crate_id":4,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"25:1631":{"crate_id":25,"path":["object","read","elf","file","FileHeader"],"kind":"trait"},"1:45151":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"16:6166":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:1567":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"18:790":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:10550":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"23:6539":{"crate_id":23,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"20:168":{"crate_id":20,"path":["rustc_demangle","try_demangle"],"kind":"function"},"4:5025":{"crate_id":4,"path":["backtrace","Iter"],"kind":"typedef"},"24:5020":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nlattr"],"kind":"struct"},"24:4934":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:10338":{"crate_id":1,"path":["backtrace","IntoIter"],"kind":"typedef"},"16:5960":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:24":{"crate_id":1,"path":["core","env"],"kind":"macro"},"9:749":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"24:5891":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:10160":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"9:722":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:7082":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"24:5763":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"25:13232":{"crate_id":25,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:2848":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"24:5985":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:2712":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"25:14046":{"crate_id":25,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"4:4569":{"crate_id":4,"path":["std","io","util","Repeat"],"kind":"struct"},"5:4123":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"4:3549":{"crate_id":4,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"4:15826":{"crate_id":4,"path":["std","i128"],"kind":"primitive"},"17:9592":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"25:10014":{"crate_id":25,"path":["object","read","any","File"],"kind":"struct"},"1:48549":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"25:12871":{"crate_id":25,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"25:84":{"crate_id":25,"path":["object","endian","NativeEndian"],"kind":"constant"},"23:4632":{"crate_id":23,"path":["gimli","constants","DwTag"],"kind":"struct"},"25:13991":{"crate_id":25,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"24:55":{"crate_id":24,"path":["libc","unix","c_int"],"kind":"typedef"},"25:11350":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"27:949":{"crate_id":27,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:10071":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"18:660":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"4:6708":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"25:2406":{"crate_id":25,"path":["object","read","elf","symbol","Sym"],"kind":"trait"},"17:13296":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:10168":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"4:11113":{"crate_id":4,"path":["std","io","util","Sink"],"kind":"struct"},"25:13596":{"crate_id":25,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:13146":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"25:12768":{"crate_id":25,"path":["object","macho","Section64"],"kind":"struct"},"5:315":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"4:7424":{"crate_id":4,"path":["backtrace","Owned"],"kind":"typedef"},"7:38":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"25:13187":{"crate_id":25,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:48141":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"25:5384":{"crate_id":25,"path":["object","read","SymbolMapEntry"],"kind":"trait"},"1:9589":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"17:9065":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"21:0":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"1:47214":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"4:11977":{"crate_id":4,"path":["std","process","CommandArgs"],"kind":"struct"},"17:4008":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"24:573":{"crate_id":24,"path":["libc","unix","winsize"],"kind":"struct"},"1:7702":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"18:694":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"23:8119":{"crate_id":23,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"25:9826":{"crate_id":25,"path":["object","endian","I16Bytes"],"kind":"struct"},"23:7386":{"crate_id":23,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"18:136":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"5:3390":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"4:12089":{"crate_id":4,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"25:12643":{"crate_id":25,"path":["object","macho","MachHeader32"],"kind":"struct"},"23:7022":{"crate_id":23,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"0:743":{"crate_id":0,"path":["backtrace","PrintFmt","Full"],"kind":"variant"},"17:13318":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"6:90":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:10372":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:12266":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher","next_back"],"kind":"foreign_type"},"25:10827":{"crate_id":25,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:47764":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:12155":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"25:10571":{"crate_id":25,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"23:7440":{"crate_id":23,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"25:10393":{"crate_id":25,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:11947":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:10304":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"4:7544":{"crate_id":4,"path":["backtrace","IntoIter"],"kind":"typedef"},"25:9702":{"crate_id":25,"path":["object","endian","BigEndian"],"kind":"struct"},"6:1653":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"18:782":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"25:13567":{"crate_id":25,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:12795":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:5949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"4:15811":{"crate_id":4,"path":["std","bool"],"kind":"primitive"},"4:11996":{"crate_id":4,"path":["std","process","ExitStatus"],"kind":"struct"},"25:11401":{"crate_id":25,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"4:9610":{"crate_id":4,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"6:4084":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"23:8257":{"crate_id":23,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"4:15231":{"crate_id":4,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:13819":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"20:11":{"crate_id":20,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:11337":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"24:5813":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:1660":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:7772":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator","len"],"kind":"foreign_type"},"4:4042":{"crate_id":4,"path":["std","io","error","Result"],"kind":"typedef"},"16:5580":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"23:7513":{"crate_id":23,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"16:3091":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"25:12858":{"crate_id":25,"path":["object","macho","SubClientCommand"],"kind":"struct"},"23:209":{"crate_id":23,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"25:14303":{"crate_id":25,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:51901":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:9801":{"crate_id":1,"path":["core","hash","Hasher","write"],"kind":"foreign_type"},"25:12792":{"crate_id":25,"path":["object","macho","Fvmlib"],"kind":"struct"},"26:754":{"crate_id":26,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"4:12731":{"crate_id":4,"path":["std","sys","unix","fs","File"],"kind":"struct"},"20:209":{"crate_id":20,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"23:3537":{"crate_id":23,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"12:877":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:8622":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:11519":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:12168":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"25:14486":{"crate_id":25,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:6106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:3161":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:2923":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:21836":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:5632":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"4:15832":{"crate_id":4,"path":["std","isize"],"kind":"primitive"},"1:50041":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"25:12845":{"crate_id":25,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"23:0":{"crate_id":23,"path":["gimli"],"kind":"module"},"1:23272":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"25:13349":{"crate_id":25,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:1731":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:13772":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:12142":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"25:14676":{"crate_id":25,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"6:4316":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"4:15823":{"crate_id":4,"path":["std","i16"],"kind":"primitive"},"1:51623":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"23:7653":{"crate_id":23,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:10458":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"23:194":{"crate_id":23,"path":["gimli","read","util","ArrayLike"],"kind":"trait"},"1:7698":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"25:14274":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"25:11034":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:9961":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"5:1070":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"23:7566":{"crate_id":23,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:54515":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:47637":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"12:1200":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:45487":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:6594":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"24:4898":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"24:4228":{"crate_id":24,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"25:2583":{"crate_id":25,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:44845":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"23:8391":{"crate_id":23,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"4:10895":{"crate_id":4,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:10477":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"23:6756":{"crate_id":23,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"18:650":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"25:9973":{"crate_id":25,"path":["object","read","util","ByteString"],"kind":"struct"},"5:7424":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:11996":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"4:11497":{"crate_id":4,"path":["std","path","Prefix"],"kind":"enum"},"4:13677":{"crate_id":4,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:7747":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator","next_back"],"kind":"foreign_type"},"17:9971":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"12:2032":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:12051":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:12537":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"25:11588":{"crate_id":25,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:10912":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:10337":{"crate_id":1,"path":["backtrace","Item"],"kind":"typedef"},"5:4783":{"crate_id":5,"path":["backtrace","Target"],"kind":"typedef"},"17:10950":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:48419":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:12632":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"23:7995":{"crate_id":23,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"24:1500":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:45142":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"23:3765":{"crate_id":23,"path":["gimli","common","DwoId"],"kind":"struct"},"24:5999":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","termios2"],"kind":"struct"},"6:1597":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:10477":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"24:5093":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"25:160":{"crate_id":25,"path":["object","pod","Pod"],"kind":"trait"},"5:3457":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:7441":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"25:9898":{"crate_id":25,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:45059":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"4:7543":{"crate_id":4,"path":["backtrace","Item"],"kind":"typedef"},"4:6334":{"crate_id":4,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"14:194":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:47851":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"25:12429":{"crate_id":25,"path":["object","elf","Verneed"],"kind":"struct"},"24:3755":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"4:1419":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"23:5199":{"crate_id":23,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:7251":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"17:11640":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"24:5961":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:4059":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:3184":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"4:6450":{"crate_id":4,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:3476":{"crate_id":1,"path":["core","ops","try_trait","FromResidual","from_residual"],"kind":"foreign_type"},"6:6839":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:7477":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"25:2606":{"crate_id":25,"path":["object","read","elf","relocation","Rel"],"kind":"trait"},"4:15210":{"crate_id":4,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:11118":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"25:14266":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:4051":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"23:8330":{"crate_id":23,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"4:12215":{"crate_id":4,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:13154":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:6051":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"4:4991":{"crate_id":4,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"4:4716":{"crate_id":4,"path":["std","io","BufRead","read_line"],"kind":"foreign_type"},"25:11307":{"crate_id":25,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"5:7586":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:6793":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:3991":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"24:5772":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"4:9250":{"crate_id":4,"path":["std","lazy","SyncLazy"],"kind":"struct"},"17:13898":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:10515":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"4:2046":{"crate_id":4,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"23:4493":{"crate_id":23,"path":["gimli","constants","DwChildren"],"kind":"struct"},"23:6596":{"crate_id":23,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"18:744":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"23:8780":{"crate_id":23,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:13062":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"4:15817":{"crate_id":4,"path":["std","slice"],"kind":"primitive"},"16:6964":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:45199":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:12182":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"12:1159":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"24:3715":{"crate_id":24,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:13564":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"25:10622":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"5:4882":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:5155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"4:3998":{"crate_id":4,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"25:12143":{"crate_id":25,"path":["object","elf","SectionHeader32"],"kind":"struct"},"5:4763":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:3081":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"24:5870":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"4:3726":{"crate_id":4,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:7517":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"24:5783":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"4:5739":{"crate_id":4,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:6127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:23279":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"25:12400":{"crate_id":25,"path":["object","elf","Verdef"],"kind":"struct"},"4:2987":{"crate_id":4,"path":["backtrace","Target"],"kind":"typedef"},"4:15285":{"crate_id":4,"path":["std","alloc","System"],"kind":"struct"},"5:672":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"23:8227":{"crate_id":23,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"9:469":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"4:1522":{"crate_id":4,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:2003":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"16:5505":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"23:8401":{"crate_id":23,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"24:1819":{"crate_id":24,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"4:15813":{"crate_id":4,"path":["std","char"],"kind":"primitive"},"6:3944":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:6807":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:10938":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:46473":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:46293":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:13054":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"23:6039":{"crate_id":23,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"4:2453":{"crate_id":4,"path":["std","error","Error"],"kind":"trait"},"24:6599":{"crate_id":24,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"4:5764":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt","mtime"],"kind":"foreign_type"},"4:1390":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"4:8994":{"crate_id":4,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:48357":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"4:15044":{"crate_id":4,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"24:4954":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:9574":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"25:12216":{"crate_id":25,"path":["object","elf","Sym32"],"kind":"struct"},"4:9492":{"crate_id":4,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"25:2921":{"crate_id":25,"path":["object","read","elf","note","NoteHeader"],"kind":"trait"},"17:10407":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"24:1537":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:13386":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"24:1493":{"crate_id":24,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:13348":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"12:463":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:45119":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"24:6543":{"crate_id":24,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:4005":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:3116":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"4:10903":{"crate_id":4,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"25:4567":{"crate_id":25,"path":["object","read","pe","file","ImageNtHeaders"],"kind":"trait"},"1:10671":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"4:10863":{"crate_id":4,"path":["std","fs","Permissions"],"kind":"struct"},"23:6982":{"crate_id":23,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:9215":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"28:46":{"crate_id":28,"path":["adler","algo","U32X4"],"kind":"struct"},"25:13023":{"crate_id":25,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:3522":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:50089":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"12:2039":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:665":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"24:4205":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"25:10365":{"crate_id":25,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:1517":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"25:83":{"crate_id":25,"path":["object","endian","NativeEndian"],"kind":"typedef"},"4:2636":{"crate_id":4,"path":["std","error","Indented"],"kind":"struct"},"17:11358":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:10403":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:47809":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:4232":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:23186":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"4:8116":{"crate_id":4,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:9603":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:12343":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:12464":{"crate_id":1,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"25:13918":{"crate_id":25,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:2527":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:1535":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:4180":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"23:5615":{"crate_id":23,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:509":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"18:712":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:2613":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"25:11613":{"crate_id":25,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"5:3857":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:27027":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"25:12582":{"crate_id":25,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:51560":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:12712":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"4:4694":{"crate_id":4,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:4386":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"25:11136":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"24:3748":{"crate_id":24,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:47029":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:5015":{"crate_id":1,"path":["core","iter"],"kind":"module"},"23:6583":{"crate_id":23,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"25:14456":{"crate_id":25,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:47736":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"4:9727":{"crate_id":4,"path":["std","sys_common","rwlock","StaticRWLockReadGuard"],"kind":"struct"},"0:869":{"crate_id":0,"path":["backtrace","BacktraceFrame"],"kind":"struct"},"25:12183":{"crate_id":25,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"6:6057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:6780":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"12:1235":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"24:3709":{"crate_id":24,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:7786":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:21798":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:2008":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"12:2025":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:9849":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:23556":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"23:5722":{"crate_id":23,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:51822":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:5672":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"4:11393":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:49726":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"24:3626":{"crate_id":24,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:7897":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","size_hint"],"kind":"foreign_type"},"1:51833":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:7895":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","Item"],"kind":"foreign_type"},"17:12568":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"23:5170":{"crate_id":23,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:10827":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"6:5130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"25:10483":{"crate_id":25,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"4:8272":{"crate_id":4,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"25:14062":{"crate_id":25,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"4:8673":{"crate_id":4,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"23:8316":{"crate_id":23,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"26:782":{"crate_id":26,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:3055":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:31274":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:44490":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:4440":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"4:12220":{"crate_id":4,"path":["std","time","Instant"],"kind":"struct"},"6:6151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:4968":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:7956":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","partition"],"kind":"foreign_type"},"17:11572":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"4:6801":{"crate_id":4,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:7896":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","next"],"kind":"foreign_type"},"24:3791":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"27:41":{"crate_id":27,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:10438":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"25:14008":{"crate_id":25,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"25:5296":{"crate_id":25,"path":["object","read","traits","ObjectSection"],"kind":"trait"},"26:790":{"crate_id":26,"path":["memchr","memmem","FindIter"],"kind":"struct"},"25:13978":{"crate_id":25,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"4:3212":{"crate_id":4,"path":["std","fs","read_to_string"],"kind":"function"},"1:7981":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","is_partitioned"],"kind":"foreign_type"},"16:6718":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"0:70":{"crate_id":0,"path":["backtrace","resolve_frame"],"kind":"function"},"5:4445":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:10028":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:12456":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:46509":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"24:4197":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"12:1100":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:1090":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"26:704":{"crate_id":26,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:9809":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:50453":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"4:10652":{"crate_id":4,"path":["std","env","JoinPathsError"],"kind":"struct"},"4:5766":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt","ctime"],"kind":"foreign_type"},"0:175":{"crate_id":0,"path":["backtrace","BacktraceFrameFmt"],"kind":"struct"},"24:5113":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"25:13362":{"crate_id":25,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"24:1618":{"crate_id":24,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:47189":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:2945":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"6:3999":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"25:2524":{"crate_id":25,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"4:3638":{"crate_id":4,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"25:14662":{"crate_id":25,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"5:663":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"23:457":{"crate_id":23,"path":["gimli","read","cfi","UnwindSection"],"kind":"trait"},"5:7418":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"25:13248":{"crate_id":25,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"23:3418":{"crate_id":23,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:8659":{"crate_id":1,"path":["backtrace","Target"],"kind":"typedef"},"25:12022":{"crate_id":25,"path":["object","read","CompressedData"],"kind":"struct"},"17:10502":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:10584":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:46901":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"17:11628":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"12:949":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:54476":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"25:13218":{"crate_id":25,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:11159":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:44672":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:4388":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:7279":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:21838":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:6694":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"25:1853":{"crate_id":25,"path":["object","read","elf","segment","ProgramHeader"],"kind":"trait"},"1:8270":{"crate_id":1,"path":["core","lazy","Lazy"],"kind":"struct"},"23:8140":{"crate_id":23,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"23:6427":{"crate_id":23,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"4:14778":{"crate_id":4,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:12950":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"25:12163":{"crate_id":25,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:9595":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"24:1611":{"crate_id":24,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:7250":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"4:12131":{"crate_id":4,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:13637":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:10657":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"23:5043":{"crate_id":23,"path":["gimli","constants","DwAte"],"kind":"struct"},"4:9054":{"crate_id":4,"path":["backtrace","Target"],"kind":"typedef"},"16:7378":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:10814":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:2968":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:3936":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"25:11438":{"crate_id":25,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:12179":{"crate_id":1,"path":["core","str","traits","FromStr","Err"],"kind":"foreign_type"},"1:4030":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"4:6874":{"crate_id":4,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:49707":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"24:3703":{"crate_id":24,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"23:6998":{"crate_id":23,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"25:14448":{"crate_id":25,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:4671":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:51796":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:9531":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"4:7675":{"crate_id":4,"path":["std","process","Command"],"kind":"struct"},"23:3006":{"crate_id":23,"path":["gimli","common","Format"],"kind":"enum"},"1:23716":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:11499":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:44373":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"4:976":{"crate_id":4,"path":["std","ascii","AsciiExt","make_ascii_uppercase"],"kind":"foreign_type"},"1:9792":{"crate_id":1,"path":["core","hash","Hash","hash_slice"],"kind":"foreign_type"},"23:6265":{"crate_id":23,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"24:1653":{"crate_id":24,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"24:513":{"crate_id":24,"path":["libc","unix","timespec"],"kind":"struct"},"5:3032":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"12:976":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:8929":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:9599":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"25:27":{"crate_id":25,"path":["object","endian","Endian"],"kind":"trait"},"1:49746":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"25:10151":{"crate_id":25,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:10052":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"5:7493":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:14":{"crate_id":1,"path":["core","write"],"kind":"macro"},"12:925":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"20:182":{"crate_id":20,"path":["rustc_demangle","v0","Invalid"],"kind":"struct"},"16:4734":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:1579":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:3320":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:7754":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator","rfold"],"kind":"foreign_type"},"17:12480":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"4:9598":{"crate_id":4,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"25:13421":{"crate_id":25,"path":["object","macho","Relocation"],"kind":"struct"},"18:820":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"4:984":{"crate_id":4,"path":["backtrace","Owned"],"kind":"typedef"},"1:22091":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:11277":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"12:1253":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:10643":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:44904":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"25:10191":{"crate_id":25,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:4012":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:44914":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:7024":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:5330":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:3714":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"23:6867":{"crate_id":23,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"23:7476":{"crate_id":23,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"4:798":{"crate_id":4,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"25:11119":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:50237":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:21":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"5:2075":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:4188":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:54489":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:9789":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"24:3798":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:4790":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:10224":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:12031":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:0":{"crate_id":1,"path":["core"],"kind":"module"},"23:5924":{"crate_id":23,"path":["gimli","constants","DwOp"],"kind":"struct"},"5:5734":{"crate_id":5,"path":["backtrace","Target"],"kind":"typedef"},"5:7620":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"5:2795":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"4:2050":{"crate_id":4,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"4:15814":{"crate_id":4,"path":["std","unit"],"kind":"primitive"},"4:15563":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"25:5260":{"crate_id":25,"path":["object","read","traits","Object","section_by_name"],"kind":"foreign_type"},"18:837":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"9:809":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"18:729":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"4:11301":{"crate_id":4,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"23:6192":{"crate_id":23,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"23:5483":{"crate_id":23,"path":["gimli","constants","DwDsc"],"kind":"struct"},"4:11479":{"crate_id":4,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:6810":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:11082":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"5:5240":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"23:8284":{"crate_id":23,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"24:4075":{"crate_id":24,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"23:6644":{"crate_id":23,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"25:11553":{"crate_id":25,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"18:754":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"23:3218":{"crate_id":23,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:9528":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"4:11647":{"crate_id":4,"path":["std","path","Ancestors"],"kind":"struct"},"1:44981":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"26:610":{"crate_id":26,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:3022":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:50189":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:13098":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:45171":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:11980":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:50064":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:44580":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"24:6019":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:9729":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"4:1386":{"crate_id":4,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:5488":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"4:2324":{"crate_id":4,"path":["std","env","SplitPaths"],"kind":"struct"},"1:46185":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"25:9510":{"crate_id":25,"path":["object","common","RelocationKind"],"kind":"enum"},"25:11571":{"crate_id":25,"path":["object","read","pe","import","Import"],"kind":"enum"},"25:10923":{"crate_id":25,"path":["object","read","elf","version","Version"],"kind":"struct"},"4:10326":{"crate_id":4,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:13733":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:1703":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:4297":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:3171":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"4:12360":{"crate_id":4,"path":["std","sys","unix","args","Args"],"kind":"struct"},"4:4633":{"crate_id":4,"path":["std","io","Read","read_to_end"],"kind":"foreign_type"},"4:12038":{"crate_id":4,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"17:299":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:46074":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:3108":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"23:7012":{"crate_id":23,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:0":{"crate_id":6,"path":["libc"],"kind":"module"},"16:4506":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:4286":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:23163":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"15:248":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:13620":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"4:6802":{"crate_id":4,"path":["std","os","linux","process","CommandExt","create_pidfd"],"kind":"foreign_type"},"25:11645":{"crate_id":25,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:582":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:1542":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"25:13850":{"crate_id":25,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:5971":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:46083":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"4:9280":{"crate_id":4,"path":["backtrace","Target"],"kind":"typedef"},"5:816":{"crate_id":5,"path":["backtrace","Target"],"kind":"typedef"},"16:7549":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"4:13440":{"crate_id":4,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:10117":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:11186":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"4:7661":{"crate_id":4,"path":["std","process","ChildStderr"],"kind":"struct"},"1:47754":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"4:10387":{"crate_id":4,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:11714":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:12971":{"crate_id":1,"path":["backtrace","Output"],"kind":"typedef"},"5:2095":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:47205":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"25:13309":{"crate_id":25,"path":["object","macho","IdentCommand"],"kind":"struct"},"25:12565":{"crate_id":25,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"9:0":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:11962":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"25:3489":{"crate_id":25,"path":["object","read","macho","file","MachHeader"],"kind":"trait"},"1:3262":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:47901":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:49621":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"24:6433":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:5231":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:4995":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"12:181":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"27:472":{"crate_id":27,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:5227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:22735":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"23:3468":{"crate_id":23,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"12:866":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:4330":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"27:606":{"crate_id":27,"path":["miniz_oxide","inflate","stream","ResetPolicy"],"kind":"trait"},"25:12388":{"crate_id":25,"path":["object","elf","Versym"],"kind":"struct"},"6:597":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:7903":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","advance_by"],"kind":"foreign_type"},"4:10613":{"crate_id":4,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:11555":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:9900":{"crate_id":1,"path":["core","slice"],"kind":"module"},"4:11166":{"crate_id":4,"path":["std","io","Take"],"kind":"struct"},"25:0":{"crate_id":25,"path":["object"],"kind":"module"},"0:740":{"crate_id":0,"path":["backtrace","PrintFmt"],"kind":"enum"},"18:766":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:48213":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:5468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"4:11219":{"crate_id":4,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"17:9210":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:9088":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:10236":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:7913":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","map"],"kind":"foreign_type"},"5:69":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:3896":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"18:866":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:5855":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"12:1180":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:10253":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"4:5734":{"crate_id":4,"path":["std","os","unix","fs","FileExt","write_at"],"kind":"foreign_type"},"1:2701":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"23:7160":{"crate_id":23,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"24:75":{"crate_id":24,"path":["libc","unix","DIR"],"kind":"enum"},"1:4982":{"crate_id":1,"path":["backtrace","Target"],"kind":"typedef"},"5:1426":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"25:5330":{"crate_id":25,"path":["object","read","traits","ObjectSymbol"],"kind":"trait"},"23:5648":{"crate_id":23,"path":["gimli","constants","DwLnct"],"kind":"struct"},"24:3941":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"25:9862":{"crate_id":25,"path":["object","endian","I32Bytes"],"kind":"struct"},"4:4646":{"crate_id":4,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:44974":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:4132":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"24:501":{"crate_id":24,"path":["libc","unix","utimbuf"],"kind":"struct"},"4:14584":{"crate_id":4,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:10344":{"crate_id":1,"path":["backtrace","IntoIter"],"kind":"typedef"},"1:44449":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:3256":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"4:12240":{"crate_id":4,"path":["std","time","SystemTime"],"kind":"struct"},"23:3514":{"crate_id":23,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:7205":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:5920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"4:14940":{"crate_id":4,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:12261":{"crate_id":1,"path":["core","str","pattern","Searcher","next"],"kind":"foreign_type"},"5:1496":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"25:514":{"crate_id":25,"path":["object","read","any","Segment"],"kind":"struct"},"24:1482":{"crate_id":24,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"25:14285":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"23:6320":{"crate_id":23,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:48408":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:4230":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:0":{"crate_id":17,"path":["object"],"kind":"module"},"16:4614":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:49548":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:9034":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"25:11972":{"crate_id":25,"path":["object","read","Relocation"],"kind":"struct"},"4:12450":{"crate_id":4,"path":["std","sys","unix","condvar","Condvar"],"kind":"struct"},"1:50112":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:6098":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:50374":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"23:5516":{"crate_id":23,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:589":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:7870":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:36219":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:48236":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"24:6012":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ip_mreqn"],"kind":"struct"},"25:5353":{"crate_id":25,"path":["object","read","private","Sealed"],"kind":"trait"},"4:8782":{"crate_id":4,"path":["backtrace","Target"],"kind":"typedef"},"17:10448":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"4:8629":{"crate_id":4,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:22041":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:10975":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:2733":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:45110":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"25:13966":{"crate_id":25,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:13282":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"25:10022":{"crate_id":25,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:12040":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"0:864":{"crate_id":0,"path":["backtrace","Backtrace"],"kind":"struct"},"25:10383":{"crate_id":25,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"4:4425":{"crate_id":4,"path":["std","io","stdio","Stdout"],"kind":"struct"},"0:100":{"crate_id":0,"path":["backtrace","SymbolName"],"kind":"struct"},"6:4339":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:6787":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"27:798":{"crate_id":27,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"23:62":{"crate_id":23,"path":["gimli","endianity","Endianity"],"kind":"trait"},"6:3857":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"24:3804":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:2311":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:44889":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"24:1682":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"4:11658":{"crate_id":4,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:13465":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"24:4135":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"25:13956":{"crate_id":25,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"23:8794":{"crate_id":23,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:55701":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:48541":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"12:968":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"23:8495":{"crate_id":23,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"25:14588":{"crate_id":25,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:12659":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"4:15816":{"crate_id":4,"path":["std","array"],"kind":"primitive"},"25:10539":{"crate_id":25,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"25:11875":{"crate_id":25,"path":["object","read","Import"],"kind":"struct"},"4:15779":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:7571":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"24:6531":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"23:5110":{"crate_id":23,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:51924":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:3232":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"24:4166":{"crate_id":24,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:3102":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:23812":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:9600":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"16:6518":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"25:11375":{"crate_id":25,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:48561":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:4654":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"4:15294":{"crate_id":4,"path":["std","panicking","Hook"],"kind":"enum"},"4:5787":{"crate_id":4,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"25:14153":{"crate_id":25,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"24:3639":{"crate_id":24,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"26:857":{"crate_id":26,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:3299":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"25:14030":{"crate_id":25,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"24:5262":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"23:8710":{"crate_id":23,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"4:4468":{"crate_id":4,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:11767":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:7843":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:3483":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:46091":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"17:12431":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"4:5665":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:45442":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:44534":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"24:148":{"crate_id":24,"path":["libc","unix","fpos_t"],"kind":"enum"},"4:11192":{"crate_id":4,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"1:49963":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:5753":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:9118":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:9719":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"23:189":{"crate_id":23,"path":["gimli","read","util","sealed","Sealed"],"kind":"trait"},"5:7501":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"13:120":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"4:10656":{"crate_id":4,"path":["std","error","private","Internal"],"kind":"struct"},"17:13788":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"4:5753":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"25:14164":{"crate_id":25,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"4:11588":{"crate_id":4,"path":["std","path","Component"],"kind":"enum"},"4:9605":{"crate_id":4,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"4:8740":{"crate_id":4,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"24:6560":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:1314":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:4378":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:3018":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"5:874":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"25:10318":{"crate_id":25,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:4448":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"23:7604":{"crate_id":23,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"25:12050":{"crate_id":25,"path":["object","archive","Header"],"kind":"struct"},"24:3951":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"12:112":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:6006":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:13163":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"25:299":{"crate_id":25,"path":["object","read","util","DebugLen"],"kind":"struct"},"4:10526":{"crate_id":4,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:11665":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"24:3663":{"crate_id":24,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"4:0":{"crate_id":4,"path":["std"],"kind":"module"},"17:11915":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:9368":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"24:4843":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:3495":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"6:3801":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"5:7721":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:13041":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"25:14296":{"crate_id":25,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:45230":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"25:13756":{"crate_id":25,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:5214":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"25:10979":{"crate_id":25,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"23:8068":{"crate_id":23,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"24:4089":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:49813":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:46943":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"25:12290":{"crate_id":25,"path":["object","elf","Rela32"],"kind":"struct"},"6:4201":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:1528":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:12124":{"crate_id":1,"path":["backtrace","Output"],"kind":"typedef"},"1:11710":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:48565":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:12221":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"4:9681":{"crate_id":4,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"4:14136":{"crate_id":4,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"23:7542":{"crate_id":23,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:7996":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","fold"],"kind":"foreign_type"},"1:45014":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:7910":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","intersperse"],"kind":"foreign_type"},"4:1918":{"crate_id":4,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:4324":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"24:551":{"crate_id":24,"path":["libc","unix","hostent"],"kind":"struct"},"24:3878":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:2094":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"23:3783":{"crate_id":23,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:891":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:2993":{"crate_id":1,"path":["core","default","Default","default"],"kind":"foreign_type"},"23:6619":{"crate_id":23,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"25:13898":{"crate_id":25,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"4:11641":{"crate_id":4,"path":["std","path","Iter"],"kind":"struct"},"16:5456":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:1832":{"crate_id":1,"path":["core","mem"],"kind":"module"},"23:8473":{"crate_id":23,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:9886":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"11:0":{"crate_id":11,"path":["adler"],"kind":"module"},"24:3818":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:13590":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"5:2796":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"25:10992":{"crate_id":25,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"4:12056":{"crate_id":4,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"25:3867":{"crate_id":25,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:630":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"6:5136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"26:837":{"crate_id":26,"path":["memchr","memmem","Searcher"],"kind":"struct"},"24:1507":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"25:11981":{"crate_id":25,"path":["object","read","CompressionFormat"],"kind":"enum"},"23:6804":{"crate_id":23,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"25:14240":{"crate_id":25,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"6:6685":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:12552":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"16:5927":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:12239":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"16:6032":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:5359":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"24:519":{"crate_id":24,"path":["libc","unix","rlimit"],"kind":"struct"},"4:8393":{"crate_id":4,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"1:2920":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"16:3800":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"26:152":{"crate_id":26,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"23:5688":{"crate_id":23,"path":["gimli","constants","DwMacro"],"kind":"struct"},"24:1629":{"crate_id":24,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"25:12266":{"crate_id":25,"path":["object","elf","Syminfo64"],"kind":"struct"},"4:7114":{"crate_id":4,"path":["std","panic","always_abort"],"kind":"function"},"17:13554":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"4:7613":{"crate_id":4,"path":["std","process","Child"],"kind":"struct"},"12:0":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"26:849":{"crate_id":26,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"4:10412":{"crate_id":4,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:3133":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"16:3145":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"4:4044":{"crate_id":4,"path":["std","io","error","Error"],"kind":"struct"},"17:13370":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"24:5730":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"4:1052":{"crate_id":4,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:13582":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"6:5381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:9264":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"4:11281":{"crate_id":4,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"4:11571":{"crate_id":4,"path":["std","path","PrefixComponent"],"kind":"struct"},"24:4968":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"4:11452":{"crate_id":4,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:51776":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"25:13092":{"crate_id":25,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:22182":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"25:11074":{"crate_id":25,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"4:11315":{"crate_id":4,"path":["std","net","tcp","Incoming"],"kind":"struct"},"5:0":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:5316":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:10200":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"25:13863":{"crate_id":25,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"4:627":{"crate_id":4,"path":["std","thread","local","LocalKey"],"kind":"struct"},"4:4685":{"crate_id":4,"path":["std","io","Write"],"kind":"trait"},"23:6288":{"crate_id":23,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:12373":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:48778":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:13506":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"26:885":{"crate_id":26,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"23:6842":{"crate_id":23,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"5:5195":{"crate_id":5,"path":["backtrace","Output"],"kind":"typedef"},"1:23908":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"24:6554":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"18:610":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"4:4628":{"crate_id":4,"path":["std","io","Read"],"kind":"trait"},"23:3638":{"crate_id":23,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:4":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"6:1718":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:12118":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"24:5738":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:48251":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"4:15828":{"crate_id":4,"path":["std","u16"],"kind":"primitive"},"1:46661":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:8849":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"4:11548":{"crate_id":4,"path":["std","path","State"],"kind":"enum"},"12:784":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:11970":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"4:4691":{"crate_id":4,"path":["std","io","Write","write_all"],"kind":"foreign_type"},"25:10231":{"crate_id":25,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:4122":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:5986":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:4452":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:45271":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"4:6568":{"crate_id":4,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"4:10692":{"crate_id":4,"path":["std","ffi","c_str","NulError"],"kind":"struct"},"25:10111":{"crate_id":25,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"4:6454":{"crate_id":4,"path":["std","os","unix","process","CommandExt","pre_exec"],"kind":"foreign_type"},"1:3014":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"17:13520":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"25:11623":{"crate_id":25,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:10106":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"24:592":{"crate_id":24,"path":["libc","unix","itimerval"],"kind":"struct"},"17:9649":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"4:5983":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:5206":{"crate_id":5,"path":["backtrace","Owned"],"kind":"typedef"},"24:3973":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"23:8098":{"crate_id":23,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:46151":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:10629":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:46925":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"16:6644":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"4:14647":{"crate_id":4,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"25:12417":{"crate_id":25,"path":["object","elf","Verdaux"],"kind":"struct"},"1:23125":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"5:1968":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:11691":{"crate_id":1,"path":["backtrace","Item"],"kind":"typedef"},"24:525":{"crate_id":24,"path":["libc","unix","rusage"],"kind":"struct"},"5:7449":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:9712":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"4:10994":{"crate_id":4,"path":["std","io","error","Custom"],"kind":"struct"},"17:13205":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:7951":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","collect"],"kind":"foreign_type"},"17:11993":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"23:5583":{"crate_id":23,"path":["gimli","constants","DwLns"],"kind":"struct"},"23:7702":{"crate_id":23,"path":["gimli","read","op","DieReference"],"kind":"enum"},"27:1042":{"crate_id":27,"path":["miniz_oxide","MZError"],"kind":"enum"},"25:11062":{"crate_id":25,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"25:12937":{"crate_id":25,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"23:7491":{"crate_id":23,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"4:6696":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:10095":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"25:10777":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:3128":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"5:1468":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"18:720":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"0:236":{"crate_id":0,"path":["backtrace","Frame"],"kind":"struct"},"25:2350":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:9133":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"4:15784":{"crate_id":4,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"4:15833":{"crate_id":4,"path":["std","usize"],"kind":"primitive"},"16:4890":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:10061":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:50740":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:6036":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:7943":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","flat_map"],"kind":"foreign_type"},"4:8901":{"crate_id":4,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:51748":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:37460":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:48330":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"13:232":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"4:2053":{"crate_id":4,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:3366":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"4:2288":{"crate_id":4,"path":["std","env","VarsOs"],"kind":"struct"},"25:689":{"crate_id":25,"path":["object","read","any","Symbol"],"kind":"struct"},"25:11021":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:1522":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"23:4339":{"crate_id":23,"path":["gimli","constants","DwSect"],"kind":"struct"},"4:15038":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"24:3620":{"crate_id":24,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"4:11252":{"crate_id":4,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"17:10516":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:12287":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"5:3830":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:4430":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"25:14574":{"crate_id":25,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"4:7330":{"crate_id":4,"path":["std","path","PathBuf"],"kind":"struct"},"1:7908":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","zip"],"kind":"foreign_type"},"25:11637":{"crate_id":25,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"16:6768":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"25:10675":{"crate_id":25,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"23:3314":{"crate_id":23,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:13488":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:46022":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"5:2801":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:50137":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:6303":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"14:47":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:3167":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"24:3999":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"25:4284":{"crate_id":25,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:46014":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"24:4058":{"crate_id":24,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:22193":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:12327":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:4955":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"25:9632":{"crate_id":25,"path":["object","common","SymbolFlags"],"kind":"enum"},"24:1555":{"crate_id":24,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"25:9996":{"crate_id":25,"path":["object","read","util","StringTable"],"kind":"struct"},"16:6620":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"4:7647":{"crate_id":4,"path":["std","process","ChildStdout"],"kind":"struct"},"4:914":{"crate_id":4,"path":["std","thread","Packet"],"kind":"struct"},"4:2074":{"crate_id":4,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:693":{"crate_id":5,"path":["backtrace","Target"],"kind":"typedef"},"26:739":{"crate_id":26,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:48350":{"crate_id":1,"path":["backtrace","Searcher"],"kind":"typedef"},"4:5021":{"crate_id":4,"path":["backtrace","Iter"],"kind":"typedef"},"4:8457":{"crate_id":4,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:510":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:7181":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"23:4465":{"crate_id":23,"path":["gimli","constants","DwCfa"],"kind":"struct"},"4:12260":{"crate_id":4,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:54463":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:6586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"23:7921":{"crate_id":23,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:2914":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"5:3512":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:5522":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"18:667":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:46160":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"25:12235":{"crate_id":25,"path":["object","elf","Sym64"],"kind":"struct"},"25:10423":{"crate_id":25,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:4142":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:48557":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:45180":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:4889":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:11588":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"4:10919":{"crate_id":4,"path":["std","io","cursor","Cursor"],"kind":"struct"},"4:3347":{"crate_id":4,"path":["std","fs","canonicalize"],"kind":"function"},"16:6238":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"9:927":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"4:7963":{"crate_id":4,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"1:10396":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"17:12467":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:9005":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:517":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"4:1335":{"crate_id":4,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"0:22":{"crate_id":0,"path":["backtrace","trace_unsynchronized"],"kind":"function"},"4:10911":{"crate_id":4,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:13912":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:13942":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:0":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"16:6252":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"25:1254":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"25:13777":{"crate_id":25,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:47723":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:13252":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:10588":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"12:774":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:3179":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"4:4715":{"crate_id":4,"path":["std","io","BufRead","read_until"],"kind":"foreign_type"},"25:11451":{"crate_id":25,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"25:10739":{"crate_id":25,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:45072":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"4:2470":{"crate_id":4,"path":["std","error","from","StringError"],"kind":"struct"},"4:2068":{"crate_id":4,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"25:12002":{"crate_id":25,"path":["object","read","CompressedFileRange"],"kind":"struct"},"4:10628":{"crate_id":4,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:23620":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"26:801":{"crate_id":26,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"25:10646":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:44927":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:7463":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"4:4382":{"crate_id":4,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:6172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:5509":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:7264":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:48150":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"24:1570":{"crate_id":24,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:7637":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"4:12200":{"crate_id":4,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:9591":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"24:5105":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:3265":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"9:1075":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"4:10734":{"crate_id":4,"path":["std","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"4:5870":{"crate_id":4,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"1:45029":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:3155":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"23:3116":{"crate_id":23,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"25:9790":{"crate_id":25,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:3911":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:12307":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:6682":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:3820":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"4:3648":{"crate_id":4,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"4:6470":{"crate_id":4,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"25:2110":{"crate_id":25,"path":["object","read","elf","section","SectionHeader"],"kind":"trait"},"1:48569":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:51963":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"25:614":{"crate_id":25,"path":["object","read","any","Comdat"],"kind":"struct"},"6:6136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"24:3853":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"5:6764":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"4:5762":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt","atime"],"kind":"foreign_type"},"17:10611":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"24:4176":{"crate_id":24,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:50806":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:13685":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:6999":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"5:803":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"23:5397":{"crate_id":23,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:7856":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"23:7640":{"crate_id":23,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"4:4686":{"crate_id":4,"path":["std","io","Write","write"],"kind":"foreign_type"},"1:11699":{"crate_id":1,"path":["core","str"],"kind":"module"},"23:1185":{"crate_id":23,"path":["gimli","read","reader","ReaderOffset"],"kind":"trait"},"18:801":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"24:4991":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nlmsgerr"],"kind":"struct"},"4:15307":{"crate_id":4,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"9:234":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"16:7360":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"4:14566":{"crate_id":4,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"4:722":{"crate_id":4,"path":["std","thread","local","os","Key"],"kind":"struct"},"5:3500":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"24:5754":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"4:5747":{"crate_id":4,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"4:12026":{"crate_id":4,"path":["std","process","ExitCode"],"kind":"struct"},"4:10707":{"crate_id":4,"path":["std","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"24:507":{"crate_id":24,"path":["libc","unix","timeval"],"kind":"struct"},"17:13884":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"4:10999":{"crate_id":4,"path":["std","io","error","ErrorKind"],"kind":"enum"},"5:5172":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"16:5029":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:3175":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"24:5790":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"25:10859":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"25:12303":{"crate_id":25,"path":["object","elf","Rel64"],"kind":"struct"},"25:11921":{"crate_id":25,"path":["object","read","CodeView"],"kind":"struct"},"25:4134":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"4:3345":{"crate_id":4,"path":["std","fs","read_link"],"kind":"function"},"16:3241":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:46910":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"18:0":{"crate_id":18,"path":["memchr"],"kind":"module"},"4:794":{"crate_id":4,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:10211":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"6:3844":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"9:692":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:11750":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:23588":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:45240":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:51787":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"18:677":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:46916":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"23:8041":{"crate_id":23,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:46031":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"15:269":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"24:4105":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:23748":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:45476":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:3140":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"5:6951":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:5938":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"23:5228":{"crate_id":23,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"25:4584":{"crate_id":25,"path":["object","read","pe","file","ImageOptionalHeader"],"kind":"trait"},"1:2537":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:7771":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"4:3672":{"crate_id":4,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"4:15010":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"4:6214":{"crate_id":4,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:10144":{"crate_id":1,"path":["backtrace","Output"],"kind":"typedef"},"4:1327":{"crate_id":4,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:7823":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"4:10720":{"crate_id":4,"path":["std","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"18:704":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:7430":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"12:354":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"4:6942":{"crate_id":4,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"25:9950":{"crate_id":25,"path":["object","read","util","Bytes"],"kind":"struct"},"4:12105":{"crate_id":4,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"0:88":{"crate_id":0,"path":["backtrace","Symbol"],"kind":"struct"},"25:10701":{"crate_id":25,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"20:153":{"crate_id":20,"path":["rustc_demangle","Demangle"],"kind":"struct"},"4:5996":{"crate_id":4,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:4645":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"23:7346":{"crate_id":23,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:48097":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:7158":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"23:1664":{"crate_id":23,"path":["gimli","read","line","LineProgram"],"kind":"trait"},"17:607":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"25:10071":{"crate_id":25,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"25:11664":{"crate_id":25,"path":["object","read","FileKind"],"kind":"enum"},"4:10570":{"crate_id":4,"path":["std","thread","Thread"],"kind":"struct"},"17:12507":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"5:4241":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:7073":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"23:7499":{"crate_id":23,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"18:644":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:5742":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:9551":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"24:3724":{"crate_id":24,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"4:1201":{"crate_id":4,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"25:12102":{"crate_id":25,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:5815":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:12645":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:6087":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"15:0":{"crate_id":15,"path":["addr2line"],"kind":"module"},"24:5026":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:159":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"25:10517":{"crate_id":25,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:9790":{"crate_id":1,"path":["core","hash","Hash","hash"],"kind":"foreign_type"},"16:7761":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"27:1078":{"crate_id":27,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"4:15820":{"crate_id":4,"path":["std","f32"],"kind":"primitive"},"17:9896":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"4:14274":{"crate_id":4,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:9769":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:10041":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"4:8771":{"crate_id":4,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"25:11762":{"crate_id":25,"path":["object","read","SymbolSection"],"kind":"enum"},"17:11835":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:49467":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:9264":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"25:14208":{"crate_id":25,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:10140":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:1882":{"crate_id":1,"path":["backtrace","Target"],"kind":"typedef"},"25:13699":{"crate_id":25,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"5:7704":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:48087":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"23:8302":{"crate_id":23,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"23:5966":{"crate_id":23,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"12:1855":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"23:93":{"crate_id":23,"path":["gimli","endianity","NativeEndian"],"kind":"typedef"},"16:4641":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"24:5909":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:6822":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"9:27":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"25:9487":{"crate_id":25,"path":["object","common","SymbolScope"],"kind":"enum"},"5:1302":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"25:13058":{"crate_id":25,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:547":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"4:1531":{"crate_id":4,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"24:6537":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:10128":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"25:12912":{"crate_id":25,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:9440":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:46221":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"4:4344":{"crate_id":4,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:3890":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:47197":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:48715":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:44557":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:5219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"25:11518":{"crate_id":25,"path":["object","read","pe","export","Export"],"kind":"struct"},"25:12126":{"crate_id":25,"path":["object","elf","Ident"],"kind":"struct"},"6:5112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:5404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:4072":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"23:5141":{"crate_id":23,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:23178":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"25:11803":{"crate_id":25,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:10279":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"4:14597":{"crate_id":4,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:7928":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:5075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:6828":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"25:13691":{"crate_id":25,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"18:152":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"23:7130":{"crate_id":23,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"4:7253":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"25:12328":{"crate_id":25,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"25:294":{"crate_id":25,"path":["object","read","util","DebugByte"],"kind":"struct"},"25:13932":{"crate_id":25,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"23:3185":{"crate_id":23,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"25:12612":{"crate_id":25,"path":["object","macho","FatHeader"],"kind":"struct"},"25:12254":{"crate_id":25,"path":["object","elf","Syminfo32"],"kind":"struct"},"4:10635":{"crate_id":4,"path":["std","env","VarError"],"kind":"enum"},"5:2797":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:6219":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"4:5379":{"crate_id":4,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"23:8685":{"crate_id":23,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"4:1085":{"crate_id":4,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"17:12741":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:47833":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"16:0":{"crate_id":16,"path":["gimli"],"kind":"module"},"25:2632":{"crate_id":25,"path":["object","read","elf","relocation","Rela"],"kind":"trait"},"17:12195":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:6781":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:3259":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"18:885":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:7947":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","fuse"],"kind":"foreign_type"},"12:396":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"25:12690":{"crate_id":25,"path":["object","macho","LcStr"],"kind":"struct"},"25:10801":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"24:4020":{"crate_id":24,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:2635":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"6:1695":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:13306":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:7089":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"16:4304":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"16:7342":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"23:6972":{"crate_id":23,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:48055":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:8954":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:3064":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"24:1689":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"12:1762":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:12095":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"23:5334":{"crate_id":23,"path":["gimli","constants","DwAddr"],"kind":"struct"},"25:12315":{"crate_id":25,"path":["object","elf","Rela64"],"kind":"struct"},"4:986":{"crate_id":4,"path":["backtrace","Owned"],"kind":"typedef"},"4:3329":{"crate_id":4,"path":["std","fs","metadata"],"kind":"function"},"4:8986":{"crate_id":4,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"4:9732":{"crate_id":4,"path":["std","sys_common","rwlock","StaticRWLockWriteGuard"],"kind":"struct"},"1:51767":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"4:14046":{"crate_id":4,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"12:2303":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:44995":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:3112":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:7133":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:5183":{"crate_id":5,"path":["backtrace","Output"],"kind":"typedef"},"12:556":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:49765":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"23:7666":{"crate_id":23,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"23:4175":{"crate_id":23,"path":["gimli","arch","X86"],"kind":"struct"},"17:13978":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"24:5836":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:45100":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:3905":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"4:973":{"crate_id":4,"path":["std","ascii","AsciiExt","to_ascii_uppercase"],"kind":"foreign_type"},"1:47226":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"6:4194":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"26:677":{"crate_id":26,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:44401":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:11254":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"23:6393":{"crate_id":23,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"24:4039":{"crate_id":24,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"15:230":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:541":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"4:8464":{"crate_id":4,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:6101":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"23:4997":{"crate_id":23,"path":["gimli","constants","DwForm"],"kind":"struct"},"23:5427":{"crate_id":23,"path":["gimli","constants","DwInl"],"kind":"struct"},"4:10525":{"crate_id":4,"path":["std","sealed","Sealed"],"kind":"trait"},"26:694":{"crate_id":26,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"24:566":{"crate_id":24,"path":["libc","unix","pollfd"],"kind":"struct"},"23:7946":{"crate_id":23,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"24:4013":{"crate_id":24,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"25:10892":{"crate_id":25,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:22191":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"25:12957":{"crate_id":25,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"10:0":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:12010":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:7146":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:2849":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"4:7783":{"crate_id":4,"path":["std","process","exit"],"kind":"function"},"25:13632":{"crate_id":25,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:5189":{"crate_id":5,"path":["backtrace","Output"],"kind":"typedef"},"27:708":{"crate_id":27,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:4607":{"crate_id":1,"path":["backtrace","Target"],"kind":"typedef"},"1:3042":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"25:10688":{"crate_id":25,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"25:10872":{"crate_id":25,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"4:13975":{"crate_id":4,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"14:189":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"6:6864":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:45208":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"23:6007":{"crate_id":23,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"12:1118":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"4:2286":{"crate_id":4,"path":["std","env","Vars"],"kind":"struct"},"0:884":{"crate_id":0,"path":["backtrace","BacktraceSymbol"],"kind":"struct"},"4:4703":{"crate_id":4,"path":["std","io","Seek"],"kind":"trait"},"6:4423":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:49492":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"6:1591":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"5:7539":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"23:6918":{"crate_id":23,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"25:9271":{"crate_id":25,"path":["object","common","Architecture"],"kind":"enum"},"1:2103":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"4:10989":{"crate_id":4,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"24:6411":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:50957":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"25:14600":{"crate_id":25,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:13262":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"17:10353":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:2636":{"crate_id":1,"path":["core","clone","Clone","clone"],"kind":"foreign_type"},"4:14280":{"crate_id":4,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"4:7786":{"crate_id":4,"path":["std","process","Termination"],"kind":"trait"},"23:3027":{"crate_id":23,"path":["gimli","common","Encoding"],"kind":"struct"},"6:622":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:542":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"25:14037":{"crate_id":25,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:5561":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"23:7558":{"crate_id":23,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"24:4116":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"4:13953":{"crate_id":4,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"27:922":{"crate_id":27,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:7971":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:1712":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"5:5212":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"4:9553":{"crate_id":4,"path":["std","sys_common","condvar","Condvar"],"kind":"struct"},"25:12701":{"crate_id":25,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"4:4629":{"crate_id":4,"path":["std","io","Read","read"],"kind":"foreign_type"},"25:10450":{"crate_id":25,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:11406":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:48612":{"crate_id":1,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"5:1110":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"4:11407":{"crate_id":4,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"4:12738":{"crate_id":4,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"23:7335":{"crate_id":23,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"4:1508":{"crate_id":4,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:12783":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"23:7144":{"crate_id":23,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"23:8109":{"crate_id":23,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"19:0":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"25:9686":{"crate_id":25,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:5433":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"25:14313":{"crate_id":25,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"0:741":{"crate_id":0,"path":["backtrace","PrintFmt","Short"],"kind":"variant"},"1:21783":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"25:10355":{"crate_id":25,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"27:0":{"crate_id":27,"path":["miniz_oxide"],"kind":"module"},"23:7054":{"crate_id":23,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"24:5940":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"23:7413":{"crate_id":23,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:9585":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"1:13076":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"4:9694":{"crate_id":4,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:10673":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:6014":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"4:11186":{"crate_id":4,"path":["std","io","Lines"],"kind":"struct"},"25:13130":{"crate_id":25,"path":["object","macho","UuidCommand"],"kind":"struct"},"25:12805":{"crate_id":25,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:11173":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"5:1392":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:5304":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"24:598":{"crate_id":24,"path":["libc","unix","tms"],"kind":"struct"},"6:3831":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"25:5286":{"crate_id":25,"path":["object","read","traits","ObjectSegment"],"kind":"trait"},"25:5324":{"crate_id":25,"path":["object","read","traits","ObjectSymbolTable"],"kind":"trait"},"4:11321":{"crate_id":4,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"4:8731":{"crate_id":4,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:22834":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:7708":{"crate_id":1,"path":["backtrace","Item"],"kind":"typedef"},"24:3961":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:50531":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:48553":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"23:7527":{"crate_id":23,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"12:1688":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:9799":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"16:5360":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:3195":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:11259":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"16:6691":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"4:4712":{"crate_id":4,"path":["std","io","BufRead","consume"],"kind":"foreign_type"},"6:4245":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:45128":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"4:11387":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"5:971":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:47803":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"17:9404":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:47983":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"27:608":{"crate_id":27,"path":["miniz_oxide","inflate","stream","MinReset"],"kind":"struct"},"17:11147":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"4:14800":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"24:4099":{"crate_id":24,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"25:10658":{"crate_id":25,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:12671":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:6413":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"25:14089":{"crate_id":25,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:8853":{"crate_id":1,"path":["backtrace","Target"],"kind":"typedef"},"1:47710":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:4523":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"23:5307":{"crate_id":23,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:12469":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:45467":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:6424":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"4:7627":{"crate_id":4,"path":["std","process","ChildStdin"],"kind":"struct"},"4:1304":{"crate_id":4,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:1685":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"6:1739":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"23:3560":{"crate_id":23,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"4:12144":{"crate_id":4,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"4:15150":{"crate_id":4,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"27:622":{"crate_id":27,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:6075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"4:15819":{"crate_id":4,"path":["std","tuple"],"kind":"primitive"},"25:11843":{"crate_id":25,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:12521":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:3091":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:5345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"4:14948":{"crate_id":4,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"24:3885":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"24:1487":{"crate_id":24,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:9830":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"0:0":{"crate_id":0,"path":["backtrace"],"kind":"module"},"17:10529":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"24:144":{"crate_id":24,"path":["libc","unix","FILE"],"kind":"enum"},"23:6216":{"crate_id":23,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"25:11948":{"crate_id":25,"path":["object","read","RelocationTarget"],"kind":"enum"},"4:15172":{"crate_id":4,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"4:970":{"crate_id":4,"path":["std","ascii","AsciiExt"],"kind":"trait"},"23:3799":{"crate_id":23,"path":["gimli","arch","Arm"],"kind":"struct"},"23:438":{"crate_id":23,"path":["gimli","read","cfi","UnwindOffset"],"kind":"trait"},"25:13321":{"crate_id":25,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"25:13830":{"crate_id":25,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"26:774":{"crate_id":26,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"23:6789":{"crate_id":23,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"24:3771":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"4:14794":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"25:10952":{"crate_id":25,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:44873":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:11030":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:23684":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:51886":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"25:10493":{"crate_id":25,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"23:6956":{"crate_id":23,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"23:648":{"crate_id":23,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:1755":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:10844":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"4:8363":{"crate_id":4,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"25:11098":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"23:3961":{"crate_id":23,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:6591":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"13:0":{"crate_id":13,"path":["std_detect"],"kind":"module"},"19:117":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"17:13221":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"23:7084":{"crate_id":23,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"16:3939":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:4360":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"5:7599":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:48373":{"crate_id":1,"path":["backtrace","Searcher"],"kind":"typedef"},"25:14258":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"4:11430":{"crate_id":4,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:12972":{"crate_id":1,"path":["backtrace","Future"],"kind":"typedef"},"6:5474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:5975":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:47883":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"4:11401":{"crate_id":4,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:11920":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:23876":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"26:169":{"crate_id":26,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"23:6023":{"crate_id":23,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"4:1348":{"crate_id":4,"path":["std","collections","hash","map","Values"],"kind":"struct"},"4:9020":{"crate_id":4,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"23:4407":{"crate_id":23,"path":["gimli","constants","DwUt"],"kind":"struct"},"12:2315":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"0:161":{"crate_id":0,"path":["backtrace","BacktraceFmt"],"kind":"struct"},"17:10801":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"25:12897":{"crate_id":25,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"14:11":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"24:3903":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"24:4997":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"12:892":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"25:13157":{"crate_id":25,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"25:11464":{"crate_id":25,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:9593":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"6:1617":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:3096":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"25:12364":{"crate_id":25,"path":["object","elf","Dyn32"],"kind":"struct"},"17:11604":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"6:4303":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:10435":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"4:14907":{"crate_id":4,"path":["std","sys","unix","time","inner","SystemTime"],"kind":"struct"},"1:51871":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"23:3162":{"crate_id":23,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"9:157":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"16:3429":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"27:744":{"crate_id":27,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"25:5316":{"crate_id":25,"path":["object","read","traits","ObjectComdat"],"kind":"trait"},"4:15835":{"crate_id":4,"path":["std","fn"],"kind":"primitive"},"24:3922":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"24:5876":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"23:4036":{"crate_id":23,"path":["gimli","arch","RiscV"],"kind":"struct"},"4:4350":{"crate_id":4,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"0:84":{"crate_id":0,"path":["backtrace","resolve_unsynchronized"],"kind":"function"},"17:12494":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"4:7397":{"crate_id":4,"path":["backtrace","Target"],"kind":"typedef"},"5:669":{"crate_id":5,"path":["backtrace","Owned"],"kind":"typedef"},"1:48265":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"23:6947":{"crate_id":23,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:13746":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"4:15818":{"crate_id":4,"path":["std","str"],"kind":"primitive"},"12:2009":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"5:3039":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:7406":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:4407":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"25:11562":{"crate_id":25,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:3218":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"24:4904":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:2889":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"4:936":{"crate_id":4,"path":["std","thread","JoinHandle"],"kind":"struct"},"26:829":{"crate_id":26,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"25:14409":{"crate_id":25,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:3086":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"4:7439":{"crate_id":4,"path":["std","path","Path"],"kind":"struct"},"24:3870":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:5956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:13609":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"25:4197":{"crate_id":25,"path":["object","read","macho","symbol","Nlist"],"kind":"trait"},"4:7505":{"crate_id":4,"path":["std","path","Display"],"kind":"struct"},"5:3569":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"4:11106":{"crate_id":4,"path":["std","io","util","Empty"],"kind":"struct"},"26:650":{"crate_id":26,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"23:8747":{"crate_id":23,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"6:6042":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:1487":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"4:977":{"crate_id":4,"path":["std","ascii","AsciiExt","make_ascii_lowercase"],"kind":"foreign_type"},"6:614":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:46668":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"4:15830":{"crate_id":4,"path":["std","u64"],"kind":"primitive"},"1:49914":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"24:4083":{"crate_id":24,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"23:6464":{"crate_id":23,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:48599":{"crate_id":1,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"1:23109":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:7420":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"12:1144":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:4989":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"5:1505":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"25:10308":{"crate_id":25,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:12946":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"25:13720":{"crate_id":25,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:6019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:46143":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:54502":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:1612":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:6219":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"4:7730":{"crate_id":4,"path":["std","process","Stdio"],"kind":"struct"},"24:5970":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"4:1396":{"crate_id":4,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"4:2953":{"crate_id":4,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"23:8174":{"crate_id":23,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"9:1020":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:47436":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:3917":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:23070":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"24:4941":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:12263":{"crate_id":1,"path":["core","str","pattern","Searcher","next_reject"],"kind":"foreign_type"},"4:12011":{"crate_id":4,"path":["std","process","ExitStatusError"],"kind":"struct"},"4:4250":{"crate_id":4,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"16:6136":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"0:68":{"crate_id":0,"path":["backtrace","resolve"],"kind":"function"},"17:13356":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"23:3067":{"crate_id":23,"path":["gimli","common","Register"],"kind":"struct"},"1:3388":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:9113":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:1325":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:4519":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:23844":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"23:8728":{"crate_id":23,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:2927":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"4:8471":{"crate_id":4,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"24:5046":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"4:14888":{"crate_id":4,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:10348":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"25:14518":{"crate_id":25,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"25:11830":{"crate_id":25,"path":["object","read","ObjectMap"],"kind":"struct"},"25:10463":{"crate_id":25,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"27:27":{"crate_id":27,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"4:5732":{"crate_id":4,"path":["std","os","unix","fs","FileExt","read_at"],"kind":"foreign_type"},"25:14609":{"crate_id":25,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"5:6121":{"crate_id":5,"path":["backtrace","Target"],"kind":"typedef"},"1:3032":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"9:1056":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"24:5081":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:1236":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"24:3650":{"crate_id":24,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"4:5731":{"crate_id":4,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:7966":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","partition_in_place"],"kind":"foreign_type"},"25:13035":{"crate_id":25,"path":["object","macho","DylibModule32"],"kind":"struct"},"27:612":{"crate_id":27,"path":["miniz_oxide","inflate","stream","ZeroReset"],"kind":"struct"},"4:10337":{"crate_id":4,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:45039":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:12262":{"crate_id":1,"path":["core","str","pattern","Searcher","next_match"],"kind":"foreign_type"},"4:13316":{"crate_id":4,"path":["std","sys","unix","mutex","ReentrantMutex"],"kind":"struct"},"6:1625":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"25:12993":{"crate_id":25,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:11328":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"23:3702":{"crate_id":23,"path":["gimli","common","SectionId"],"kind":"enum"},"23:3241":{"crate_id":23,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:4211":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"4:6870":{"crate_id":4,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"25:11649":{"crate_id":25,"path":["object","read","Error"],"kind":"struct"},"4:11122":{"crate_id":4,"path":["std","io","IoSlice"],"kind":"struct"},"26:620":{"crate_id":26,"path":["memchr","cow","Imp"],"kind":"struct"},"17:10377":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:608":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"16:7042":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:2912":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"4:5376":{"crate_id":4,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"25:14223":{"crate_id":25,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:37397":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"25:10601":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"26:636":{"crate_id":26,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:7295":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:5850":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"23:3046":{"crate_id":23,"path":["gimli","common","LineEncoding"],"kind":"struct"},"5:7649":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"18:636":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:8174":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:13540":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:4399":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:2314":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"4:12740":{"crate_id":4,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:47236":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:44465":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"25:14541":{"crate_id":25,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:12234":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:2773":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"24:1525":{"crate_id":24,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"25:14216":{"crate_id":25,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:2670":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"17:9245":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:54407":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:3549":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:13180":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"23:6933":{"crate_id":23,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:1288":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:3023":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"23:3337":{"crate_id":23,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:10420":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"4:14620":{"crate_id":4,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:3317":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"18:849":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:6569":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:5104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"9:963":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:10179":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"16:5707":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"1:1950":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"4:14857":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"5:5417":{"crate_id":5,"path":["backtrace","Owned"],"kind":"typedef"},"1:50693":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"4:6962":{"crate_id":4,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:5494":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"4:10687":{"crate_id":4,"path":["std","ffi","c_str","CStr"],"kind":"struct"},"5:5397":{"crate_id":5,"path":["backtrace","Output"],"kind":"typedef"},"6:3962":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:7236":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:12395":{"crate_id":1,"path":["backtrace","Searcher"],"kind":"typedef"},"1:47937":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:681":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"5:5806":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:13453":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:11779":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"25:11251":{"crate_id":25,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:45090":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"4:11426":{"crate_id":4,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"23:8344":{"crate_id":23,"path":["gimli","read","UnitOffset"],"kind":"struct"},"24:4143":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"23:4373":{"crate_id":23,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:45964":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"4:10877":{"crate_id":4,"path":["std","fs","FileType"],"kind":"struct"},"23:7613":{"crate_id":23,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"25:5762":{"crate_id":25,"path":["object","elf","ELFCOMPRESS_ZLIB"],"kind":"constant"},"25:10882":{"crate_id":25,"path":["object","read","elf","note","Note"],"kind":"struct"},"25:10831":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"25:11327":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"24:1661":{"crate_id":24,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:4354":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:2207":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"4:17":{"crate_id":4,"path":["std","prelude","v1"],"kind":"module"},"12:840":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"25:13295":{"crate_id":25,"path":["object","macho","SymsegCommand"],"kind":"struct"},"24:5268":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"23:7964":{"crate_id":23,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:13627":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"4:5975":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:3985":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"4:2878":{"crate_id":4,"path":["backtrace","Owned"],"kind":"typedef"},"1:22999":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"26:744":{"crate_id":26,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"24:4982":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nlmsghdr"],"kind":"struct"},"25:10261":{"crate_id":25,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:10159":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"4:9058":{"crate_id":4,"path":["backtrace","Target"],"kind":"typedef"},"5:1459":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"25:10562":{"crate_id":25,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:1478":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"16:7804":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:48442":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"24:1549":{"crate_id":24,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:8739":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:48545":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"24:6566":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"22:269":{"crate_id":22,"path":["addr2line","RangeAttributes"],"kind":"struct"},"24:5303":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:46006":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:45160":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:3120":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:44952":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"4:5501":{"crate_id":4,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"25:13260":{"crate_id":25,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:5324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"4:9824":{"crate_id":4,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"4:11375":{"crate_id":4,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"4:3206":{"crate_id":4,"path":["std","fs","DirEntry"],"kind":"struct"},"6:3979":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"18:774":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"11:46":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"4:5797":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:45220":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"23:8767":{"crate_id":23,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"5:7409":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"4:10846":{"crate_id":4,"path":["std","fs","Metadata"],"kind":"struct"},"12:160":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"25:12631":{"crate_id":25,"path":["object","macho","FatArch64"],"kind":"struct"},"23:6770":{"crate_id":23,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"0:734":{"crate_id":0,"path":["backtrace","BytesOrWideString","Wide"],"kind":"variant"},"25:14361":{"crate_id":25,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:3124":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:12269":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:1549":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:3743":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:11015":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"16:5941":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"12:1667":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:4157":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"4:2062":{"crate_id":4,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:4823":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:48132":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"25:12597":{"crate_id":25,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:576":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"23:7279":{"crate_id":23,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:6357":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:4446":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:5414":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:4310":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"4:15812":{"crate_id":4,"path":["std","never"],"kind":"primitive"},"17:12247":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:4454":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"17:10558":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"4:12176":{"crate_id":4,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:6176":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:3041":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"25:10474":{"crate_id":25,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"14:231":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:46065":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:4239":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"24:4122":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:7433":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:1450":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:6929":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:13240":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"23:94":{"crate_id":23,"path":["gimli","endianity","NativeEndian"],"kind":"constant"},"16:7738":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:4673":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"4:15318":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:46675":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"24:606":{"crate_id":24,"path":["libc","unix","servent"],"kind":"struct"},"11:54":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"4:9737":{"crate_id":4,"path":["std","sys_common","rwlock","MovableRWLock"],"kind":"struct"},"5:1416":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:9162":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:2754":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"23:6412":{"crate_id":23,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"4:11382":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:73":{"crate_id":1,"path":["core","u32"],"kind":"module"},"4:15829":{"crate_id":4,"path":["std","u32"],"kind":"primitive"},"17:13842":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:4034":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:47819":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"5:3142":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"25:12977":{"crate_id":25,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:13394":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:7216":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"25:10939":{"crate_id":25,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:7894":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"4:10851":{"crate_id":4,"path":["std","fs","ReadDir"],"kind":"struct"},"1:7481":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:7709":{"crate_id":1,"path":["backtrace","IntoIter"],"kind":"typedef"},"23:3491":{"crate_id":23,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:5346":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"3:0":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"4:2079":{"crate_id":4,"path":["std","collections","hash","set","Union"],"kind":"struct"},"24:3676":{"crate_id":24,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:7928":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","enumerate"],"kind":"foreign_type"},"4:1027":{"crate_id":4,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:5273":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:3019":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:9601":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"23:7191":{"crate_id":23,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"24:5120":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"24:1643":{"crate_id":24,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:45251":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"6:4154":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"14:250":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:49684":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"4:3104":{"crate_id":4,"path":["backtrace","Owned"],"kind":"typedef"},"4:2784":{"crate_id":4,"path":["backtrace","Target"],"kind":"typedef"},"17:12073":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:7711":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:5173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"0:729":{"crate_id":0,"path":["backtrace","BytesOrWideString"],"kind":"enum"},"6:6190":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"24:4238":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"25:13335":{"crate_id":25,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"25:14475":{"crate_id":25,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"23:6253":{"crate_id":23,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"6:4348":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"9:686":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"16:7514":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:4661":{"crate_id":1,"path":["backtrace","Target"],"kind":"typedef"},"6:4040":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:13497":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"25:2814":{"crate_id":25,"path":["object","read","elf","dynamic","Dyn"],"kind":"trait"},"5:7487":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"23:7729":{"crate_id":23,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:4270":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"25:12884":{"crate_id":25,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:5979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:1558":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"4:6800":{"crate_id":4,"path":["std","os","linux","process","ChildExt","take_pidfd"],"kind":"foreign_type"},"25:11744":{"crate_id":25,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:3392":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"4:8622":{"crate_id":4,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"4:6799":{"crate_id":4,"path":["std","os","linux","process","ChildExt","pidfd"],"kind":"foreign_type"},"23:1118":{"crate_id":23,"path":["backtrace","Target"],"kind":"typedef"},"1:48577":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"17:11809":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"4:14546":{"crate_id":4,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"5:6284":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:48125":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"12:1651":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"25:10913":{"crate_id":25,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:9476":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:23307":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:13598":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"24:5885":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"25:14654":{"crate_id":25,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"4:6706":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"20:143":{"crate_id":20,"path":["rustc_demangle","v0","LimitedFormatter"],"kind":"struct"},"25:9608":{"crate_id":25,"path":["object","common","SectionFlags"],"kind":"enum"},"24:1670":{"crate_id":24,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"23:7098":{"crate_id":23,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"4:15821":{"crate_id":4,"path":["std","f64"],"kind":"primitive"},"1:12315":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:13331":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"4:11156":{"crate_id":4,"path":["std","io","Chain"],"kind":"struct"},"4:4687":{"crate_id":4,"path":["std","io","Write","write_vectored"],"kind":"foreign_type"},"25:11290":{"crate_id":25,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:505":{"crate_id":5,"path":["backtrace","Target"],"kind":"typedef"},"1:3026":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:7937":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","skip"],"kind":"foreign_type"},"1:47440":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"23:8266":{"crate_id":23,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"25:10844":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:4762":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"25:13081":{"crate_id":25,"path":["object","macho","DylibReference"],"kind":"struct"},"25:12199":{"crate_id":25,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"4:14630":{"crate_id":4,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:5407":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"25:12472":{"crate_id":25,"path":["object","elf","NoteHeader64"],"kind":"struct"},"23:3391":{"crate_id":23,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:523":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:13924":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:6110":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"16:7158":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"12:377":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:3020":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:47244":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:8232":{"crate_id":1,"path":["core","lazy","OnceCell"],"kind":"struct"},"1:23652":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:47586":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:4022":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"23:7288":{"crate_id":23,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:2665":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"4:14870":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"25:11701":{"crate_id":25,"path":["object","read","ObjectKind"],"kind":"enum"},"25:9718":{"crate_id":25,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:46955":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"25:13812":{"crate_id":25,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:5373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:7665":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"25:9376":{"crate_id":25,"path":["object","common","SectionKind"],"kind":"enum"},"17:10149":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"25:14495":{"crate_id":25,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:48037":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"5:7533":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"4:11173":{"crate_id":4,"path":["std","io","Bytes"],"kind":"struct"},"27:234":{"crate_id":27,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"4:11246":{"crate_id":4,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"17:10317":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:12028":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"4:1317":{"crate_id":4,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"25:13391":{"crate_id":25,"path":["object","macho","Nlist32"],"kind":"struct"},"16:4535":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:10599":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"25:14054":{"crate_id":25,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"25:11602":{"crate_id":25,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"4:14643":{"crate_id":4,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"24:4221":{"crate_id":24,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:24216":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:10343":{"crate_id":1,"path":["backtrace","Item"],"kind":"typedef"},"23:4230":{"crate_id":23,"path":["gimli","arch","X86_64"],"kind":"struct"},"25:13375":{"crate_id":25,"path":["object","macho","NoteCommand"],"kind":"struct"},"23:7690":{"crate_id":23,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"25:12620":{"crate_id":25,"path":["object","macho","FatArch32"],"kind":"struct"},"1:45189":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:21817":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:5384":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"4:11249":{"crate_id":4,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"1:48394":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:11696":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"4:7920":{"crate_id":4,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"17:12917":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:3588":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"14:244":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"4:14277":{"crate_id":4,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"17:13760":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"25:9754":{"crate_id":25,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:2956":{"crate_id":1,"path":["backtrace","Error"],"kind":"typedef"},"1:9532":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"23:6304":{"crate_id":23,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"18:169":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"25:3724":{"crate_id":25,"path":["object","read","macho","segment","Segment"],"kind":"trait"},"17:14000":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"23:2991":{"crate_id":23,"path":["gimli","read","Section"],"kind":"trait"},"4:12160":{"crate_id":4,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:22928":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:3512":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:47745":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"25:12832":{"crate_id":25,"path":["object","macho","DylibCommand"],"kind":"struct"},"25:10271":{"crate_id":25,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"4:11179":{"crate_id":4,"path":["std","io","Split"],"kind":"struct"},"16:3506":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:3488":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"25:9584":{"crate_id":25,"path":["object","common","FileFlags"],"kind":"enum"},"17:13119":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:13865":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"25:10965":{"crate_id":25,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:6269":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"4:4683":{"crate_id":4,"path":["backtrace","Target"],"kind":"typedef"},"24:4880":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"25:547":{"crate_id":25,"path":["object","read","any","Section"],"kind":"struct"},"4:9191":{"crate_id":4,"path":["std","lazy","SyncOnceCell"],"kind":"struct"},"27:157":{"crate_id":27,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"23:8662":{"crate_id":23,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"24:1575":{"crate_id":24,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:2543":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"4:5809":{"crate_id":4,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:535":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"25:9456":{"crate_id":25,"path":["object","common","SymbolKind"],"kind":"enum"},"4:6872":{"crate_id":4,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"4:13303":{"crate_id":4,"path":["std","sys","unix","mutex","Mutex"],"kind":"struct"},"25:13171":{"crate_id":25,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:7185":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"4:15025":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"25:12444":{"crate_id":25,"path":["object","elf","Vernaux"],"kind":"struct"},"16:7226":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"4:685":{"crate_id":4,"path":["std","thread","local","fast","Key"],"kind":"struct"},"17:13963":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:46682":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:4477":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"4:6626":{"crate_id":4,"path":["std","os","unix","prelude"],"kind":"module"},"25:10081":{"crate_id":25,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"25:11542":{"crate_id":25,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"25:6052":{"crate_id":25,"path":["object","elf","ELF_NOTE_GNU"],"kind":"static"},"17:11199":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:50771":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"5:1729":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:49419":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"5:7246":{"crate_id":5,"path":["backtrace","Target"],"kind":"typedef"},"17:11653":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:2991":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"25:14560":{"crate_id":25,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"23:3364":{"crate_id":23,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"23:3139":{"crate_id":23,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:4528":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:13446":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:1900":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"23:6860":{"crate_id":23,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"25:10181":{"crate_id":25,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"25:14141":{"crate_id":25,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"27:617":{"crate_id":27,"path":["miniz_oxide","inflate","stream","FullReset"],"kind":"struct"},"4:2347":{"crate_id":4,"path":["std","env","Args"],"kind":"struct"},"1:8170":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:7884":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:11616":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"24:3781":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"24:63":{"crate_id":24,"path":["libc","unix","size_t"],"kind":"typedef"},"12:930":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"25:13406":{"crate_id":25,"path":["object","macho","Nlist64"],"kind":"struct"},"25:10633":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:12275":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:12408":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"24:3831":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"25:14618":{"crate_id":25,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:13377":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"24:3810":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:10543":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:3054":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:12208":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:6072":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"23:7174":{"crate_id":23,"path":["gimli","read","line","LineRows"],"kind":"struct"},"7:0":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:9933":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"4:9315":{"crate_id":4,"path":["std","std_float","StdFloat"],"kind":"trait"},"26:729":{"crate_id":26,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"26:667":{"crate_id":26,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:3474":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:2961":{"crate_id":1,"path":["backtrace","Error"],"kind":"typedef"},"18:829":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:7195":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:49444":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"25:14422":{"crate_id":25,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:9835":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:5777":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"5:5176":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:50614":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:23204":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"4:1413":{"crate_id":4,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"4:10660":{"crate_id":4,"path":["std","error","Chain"],"kind":"struct"},"23:6239":{"crate_id":23,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:47674":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:48792":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:45449":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:21770":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:11100":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"4:8177":{"crate_id":4,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"9:996":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:6554":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"25:10582":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"25:3209":{"crate_id":25,"path":["object","read","macho","fat","FatArch"],"kind":"trait"},"17:10864":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"27:771":{"crate_id":27,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:54450":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"25:12925":{"crate_id":25,"path":["object","macho","ThreadCommand"],"kind":"struct"},"25:11047":{"crate_id":25,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"4:15824":{"crate_id":4,"path":["std","i32"],"kind":"primitive"},"24:66":{"crate_id":24,"path":["libc","unix","uintptr_t"],"kind":"typedef"},"1:9542":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"12:2018":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"12:429":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:46257":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"12:747":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"25:10503":{"crate_id":25,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:10788":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"25:10726":{"crate_id":25,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"24:4923":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"4:4711":{"crate_id":4,"path":["std","io","BufRead","fill_buf"],"kind":"foreign_type"},"25:11413":{"crate_id":25,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"28:0":{"crate_id":28,"path":["adler"],"kind":"module"},"25:1330":{"crate_id":25,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"4:14883":{"crate_id":4,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"23:592":{"crate_id":23,"path":["gimli","read","cfi","UnwindContextStorage"],"kind":"trait"},"6:6002":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"23:5988":{"crate_id":23,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:6208":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:13986":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"25:11006":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:4600":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"24:4158":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"24:4186":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"25:14173":{"crate_id":25,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"4:6710":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:51709":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:1724":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"23:8808":{"crate_id":23,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"4:11326":{"crate_id":4,"path":["std","net","Shutdown"],"kind":"enum"},"25:13106":{"crate_id":25,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:3024":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"16:5996":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"20:41":{"crate_id":20,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"4:15827":{"crate_id":4,"path":["std","u8"],"kind":"primitive"},"25:11500":{"crate_id":25,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:48282":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:12582":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:46365":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:48807":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"16:5736":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"25:11277":{"crate_id":25,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"23:5364":{"crate_id":23,"path":["gimli","constants","DwId"],"kind":"struct"},"16:6636":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:9186":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"20:49":{"crate_id":20,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"25:11425":{"crate_id":25,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:22035":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:13258":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"4:5659":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"4:1407":{"crate_id":4,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:9582":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"16:3549":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"4:10537":{"crate_id":4,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"18:620":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"5:1640":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"4:4427":{"crate_id":4,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"25:6059":{"crate_id":25,"path":["object","elf","NT_GNU_BUILD_ID"],"kind":"constant"},"24:6441":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:7946":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","flatten"],"kind":"foreign_type"},"1:49515":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:45261":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:47776":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:6816":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:3338":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"25:14106":{"crate_id":25,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:5237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:10656":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:7119":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"25:10141":{"crate_id":25,"path":["object","read","any","SectionIterator"],"kind":"struct"},"24:560":{"crate_id":24,"path":["libc","unix","iovec"],"kind":"struct"},"23:8150":{"crate_id":23,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:4166":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:12264":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"4:2887":{"crate_id":4,"path":["backtrace","Output"],"kind":"typedef"},"25:11726":{"crate_id":25,"path":["object","read","SectionIndex"],"kind":"struct"},"24:1697":{"crate_id":24,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:5200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"25:2852":{"crate_id":25,"path":["object","read","elf","compression","CompressionHeader"],"kind":"trait"},"1:55722":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"4:8371":{"crate_id":4,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"25:14182":{"crate_id":25,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"4:15815":{"crate_id":4,"path":["std","pointer"],"kind":"primitive"},"28:54":{"crate_id":28,"path":["adler","Adler32"],"kind":"struct"},"17:12610":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"26:644":{"crate_id":26,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:46977":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:2080":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:294":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:11378":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"16:7467":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"25:13821":{"crate_id":25,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:5257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"12:2013":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:3321":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:5896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"23:2121":{"crate_id":23,"path":["gimli","read","op","EvaluationStorage"],"kind":"trait"},"16:7174":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:6577":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"4:13938":{"crate_id":4,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"25:14639":{"crate_id":25,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:48001":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:50010":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:8902":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:1986":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"25:9667":{"crate_id":25,"path":["object","endian","Endianness"],"kind":"enum"},"17:11678":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"24:4129":{"crate_id":24,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:44613":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"16:3604":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"23:8188":{"crate_id":23,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:11847":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:46329":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"25:14016":{"crate_id":25,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"5:6441":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:47664":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:12598":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"25:12660":{"crate_id":25,"path":["object","macho","MachHeader64"],"kind":"struct"},"25:13144":{"crate_id":25,"path":["object","macho","RpathCommand"],"kind":"struct"},"23:6337":{"crate_id":23,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"4:14660":{"crate_id":4,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"9:776":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"25:11791":{"crate_id":25,"path":["object","read","SymbolMap"],"kind":"struct"},"26:820":{"crate_id":26,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"26:811":{"crate_id":26,"path":["memchr","memmem","Finder"],"kind":"struct"},"25:10550":{"crate_id":25,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:5142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:6021":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"25:14121":{"crate_id":25,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:47646":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:48107":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"4:4601":{"crate_id":4,"path":["std","io","Guard"],"kind":"struct"},"1:49653":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"4:4384":{"crate_id":4,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"24:5157":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:3884":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:4922":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:12725":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"24:4910":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"24:4030":{"crate_id":24,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"4:14614":{"crate_id":4,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"26:136":{"crate_id":26,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:36240":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"23:8908":{"crate_id":23,"path":["gimli","read","Error"],"kind":"enum"},"22:153":{"crate_id":22,"path":["addr2line","Context"],"kind":"struct"},"1:7916":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","for_each"],"kind":"foreign_type"},"1:51848":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"25:10528":{"crate_id":25,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"4:5967":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:6564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:3061":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"25:13202":{"crate_id":25,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:7746":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"5:4055":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:48725":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"17:11482":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:10926":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:9280":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"24:4149":{"crate_id":24,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"12:853":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"6:5331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"26:712":{"crate_id":26,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"4:10598":{"crate_id":4,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"4:13586":{"crate_id":4,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"16:6949":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"5:7626":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"4:2349":{"crate_id":4,"path":["std","env","ArgsOs"],"kind":"struct"},"25:13838":{"crate_id":25,"path":["object","pe","Guid"],"kind":"struct"},"4:15795":{"crate_id":4,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"4:8836":{"crate_id":4,"path":["std","sync","once","Once"],"kind":"struct"},"25:12678":{"crate_id":25,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:13313":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"4:1371":{"crate_id":4,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"24:545":{"crate_id":24,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:13810":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:12249":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:4417":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:44511":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"4:6097":{"crate_id":4,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"24:4244":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"27:831":{"crate_id":27,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:3807":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:47655":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"4:7284":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:44860":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"4:11631":{"crate_id":4,"path":["std","path","Components"],"kind":"struct"},"4:10547":{"crate_id":4,"path":["std","thread","Builder"],"kind":"struct"},"25:11489":{"crate_id":25,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"23:6504":{"crate_id":23,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"23:5455":{"crate_id":23,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:22031":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"4:2956":{"crate_id":4,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:5421":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:5790":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:23092":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"0:86":{"crate_id":0,"path":["backtrace","resolve_frame_unsynchronized"],"kind":"function"},"1:45997":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"4:14355":{"crate_id":4,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"4:12034":{"crate_id":4,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"25:13942":{"crate_id":25,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"24:3730":{"crate_id":24,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:3245":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:3118":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"23:7313":{"crate_id":23,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"12:2005":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"23:1221":{"crate_id":23,"path":["gimli","read","reader","Reader"],"kind":"trait"},"17:9799":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:5295":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:51807":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:13547":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"4:15834":{"crate_id":4,"path":["std","reference"],"kind":"primitive"},"1:22830":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:12685":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"4:10619":{"crate_id":4,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:6799":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:5904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:4066":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:47955":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:5766":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:13041":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"24:614":{"crate_id":24,"path":["libc","unix","protoent"],"kind":"struct"},"6:5166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:51670":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:23294":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"0:731":{"crate_id":0,"path":["backtrace","BytesOrWideString","Bytes"],"kind":"variant"},"4:974":{"crate_id":4,"path":["std","ascii","AsciiExt","to_ascii_lowercase"],"kind":"foreign_type"},"1:44958":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:13000":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"4:14561":{"crate_id":4,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"25:9324":{"crate_id":25,"path":["object","common","AddressSize"],"kind":"enum"},"1:51497":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"24:6583":{"crate_id":24,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:4704":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"25:10753":{"crate_id":25,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"5:3921":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"25:12818":{"crate_id":25,"path":["object","macho","Dylib"],"kind":"struct"},"4:4347":{"crate_id":4,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:11822":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:4374":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"23:6178":{"crate_id":23,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:567":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"24:4872":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:11045":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:47684":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"24:3841":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"4:4710":{"crate_id":4,"path":["std","io","BufRead"],"kind":"trait"},"6:561":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:9269":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:6165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"23:3445":{"crate_id":23,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:5314":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"24:3824":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:2027":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"4:13605":{"crate_id":4,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:10331":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"6:163":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:2843":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"25:13879":{"crate_id":25,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:48733":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"4:11134":{"crate_id":4,"path":["std","io","SeekFrom"],"kind":"enum"},"6:4368":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"22:248":{"crate_id":22,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:48819":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"16:2816":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"12:761":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:3264":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:46401":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"25:12723":{"crate_id":25,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"24:493":{"crate_id":24,"path":["libc","unix","group"],"kind":"struct"},"1:13349":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"4:14994":{"crate_id":4,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:12262":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:603":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:12258":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"25:11264":{"crate_id":25,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:10887":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:3477":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"25:2552":{"crate_id":25,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"4:13804":{"crate_id":4,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"4:10552":{"crate_id":4,"path":["std","thread","ThreadId"],"kind":"struct"},"25:12346":{"crate_id":25,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"4:1382":{"crate_id":4,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:49891":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"22:230":{"crate_id":22,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"24:0":{"crate_id":24,"path":["libc"],"kind":"module"},"18:811":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"23:8219":{"crate_id":23,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"12:812":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:9759":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"9:603":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"25:14464":{"crate_id":25,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:54437":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:47791":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:7894":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"16:7392":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"4:8853":{"crate_id":4,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"25:12278":{"crate_id":25,"path":["object","elf","Rel32"],"kind":"struct"},"17:10489":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:7923":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","filter"],"kind":"foreign_type"},"16:7333":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:11738":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:13780":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"4:8015":{"crate_id":4,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"4:2057":{"crate_id":4,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:44935":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:11140":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:11957":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:3457":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:3172":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"24:5131":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"25:14196":{"crate_id":25,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"25:11478":{"crate_id":25,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:12178":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:51164":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"5:6587":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:5365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:6126":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"4:2594":{"crate_id":4,"path":["std","error","Report"],"kind":"struct"},"25:14230":{"crate_id":25,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:5717":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:51307":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"24:6037":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:13933":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"25:12485":{"crate_id":25,"path":["object","elf","HashHeader"],"kind":"struct"},"4:3209":{"crate_id":4,"path":["std","fs","read"],"kind":"function"},"14:0":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:50293":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:12442":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"4:4664":{"crate_id":4,"path":["backtrace","Target"],"kind":"typedef"},"1:2033":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:7911":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","intersperse_with"],"kind":"foreign_type"},"16:7303":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"14:56":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:13272":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"4:8904":{"crate_id":4,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"20:0":{"crate_id":20,"path":["rustc_demangle"],"kind":"module"},"16:5472":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"23:8818":{"crate_id":23,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:7453":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:13420":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"25:9427":{"crate_id":25,"path":["object","common","ComdatKind"],"kind":"enum"},"17:11434":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"23:3593":{"crate_id":23,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"24:1713":{"crate_id":24,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:3287":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:2794":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"4:1044":{"crate_id":4,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:48769":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"9:41":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:4318":{"crate_id":1,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"16:6491":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"24:3736":{"crate_id":24,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"12:2309":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"25:14113":{"crate_id":25,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"5:800":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"5:5226":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"4:4635":{"crate_id":4,"path":["std","io","Read","read_exact"],"kind":"foreign_type"},"24:5288":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:46135":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"26:866":{"crate_id":26,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:48573":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"23:7065":{"crate_id":23,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"8:0":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"26:720":{"crate_id":26,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"4:10751":{"crate_id":4,"path":["std","ffi","c_str","IntoStringError"],"kind":"struct"},"5:5127":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:3772":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:3150":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:47013":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"24:4051":{"crate_id":24,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"4:1540":{"crate_id":4,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"23:8438":{"crate_id":23,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:11231":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:8291":{"crate_id":1,"path":["backtrace","Target"],"kind":"typedef"},"6:529":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"23:447":{"crate_id":23,"path":["gimli","read","cfi","_UnwindSectionPrivate"],"kind":"trait"},"12:469":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:2805":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"23:3611":{"crate_id":23,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:23226":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"4:3204":{"crate_id":4,"path":["std","fs","File"],"kind":"struct"},"18:896":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:11001":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"27:1018":{"crate_id":27,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:23150":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:11794":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:12965":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"23:8203":{"crate_id":23,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:4256":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"25:14129":{"crate_id":25,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:45458":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:5595":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"4:15825":{"crate_id":4,"path":["std","i64"],"kind":"primitive"},"17:10988":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"12:2045":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:49398":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5:1437":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"23:3665":{"crate_id":23,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"23:4923":{"crate_id":23,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:46437":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:44851":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:13532":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"4:1361":{"crate_id":4,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"25:12078":{"crate_id":25,"path":["object","elf","FileHeader32"],"kind":"struct"},"23:6564":{"crate_id":23,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"24:3891":{"crate_id":24,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:3145":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"25:9351":{"crate_id":25,"path":["object","common","BinaryFormat"],"kind":"enum"},"23:8129":{"crate_id":23,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"4:13327":{"crate_id":4,"path":["std","sys","unix","mutex","PthreadMutexAttr"],"kind":"struct"},"16:4852":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:31309":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"27:985":{"crate_id":27,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:6731":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"5:5588":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:48429":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:12699":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:10468":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"25:12497":{"crate_id":25,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"24:587":{"crate_id":24,"path":["libc","unix","sigval"],"kind":"struct"},"23:3291":{"crate_id":23,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:4103":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:10001":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:13192":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"23:6825":{"crate_id":23,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"4:14571":{"crate_id":4,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"4:12049":{"crate_id":4,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"1:31132":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"17:11726":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"25:13282":{"crate_id":25,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:13402":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"18:857":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:6996":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:13477":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"25:13712":{"crate_id":25,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:6605":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"25:10221":{"crate_id":25,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"4:1047":{"crate_id":4,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"25:11389":{"crate_id":25,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:23780":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"24:3859":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"4:15822":{"crate_id":4,"path":["std","i8"],"kind":"primitive"},"5:5":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:49579":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"25:12459":{"crate_id":25,"path":["object","elf","NoteHeader32"],"kind":"struct"},"4:3146":{"crate_id":4,"path":["std","fs"],"kind":"module"},"4:5801":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:8167":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"4:15831":{"crate_id":4,"path":["std","u128"],"kind":"primitive"},"1:3469":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:11539":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"6:5929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:7999":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","reduce"],"kind":"foreign_type"},"1:2992":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"0:114":{"crate_id":0,"path":["backtrace","clear_symbol_cache"],"kind":"function"},"4:6798":{"crate_id":4,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:50269":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:5292":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"7:85":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"27:714":{"crate_id":27,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:9659":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"23:7886":{"crate_id":23,"path":["gimli","read","op","Location"],"kind":"enum"},"23:8852":{"crate_id":23,"path":["gimli","read","value","Value"],"kind":"enum"},"4:10669":{"crate_id":4,"path":["std","ffi","c_str","CString"],"kind":"struct"},"1:44988":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:8621":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"25:11528":{"crate_id":25,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:7983":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","try_fold"],"kind":"foreign_type"},"26:0":{"crate_id":26,"path":["memchr"],"kind":"module"},"1:11686":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"12:937":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"4:5945":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:9332":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"22:0":{"crate_id":22,"path":["addr2line"],"kind":"module"},"16:4350":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:2917":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"4:12111":{"crate_id":4,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:11932":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"24:5853":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"18:739":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:1311":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"24:6525":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:309":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"23:3264":{"crate_id":23,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"25:10901":{"crate_id":25,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:2484":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:1671":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"23:5545":{"crate_id":23,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"0:20":{"crate_id":0,"path":["backtrace","trace"],"kind":"function"},"24:6572":{"crate_id":24,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:2616":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"}},"external_crates":{"22":{"name":"addr2line","html_root_url":null},"4":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"28":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"libc","html_root_url":null},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"26":{"name":"memchr","html_root_url":null},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"gimli","html_root_url":null},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"27":{"name":"miniz_oxide","html_root_url":null},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"25":{"name":"object","html_root_url":null},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"rustc_demangle","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":11}