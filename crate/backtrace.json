{"root":"0:0:1635","crate_version":"0.3.66","includes_private":false,"index":{"25:5142:15029":{"id":"25:5142:15029","crate_id":25,"name":"ImageThunkData","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5143:61","25:5144:62182","25:5145:15058","25:5146:268"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:62:12063":{"id":"23:62:12063","crate_id":23,"name":"Endianity","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:63:13702","23:64:13701","23:65:62015","23:67:62016","23:69:62017","23:71:62018","23:73:62019","23:74:62020","23:75:62021","23:76:62022","23:77:62023","23:78:56476","23:79:56477","23:80:56478"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:3231:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2910:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:44:1638":{"id":"0:44:1638","crate_id":0,"name":"symbolize","span":{"filename":"src/symbolize/mod.rs","begin":[1,0],"end":[485,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:68:1652","0:70:1653","0:84:1640","0:86:1639","0:88:1641","0:100:1642","0:114:1645"],"is_stripped":true}},"25:5464:9169":{"id":"25:5464:9169","crate_id":25,"name":"ObjectSymbol","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5466:753","25:5467:62148","25:5468:899","25:5469:268","25:5470:1302","25:5471:782","25:5472:2521","25:5473:11892","25:5474:13722","25:5475:13723","25:5476:62392","25:5477:62393","25:5478:14010","25:5479:62394","25:5480:62395","25:5481:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13502:57880":{"id":"1:13502:57880","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3632:9063":{"id":"1:3632:9063","crate_id":1,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3634:56426","1:3635:56427","1:3636:56428"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13396:17410":{"id":"1:13396:17410","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:47440:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5761:9090":{"id":"4:5761:9090","crate_id":4,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5762:8979","4:5763:13565","4:5764:13566"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13452:60746":{"id":"1:13452:60746","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13481:60757":{"id":"1:13481:60757","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"1:13018:13399","prim@char":"4:15939:2092"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10279:119":{"id":"1:10279:119","crate_id":1,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10280:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:3988:9172":{"id":"25:3988:9172","crate_id":25,"name":"Section","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3989:13695","25:3990:2486","25:3991:15526","25:3993:15518","25:3995:1870","25:3996:1302","25:3997:957","25:3998:273","25:3999:15527","25:4000:15528","25:4001:653","25:4002:899","25:4003:62315","25:4004:13711","25:4005:2368","25:4008:11893"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3509:132":{"id":"1:3509:132","crate_id":1,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3511:181","1:3512:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3265:220":{"id":"1:3265:220","crate_id":1,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13407:14093":{"id":"1:13407:14093","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"4:15939:2092"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"1:49383:13423","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3364:9114":{"id":"1:3364:9114","crate_id":1,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3366:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13731:138":{"id":"1:13731:138","crate_id":1,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13732:181","1:13733:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6893:9092":{"id":"4:6893:9092","crate_id":4,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6894:2612"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6591:9100":{"id":"4:6591:9100","crate_id":4,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6592:13580","4:6593:13581"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:2991:9172":{"id":"23:2991:9172","crate_id":23,"name":"Section","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:2993:2520","23:2994:2728","23:2995:62041","23:2996:814","23:2999:13113","23:3000:62042","23:3001:54726"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[124,0],"end":[124,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::clear_symbol_cache","name":"clear_symbol_cache","id":"0:114:1645","glob":false}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1338","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:61386","5:6085:13519","5:6088:61387","5:6091:61388","5:6103:61389","5:6104:61390","5:6105:14493","5:6106:57878","5:6107:57879"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:22902:14059":{"id":"1:22902:14059","crate_id":1,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22892:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:220:9155":{"id":"25:220:9155","crate_id":25,"name":"ReadRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:222:793","25:223:62161","25:224:62162","25:225:2730","25:226:2483","25:229:13546","25:231:54730","25:234:62163"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13446:58371":{"id":"1:13446:58371","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"4:15945:2097","prim@char":"4:15939:2092","self::pattern":"1:13018:13399"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"1:49511:13432","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3796:2301":{"id":"1:3796:2301","crate_id":1,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:7829:14555":{"id":"4:7829:14555","crate_id":4,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:7830:59633"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:4717:1956":{"id":"4:4717:1956","crate_id":4,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4718:1957","4:4719:60482","4:4721:60483","4:4722:14876","4:4723:60484","4:4724:19162","4:4725:2913","4:4734:13334"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8343:14063":{"id":"1:8343:14063","crate_id":1,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8345:13354"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3500:1660":{"id":"1:3500:1660","crate_id":1,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3501:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3395:9122":{"id":"1:3395:9122","crate_id":1,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3397:181","1:3398:1231"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:2657:11849":{"id":"25:2657:11849","crate_id":25,"name":"Rela","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2658:13695","25:2659:13696","25:2660:2486","25:2661:11796","25:2662:11797","25:2663:11798","25:2664:62198","25:2665:15651"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:736:1539":{"id":"0:736:1539","crate_id":0,"name":"0","span":{"filename":"src/types.rs","begin":[21,9],"end":[21,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u16"}}}}},"1:2850:12058":{"id":"1:2850:12058","crate_id":1,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2852:54720"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:5518:9164":{"id":"25:5518:9164","crate_id":25,"name":"SymbolMapEntry","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5519:268"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:84:1640":{"id":"0:84:1640","crate_id":0,"name":"resolve_unsynchronized","span":{"filename":"src/symbolize/mod.rs","begin":[158,0],"end":[163,1]},"visibility":"public","docs":"Same as `resolve`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available when\nthe `std` feature of this crate isn't compiled in. See the `resolve`\nfunction for more documentation and examples.\n\n# Panics\n\nSee information on `resolve` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["addr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:5564:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"1:13476:60754":{"id":"1:13476:60754","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13493:60759":{"id":"1:13493:60759","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"1:13018:13399","prim@char":"4:15939:2092"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:2576:127":{"id":"4:2576:127","crate_id":4,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:2577:55654","4:2579:1635","4:2580:60094","4:2581:60095","4:2582:59461"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:10279:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13028:13414":{"id":"1:13028:13414","crate_id":1,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13030:13417","1:13031:56025","1:13032:56026","1:13033:56027","1:13034:56029","1:13035:56028","1:13036:56030"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3159:135":{"id":"1:3159:135","crate_id":1,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3161:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"27:602:15059":{"id":"27:602:15059","crate_id":27,"name":"ResetPolicy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["27:603:62430"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13487:58375":{"id":"1:13487:58375","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"1:13018:13399","prim@char":"4:15939:2092"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10281:13367":{"id":"1:10281:13367","crate_id":1,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10282:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6103:61389":{"id":"5:6103:61389","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3503:130":{"id":"1:3503:130","crate_id":1,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3505:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:266:2416":{"id":"0:266:2416","crate_id":0,"name":"uw","span":{"filename":"src/backtrace/libunwind.rs","begin":[124,0],"end":[124,6]},"visibility":{"restricted":{"parent":"0:240:1850","path":"::backtrace::libunwind"}},"docs":"Unwind library interface used for backtraces\n\nNote that dead code is allowed as here are just bindings\niOS doesn't use all of them it but adding more\nplatform-specific configs pollutes the code too much","links":{},"attrs":["#[allow(non_camel_case_types)]","#[allow(non_snake_case)]","#[allow(dead_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:267"],"is_stripped":true}},"1:3724:9132":{"id":"1:3724:9132","crate_id":1,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3726:55455"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8347:14065":{"id":"1:8347:14065","crate_id":1,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8349:8507"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:1986","5:785:2810","5:786:13396"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13505:60761":{"id":"1:13505:60761","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"4:15939:2092"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"1:49706:13438","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:741:2008":{"id":"0:741:2008","crate_id":0,"name":"Short","span":{"filename":"src/print.rs","begin":[29,4],"end":[29,9]},"visibility":"default","docs":"Prints a terser backtrace which ideally only contains relevant information","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:13474:60753":{"id":"1:13474:60753","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2905:183":{"id":"1:2905:183","crate_id":1,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2907:604","1:2908:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:3326:9112":{"id":"1:3326:9112","crate_id":1,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3328:181","1:3329:1353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:23736:14058":{"id":"1:23736:14058","crate_id":1,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:23737:14108"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:23732:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:760":{"id":"0:760","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[132,34],"end":[132,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve","name":"resolve","id":"0:68:1652","glob":false}},"1:3348:9110":{"id":"1:3348:9110","crate_id":1,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3349:181","1:3350:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6085:13519":{"id":"5:6085:13519","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7908:14045":{"id":"1:7908:14045","crate_id":1,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7909:56061","1:7910:56062","1:7911:56059","1:7912:56057","1:7913:56063","1:7914:56060","1:7915:56058"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2951:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13461:60748":{"id":"1:13461:60748","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:13018:13399","`DoubleEndedIterator`":"1:8428:120","prim@char":"4:15939:2092","str::matches":"4:15945:2097"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"1:49629:13434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10510:142":{"id":"1:10510:142","crate_id":1,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10511:715","1:10513:18562"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,48],"end":[113,53]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::backtrace::Frame","name":"Frame","id":"0:236:1637","glob":false}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[127,30],"end":[127,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"print::BacktraceFrameFmt","name":"BacktraceFrameFmt","id":"0:175:1648","glob":false}},"1:3294:2298":{"id":"1:3294:2298","crate_id":1,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13431:54727":{"id":"1:13431:54727","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:13018:13399","`DoubleEndedIterator`":"1:8428:120","prim@char":"4:15939:2092","str::rsplit":"4:15945:2097","str::split_whitespace":"4:15945:2097"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"1:49407:13429","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3373:9121":{"id":"1:3373:9121","crate_id":1,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3374:181","1:3375:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10222:1956":{"id":"1:10222:1956","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10223:1530","1:10224:55511","1:10226:2913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13394:1676":{"id":"1:13394:1676","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:47440:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10914:214":{"id":"1:10914:214","crate_id":1,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:10916:181","1:10917:1676","1:10918:17410","1:10919:55053","1:10920:55054","1:10921:753","1:10922:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10905:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:2877:2675":{"id":"25:2877:2675","crate_id":25,"name":"CompressionHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2878:13695","25:2879:2486","25:2880:2721","25:2881:2722","25:2882:8816"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:1652:2676":{"id":"25:1652:2676","crate_id":25,"name":"FileHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:1653:13695","25:1654:13696","25:1655:2486","25:1656:11847","25:1657:2677","25:1658:2675","25:1659:11846","25:1660:11835","25:1661:2679","25:1662:11848","25:1663:11849","25:1664:13697","25:1665:8557","25:1666:8558","25:1667:8559","25:1668:8560","25:1669:8561","25:1670:8562","25:1671:8563","25:1672:8564","25:1673:8565","25:1674:8566","25:1675:8567","25:1676:8568","25:1677:8569","25:1678:8570","25:1679:1931","25:1682:13698","25:1683:13699","25:1684:13700","25:1685:13701","25:1686:13702","25:1687:2700","25:1688:13703","25:1691:13704","25:1694:13705","25:1697:13706","25:1700:13707","25:1703:13708","25:1706:13709","25:1709:2518","25:1712:13710"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:8582:157":{"id":"1:8582:157","crate_id":1,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8583:13313","1:8584:922","1:8585:13314","1:8588:13315","1:8589:495","1:8591:13316","1:8594:13317","1:8595:13318","1:8596:13319","1:8597:13320","1:8599:13321","1:8601:13322","1:8602:13323","1:8604:841","1:8607:13324","1:8614:2707","1:8616:2575","1:8619:2574","1:8620:13325","1:8621:13326","1:8623:13327","1:8625:13328","1:8628:1306","1:8629:3095","1:8630:13329","1:8634:13330","1:8637:13331","1:8638:13332","1:8639:13333","1:8641:13334","1:8642:2314","1:8644:13335","1:8647:13336","1:8649:13337","1:8659:13338","1:8674:13339","1:8676:13340","1:8680:13341","1:8689:13342","1:8692:13343","1:8694:13344","1:8697:276","1:8704:294","1:8711:13345","1:8718:13346","1:8727:13347","1:8737:1014","1:8744:13348","1:8751:13298","1:8752:11931","1:8753:13300","1:8765:13299","1:8772:13297","1:8784:13296","1:8791:13349","1:8792:13350","1:8797:13351","1:8800:13352","1:8803:13353","1:8804:13354","1:8806:8507","1:8808:415","1:8811:13355","1:8814:997","1:8817:13356","1:8820:604","1:8823:13357","1:8826:907","1:8828:826","1:8830:792","1:8832:713","1:8834:696","1:8836:13358","1:8837:13359","1:8845:13360"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:4637:50573":{"id":"25:4637:50573","crate_id":25,"name":"ImageOptionalHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4638:8971","25:4639:15768","25:4640:15769","25:4641:15770","25:4642:15771","25:4643:15772","25:4644:15773","25:4645:15774","25:4646:15775","25:4647:2059","25:4648:15776","25:4649:15777","25:4650:15778","25:4651:15779","25:4652:15780","25:4653:15781","25:4654:15782","25:4655:15783","25:4656:15784","25:4657:15785","25:4658:15786","25:4659:15787","25:4660:15788","25:4661:15789","25:4662:15790","25:4663:15791","25:4664:15792","25:4665:15793","25:4666:15794","25:4667:15795"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13406:13451":{"id":"1:13406:13451","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"4:15939:2092"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"1:49377:13424","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13409:18804":{"id":"1:13409:18804","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"4:15945:2097"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"1:49681:13425","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:22:1636":{"id":"0:22:1636","crate_id":0,"name":"trace_unsynchronized","span":{"filename":"src/backtrace/mod.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"Same as `trace`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available\nwhen the `std` feature of this crate isn't compiled in. See the `trace`\nfunction for more documentation and examples.\n\n# Panics\n\nSee information on `trace` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"0:100:1642":{"id":"0:100:1642","crate_id":0,"name":"SymbolName","span":{"filename":"src/symbolize/mod.rs","begin":[318,0],"end":[322,1]},"visibility":"public","docs":"A wrapper around a symbol name to provide ergonomic accessors to the\ndemangled name, the raw bytes, the raw string, etc.","links":{},"attrs":["#[allow(dead_code)]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"4:6471:9098":{"id":"4:6471:9098","crate_id":4,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6472:8589","4:6473:8590","4:6474:13570","4:6475:13571","4:6477:13572","4:6479:13573","4:6480:13574","4:6482:13575"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10593:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:763":{"id":"0:763","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[132,43],"end":[132,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve_frame","name":"resolve_frame","id":"0:70:1653","glob":false}},"1:3360:9115":{"id":"1:3360:9115","crate_id":1,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3362:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:9239:2856":{"id":"1:9239:2856","crate_id":1,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6091:61388":{"id":"5:6091:61388","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4035:14126":{"id":"1:4035:14126","crate_id":1,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4036:59461"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8867:14043":{"id":"1:8867:14043","crate_id":1,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"1:7908:14045","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13455:60747":{"id":"1:13455:60747","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13484:2790":{"id":"1:13484:2790","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"1:13018:13399","prim@char":"4:15939:2092"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:2121:12089":{"id":"23:2121:12089","crate_id":23,"name":"EvaluationStorage","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:2123:62009","23:2124:62014","23:2125:205"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12068","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:10291:13371":{"id":"1:10291:13371","crate_id":1,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10292:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4767:2295":{"id":"1:4767:2295","crate_id":1,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4768:13313","1:4769:55569","1:4770:13315"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3543:2302":{"id":"1:3543:2302","crate_id":1,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3545:237","1:3546:206","1:3547:54848"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:5687:1991":{"id":"4:5687:1991","crate_id":4,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5688:1992","4:5689:1950"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10593:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13393:17422":{"id":"1:13393:17422","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"4:15956:2106"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13043:13416":{"id":"1:13043:13416","crate_id":1,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13045:13305","1:13046:55401","1:13047:55402"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"1:13037:13417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13408:1938":{"id":"1:13408:1938","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"1:49393:1978","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3411:9125":{"id":"1:3411:9125","crate_id":1,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3413:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:457:12074":{"id":"23:457:12074","crate_id":23,"name":"UnwindSection","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:459:16065","23:460:13193","23:462:61962","23:463:61963","23:465:61964","23:467:61965","23:469:61966"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12068","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"_UnwindSectionPrivate","id":"23:447:12073","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13490:60758":{"id":"1:13490:60758","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"1:13018:13399","prim@char":"4:15939:2092"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8428:120":{"id":"1:8428:120","crate_id":1,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8429:13305","1:8430:13306","1:8431:13307","1:8432:13308","1:8436:13309","1:8439:13310"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3258:2374":{"id":"1:3258:2374","crate_id":1,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3424:9128":{"id":"1:3424:9128","crate_id":1,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3426:1235"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:5419:9168":{"id":"25:5419:9168","crate_id":25,"name":"ObjectSegment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5421:268","25:5422:1302","25:5423:273","25:5424:13711","25:5425:2368","25:5426:9165","25:5427:62148","25:5428:899","25:5429:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:20:1651":{"id":"0:20:1651","crate_id":0,"name":"trace","span":{"filename":"src/backtrace/mod.rs","begin":[51,0],"end":[54,1]},"visibility":"public","docs":"Inspects the current call-stack, passing all active frames into the closure\nprovided to calculate a stack trace.\n\nThis function is the workhorse of this library in calculating the stack\ntraces for a program. The given closure `cb` is yielded instances of a\n`Frame` which represent information about that call frame on the stack. The\nclosure is yielded frames in a top-down fashion (most recently called\nfunctions first).\n\nThe closure's return value is an indication of whether the backtrace should\ncontinue. A return value of `false` will terminate the backtrace and return\nimmediately.\n\nOnce a `Frame` is acquired you will likely want to call `backtrace::resolve`\nto convert the `ip` (instruction pointer) or symbol address to a `Symbol`\nthrough which the name and/or filename/line number can be learned.\n\nNote that this is a relatively low-level function and if you'd like to, for\nexample, capture a backtrace to be inspected later, then the `Backtrace`\ntype may be more appropriate.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        // ...\n\n        true // continue the backtrace\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:240:1850":{"id":"0:240:1850","crate_id":0,"name":"libunwind","span":{"filename":"src/backtrace/libunwind.rs","begin":[1,0],"end":[267,1]},"visibility":{"restricted":{"parent":"0:13:1635","path":"::backtrace"}},"docs":"Backtrace support using libunwind/gcc_s/etc APIs.\n\nThis module contains the ability to unwind the stack using libunwind-style\nAPIs. Note that there's a whole bunch of implementations of the\nlibunwind-like API, and this is just trying to be compatible with most of\nthem all at once instead of being picky.\n\nThe libunwind API is powered by `_Unwind_Backtrace` and is in practice very\nreliable at generating a backtrace. It's not entirely clear how it does it\n(frame pointers? eh_frame info? both?) but it seems to work!\n\nMost of the complexity of this module is handling the various platform\ndifferences across libunwind implementations. Otherwise this is a pretty\nstraightforward Rust binding to the libunwind APIs.\n\nThis is the default unwinding API for all non-Windows platforms currently.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"1:13503:57881":{"id":"1:13503:57881","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:35":{"id":"0:35","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[117,26],"end":[117,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve_unsynchronized","name":"resolve_unsynchronized","id":"0:84:1640","glob":false}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[116,0],"end":[116,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve_frame_unsynchronized","name":"resolve_frame_unsynchronized","id":"0:86:1639","glob":false}},"1:13385:60739":{"id":"1:13385:60739","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1635":{"id":"0:0:1635","crate_id":0,"name":"backtrace","span":{"filename":"src/lib.rs","begin":[1,0],"end":[193,12]},"visibility":"public","docs":"A library for acquiring a backtrace at runtime\n\nThis library is meant to supplement the `RUST_BACKTRACE=1` support of the\nstandard library by allowing an acquisition of a backtrace at runtime\nprogrammatically. The backtraces generated by this library do not need to be\nparsed, for example, and expose the functionality of multiple backend\nimplementations.\n\n# Usage\n\nFirst, add this to your Cargo.toml\n\n```toml\n[dependencies]\nbacktrace = \"0.3\"\n```\n\nNext:\n\n```\nfn main() {\n# // Unsafe here so test passes on no_std.\n# #[cfg(feature = \"std\")] {\n    backtrace::trace(|frame| {\n        let ip = frame.ip();\n        let symbol_address = frame.symbol_address();\n\n        // Resolve this instruction pointer to a symbol name\n        backtrace::resolve_frame(frame, |symbol| {\n            if let Some(name) = symbol.name() {\n                // ...\n            }\n            if let Some(filename) = symbol.filename() {\n                // ...\n            }\n        });\n\n        true // keep going to the next frame\n    });\n}\n# }\n```\n\n# Backtrace accuracy\n\nThis crate implements best-effort attempts to get the native backtrace. This\nis not always guaranteed to work, and some platforms don't return any\nbacktrace at all. If your application requires accurate backtraces then it's\nrecommended to closely evaluate this crate to see whether it's suitable\nfor your use case on your target platforms.\n\nEven on supported platforms, there's a number of reasons that backtraces may\nbe less-than-accurate, including but not limited to:\n\n* Unwind information may not be available. This crate primarily implements\n  backtraces by unwinding the stack, but not all functions may have\n  unwinding information (e.g. DWARF unwinding information).\n\n* Rust code may be compiled without unwinding information for some\n  functions. This can also happen for Rust code compiled with\n  `-Cpanic=abort`. You can remedy this, however, with\n  `-Cforce-unwind-tables` as a compiler option.\n\n* Unwind information may be inaccurate or corrupt. In the worst case\n  inaccurate unwind information can lead this library to segfault. In the\n  best case inaccurate information will result in a truncated stack trace.\n\n* Backtraces may not report filenames/line numbers correctly due to missing\n  or corrupt debug information. This won't lead to segfaults unlike corrupt\n  unwinding information, but missing or malformed debug information will\n  mean that filenames and line numbers will not be available. This may be\n  because debug information wasn't generated by the compiler, or it's just\n  missing on the filesystem.\n\n* Not all platforms are supported. For example there's no way to get a\n  backtrace on WebAssembly at the moment.\n\n* Crate features may be disabled. Currently this crate supports using Gimli\n  libbacktrace on non-Windows platforms for reading debuginfo for\n  backtraces. If both crate features are disabled, however, then these\n  platforms will generate a backtrace but be unable to generate symbols for\n  it.\n\nIn most standard workflows for most standard platforms you generally don't\nneed to worry about these caveats. We'll try to fix ones where we can over\ntime, but otherwise it's important to be aware of the limitations of\nunwinding-based backtraces!","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/backtrace\")]","#![deny(missing_docs)]","#![no_std]","#![warn(rust_2018_idioms)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:7","0:10","0:31","0:35","0:38","0:41","0:115","0:133","0:194","0:197","0:200","0:756","0:760","0:763","0:767","0:770","0:773"],"is_stripped":false}},"25:1878:11847":{"id":"25:1878:11847","crate_id":25,"name":"ProgramHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:1879:2682","25:1880:13695","25:1881:2486","25:1882:8573","25:1883:8577","25:1884:8574","25:1885:2815","25:1886:8575","25:1887:8576","25:1888:2814","25:1889:8578","25:1890:13711","25:1891:2368","25:1894:13712","25:1898:9165","25:1901:11833","25:1904:2738"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:23427:14109":{"id":"1:23427:14109","crate_id":1,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23428:1268","1:23429:1267","1:23430:1265","1:23431:1264"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialEq","id":"1:22839:14112","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10287:13370":{"id":"1:10287:13370","crate_id":1,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10288:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:743:2010":{"id":"0:743:2010","crate_id":0,"name":"Full","span":{"filename":"src/print.rs","begin":[31,4],"end":[31,8]},"visibility":"default","docs":"Prints a backtrace that contains all possible information","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:3506:131":{"id":"1:3506:131","crate_id":1,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3508:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"1:3509:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:70:1653":{"id":"0:70:1653","crate_id":0,"name":"resolve_frame","span":{"filename":"src/symbolize/mod.rs","begin":[103,0],"end":[106,1]},"visibility":"public","docs":"Resolve a previously capture frame to a symbol, passing the symbol to the\nspecified closure.\n\nThis function performs the same function as `resolve` except that it takes a\n`Frame` as an argument instead of an address. This can allow some platform\nimplementations of backtracing to provide more accurate symbol information\nor information about inline frames for example. It's recommended to use this\nif you can.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        backtrace::resolve_frame(frame, |symbol| {\n            // ...\n        });\n\n        false // only look at the top frame\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["frame",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"25:2135:2677":{"id":"25:2135:2677","crate_id":25,"name":"SectionHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2136:2682","25:2137:13695","25:2138:2486","25:2139:8579","25:2140:8580","25:2141:2719","25:2142:8581","25:2143:8582","25:2144:8583","25:2145:8584","25:2146:8585","25:2147:8586","25:2148:8587","25:2149:899","25:2152:13711","25:2153:2368","25:2156:13712","25:2160:2702","25:2163:2039","25:2166:13713","25:2169:13714","25:2172:11833","25:2175:2738","25:2178:3619","25:2181:13715","25:2184:715","25:2187:13716","25:2190:9746","25:2193:13717","25:2196:13718","25:2199:13719"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:3537:14978":{"id":"25:3537:14978","crate_id":25,"name":"MachHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3538:13695","25:3539:2486","25:3540:9171","25:3541:9172","25:3542:50493","25:3543:13697","25:3544:13702","25:3545:13701","25:3546:8971","25:3547:15507","25:3548:15508","25:3549:15511","25:3550:15402","25:3551:15512","25:3552:653","25:3553:1931","25:3556:13698","25:3557:2700","25:3558:62318","25:3561:15478"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:438:12072":{"id":"23:438:12072","crate_id":23,"name":"UnwindOffset","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:440:2714"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"kind":"primitive","inner":"usize"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReaderOffset","id":"23:1185:12071","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2910:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:1664:12078":{"id":"23:1664:12078","crate_id":23,"name":"LineProgram","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1667:2720","23:1668:61957"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Offset","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12068","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12068","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Offset"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Offset"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReaderOffset","id":"23:1185:12071","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13382:793":{"id":"1:13382:793","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"4:15939:2092"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13392:304":{"id":"1:13392:304","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"4:15945:2097","`u8`":"4:15956:2106"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:22839:14112":{"id":"1:22839:14112","crate_id":1,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22840:14108","1:22841:1245","1:22842:1270"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13417:2724":{"id":"1:13417:2724","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"4:15939:2092","self::pattern":"1:13018:13399"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3476:116":{"id":"1:3476:116","crate_id":1,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3477:221","1:3478:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13383:2042":{"id":"1:13383:2042","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13458:2120":{"id":"1:13458:2120","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"4:15945:2097","prim@char":"4:15939:2092","self::pattern":"1:13018:13399","`DoubleEndedIterator`":"1:8428:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"1:49611:13433","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5769:9089":{"id":"4:5769:9089","crate_id":4,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5770:8979","4:5771:13564"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3231:115":{"id":"1:3231:115","crate_id":1,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3232:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:5020:14433":{"id":"4:5020:14433","crate_id":4,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5021:3128","4:5022:60083"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:864:1655":{"id":"0:864:1655","crate_id":0,"name":"Backtrace","span":{"filename":"src/capture.rs","begin":[26,0],"end":[32,1]},"visibility":"public","docs":"Representation of an owned and self-contained backtrace.\n\nThis structure can be used to capture a backtrace at various points in a\nprogram and later used to inspect what the backtrace was at that time.\n\n`Backtrace` supports pretty-printing of backtraces through its `Debug`\nimplementation.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:22713:14111":{"id":"1:22713:14111","crate_id":1,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22714:14108","1:22715:55423","1:22716:55958","1:22717:55959","1:22718:55960","1:22719:6378","1:22720:55961","1:22721:55962","1:22722:55963","1:22723:55964","1:22724:55965","1:22725:55966","1:22726:55967","1:22727:55968","1:22728:18587","1:22729:55969","1:22730:55465","1:22731:18915","1:22732:54939","1:22733:54938","1:22734:54940","1:22735:55424","1:22736:55425","1:22737:55426","1:22738:55427"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22815:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10283:13368":{"id":"1:10283:13368","crate_id":1,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10284:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:773":{"id":"0:773","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,59],"end":[133,74]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::capture::BacktraceSymbol","name":"BacktraceSymbol","id":"0:884:1657","glob":false}},"1:3380:9118":{"id":"1:3380:9118","crate_id":1,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3382:181","1:3383:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,26],"end":[113,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::backtrace::trace_unsynchronized","name":"trace_unsynchronized","id":"0:22:1636","glob":false}},"0:770":{"id":"0:770","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,43],"end":[133,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::capture::BacktraceFrame","name":"BacktraceFrame","id":"0:869:1656","glob":false}},"1:13414:56428":{"id":"1:13414:56428","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"1:13018:13399","prim@char":"4:15939:2092"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:23051:41596":{"id":"1:23051:41596","crate_id":1,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23052:16344","1:23053:55339","1:23054:55340"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:23044:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3419:9127":{"id":"1:3419:9127","crate_id":1,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3421:1232"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:4250:50493":{"id":"25:4250:50493","crate_id":25,"name":"Nlist","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4251:13695","25:4252:2486","25:4253:15639","25:4254:2739","25:4255:15640","25:4256:15389","25:4257:15641","25:4258:899","25:4261:62296","25:4262:13722","25:4263:13723","25:4264:62297"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:236:1637":{"id":"0:236:1637","crate_id":0,"name":"Frame","span":{"filename":"src/backtrace/mod.rs","begin":[76,0],"end":[78,1]},"visibility":"public","docs":"A trait representing one frame of a backtrace, yielded to the `trace`\nfunction of this crate.\n\nThe tracing function's closure will be yielded frames, and the frame is\nvirtually dispatched as the underlying implementation is not always known\nuntil runtime.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:68:1652":{"id":"0:68:1652","crate_id":0,"name":"resolve","span":{"filename":"src/symbolize/mod.rs","begin":[61,0],"end":[64,1]},"visibility":"public","docs":"Resolve an address to a symbol, passing the symbol to the specified\nclosure.\n\nThis function will look up the given address in areas such as the local\nsymbol table, dynamic symbol table, or DWARF debug info (depending on the\nactivated implementation) to find symbols to yield.\n\nThe closure may not be called if resolution could not be performed, and it\nalso may be called more than once in the case of inlined functions.\n\nSymbols yielded represent the execution at the specified `addr`, returning\nfile/line pairs for that address (if available).\n\nNote that if you have a `Frame` then it's recommended to use the\n`resolve_frame` function instead of this one.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        let ip = frame.ip();\n\n        backtrace::resolve(ip, |symbol| {\n            // ...\n        });\n\n        false // only look at the top frame\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["addr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:5564:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:14204:2309":{"id":"1:14204:2309","crate_id":1,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:14205:2604","1:14206:54954","1:14207:54955","1:14208:54956","1:14209:54957","1:14210:54958","1:14211:13334"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13402:14581":{"id":"1:13402:14581","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"4:15945:2097","str::slice_mut_unchecked":"4:15945:2097","crate::ops::Index":"1:3561:9061"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"4:6895:9094":{"id":"4:6895:9094","crate_id":4,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6896:13568"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:22766:14105":{"id":"1:22766:14105","crate_id":1,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22767:14108","1:22768:55423","1:22769:1225","1:22770:1226","1:22771:6378","1:22772:55462","1:22773:18758","1:22774:55463","1:22775:55464","1:22776:55465","1:22777:55424","1:22778:55425","1:22779:55426","1:22780:55427","1:22781:55428","1:22782:55429","1:22783:55430"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22815:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3162:228":{"id":"1:3162:228","crate_id":1,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3164:127","1:3165:1414"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13037:13417":{"id":"1:13037:13417","crate_id":1,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13039:14086","1:13040:922","1:13041:56444","1:13042:56445"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:4735:9026":{"id":"4:4735:9026","crate_id":4,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4736:60278","4:4737:3329","4:4738:60279","4:4739:60280"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:729:1644":{"id":"0:729:1644","crate_id":0,"name":"BytesOrWideString","span":{"filename":"src/types.rs","begin":[17,0],"end":[22,1]},"visibility":"public","docs":"A platform independent representation of a string. When working with `std`\nenabled it is recommended to the convenience methods for providing\nconversions to `std` types.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:731:1978","0:734:1980"],"impls":[]}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[127,49],"end":[127,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"print::PrintFmt","name":"PrintFmt","id":"0:740:1649","glob":false}},"1:13423:13345":{"id":"1:13423:13345","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"1:13018:13399","prim@char":"4:15939:2092","`None`":"1:47440:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13412:60743":{"id":"1:13412:60743","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"1:49671:13426","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10520:146":{"id":"1:10520:146","crate_id":1,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10521:652","1:10522:1957","1:10523:56475","1:10524:56476","1:10525:56477","1:10526:56478","1:10527:56479","1:10528:56480","1:10529:56481","1:10530:56482","1:10531:56483","1:10532:56484","1:10533:56485","1:10534:56486","1:10535:56487","1:10536:1530"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13472:60752":{"id":"1:13472:60752","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:2631:11848":{"id":"25:2631:11848","crate_id":25,"name":"Rel","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2632:13695","25:2633:13696","25:2634:2486","25:2635:11796","25:2636:11797","25:2637:62198","25:2638:15651"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:5374:2515":{"id":"25:5374:2515","crate_id":25,"name":"Object","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5377:9171","25:5378:9189","25:5379:9172","25:5380:9190","25:5381:9173","25:5382:9191","25:5383:1641","25:5384:9194","25:5385:9193","25:5386:9195","25:5387:62209","25:5388:62223","25:5389:13701","25:5390:62210","25:5391:782","25:5392:2554","25:5393:2733","25:5394:62211","25:5395:62212","25:5396:2518","25:5397:62213","25:5398:62215","25:5399:62214","25:5400:2039","25:5401:62216","25:5402:11897","25:5403:62217","25:5404:62224","25:5406:62225","25:5407:62218","25:5408:62219","25:5409:62221","25:5410:62226","25:5412:2686","25:5413:62227","25:5414:62228","25:5415:62220","25:5416:62222","25:5417:2579","25:5418:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}},{"name":"'file","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'data","bounds":[{"outlives":"'file"}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:3777:9171":{"id":"25:3777:9171","crate_id":25,"name":"Segment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3778:13695","25:3779:2486","25:3780:9172","25:3781:62204","25:3782:8607","25:3783:15515","25:3784:15518","25:3786:15519","25:3787:15520","25:3788:15521","25:3789:15522","25:3790:15387","25:3791:15388","25:3792:15523","25:3793:653","25:3794:899","25:3795:13711","25:3796:2368","25:3799:2518"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13496:60760":{"id":"1:13496:60760","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:15939:2092","self::pattern":"1:13018:13399"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6493:9099":{"id":"4:6493:9099","crate_id":4,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6494:13576","4:6495:3492","4:6496:13577","4:6497:13578","4:6498:13579","4:6499:1679"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10593:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:8380:136":{"id":"1:8380:136","crate_id":1,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8382:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13507:14448":{"id":"1:13507:14448","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"4:15939:2092"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"1:49715:13439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13048:13415":{"id":"1:13048:13415","crate_id":1,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:1185:12071":{"id":"23:1185:12071","crate_id":23,"name":"ReaderOffset","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1186:62130","23:1187:62131","23:1188:62132","23:1189:14300","23:1190:62133","23:1191:62134","23:1192:1524","23:1193:2736"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2910:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"1:2941:177","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"1:10510:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"1:3321:9107","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AddAssign","id":"1:3352:9113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"1:3326:9112","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:884:1657":{"id":"0:884:1657","crate_id":0,"name":"BacktraceSymbol","span":{"filename":"src/capture.rs","begin":[103,0],"end":[109,1]},"visibility":"public","docs":"Captured version of a symbol in a backtrace.\n\nThis type is returned as a list from `BacktraceFrame::symbols` and\nrepresents the metadata for a symbol in a backtrace.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:8393:2376":{"id":"1:8393:2376","crate_id":1,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8395:2773","1:8397:13311","1:8398:13312"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3352:9113":{"id":"1:3352:9113","crate_id":1,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3354:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:160:9147":{"id":"25:160:9147","crate_id":25,"name":"Pod","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:23432:41615":{"id":"1:23432:41615","crate_id":1,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23433:54938","1:23434:54939","1:23435:54940"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialOrd","id":"1:23427:14109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3415:9126":{"id":"1:3415:9126","crate_id":1,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3417:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:733:1539":{"id":"0:733:1539","crate_id":0,"name":"0","span":{"filename":"src/types.rs","begin":[19,10],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"1:13405:58360":{"id":"1:13405:58360","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"4:15945:2097"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10555:14139":{"id":"1:10555:14139","crate_id":1,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10556:146","1:10557:18251","1:10558:55134"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5837:13844":{"id":"5:5837:13844","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:27721"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6106:57878":{"id":"5:6106:57878","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"4:15945:2097"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6719:9088":{"id":"4:6719:9088","crate_id":4,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6720:59547","4:6721:8900","4:6722:8901","4:6723:8903","4:6724:8902","4:6725:8904","4:6726:8905","4:6727:8907","4:6728:2715","4:6729:8910","4:6730:8911","4:6731:8912","4:6732:8913","4:6733:8914","4:6734:8915","4:6735:8908","4:6736:8909"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:136:1646":{"id":"0:136:1646","crate_id":0,"name":"print","span":{"filename":"src/print.rs","begin":[1,0],"end":[302,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:161:1647","0:740:1649","0:175:1648"],"is_stripped":true}},"1:13413:18527":{"id":"1:13413:18527","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"1:49699:13437","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3153:74":{"id":"1:3153:74","crate_id":1,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3155:13304"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13410:18802":{"id":"1:13410:18802","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"4:15945:2097"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"1:49690:13441","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5831:14431":{"id":"4:5831:14431","crate_id":4,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5832:8979"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3565:9062":{"id":"1:3565:9062","crate_id":1,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3567:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3561:9061","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:740:1649":{"id":"0:740:1649","crate_id":0,"name":"PrintFmt","span":{"filename":"src/print.rs","begin":[27,0],"end":[34,1]},"visibility":"public","docs":"The styles of printing that we can print","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:741:2008","0:743:2010"],"impls":[]}},"1:3718:137":{"id":"1:3718:137","crate_id":1,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3720:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3713:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:776:1654":{"id":"0:776:1654","crate_id":0,"name":"capture","span":{"filename":"src/capture.rs","begin":[1,0],"end":[555,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:864:1655","0:869:1656","0:884:1657"],"is_stripped":true}},"1:13398:55053":{"id":"1:13398:55053","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:3263:106":{"id":"1:3263:106","crate_id":1,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2910:124":{"id":"1:2910:124","crate_id":1,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:869:1656":{"id":"0:869:1656","crate_id":0,"name":"BacktraceFrame","span":{"filename":"src/capture.rs","begin":[49,0],"end":[52,1]},"visibility":"public","docs":"Captured version of a frame in a backtrace.\n\nThis type is returned as a list from `Backtrace::frames` and represents one\nstack frame in a captured backtrace.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:3156:149":{"id":"1:3156:149","crate_id":1,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3158:2714"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13449:58373":{"id":"1:13449:58373","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"4:15945:2097","self::pattern":"1:13018:13399","prim@char":"4:15939:2092"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"1:49529:13431","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:27:2486":{"id":"25:27:2486","crate_id":25,"name":"Endian","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:28:62350","25:29:62351","25:30:13702","25:31:13701","25:32:62015","25:33:62016","25:34:62017","25:35:62019","25:36:62020","25:37:62021","25:38:62352","25:40:62353","25:42:62354","25:44:62355","25:46:62356","25:48:62357","25:50:56476","25:51:56477","25:52:56478","25:53:56482","25:54:56483","25:55:56484","25:56:62358","25:58:62359","25:60:62360","25:62:62361","25:64:62362","25:66:62363"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:3231:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2910:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3253:211":{"id":"1:3253:211","crate_id":1,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13411:3181":{"id":"1:13411:3181","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"1:49661:3153","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13437:58369":{"id":"1:13437:58369","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"str::split":"4:15945:2097","self::pattern":"1:13018:13399","`DoubleEndedIterator`":"1:8428:120","prim@char":"4:15939:2092"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"1:49425:13427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9240:2855":{"id":"1:9240:2855","crate_id":1,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3262:217":{"id":"1:3262:217","crate_id":1,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13404:58359":{"id":"1:13404:58359","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"4:15945:2097"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6104:61390":{"id":"5:6104:61390","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:1664","`String`":"5:8368:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1664","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1395"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3166:227":{"id":"1:3166:227","crate_id":1,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3168:127","1:3169:1413"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:175:1648":{"id":"0:175:1648","crate_id":0,"name":"BacktraceFrameFmt","span":{"filename":"src/print.rs","begin":[94,0],"end":[97,1]},"visibility":"public","docs":"A formatter for just one frame of a backtrace.\n\nThis type is created by the `BacktraceFmt::frame` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'fmt","kind":{"lifetime":{"outlives":[]}}},{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:8863:13677":{"id":"1:8863:13677","crate_id":1,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:9371:14506":{"id":"4:9371:14506","crate_id":4,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:9372:59613","4:9373:59614","4:9374:59615","4:9375:59616","4:9376:59617","4:9377:41931","4:9378:59612"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10593:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2941:177":{"id":"1:2941:177","crate_id":1,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2942:415","1:2943:13298","1:2944:11931","1:2945:13303"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2910:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2951:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6088:61387":{"id":"5:6088:61387","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8453:2375":{"id":"1:8453:2375","crate_id":1,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8454:793","1:8455:2042"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:88:1641":{"id":"0:88:1641","crate_id":0,"name":"Symbol","span":{"filename":"src/symbolize/mod.rs","begin":[190,0],"end":[195,1]},"visibility":"public","docs":"A trait representing the resolution of a symbol in a file.\n\nThis trait is yielded as a trait object to the closure given to the\n`backtrace::resolve` function, and it is virtually dispatched as it's\nunknown which implementation is behind it.\n\nA symbol can give contextual information about a function, for example the\nname, filename, line number, precise address, etc. Not all information is\nalways available in a symbol, however, so all methods return an `Option`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:12957:3136":{"id":"1:12957:3136","crate_id":1,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12958:126","1:12959:55287"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13470:60751":{"id":"1:13470:60751","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6824:9098":{"id":"4:6824:9098","crate_id":4,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6825:16806"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10593:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3331:9109":{"id":"1:3331:9109","crate_id":1,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3333:181","1:3334:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:767":{"id":"0:767","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,32],"end":[133,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::capture::Backtrace","name":"Backtrace","id":"0:864:1655","glob":false}},"1:2872:104":{"id":"1:2872:104","crate_id":1,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2873:408","1:2874:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[127,16],"end":[127,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"print::BacktraceFmt","name":"BacktraceFmt","id":"0:161:1647","glob":false}},"0:114:1645":{"id":"0:114:1645","crate_id":0,"name":"clear_symbol_cache","span":{"filename":"src/symbolize/mod.rs","begin":[459,0],"end":[464,1]},"visibility":"public","docs":"Attempt to reclaim that cached memory used to symbolicate addresses.\n\nThis method will attempt to release any global data structures that have\notherwise been cached globally or in the thread which typically represent\nparsed DWARF information or similar.\n\n# Caveats\n\nWhile this function is always available it doesn't actually do anything on\nmost implementations. Libraries like dbghelp or libbacktrace do not provide\nfacilities to deallocate state and manage the allocated memory. For now the\n`gimli-symbolize` feature of this crate is the only feature where this\nfunction has any effect.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:8384:151":{"id":"1:8384:151","crate_id":1,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8385:13313","1:8386:9068","1:8387:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13427:13310":{"id":"1:13427:13310","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:47440:176","self::pattern":"1:13018:13399","prim@char":"4:15939:2092"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:1079:14446":{"id":"4:1079:14446","crate_id":4,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:1080:1986","4:1081:14430","4:1082:57878","4:1083:57879","4:1084:57880","4:1085:57881","4:1086:57882"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13499:1931":{"id":"1:13499:1931","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"1:12957:3136","FromStr::Err":"1:12957:3136"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12957:3136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12957:3136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10289:189":{"id":"1:10289:189","crate_id":1,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10290:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6821:14449":{"id":"4:6821:14449","crate_id":4,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6822:57925","4:6823:57926"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10593:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13434:18803":{"id":"1:13434:18803","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"4:15939:2092","self::pattern":"1:13018:13399"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"1:12810:13442","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6105:14493":{"id":"5:6105:14493","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5819:9085":{"id":"4:5819:9085","crate_id":4,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5820:13545"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:2431:2679":{"id":"25:2431:2679","crate_id":25,"name":"Sym","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2432:13695","25:2433:2486","25:2434:2716","25:2435:8571","25:2436:13720","25:2437:2708","25:2438:8572","25:2439:13721","25:2440:2711","25:2441:2713","25:2442:2715","25:2443:899","25:2446:13722","25:2447:13723"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13391:60741":{"id":"1:13391:60741","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:13387:60740":{"id":"1:13387:60740","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"4:15945:2097"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:731:1978":{"id":"0:731:1978","crate_id":0,"name":"Bytes","span":{"filename":"src/types.rs","begin":[19,4],"end":[19,19]},"visibility":"default","docs":"A slice, typically provided on Unix platforms.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]}},"1:3385:9119":{"id":"1:3385:9119","crate_id":1,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3387:181","1:3388:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13390:1950":{"id":"1:13390:1950","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12489:1943"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3321:9107":{"id":"1:3321:9107","crate_id":1,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3323:181","1:3324:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13746:150":{"id":"1:13746:150","crate_id":1,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13747:181","1:13748:150","1:13749:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:2951:184":{"id":"1:2951:184","crate_id":1,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2953:997","1:2954:826","1:2955:792","1:2956:713","1:2957:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:5823:14432":{"id":"4:5823:14432","crate_id":4,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5824:59534"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10593:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:86:1639":{"id":"0:86:1639","crate_id":0,"name":"resolve_frame_unsynchronized","span":{"filename":"src/symbolize/mod.rs","begin":[174,0],"end":[179,1]},"visibility":"public","docs":"Same as `resolve_frame`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available\nwhen the `std` feature of this crate isn't compiled in. See the\n`resolve_frame` function for more documentation and examples.\n\n# Panics\n\nSee information on `resolve_frame` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["frame",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1637","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3506:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"5:5833:13843":{"id":"5:5833:13843","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"23:1221:12068":{"id":"23:1221:12068","crate_id":23,"name":"Reader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1222:2486","23:1223:16065","23:1224:2700","23:1225:793","23:1226:13177","23:1227:3648","23:1228:54724","23:1229:54725","23:1230:54726","23:1231:13345","23:1232:1306","23:1233:54727","23:1234:54728","23:1235:1395","23:1236:54729","23:1237:54730","23:1238:62051","23:1240:2042","23:1241:62052","23:1243:62053","23:1245:62015","23:1247:62019","23:1249:62016","23:1251:62020","23:1253:62017","23:1255:62021","23:1257:62022","23:1259:62023","23:1261:62018","23:1263:62054","23:1264:62055","23:1265:62056","23:1266:62057","23:1268:62058","23:1269:62059","23:1270:62060","23:1273:62061","23:1274:62062","23:1275:62063","23:1276:62064","23:1277:62065"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13443:60745":{"id":"1:13443:60745","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"4:15939:2092","str::split":"4:15945:2097","str::split_terminator":"4:15945:2097","self::pattern":"1:13018:13399"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"1:49475:13428","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/backtrace/libunwind.rs","begin":[125,4],"end":[125,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::_Unwind_Reason_Code","name":"_Unwind_Reason_Code","id":"0:271:2427","glob":true}},"0:756":{"id":"0:756","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[131,8],"end":[131,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::backtrace::trace","name":"trace","id":"0:20:1651","glob":false}},"1:2847:97":{"id":"1:2847:97","crate_id":1,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2849:1973"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"25:5430:9167":{"id":"25:5430:9167","crate_id":25,"name":"ObjectSection","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5432:15442","25:5433:753","25:5434:268","25:5435:1302","25:5436:273","25:5437:13711","25:5438:2368","25:5439:9165","25:5440:62323","25:5441:62324","25:5442:62326","25:5443:62148","25:5444:899","25:5445:62325","25:5446:62315","25:5447:782","25:5448:11893","25:5449:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3713:224":{"id":"1:3713:224","crate_id":1,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3714:181","1:3715:9132","1:3716:686","1:3717:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"1:3718:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3713:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3489:2246":{"id":"1:3489:2246","crate_id":1,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3490:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3476:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3261:218":{"id":"1:3261:218","crate_id":1,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:5450:9166":{"id":"25:5450:9166","crate_id":25,"name":"ObjectComdat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5452:9190","25:5453:782","25:5454:2040","25:5455:62148","25:5456:899","25:5457:2518"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:2839:11835":{"id":"25:2839:11835","crate_id":25,"name":"Dyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2840:13695","25:2841:2486","25:2842:11799","25:2843:11800","25:2844:62305","25:2845:62306","25:2846:62307","25:2847:2207","25:2850:62308"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:5753:9086":{"id":"4:5753:9086","crate_id":4,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5754:13546","4:5755:13547","4:5756:13548","4:5757:13549"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13440:60744":{"id":"1:13440:60744","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"4:15939:2092","self::pattern":"1:13018:13399","`DoubleEndedIterator`":"1:8428:120","str::split":"4:15945:2097","str::rsplit_terminator":"4:15945:2097"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"1:49457:13430","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5775:9088":{"id":"4:5775:9088","crate_id":4,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5776:8612","4:5777:13545","4:5778:8979","4:5779:13554","4:5780:8589","4:5781:8590","4:5782:13555","4:5783:1302","4:5784:13556","4:5785:13557","4:5786:13558","4:5787:13559","4:5788:13560","4:5789:13561","4:5790:13562","4:5791:13563"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:592:12075":{"id":"23:592:12075","crate_id":23,"name":"UnwindContextStorage","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:594:62010","23:595:62009"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12068","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"25:5458:9170":{"id":"25:5458:9170","crate_id":25,"name":"ObjectSymbolTable","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5460:1641","25:5461:9194","25:5462:2039","25:5463:62214"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10285:13369":{"id":"1:10285:13369","crate_id":1,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10286:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:22802:14254":{"id":"1:22802:14254","crate_id":1,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22803:55423","1:22804:1225","1:22805:1226","1:22806:55424","1:22807:55425","1:22808:55426","1:22809:55427","1:22810:55428","1:22811:55429","1:22812:55430"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22815:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:6993:9091":{"id":"4:6993:9091","crate_id":4,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6994:13567"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3342:9111":{"id":"1:3342:9111","crate_id":1,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3344:181","1:3345:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:734:1980":{"id":"0:734:1980","crate_id":0,"name":"Wide","span":{"filename":"src/types.rs","begin":[21,4],"end":[21,19]},"visibility":"default","docs":"Wide strings typically from Windows.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u16"}}}}]}},"1:13467:60750":{"id":"1:13467:60750","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"4:15939:2092","str::match_indices":"4:15945:2097","self::pattern":"1:13018:13399","`DoubleEndedIterator`":"1:8428:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"1:49575:13436","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:161:1647":{"id":"0:161:1647","crate_id":0,"name":"BacktraceFmt","span":{"filename":"src/print.rs","begin":[17,0],"end":[23,1]},"visibility":"public","docs":"A formatter for backtraces.\n\nThis type can be used to print a backtrace regardless of where the backtrace\nitself comes from. If you have a `Backtrace` type then its `Debug`\nimplementation already uses this printing format.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:118:1643":{"id":"0:118:1643","crate_id":0,"name":"types","span":{"filename":"src/types.rs","begin":[1,0],"end":[83,1]},"visibility":"crate","docs":"Platform dependent types.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:729:1644"],"is_stripped":true}},"1:3150:75":{"id":"1:3150:75","crate_id":1,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3152:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[117,50],"end":[117,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::Symbol","name":"Symbol","id":"0:88:1641","glob":false}},"1:14130:141":{"id":"1:14130:141","crate_id":1,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:14131:277","1:14132:518","1:14133:280","1:14134:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:5809:9087":{"id":"4:5809:9087","crate_id":4,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5810:13550","4:5811:13551","4:5812:13552","4:5813:13553"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:5681:1993":{"id":"4:5681:1993","crate_id":4,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5682:2778","4:5683:13289"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10593:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:2946:11846":{"id":"25:2946:11846","crate_id":25,"name":"NoteHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2947:2486","25:2948:11820","25:2949:11821","25:2950:2739"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:3248:50492":{"id":"25:3248:50492","crate_id":25,"name":"FatArch","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3249:13695","25:3250:15507","25:3251:15508","25:3252:957","25:3253:1302","25:3254:273","25:3255:62209","25:3256:13711","25:3257:2368"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[120,0],"end":[120,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::types::BytesOrWideString","name":"BytesOrWideString","id":"0:729:1644","glob":false}},"0:13:1635":{"id":"0:13:1635","crate_id":0,"name":"backtrace","span":{"filename":"src/backtrace/mod.rs","begin":[1,0],"end":[162,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:20:1651","0:22:1636","0:236:1637"],"is_stripped":true}},"1:3701:9130":{"id":"1:3701:9130","crate_id":1,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3632:9063","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13464:60749":{"id":"1:13464:60749","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"4:15939:2092","self::pattern":"1:13018:13399","str::rmatch_indices":"4:15945:2097","`DoubleEndedIterator`":"1:8428:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"1:49557:13435","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3401:9123":{"id":"1:3401:9123","crate_id":1,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3403:181","1:3404:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6107:57879":{"id":"5:6107:57879","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"4:15945:2097"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:4620:15033":{"id":"25:4620:15033","crate_id":25,"name":"ImageNtHeaders","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4621:50573","25:4622:15029","25:4623:13697","25:4624:62416","25:4625:15803","25:4626:15804","25:4627:15805","25:4628:1931","25:4631:2518","25:4634:2039"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:6897:9095":{"id":"4:6897:9095","crate_id":4,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6898:13569"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10272:109":{"id":"1:10272:109","crate_id":1,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10273:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13504:57882":{"id":"1:13504:57882","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13508:60762":{"id":"1:13508:60762","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"4:15939:2092"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"1:49724:13440","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:23099:14201":{"id":"1:23099:14201","crate_id":1,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"1:23736:14058","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:23090:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:41":{"id":"0:41","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[117,58],"end":[117,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::SymbolName","name":"SymbolName","id":"0:100:1642","glob":false}},"4:4742:14472":{"id":"4:4742:14472","crate_id":4,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4743:57743","4:4744:57744","4:4745:57746","4:4747:14471","4:4748:57745","4:4750:54727","4:4751:3181"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"4:4660:9024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3088:3203":{"id":"1:3088:3203","crate_id":1,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:3087:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:4660:9024":{"id":"4:4660:9024","crate_id":4,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4661:2483","4:4662:59910","4:4664:59911","4:4665:59912","4:4666:9008","4:4667:19087","4:4668:19086","4:4670:59913","4:4671:13334","4:4672:1938","4:4673:13320","4:4675:3095"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3561:9061":{"id":"1:3561:9061","crate_id":1,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3563:181","1:3564:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13400:55054":{"id":"1:13400:55054","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:3759:2300":{"id":"1:3759:2300","crate_id":1,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3258:2374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13381":{"id":"1:13381","crate_id":1,"name":null,"span":null,"visibility":{"restricted":{"parent":"1:12478:1338","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["1:13382:793","1:13383:2042","1:13384:18585","1:13385:60739","1:13387:60740","1:13390:1950","1:13391:60741","1:13392:304","1:13393:17422","1:13394:1676","1:13396:17410","1:13398:55053","1:13400:55054","1:13402:14581","1:13403:60742","1:13404:58359","1:13405:58360","1:13406:13451","1:13407:14093","1:13408:1938","1:13409:18804","1:13410:18802","1:13411:3181","1:13412:60743","1:13413:18527","1:13414:56428","1:13417:2724","1:13420:58065","1:13423:13345","1:13427:13310","1:13431:54727","1:13434:18803","1:13437:58369","1:13440:60744","1:13443:60745","1:13446:58371","1:13449:58373","1:13452:60746","1:13455:60747","1:13458:2120","1:13461:60748","1:13464:60749","1:13467:60750","1:13470:60751","1:13472:60752","1:13474:60753","1:13476:60754","1:13477:60755","1:13478:60756","1:13481:60757","1:13484:2790","1:13487:58375","1:13490:60758","1:13493:60759","1:13496:60760","1:13499:1931","1:13501:14430","1:13502:57880","1:13503:57881","1:13504:57882","1:13505:60761","1:13507:14448","1:13508:60762"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:10293:13372":{"id":"1:10293:13372","crate_id":1,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10294:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:337:1970":{"id":"0:337:1970","crate_id":0,"name":"gimli","span":{"filename":"src/symbolize/gimli.rs","begin":[1,0],"end":[462,1]},"visibility":{"restricted":{"parent":"0:44:1638","path":"::symbolize"}},"docs":"Support for symbolication using the `gimli` crate on crates.io\n\nThis is the default symbolication implementation for Rust.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"1:3368:9116":{"id":"1:3368:9116","crate_id":1,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3370:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13403:60742":{"id":"1:13403:60742","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"1:3565:9062","str::slice_unchecked":"4:15945:2097","`str`":"4:15945:2097"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:13384:18585":{"id":"1:13384:18585","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13477:60755":{"id":"1:13477:60755","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3390:9120":{"id":"1:3390:9120","crate_id":1,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3392:181","1:3393:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:12465:13588":{"id":"1:12465:13588","crate_id":1,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12466:13313","1:12467:54752"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8860:2296":{"id":"1:8860:2296","crate_id":1,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13478:60756":{"id":"1:13478:60756","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"4:15939:2092","self::pattern":"1:13018:13399"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"1:13048:13415","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6084:61386":{"id":"5:6084:61386","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1664","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1664","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3356:9117":{"id":"1:3356:9117","crate_id":1,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3358:1354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3407:9124":{"id":"1:3407:9124","crate_id":1,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3409:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13420:58065":{"id":"1:13420:58065","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"4:15939:2092","self::pattern":"1:13018:13399"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13028:13414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13043:13416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3336:9108":{"id":"1:3336:9108","crate_id":1,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3338:181","1:3339:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13501:14430":{"id":"1:13501:14430","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3984:68":{"id":"1:3984:68","crate_id":1,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3985:1426"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"23:194:12069":{"id":"23:194:12069","crate_id":23,"name":"ArrayLike","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:195:13313"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"23:189:14062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"paths":{"1:49245:13606":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:3419:9127":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:4023:6624":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"23:8266:13090":{"crate_id":23,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"25:11818:15049":{"crate_id":25,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:49904:14077":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"4:12011:14554":{"crate_id":4,"path":["std","process","ExitCode"],"kind":"struct"},"4:11166:14434":{"crate_id":4,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"11:54:14891":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"25:12132:9203":{"crate_id":25,"path":["object","read","SymbolMap"],"kind":"struct"},"4:12019:16435":{"crate_id":4,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"4:11482:3114":{"crate_id":4,"path":["std","path","Prefix"],"kind":"enum"},"6:5282:7272":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:3321:9107":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"4:11360:14434":{"crate_id":4,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"23:8160:13084":{"crate_id":23,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"25:10339:61945":{"crate_id":25,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:4112:6635":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:294:16729":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"14:244:2273":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"10:0:2146":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:24212:2262":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"4:15012:16446":{"crate_id":4,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"6:1522:4505":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"4:6733:8914":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"23:7440:13062":{"crate_id":23,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:3407:9124":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"12:1162:14900":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:1744:4529":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:47703:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"26:705:15311":{"crate_id":26,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"25:9686:9177":{"crate_id":25,"path":["object","common","SymbolKind"],"kind":"enum"},"1:49681:13425":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:50396:2308":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"23:6007:9158":{"crate_id":23,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"24:6148:7694":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"24:1722:4527":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"24:6863:6802":{"crate_id":24,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:10317:11839":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"24:6637:8061":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"25:10566:9194":{"crate_id":25,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"23:8495:13100":{"crate_id":23,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:7467:13096":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"24:4452:6670":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:13760:15978":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"4:10687:14517":{"crate_id":4,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:53286:14243":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:6614:55611":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"25:13087:15517":{"crate_id":25,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:12759:13445":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:5548:7318":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"23:6427:13025":{"crate_id":23,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:13163:15806":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"25:14628:15909":{"crate_id":25,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"24:1565:4512":{"crate_id":24,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:7843:13106":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"23:3264:12103":{"crate_id":23,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:12521:15602":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"25:13492:15594":{"crate_id":25,"path":["object","macho","TwolevelHint"],"kind":"struct"},"9:41:14834":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"23:7054:13047":{"crate_id":23,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"25:11249:11891":{"crate_id":25,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"25:11355:16744":{"crate_id":25,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:13119:15801":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:10403:11850":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"18:621:15310":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:4470:6671":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:1091:15150":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"4:9173:2360":{"crate_id":4,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:1717:4525":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"12:2269:14534":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:10844:9193":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"27:769:14794":{"crate_id":27,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"24:1577:4513":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:6152:13044":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:8860:2296":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"23:8302:13091":{"crate_id":23,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"25:11808:9208":{"crate_id":25,"path":["object","read","pe","export","Export"],"kind":"struct"},"4:11378:14645":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:3166:227":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"6:6106:7692":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:23427:14109":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"25:10959:2678":{"crate_id":25,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:13986:16035":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:13429:15866":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"18:886:15007":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"25:13076:15516":{"crate_id":25,"path":["object","macho","LcStr"],"kind":"struct"},"5:5875:15159":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"25:2946:11846":{"crate_id":25,"path":["object","read","elf","note","NoteHeader"],"kind":"trait"},"16:3939:12303":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:5522:7317":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"25:12524:9503":{"crate_id":25,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:5903:1338":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"5:6764:14463":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:2314:11844":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"25:13646:15616":{"crate_id":25,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"25:5899:2674":{"crate_id":25,"path":["object","elf","SHF_COMPRESSED"],"kind":"constant"},"1:3373:9121":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"25:10751:14988":{"crate_id":25,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"4:10962:14562":{"crate_id":4,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"16:6999:13073":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"23:3006:12066":{"crate_id":23,"path":["gimli","common","Format"],"kind":"enum"},"1:4712:14102":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:51666:14203":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:6873:14177":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:49856:14076":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"4:11392:14650":{"crate_id":4,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"25:11617:15435":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:51069:14224":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"9:603:15063":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"25:13046:15513":{"crate_id":25,"path":["object","macho","MachHeader64"],"kind":"struct"},"25:12998:15504":{"crate_id":25,"path":["object","macho","FatHeader"],"kind":"struct"},"1:47955:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"4:1045:14006":{"crate_id":4,"path":["std","thread","JoinHandle"],"kind":"struct"},"18:713:13295":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"25:13681:15628":{"crate_id":25,"path":["object","macho","SymsegCommand"],"kind":"struct"},"24:1669:4521":{"crate_id":24,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"23:6998:13044":{"crate_id":23,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:6014:13037":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"4:7649:14545":{"crate_id":4,"path":["std","process","Child"],"kind":"struct"},"5:8130:9066":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:6219:13048":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:6491:14175":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:46656:14181":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"4:5892:14674":{"crate_id":4,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"17:13842:16005":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:11231:9207":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"4:4465:14491":{"crate_id":4,"path":["std","io","stdio","Stdout"],"kind":"struct"},"24:5407:7282":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"24:1556:4511":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"25:14286:15822":{"crate_id":25,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"23:5722:12818":{"crate_id":23,"path":["gimli","constants","DwRle"],"kind":"struct"},"25:14306:15830":{"crate_id":25,"path":["object","pe","ImageSymbol"],"kind":"struct"},"25:2431:2679":{"crate_id":25,"path":["object","read","elf","symbol","Sym"],"kind":"trait"},"4:897:14011":{"crate_id":4,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:1554:4510":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"25:12631:9547":{"crate_id":25,"path":["object","elf","Rela32"],"kind":"struct"},"12:815:14527":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"25:11741:16756":{"crate_id":25,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:13465:15882":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"25:11331:16742":{"crate_id":25,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:12307:15553":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:11328:9210":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"5:374:2313":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:7908:14045":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"16:6176:13046":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:50366:158":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"25:10786:14984":{"crate_id":25,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"25:10529:61944":{"crate_id":25,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"25:12540:9504":{"crate_id":25,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"25:14477:15866":{"crate_id":25,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"24:4274:6648":{"crate_id":24,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:11001:16757":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"12:1238:14903":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:3041:12105":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"24:5971:7686":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:13898:16013":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:37572:178":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"6:6887:6804":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"24:81:3223":{"crate_id":24,"path":["libc","unix","DIR"],"kind":"enum"},"5:1607:13593":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:46336:13439":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"25:11728:16755":{"crate_id":25,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"25:11222:11890":{"crate_id":25,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:1658:4519":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"23:8227:13088":{"crate_id":23,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:6032:2484":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"4:12210:2361":{"crate_id":4,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:3918:6614":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:6072:13038":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:11186:9205":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"24:4351:6657":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"4:2937:179":{"crate_id":4,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"4:15910:1644":{"crate_id":4,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"27:613:15062":{"crate_id":27,"path":["miniz_oxide","inflate","stream","FullReset"],"kind":"struct"},"1:50135:13410":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"4:14513:16439":{"crate_id":4,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"4:10638:13988":{"crate_id":4,"path":["std","thread","Thread"],"kind":"struct"},"1:11225:13595":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:12195:15538":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"4:1637:14534":{"crate_id":4,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:670:3664":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"4:4026:14565":{"crate_id":4,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:3044:16832":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"25:12813:9733":{"crate_id":25,"path":["object","elf","NoteHeader64"],"kind":"struct"},"25:294:16729":{"crate_id":25,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:49839:14075":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"25:13231:15538":{"crate_id":25,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:46011:2329":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"24:5178:7264":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"23:4230:12127":{"crate_id":23,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:49383:13423":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"4:2751:14454":{"crate_id":4,"path":["std","error","Report"],"kind":"struct"},"1:52741:14248":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"16:7804:13104":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"23:6619:13032":{"crate_id":23,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"25:11085:11850":{"crate_id":25,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"4:13866:14549":{"crate_id":4,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:3713:224":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:4767:2295":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:51766:16601":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:23101:14108":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:9280:2681":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"24:6078:7689":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"24:154:3290":{"crate_id":24,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:22902:14059":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:4120:6636":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"25:13218:15537":{"crate_id":25,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:55912:14053":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:49350:13422":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:10502:11890":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:3509:132":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"4:7711:14549":{"crate_id":4,"path":["std","process","Command"],"kind":"struct"},"25:10761:2678":{"crate_id":25,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"5:8330:2286":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:3604:12127":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"24:74:2452":{"crate_id":24,"path":["libc","unix","uintptr_t"],"kind":"typedef"},"17:9296:9162":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:11434:2683":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:45936:9129":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"25:11715:16754":{"crate_id":25,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"6:4459:6670":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"25:11170:11889":{"crate_id":25,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"24:1623:4518":{"crate_id":24,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"23:3491:12112":{"crate_id":23,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"25:11861:9207":{"crate_id":25,"path":["object","read","pe","import","Import"],"kind":"enum"},"9:927:2755":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"4:4735:9026":{"crate_id":4,"path":["std","io","Seek"],"kind":"trait"},"4:11643:3131":{"crate_id":4,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:13282:15835":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:24563:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:13446:15873":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:7453:15150":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:47550:2639":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"23:3089:12096":{"crate_id":23,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"23:6337:13022":{"crate_id":23,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"4:15958:2108":{"crate_id":4,"path":["std","u32"],"kind":"primitive"},"4:2462:13802":{"crate_id":4,"path":["std","env","ArgsOs"],"kind":"struct"},"6:584:3628":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"25:13503:15595":{"crate_id":25,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"4:2166:9066":{"crate_id":4,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:994:14706":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"26:152:54140":{"crate_id":26,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:1618:9068":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:6614:3576":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:3882:14482":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:3338:12117":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"4:11573:3126":{"crate_id":4,"path":["std","path","Component"],"kind":"enum"},"25:11180:11886":{"crate_id":25,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:9162:9181":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:47787:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"4:12023:57875":{"crate_id":4,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"23:6320:13021":{"crate_id":23,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"25:12443:2684":{"crate_id":25,"path":["object","elf","FileHeader64"],"kind":"struct"},"27:41:14834":{"crate_id":27,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"14:216:2279":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"4:12205:2354":{"crate_id":4,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:12741:15638":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"4:12041:16436":{"crate_id":4,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"27:1040:11907":{"crate_id":27,"path":["miniz_oxide","MZError"],"kind":"enum"},"25:10859:15400":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:10407:11837":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:22815:14062":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"26:668:15014":{"crate_id":26,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:11143:13429":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"23:5688:12809":{"crate_id":23,"path":["gimli","constants","DwMacro"],"kind":"struct"},"4:11080:14495":{"crate_id":4,"path":["std","io","util","Empty"],"kind":"struct"},"25:14883:15992":{"crate_id":25,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:3156:149":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"6:4517:6676":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"24:6193:7697":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"4:9667:16899":{"crate_id":4,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"4:1505:14528":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:13043:13416":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"4:5769:9089":{"crate_id":4,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"25:4187:16732":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"4:14876:15194":{"crate_id":4,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"4:14566:118":{"crate_id":4,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"25:3920:14973":{"crate_id":25,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:4040:6626":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"24:536:3624":{"crate_id":24,"path":["libc","unix","rusage"],"kind":"struct"},"25:5518:9164":{"crate_id":25,"path":["object","read","SymbolMapEntry"],"kind":"trait"},"1:47507:2596":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:23432:41615":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"25:12103:9202":{"crate_id":25,"path":["object","read","SymbolSection"],"kind":"enum"},"4:6471:9098":{"crate_id":4,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"27:947:2755":{"crate_id":27,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"25:12343:9212":{"crate_id":25,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:6391:13058":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"25:9606:9175":{"crate_id":25,"path":["object","common","SectionKind"],"kind":"enum"},"24:6851:6800":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"4:2163:9068":{"crate_id":4,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:6852:6799":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:12073:15524":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"4:7663:14546":{"crate_id":4,"path":["std","process","ChildStdin"],"kind":"struct"},"24:4318:6653":{"crate_id":24,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"23:6842:13036":{"crate_id":23,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:9574:2680":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"4:9889:15191":{"crate_id":4,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"24:1753:4530":{"crate_id":24,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"4:2934:180":{"crate_id":4,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:8849:9159":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"4:15954:2104":{"crate_id":4,"path":["std","i64"],"kind":"primitive"},"1:5192:2333":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"25:9840:9182":{"crate_id":25,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:3424:9128":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"24:6178:7696":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"4:8508:202":{"crate_id":4,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"25:12800:9732":{"crate_id":25,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:4523:6677":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"4:10594:14013":{"crate_id":4,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:2253:13534":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:3087:14062":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"23:8041:13075":{"crate_id":23,"path":["gimli","read","op","Expression"],"kind":"struct"},"25:11209:11862":{"crate_id":25,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:46943:14496":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:2843:12097":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:10272:109":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"25:14570:15891":{"crate_id":25,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:2484:11875":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:74:1432":{"crate_id":1,"path":["core","u32"],"kind":"module"},"9:900:11979":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:7236:13084":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:9239:2856":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"23:3162:12099":{"crate_id":23,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"23:447:12073":{"crate_id":23,"path":["gimli","read","cfi","_UnwindSectionPrivate"],"kind":"trait"},"4:15946:2098":{"crate_id":4,"path":["std","tuple"],"kind":"primitive"},"17:10149:9194":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"20:189:1855":{"crate_id":20,"path":["rustc_demangle","Demangle"],"kind":"struct"},"24:1595:4515":{"crate_id":24,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"24:5379:7279":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"25:11089:11837":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"24:4334:6655":{"crate_id":24,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:56309:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:6744:14947":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:49715:13439":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:1011:3128":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"4:1194:16897":{"crate_id":4,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:46737:14189":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"24:5413:7283":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"23:8150:13083":{"crate_id":23,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"27:829:3124":{"crate_id":27,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:6923:8248":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"25:12741:9720":{"crate_id":25,"path":["object","elf","Verdef"],"kind":"struct"},"16:5384:13015":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"24:5214:7268":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"12:399:14906":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"23:8747:13105":{"crate_id":23,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"23:6192:13014":{"crate_id":23,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:4869:2336":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:12632:15627":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"23:1185:12071":{"crate_id":23,"path":["gimli","read","reader","ReaderOffset"],"kind":"trait"},"1:8160:2320":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:52191:14227":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"25:11892:15442":{"crate_id":25,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:5386:7279":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"25:13017:15509":{"crate_id":25,"path":["object","macho","FatArch64"],"kind":"struct"},"4:14523:9006":{"crate_id":4,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"23:3765:12121":{"crate_id":23,"path":["gimli","common","DwoId"],"kind":"struct"},"24:4157:6639":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"25:13270:15543":{"crate_id":25,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"25:14749:15965":{"crate_id":25,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:47567:205":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"25:14797:15966":{"crate_id":25,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"25:526:9171":{"crate_id":25,"path":["object","read","any","Segment"],"kind":"struct"},"17:9799:9192":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:51390:14246":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:4535:12674":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"23:8728:13104":{"crate_id":23,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:49205:13590":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"25:10409:61939":{"crate_id":25,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:11277:9161":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"23:4493:12189":{"crate_id":23,"path":["gimli","constants","DwChildren"],"kind":"struct"},"18:740:16727":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"4:11193:14436":{"crate_id":4,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"24:4196:6642":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:10232:134":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"16:0:1970":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:4215:6643":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:2794:12095":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:3984:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"16:6464:13060":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:4410:6664":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:12343:15559":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"12:1256:14536":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:1622:4517":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"25:10254:2680":{"crate_id":25,"path":["object","read","util","StringTable"],"kind":"struct"},"26:721:15313":{"crate_id":26,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"4:1450:14523":{"crate_id":4,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"23:3046:12094":{"crate_id":23,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:50119:13406":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"4:15952:2102":{"crate_id":4,"path":["std","i16"],"kind":"primitive"},"1:53200:14205":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:3341:14699":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"4:9761:14627":{"crate_id":4,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"25:13604:15609":{"crate_id":25,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"25:12322:9211":{"crate_id":25,"path":["object","read","CompressionFormat"],"kind":"enum"},"4:7541:119":{"crate_id":4,"path":["std","path","Display"],"kind":"struct"},"6:6214:7698":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"18:897:15008":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"4:4467:14492":{"crate_id":4,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"23:6039:16061":{"crate_id":23,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:5273:13012":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"23:3241:12102":{"crate_id":23,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"23:3185:12100":{"crate_id":23,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"4:11223:14442":{"crate_id":4,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"25:11964:15448":{"crate_id":25,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"12:2419:3135":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:10041:16734":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"18:830:15003":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"14:56:9224":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"23:3418:12109":{"crate_id":23,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"25:14988:16022":{"crate_id":25,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"25:14144:15796":{"crate_id":25,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:7838:14252":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:48467:133":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"4:8061:14004":{"crate_id":4,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"24:5123:7220":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"12:2066:14513":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"25:12669:9550":{"crate_id":25,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"4:1306:143":{"crate_id":4,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:5274:7271":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"4:11318:14635":{"crate_id":4,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:47913:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"25:11679:16751":{"crate_id":25,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"4:1432:13593":{"crate_id":4,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"6:616:3633":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:22802:14254":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"25:13444:15589":{"crate_id":25,"path":["object","macho","DylibModule64"],"kind":"struct"},"23:8119:13080":{"crate_id":23,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"24:0:798":{"crate_id":24,"path":["libc"],"kind":"module"},"25:12955:15494":{"crate_id":25,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"25:14618:15906":{"crate_id":25,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"25:9717:9178":{"crate_id":25,"path":["object","common","SymbolScope"],"kind":"enum"},"4:14748:14452":{"crate_id":4,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"13:232:16339":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"24:5991:7688":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:4364:6658":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"4:15062:16447":{"crate_id":4,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"23:5228:12674":{"crate_id":23,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"6:4395:6662":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:8121:14707":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:2754:12093":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"25:9976:9162":{"crate_id":25,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:50115:13404":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"17:13810:15990":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:8146:61809":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:3370:14511":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:4095:6633":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"23:8391:13096":{"crate_id":23,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"4:11626:3128":{"crate_id":4,"path":["std","path","Iter"],"kind":"struct"},"16:3091:12107":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:11263:13609":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:48795:16588":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:2945:12101":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"25:13807:9210":{"crate_id":25,"path":["object","macho","Relocation"],"kind":"struct"},"24:1710:4525":{"crate_id":24,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"5:5:1499":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"24:6117:7693":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:9241:2854":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"4:6729:8910":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:525:3621":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"25:560:9172":{"crate_id":25,"path":["object","read","any","Section"],"kind":"struct"},"16:5707:14919":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"17:11499:9446":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"4:15175:14583":{"crate_id":4,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:12568:15609":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"23:6789:14926":{"crate_id":23,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"16:6518:13062":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:12478:1338":{"crate_id":1,"path":["core","str"],"kind":"module"},"24:603:3632":{"crate_id":24,"path":["libc","unix","itimerval"],"kind":"struct"},"16:3429:12120":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:5632:13026":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"25:13298:15548":{"crate_id":25,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"23:7542:14940":{"crate_id":23,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"4:2159:3128":{"crate_id":4,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:10128:14986":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"16:4823:12762":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"12:869:9066":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"25:12785:9731":{"crate_id":25,"path":["object","elf","Vernaux"],"kind":"struct"},"2:0:430":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:24733:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:5564:1783":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"17:10160:15398":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:3364:9114":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"25:10891:16739":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:4671:12735":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"25:11832:15030":{"crate_id":25,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:13248:27514":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"6:5379:7278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"24:518:3621":{"crate_id":24,"path":["libc","unix","timeval"],"kind":"struct"},"17:13172:15807":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:4358:6657":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"4:6971:9096":{"crate_id":4,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"9:686:14790":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"4:11140:14188":{"crate_id":4,"path":["std","io","Take"],"kind":"struct"},"25:4250:50493":{"crate_id":25,"path":["object","read","macho","symbol","Nlist"],"kind":"trait"},"6:5359:7276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"4:7289:16797":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"23:62:12063":{"crate_id":23,"path":["gimli","endianity","Endianity"],"kind":"trait"},"5:8463:9065":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"4:5823:14432":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"25:14948:16011":{"crate_id":25,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:4614:12728":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:12671:15630":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"12:183:14908":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:1236:16731":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"4:8009:15173":{"crate_id":4,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"17:11628:9546":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:6591:13065":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"25:11779:15048":{"crate_id":25,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"4:5831:14431":{"crate_id":4,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"23:8685:13102":{"crate_id":23,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"25:10489:61946":{"crate_id":25,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"9:469:2754":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:11298:13427":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:4417:12656":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:49224:13598":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"4:11275:57876":{"crate_id":4,"path":["std","net","parser","AddrKind"],"kind":"enum"},"16:4477:12666":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"4:10829:9006":{"crate_id":4,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:49511:13432":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"20:0:1685":{"crate_id":20,"path":["rustc_demangle"],"kind":"module"},"1:10287:13370":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:50307:190":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"4:12200:1667":{"crate_id":4,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:11015:16758":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"24:4094:6634":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:12917:15654":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:10827:14977":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:51284:14217":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:45969:9131":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"25:4337:14980":{"crate_id":25,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:10353:11845":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:48039:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:563:3625":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"25:10479:9192":{"crate_id":25,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"25:10820:9193":{"crate_id":25,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:8380:136":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:6605:13066":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:6085:7689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"4:15955:2105":{"crate_id":4,"path":["std","i128"],"kind":"primitive"},"24:4357:6658":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"25:9814:9181":{"crate_id":25,"path":["object","common","FileFlags"],"kind":"enum"},"1:8144:57738":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:49810:14069":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"24:4059:6630":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:24529:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"25:10808:14986":{"crate_id":25,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:9659:61945":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"23:7174:13055":{"crate_id":23,"path":["gimli","read","line","LineRows"],"kind":"struct"},"9:1056:11908":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"23:592:12075":{"crate_id":23,"path":["gimli","read","cfi","UnwindContextStorage"],"kind":"trait"},"1:49931:14078":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"4:1534:14532":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"23:3218:12101":{"crate_id":23,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:0:488":{"crate_id":1,"path":["core"],"kind":"module"},"24:4255:6646":{"crate_id":24,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:6021:14934":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:3294:2298":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:23090:14062":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"23:8780:13107":{"crate_id":23,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"24:150:3289":{"crate_id":24,"path":["libc","unix","FILE"],"kind":"enum"},"18:867:15006":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"6:6091:7690":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:5420:7283":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"23:4923:12569":{"crate_id":23,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:5346:13013":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:56283:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:6475:9066":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"20:244:2273":{"crate_id":20,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:1584:4513":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"7:85:48966":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:46372:14422":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:3415:9126":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:10520:146":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"6:4511:6675":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:13963:16031":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"24:4504:6675":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"25:12607:9513":{"crate_id":25,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:24495:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:51230:14225":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"24:1610:4516":{"crate_id":24,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"24:625:3635":{"crate_id":24,"path":["libc","unix","protoent"],"kind":"struct"},"1:53501:16662":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:13609:15920":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"24:4186:6641":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"24:609:3633":{"crate_id":24,"path":["libc","unix","tms"],"kind":"struct"},"5:2218:14702":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:6780:13071":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:47559:188":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"18:651:15009":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:51491:14241":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"25:11754:16757":{"crate_id":25,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"25:11948:15447":{"crate_id":25,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:11377:13432":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:13590:15915":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"26:740:16727":{"crate_id":26,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"24:6845:6799":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"25:12313:9210":{"crate_id":25,"path":["object","read","Relocation"],"kind":"struct"},"1:3796:2301":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"25:11903:9210":{"crate_id":25,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"4:8323:14004":{"crate_id":4,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"1:12489:1943":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"24:4403:6664":{"crate_id":24,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"25:11388:15403":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"25:14561:15890":{"crate_id":25,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:13477:15883":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:10222:1956":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"25:10084:9186":{"crate_id":25,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:46418:2248":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"21:0:1650":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"18:661:15013":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:2178:13690":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"26:791:14999":{"crate_id":26,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:12051:15517":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"26:678:142":{"crate_id":26,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:13772:15981":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"4:11220:14441":{"crate_id":4,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"17:13205:15818":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"4:6719:9088":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:3881:6611":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:4300:6650":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:3972:6463":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:6554:13063":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"4:15444:1637":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"5:5536:2348":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:3018:12104":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"23:6918:13038":{"crate_id":23,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:47619:13593":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"4:6993:9091":{"crate_id":4,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"25:14654:15915":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"25:11790:15056":{"crate_id":25,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:46747:14178":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"25:13244:15540":{"crate_id":25,"path":["object","macho","SubClientCommand"],"kind":"struct"},"24:4066:6631":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:47661:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"4:15945:2097":{"crate_id":4,"path":["std","str"],"kind":"primitive"},"25:11579:14977":{"crate_id":25,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:13857:16810":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:5987:7687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:10253:11842":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"25:14976:16020":{"crate_id":25,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:46244:14302":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:4699:15155":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"5:5833:13843":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:12168:15406":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"25:11546:15433":{"crate_id":25,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:46056:14265":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:6949:14953":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"23:7346:13059":{"crate_id":23,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:48443:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:10905:14062":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"4:5020:14433":{"crate_id":4,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"18:668:15014":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"25:14529:15882":{"crate_id":25,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"4:11372:14681":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:12275:15549":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"18:745:61950":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:51846:16603":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:9264:9158":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"4:1486:9064":{"crate_id":4,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"1:5023:2323":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"4:11415:3406":{"crate_id":4,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:6366:3155":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:9210:9184":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:50975:16593":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"16:7856:13107":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"4:15938:2091":{"crate_id":4,"path":["std","never"],"kind":"primitive"},"9:749:14794":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"4:11632:3130":{"crate_id":4,"path":["std","path","Ancestors"],"kind":"struct"},"25:14874:15990":{"crate_id":25,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:2941:177":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:24091:16469":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"23:7995:13074":{"crate_id":23,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"24:71:2802":{"crate_id":24,"path":["libc","unix","size_t"],"kind":"typedef"},"24:6232:7700":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:5371:7277":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:23997:14283":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:5312:7274":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"4:8673:2350":{"crate_id":4,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"24:4120:6637":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:56296:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"4:11968:181":{"crate_id":4,"path":["std","process","Output"],"kind":"struct"},"1:49326:13602":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"4:8422:3124":{"crate_id":4,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"4:903:14012":{"crate_id":4,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:6620:14940":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:10801:16746":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:6899:6806":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:9440:9187":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:10555:14139":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"24:3971:6619":{"crate_id":24,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"4:7320:16797":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:49825:14072":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:2267:14136":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"5:8203:9068":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"25:13478:15592":{"crate_id":25,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"23:3067:12095":{"crate_id":23,"path":["gimli","common","Register"],"kind":"struct"},"17:11555:9504":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:6208:13047":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:24665:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"12:472:61934":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:7174:13078":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:5522:13023":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:13394:15860":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"24:1540:4509":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:11835:9744":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"24:4324:6654":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"4:15956:2106":{"crate_id":4,"path":["std","u8"],"kind":"primitive"},"6:1665:4520":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"25:10651:61940":{"crate_id":25,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"4:5405:14632":{"crate_id":4,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:53325:14208":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:6239:7700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:13488:15887":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"25:2657:11849":{"crate_id":25,"path":["object","read","elf","relocation","Rela"],"kind":"trait"},"1:4050:14132":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:46548:2418":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"25:10933:11842":{"crate_id":25,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:10975:16755":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"12:777:9068":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"23:3638:12118":{"crate_id":23,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"23:7279:13057":{"crate_id":23,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"25:13323:15550":{"crate_id":25,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:14033:2305":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"25:14020:15705":{"crate_id":25,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"4:11411:14450":{"crate_id":4,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:3259:2299":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"25:14267:15821":{"crate_id":25,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"4:11108:9027":{"crate_id":4,"path":["std","io","SeekFrom"],"kind":"enum"},"25:12504:9447":{"crate_id":25,"path":["object","elf","SectionHeader64"],"kind":"struct"},"25:10208:1978":{"crate_id":25,"path":["object","read","util","Bytes"],"kind":"struct"},"1:50016:16816":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"5:8362:16358":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:51870:16604":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:591:3629":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:10912:16747":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"23:3027:12093":{"crate_id":23,"path":["gimli","common","Encoding"],"kind":"struct"},"23:6354:13023":{"crate_id":23,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:46311:13440":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"6:3951:6616":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"24:4006:6623":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:4852:12766":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"4:12082:14593":{"crate_id":4,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:7185:13079":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:3718:137":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"4:4726:57949":{"crate_id":4,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:23638:56282":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:13296:15836":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:46358:13438":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:3231:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:9954:14316":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:46647:14180":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"25:11640:15436":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"25:2631:11848":{"crate_id":25,"path":["object","read","elf","relocation","Rel"],"kind":"trait"},"4:10620:14002":{"crate_id":4,"path":["std","thread","ThreadId"],"kind":"struct"},"4:12363:13801":{"crate_id":4,"path":["std","sys","unix","args","Args"],"kind":"struct"},"5:8197:9068":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"4:12215:2362":{"crate_id":4,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"25:11343:16743":{"crate_id":25,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"6:578:3627":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"5:8106:2310":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:5790:13032":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:4890:12779":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"24:5462:7286":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"12:1703:14916":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"25:13955:15654":{"crate_id":25,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"24:5184:7265":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:7195:13080":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:51618:14218":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"24:1701:4524":{"crate_id":24,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:10864:15435":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"23:8174:13085":{"crate_id":23,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"23:0:1970":{"crate_id":23,"path":["gimli"],"kind":"module"},"23:8316:13092":{"crate_id":23,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:10028:16733":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:11094:3128":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"5:4443:3128":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:1596:4514":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:5595:13025":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"4:1646:14535":{"crate_id":4,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:49271:13604":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"4:12161:14600":{"crate_id":4,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"26:637:15311":{"crate_id":26,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"5:3038:1986":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"4:6895:9094":{"crate_id":4,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"12:162:14904":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"4:2187:14513":{"crate_id":4,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:10788:16745":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"24:3874:6611":{"crate_id":24,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:4478:6672":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"25:14087:15760":{"crate_id":25,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:13547:15905":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:5580:14918":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"24:5998:3406":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:7736:14166":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"25:5458:9170":{"crate_id":25,"path":["object","read","traits","ObjectSymbolTable"],"kind":"trait"},"23:8377:13095":{"crate_id":23,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:4215:9066":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:11665:9549":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:5360:13014":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"4:3200:9008":{"crate_id":4,"path":["std","fs","read_to_string"],"kind":"function"},"17:13637:15928":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:5927:13034":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:5611:779":{"crate_id":1,"path":["core","iter"],"kind":"module"},"6:632:3635":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"26:713:13295":{"crate_id":26,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"23:8257:13089":{"crate_id":23,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:610:3632":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:49706:13438":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"25:13695:15629":{"crate_id":25,"path":["object","macho","IdentCommand"],"kind":"struct"},"16:6110:13041":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"24:4494:6674":{"crate_id":24,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"23:3611:12117":{"crate_id":23,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"25:11116:11887":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"23:6867:14934":{"crate_id":23,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:511:3619":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"25:10623:61947":{"crate_id":25,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:46716:14187":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"6:6124:7693":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"5:8160:9068":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"6:4387:6661":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:12040:15516":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"6:569:3626":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"5:8446:9064":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"23:7022:13046":{"crate_id":23,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"23:5988:12064":{"crate_id":23,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"4:14993:9033":{"crate_id":4,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:2850:12058":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"25:14442:15860":{"crate_id":25,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:543:3624":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:53373:16654":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:46925:1668":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"22:230:3157":{"crate_id":22,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"12:1103:14533":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:14043:14338":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"23:7871:14953":{"crate_id":23,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"24:4487:6673":{"crate_id":24,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"24:1683:4522":{"crate_id":24,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:32261:9059":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"25:10904:16740":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"4:5408:14633":{"crate_id":4,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"24:6084:7690":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"23:8473:13099":{"crate_id":23,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"28:0:2147":{"crate_id":28,"path":["adler"],"kind":"module"},"4:1021:14004":{"crate_id":4,"path":["std","thread","Packet"],"kind":"struct"},"18:721:15313":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:5672:13027":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:49297:13600":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"25:11315:14979":{"crate_id":25,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"24:5372:7278":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"23:6596:13031":{"crate_id":23,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:11915:15469":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"16:6964:2596":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:10489:11862":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"18:812:15001":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"5:3951:9064":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"23:8908:127":{"crate_id":23,"path":["gimli","read","Error"],"kind":"enum"},"8:0:1650":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:24631:2259":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"24:3990:6621":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:3411:9125":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:1723:4526":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"25:11986:9197":{"crate_id":25,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"25:4620:15033":{"crate_id":25,"path":["object","read","pe","file","ImageNtHeaders"],"kind":"trait"},"23:7527:13066":{"crate_id":23,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:10001:50395":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:51198:16595":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:4101:6634":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"25:11059:11843":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"4:1079:14446":{"crate_id":4,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:7650:13321":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:2816:12096":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"24:4340:6656":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"25:12729:9717":{"crate_id":25,"path":["object","elf","Versym"],"kind":"struct"},"25:10840:15398":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:12699:13446":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:3549:12126":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"25:14673:15920":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"4:13511:13795":{"crate_id":4,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:13028:13414":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"25:11278:15039":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"18:858:15005":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"4:9655:16898":{"crate_id":4,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"25:13154:15529":{"crate_id":25,"path":["object","macho","Section64"],"kind":"struct"},"17:9034:9177":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:13098:15796":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:12982:15705":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:6185:7696":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:1708:4524":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"23:5648:12794":{"crate_id":23,"path":["gimli","constants","DwLnct"],"kind":"struct"},"24:4370:6660":{"crate_id":24,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:52884:14216":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:5407:7281":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:12685:15631":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"23:7613:13070":{"crate_id":23,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:4431:6667":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:12010:15513":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"4:4678:9023":{"crate_id":4,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:13685:15965":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"4:8942:1668":{"crate_id":4,"path":["std","sync","once","Once"],"kind":"struct"},"23:194:12069":{"crate_id":23,"path":["gimli","read","util","ArrayLike"],"kind":"trait"},"1:3360:9115":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"23:3799:12123":{"crate_id":23,"path":["gimli","arch","Arm"],"kind":"struct"},"17:13598:15916":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"4:10972:14483":{"crate_id":4,"path":["std","io","error","ErrorKind"],"kind":"enum"},"25:13573:15604":{"crate_id":25,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"4:1161:43135":{"crate_id":4,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"18:767:15321":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"14:189:1855":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"25:14396:15851":{"crate_id":25,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"25:13618:15611":{"crate_id":25,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"25:12262:9161":{"crate_id":25,"path":["object","read","CodeView"],"kind":"struct"},"1:24597:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:11921:13608":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:45729:9135":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:28016:2256":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"5:3375:14700":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"4:6493:9099":{"crate_id":4,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:4704:12743":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"24:5521:6525":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"4:15961:2111":{"crate_id":4,"path":["std","isize"],"kind":"primitive"},"6:5255:7249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"24:4310:6652":{"crate_id":24,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:9005:9176":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:4401:6663":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:8138:14708":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:48506:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:10427:16808":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:8343:14063":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"4:7961:14003":{"crate_id":4,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"16:4955:12794":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:12795:15652":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"24:6892:6806":{"crate_id":24,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"24:584:3629":{"crate_id":24,"path":["libc","unix","winsize"],"kind":"struct"},"4:15949:2099":{"crate_id":4,"path":["std","f32"],"kind":"primitive"},"16:3506:12122":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:48494:107":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"4:15334:14633":{"crate_id":4,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"25:12687:9551":{"crate_id":25,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:13243:16809":{"crate_id":1,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"6:5159:7262":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"23:4407:12153":{"crate_id":23,"path":["gimli","constants","DwUt"],"kind":"struct"},"24:3855:6609":{"crate_id":24,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:4203:6642":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:13018:13399":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"25:13588:15608":{"crate_id":25,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"4:8724:2352":{"crate_id":4,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"22:269:3162":{"crate_id":22,"path":["addr2line","RangeAttributes"],"kind":"struct"},"16:4734:12748":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"24:4510:6676":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:3390:9120":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:9743:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:50173:14378":{"crate_id":1,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"6:6028:4471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"25:13191:15533":{"crate_id":25,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:45913:199":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"27:467:2754":{"crate_id":27,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:3488:9064":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"4:15950:2100":{"crate_id":4,"path":["std","f64"],"kind":"primitive"},"4:14536:16444":{"crate_id":4,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:5998:7688":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"4:9622:15187":{"crate_id":4,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"25:12758:9727":{"crate_id":25,"path":["object","elf","Verdaux"],"kind":"struct"},"4:2366:600":{"crate_id":4,"path":["std","env"],"kind":"module"},"6:4193:6641":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:25205:2255":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:11026:9197":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"25:14366:15840":{"crate_id":25,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"25:15042:16032":{"crate_id":25,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:5269:7270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"23:5516:12762":{"crate_id":23,"path":["gimli","constants","DwIdx"],"kind":"struct"},"5:3839:15150":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"25:5464:9169":{"crate_id":25,"path":["object","read","traits","ObjectSymbol"],"kind":"trait"},"17:10052:16735":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"26:136:54139":{"crate_id":26,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:53399:16656":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:46496:2242":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:161:3290":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"9:692:14792":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:46526:14165":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"25:14344:15836":{"crate_id":25,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:7333:13089":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"16:4922:12786":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:13094:14071":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"18:850:15004":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"25:14200:15802":{"crate_id":25,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:1690:4522":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:22896:14057":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"25:14379:15846":{"crate_id":25,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"25:14425:15857":{"crate_id":25,"path":["object","pe","ImageRelocation"],"kind":"struct"},"4:3730:14481":{"crate_id":4,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:51179:14237":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"12:750:3128":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:10377:11843":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:13506:15891":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"4:15944:2096":{"crate_id":4,"path":["std","slice"],"kind":"primitive"},"4:8227:15173":{"crate_id":4,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"25:14509:15875":{"crate_id":25,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:4013:6623":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:13781:56374":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:49671:13426":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"12:1147:14535":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:7205:13081":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"16:7406:13093":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"25:14218:15807":{"crate_id":25,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"23:8109:13079":{"crate_id":23,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:52348:14222":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"4:3192:128":{"crate_id":4,"path":["std","fs","File"],"kind":"struct"},"18:169:54141":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"4:1623:14533":{"crate_id":4,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:3905:6613":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:9649:9189":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"24:6903:6807":{"crate_id":24,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:6100:7691":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:10626:1307":{"crate_id":1,"path":["core","slice"],"kind":"module"},"1:49529:13431":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"12:2059:14512":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:6910:6807":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"25:9499:9159":{"crate_id":25,"path":["object","common","Architecture"],"kind":"enum"},"1:53247:14223":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"4:14583:60265":{"crate_id":4,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"25:13064:15514":{"crate_id":25,"path":["object","macho","LoadCommand"],"kind":"struct"},"24:4380:6661":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"4:5986:14679":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:22766:14105":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"25:14541:15883":{"crate_id":25,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"12:928:14525":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:9368:9185":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"23:6583:13030":{"crate_id":23,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:11970:15506":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"23:6216:13015":{"crate_id":23,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:5130:7220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:4060:6629":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:923:14705":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:7620:9071":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"4:6893:9092":{"crate_id":4,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:7257:15150":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:52030:14235":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"18:730:61952":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:49690:13441":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"20:56:9224":{"crate_id":20,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:46963:16576":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:49407:13429":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"19:117:16290":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:50186:14379":{"crate_id":1,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"6:6858:6800":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"26:611:15010":{"crate_id":26,"path":["memchr","cow","CowBytes"],"kind":"struct"},"24:1901:4668":{"crate_id":24,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"5:1663:14526":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"4:8166:14004":{"crate_id":4,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:46684:14184":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:5561:13024":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"25:10708:16733":{"crate_id":25,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"4:1419:3128":{"crate_id":4,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:5456:13019":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:11981:15509":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:48461:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"6:5400:7280":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:1729:4527":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"23:8852:13111":{"crate_id":23,"path":["gimli","read","value","Value"],"kind":"enum"},"23:6539:13028":{"crate_id":23,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:8582:157":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"26:821:15002":{"crate_id":26,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:23904:14348":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:6166:13045":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:4494:6673":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"4:15921:1649":{"crate_id":4,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"4:3652:15171":{"crate_id":4,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:57623:16670":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:46229:13439":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"12:895:14899":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"16:7870:13108":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"25:14418:15856":{"crate_id":25,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:12610:15616":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"24:577:3628":{"crate_id":24,"path":["libc","unix","pollfd"],"kind":"struct"},"18:705:15311":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:10211:16739":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"4:4633:14463":{"crate_id":4,"path":["std","io","Guard"],"kind":"struct"},"4:11437:9093":{"crate_id":4,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:11678:9550":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"24:4053:6629":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"23:6825:13035":{"crate_id":23,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:56348:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:4145:6638":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"24:6629:8060":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:5210:7267":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"4:10824:9004":{"crate_id":4,"path":["std","fs","ReadDir"],"kind":"struct"},"23:7558:13067":{"crate_id":23,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:5169:2332":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"4:2793:14455":{"crate_id":4,"path":["std","error","Indented"],"kind":"struct"},"1:3543:2302":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"27:742:14793":{"crate_id":27,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"6:605:3631":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"25:11597:9193":{"crate_id":25,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"23:94:2485":{"crate_id":23,"path":["gimli","endianity","NativeEndian"],"kind":"constant"},"4:1463:14524":{"crate_id":4,"path":["std","collections","hash","map","Values"],"kind":"struct"},"4:15905:2542":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:7824:15164":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:1944:1997":{"crate_id":1,"path":["core","mem"],"kind":"module"},"1:8384:151":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"12:952:14530":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:4350:12639":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:13532:15901":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"25:14962:16013":{"crate_id":25,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:8929:9174":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"25:13530:15598":{"crate_id":25,"path":["object","macho","RpathCommand"],"kind":"struct"},"25:14330:15835":{"crate_id":25,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"25:10916:11853":{"crate_id":25,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"5:3336:14512":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"4:8515:14594":{"crate_id":4,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"24:5452:7285":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:10611:16743":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"25:14434:15858":{"crate_id":25,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:13221:15821":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"4:10615:13994":{"crate_id":4,"path":["std","thread","Builder"],"kind":"struct"},"17:10584:14979":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:3476:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:48224:13370":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"25:3988:9172":{"crate_id":25,"path":["object","read","macho","section","Section"],"kind":"trait"},"23:6564:13029":{"crate_id":23,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"18:821:15002":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:3561:9061":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:49316:13601":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"5:8379:14685":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"4:699:3097":{"crate_id":4,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:12118:15529":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:38753:3202":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"4:15689:2488":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"4:11226:14521":{"crate_id":4,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"1:5392:14416":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:24014:16460":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"5:6672:2348":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"23:5455:12751":{"crate_id":23,"path":["gimli","constants","DwOrd"],"kind":"struct"},"6:6176:7695":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:13746:150":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:9839:9193":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:7738:13101":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"25:12005:9198":{"crate_id":25,"path":["object","read","FileKind"],"kind":"enum"},"24:1547:4510":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"23:3593:12116":{"crate_id":23,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:4949:1666":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:50343:14336":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"24:1526:4507":{"crate_id":24,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:47541:2853":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"25:13131:15525":{"crate_id":25,"path":["object","macho","Section32"],"kind":"struct"},"17:13733:15966":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"24:1589:4514":{"crate_id":24,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"4:10405:1642":{"crate_id":4,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"25:11139:11888":{"crate_id":25,"path":["object","read","elf","note","Note"],"kind":"struct"},"12:1121:14534":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:4724:14103":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"25:14684:15921":{"crate_id":25,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"9:996:11906":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"20:231:14688":{"crate_id":20,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"27:706:14790":{"crate_id":27,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:46379:14423":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:9886:9194":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:7420:13094":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"6:3868:6610":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"4:12700:9004":{"crate_id":4,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"4:1442:9068":{"crate_id":4,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:6221:7699":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"23:7666:14947":{"crate_id":23,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:51540:14226":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:10071:14988":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:49365:13421":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"4:6233:14648":{"crate_id":4,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"25:3248:50492":{"crate_id":25,"path":["object","read","macho","fat","FatArch"],"kind":"trait"},"23:5583:12779":{"crate_id":23,"path":["gimli","constants","DwLns"],"kind":"struct"},"18:645:15012":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"23:3514:12113":{"crate_id":23,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:2276:13533":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"23:3391:12108":{"crate_id":23,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"24:6214:7699":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:22498:13295":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"23:3364:12107":{"crate_id":23,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:10221:205":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"4:1511:14529":{"crate_id":4,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:45976:14127":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:23736:14058":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:4304:12618":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:3356:9117":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"25:12770:9728":{"crate_id":25,"path":["object","elf","Verneed"],"kind":"struct"},"4:70:1489":{"crate_id":4,"path":["std","prelude","v1"],"kind":"module"},"25:13721:15631":{"crate_id":25,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"26:0:2149":{"crate_id":26,"path":["memchr"],"kind":"module"},"17:9551:9160":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"24:1693:4523":{"crate_id":24,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:10599:16742":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"12:2253:14533":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"4:14183:14489":{"crate_id":4,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:53074:14220":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"18:136:54139":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"24:1716:4526":{"crate_id":24,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"25:13363:15554":{"crate_id":25,"path":["object","macho","SymtabCommand"],"kind":"struct"},"25:14354:15837":{"crate_id":25,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:3336:9108":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:24109:19848":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"6:4425:6666":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:6731:14946":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:3724:9132":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"5:1694:14755":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:2512:11838":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:10635:15401":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"23:3468:12111":{"crate_id":23,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:3759:3128":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"25:10721:16734":{"crate_id":25,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:7264:13086":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:4183:6640":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:50123:13407":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:46576:14170":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"25:14494:15873":{"crate_id":25,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:3264:12114":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:48777:3124":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"24:4220:6644":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:9240:2855":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:6005:3406":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:2991:12103":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"25:12239:9208":{"crate_id":25,"path":["object","read","Export"],"kind":"struct"},"1:22839:14112":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"4:14985:60267":{"crate_id":4,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:5472:13020":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:11254:9208":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"18:802:15000":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:49787:14068":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:47482:3128":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"4:7697:14548":{"crate_id":4,"path":["std","process","ChildStderr"],"kind":"struct"},"1:24184:2261":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"5:7849:15169":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"24:4105:6635":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"23:7012:13045":{"crate_id":23,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"12:843:14523":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:12537:15604":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:45867:198":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"24:562:3626":{"crate_id":24,"path":["libc","unix","hostent"],"kind":"struct"},"1:47473:13313":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:53410:16657":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"5:8280:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:5953:4443":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:46319:14419":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"25:14646:15913":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:7378:13091":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:6644:13068":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"4:5532:14640":{"crate_id":4,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"26:867:15006":{"crate_id":26,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:11616:9513":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"24:1658:4520":{"crate_id":24,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"7:38:2427":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"23:5079:12650":{"crate_id":23,"path":["gimli","constants","DwLle"],"kind":"struct"},"4:3333:9014":{"crate_id":4,"path":["std","fs","read_link"],"kind":"function"},"4:8837:162":{"crate_id":4,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"24:4286:6649":{"crate_id":24,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"4:1492:14525":{"crate_id":4,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:3172:12110":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:51342:16597":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:48217:13369":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:5414:7282":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:1235:14758":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"25:220:9155":{"crate_id":25,"path":["object","read","read_ref","ReadRef"],"kind":"trait"},"1:23099:14201":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"4:15939:2092":{"crate_id":4,"path":["std","char"],"kind":"primitive"},"23:5199:12670":{"crate_id":23,"path":["gimli","constants","DwVis"],"kind":"struct"},"25:11158:11860":{"crate_id":25,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:51689:14206":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"4:4601:14496":{"crate_id":4,"path":["std","io","util","Repeat"],"kind":"struct"},"12:933:14528":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:13453:15876":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"23:7098:13050":{"crate_id":23,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"24:5429:16049":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:4347:6656":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:12725:15636":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:49145:14330":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:6870:6802":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:4736:102":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"4:14573:9022":{"crate_id":4,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:6252:13055":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"4:4504:14487":{"crate_id":4,"path":["std","io","stdio","Stderr"],"kind":"struct"},"12:2398:16344":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"24:592:3630":{"crate_id":24,"path":["libc","unix","linger"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:53463:16660":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:53478:16661":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"12:2404:61932":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"4:11255:16413":{"crate_id":4,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"16:6357:13057":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:5407:13016":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"4:8522:14595":{"crate_id":4,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"20:194:2271":{"crate_id":20,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"4:9097:2358":{"crate_id":4,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"4:6731:8912":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"25:12576:9511":{"crate_id":25,"path":["object","elf","Sym64"],"kind":"struct"},"16:3241:12113":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"4:9794:15189":{"crate_id":4,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"25:10732:16735":{"crate_id":25,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:3287:12115":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:12408:15589":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:56322:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"24:3938:6615":{"crate_id":24,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"4:11323:14636":{"crate_id":4,"path":["std","net","Shutdown"],"kind":"enum"},"18:152:54140":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:3978:6619":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"4:15959:2109":{"crate_id":4,"path":["std","u64"],"kind":"primitive"},"17:12659:15629":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:6864:6801":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"25:13668:15627":{"crate_id":25,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"25:13006:15506":{"crate_id":25,"path":["object","macho","FatArch32"],"kind":"struct"},"25:10012:2732":{"crate_id":25,"path":["object","endian","U32Bytes"],"kind":"struct"},"24:4388:6662":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"23:7191:13056":{"crate_id":23,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:13865:16006":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"23:6956:13041":{"crate_id":23,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"4:3335:2786":{"crate_id":4,"path":["std","fs","canonicalize"],"kind":"function"},"24:4026:6625":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11588:9511":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"26:651:15009":{"crate_id":26,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"25:10681:50395":{"crate_id":25,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:7928:13111":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"25:12067:9200":{"crate_id":25,"path":["object","read","SectionIndex"],"kind":"struct"},"5:4599:15153":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"24:4234:6645":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:6577:13064":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"4:11298:16419":{"crate_id":4,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"23:3445:12110":{"crate_id":23,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"25:14997:16026":{"crate_id":25,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:6718:14945":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"24:4299:6651":{"crate_id":24,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"5:8176:14698":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"25:5419:9168":{"crate_id":25,"path":["object","read","traits","ObjectSegment"],"kind":"trait"},"4:0:1329":{"crate_id":4,"path":["std"],"kind":"module"},"12:1203:14902":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:3048:16833":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"23:7640:14945":{"crate_id":23,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:5191:7265":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:49284:13605":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"23:8895:13112":{"crate_id":23,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:11750:9720":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"24:4418:6666":{"crate_id":24,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"4:11962:14550":{"crate_id":4,"path":["std","process","CommandArgs"],"kind":"struct"},"23:6239:13016":{"crate_id":23,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:6087:13039":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:22511:56277":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"23:2991:9172":{"crate_id":23,"path":["gimli","read","Section"],"kind":"trait"},"17:2543:11859":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"12:0:2148":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"4:11616:3127":{"crate_id":4,"path":["std","path","Components"],"kind":"struct"},"16:7453:13095":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"4:11556:3125":{"crate_id":4,"path":["std","path","PrefixComponent"],"kind":"struct"},"20:11:1855":{"crate_id":20,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"23:7886:2596":{"crate_id":23,"path":["gimli","read","op","Location"],"kind":"enum"},"4:12220:14570":{"crate_id":4,"path":["std","time","Instant"],"kind":"struct"},"4:8772:2363":{"crate_id":4,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:3714:12153":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:3772:12186":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"4:5819:9085":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"28:54:14891":{"crate_id":28,"path":["adler","Adler32"],"kind":"struct"},"17:12028:15514":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:10117:14985":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"25:1275:16731":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"4:823:15191":{"crate_id":4,"path":["std","thread","local","os","Key"],"kind":"struct"},"17:9528:1978":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:547:14921":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"25:12467:9224":{"crate_id":25,"path":["object","elf","Ident"],"kind":"struct"},"17:12247:15545":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"23:4175:12126":{"crate_id":23,"path":["gimli","arch","X86"],"kind":"struct"},"17:11519:9447":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"23:3537:12114":{"crate_id":23,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"23:5615:12786":{"crate_id":23,"path":["gimli","constants","DwLne"],"kind":"struct"},"23:6982:13043":{"crate_id":23,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"25:13735:15634":{"crate_id":25,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"4:7766:14551":{"crate_id":4,"path":["std","process","Stdio"],"kind":"struct"},"1:3401:9123":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"4:5775:9088":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"25:0:1684":{"crate_id":25,"path":["object"],"kind":"module"},"25:11405:50514":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:7226:13083":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"5:1653:14525":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"5:1644:14524":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"25:9960:2681":{"crate_id":25,"path":["object","endian","BigEndian"],"kind":"struct"},"25:10449:61942":{"crate_id":25,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"26:812:15001":{"crate_id":26,"path":["memchr","memmem","Finder"],"kind":"struct"},"4:14498:14451":{"crate_id":4,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"25:9657:9176":{"crate_id":25,"path":["object","common","ComdatKind"],"kind":"enum"},"1:49982:14080":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:4790:12754":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:3759:2300":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:9065:9178":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:13574:15912":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"25:11852:15032":{"crate_id":25,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:13272:15834":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:13927:55023":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"12:2392:16343":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:5459:7285":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"25:10272:128":{"crate_id":25,"path":["object","read","any","File"],"kind":"struct"},"24:6928:8249":{"crate_id":24,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:47636:178":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"4:15296:14632":{"crate_id":4,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"23:93:2485":{"crate_id":23,"path":["gimli","endianity","NativeEndian"],"kind":"typedef"},"16:3118:12108":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"25:10048:9185":{"crate_id":25,"path":["object","endian","U64Bytes"],"kind":"struct"},"4:9495:16920":{"crate_id":4,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"4:15274:14443":{"crate_id":4,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:13620:15921":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:531:3622":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"24:530:3623":{"crate_id":24,"path":["libc","unix","rlimit"],"kind":"struct"},"4:1136:1655":{"crate_id":4,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:10081:2678":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:49611:13433":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"17:11539:9503":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"25:627:9173":{"crate_id":25,"path":["object","read","any","Comdat"],"kind":"struct"},"25:2375:11844":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:6418:14174":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:3488:12121":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:3990:6620":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"23:7513:13065":{"crate_id":23,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:4255:2292":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:12756:15642":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:46665:14182":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:3632:9063":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:3261:218":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:4762:12751":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:6569:14942":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"25:11768:16758":{"crate_id":25,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:14130:141":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"4:11312:14634":{"crate_id":4,"path":["std","net","tcp","Incoming"],"kind":"struct"},"23:7702:13071":{"crate_id":23,"path":["gimli","read","op","DieReference"],"kind":"enum"},"24:5305:7274":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:13933:16026":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"25:14611:15905":{"crate_id":25,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"9:776:14831":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"16:7342:13090":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:50127:13408":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:12582:15611":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"23:7313:13058":{"crate_id":23,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"12:856:14524":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"4:3676:14474":{"crate_id":4,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"23:3314:12105":{"crate_id":23,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:56335:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10543:15038":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"23:8284:194":{"crate_id":23,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"5:2553:14763":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:9361:13414":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"25:14251:15818":{"crate_id":25,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"14:0:1685":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"25:14596:15901":{"crate_id":25,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:46604:16567":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"4:2576:127":{"crate_id":4,"path":["std","error","Error"],"kind":"trait"},"12:1666:14914":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:53353:16652":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:24835:2260":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:48580:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"16:5231:12995":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"5:1441:14533":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:51323:14202":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"6:5469:7286":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"4:3345:9019":{"crate_id":4,"path":["std","fs","read_dir"],"kind":"function"},"1:5149:2331":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"23:7921:13073":{"crate_id":23,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:47627:9068":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:12465:13588":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:8344:2287":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:13780:15984":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"12:466:61933":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:51468:14238":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:46273:14305":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"20:216:2279":{"crate_id":20,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:13731:138":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"25:10829:9194":{"crate_id":25,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:50996:16594":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"18:637:15311":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:11159:9204":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"12:2032:3128":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"24:512:3620":{"crate_id":24,"path":["libc","unix","utimbuf"],"kind":"struct"},"25:14320:15834":{"crate_id":25,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:11726:9608":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"4:15418:59632":{"crate_id":4,"path":["std","panicking","Hook"],"kind":"enum"},"26:767:15321":{"crate_id":26,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:47997:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"4:11996:14553":{"crate_id":4,"path":["std","process","ExitStatusError"],"kind":"struct"},"25:11129:11854":{"crate_id":25,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:3743:14973":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"24:63:2222":{"crate_id":24,"path":["libc","unix","c_int"],"kind":"typedef"},"6:4262:6646":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"6:1760:4530":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:10435:11887":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"23:7476:13063":{"crate_id":23,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"25:12419:2683":{"crate_id":25,"path":["object","elf","FileHeader32"],"kind":"struct"},"24:3898:6613":{"crate_id":24,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"23:7499:13064":{"crate_id":23,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:11822:9733":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:12182:15537":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"25:10775:14983":{"crate_id":25,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"26:169:54141":{"crate_id":26,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:10477:11860":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"4:5753:9086":{"crate_id":4,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"24:1651:4519":{"crate_id":24,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:1572:4512":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"5:8391:14686":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"4:8444:14750":{"crate_id":4,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"1:51044:14232":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:12783:15645":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"4:14761:14554":{"crate_id":4,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"25:11196:11864":{"crate_id":25,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:22564:56325":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:4306:13593":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:10510:142":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"24:663:3664":{"crate_id":24,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:51021:14244":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"24:1520:4506":{"crate_id":24,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:1472:14534":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"23:189:14062":{"crate_id":23,"path":["gimli","read","util","sealed","Sealed"],"kind":"trait"},"4:2170:9064":{"crate_id":4,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"24:6207:7698":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"15:230:3157":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:13554:15906":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"4:10704:13790":{"crate_id":4,"path":["std","env","VarError"],"kind":"enum"},"1:51587:14214":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:24068:14279":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"25:14929:16006":{"crate_id":25,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:7549:13099":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"24:5262:7270":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"4:13882:16841":{"crate_id":4,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"23:5364:12735":{"crate_id":23,"path":["gimli","constants","DwId"],"kind":"struct"},"25:14604:15904":{"crate_id":25,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:4008:16732":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:3522:12123":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:50139:13411":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:13582:15913":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"23:6265:13018":{"crate_id":23,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:46342:14420":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"4:6353:14649":{"crate_id":4,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"27:1076:11908":{"crate_id":27,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:11186:13442":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"18:783:15311":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"20:47:1855":{"crate_id":20,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"4:12260:14571":{"crate_id":4,"path":["std","time","SystemTimeError"],"kind":"struct"},"28:46:15287":{"crate_id":28,"path":["adler","algo","U32X4"],"kind":"struct"},"1:37596:13295":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"24:1729:4528":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:10448:11854":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:4377:6660":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"24:3911:6614":{"crate_id":24,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"4:4074:127":{"crate_id":4,"path":["std","io","error","Error"],"kind":"struct"},"5:8313:14371":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"25:10519:9193":{"crate_id":25,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:51125:14245":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:4083:6632":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"4:4428:14490":{"crate_id":4,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"4:786:15191":{"crate_id":4,"path":["std","thread","local","fast","Key"],"kind":"struct"},"1:3153:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"25:11665:16747":{"crate_id":25,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:5945:3537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"24:4516:6677":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"24:3950:6617":{"crate_id":24,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:46675:14183":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"4:8414:14004":{"crate_id":4,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"4:15070:14558":{"crate_id":4,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"25:5374:2515":{"crate_id":25,"path":["object","read","traits","Object"],"kind":"trait"},"1:4035:14126":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"22:331:2596":{"crate_id":22,"path":["addr2line","Location"],"kind":"struct"},"23:6644:13033":{"crate_id":23,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:10558:15041":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"26:661:15013":{"crate_id":26,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"25:5450:9166":{"crate_id":25,"path":["object","read","traits","ObjectComdat"],"kind":"trait"},"17:12221:15541":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:299:16730":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"23:5334:12730":{"crate_id":23,"path":["gimli","constants","DwAddr"],"kind":"struct"},"4:15953:2103":{"crate_id":4,"path":["std","i32"],"kind":"primitive"},"6:4281:6648":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"14:250:2278":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:3263:106":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"25:14100:15766":{"crate_id":25,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"25:10946:11841":{"crate_id":25,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"4:15937:2090":{"crate_id":4,"path":["std","bool"],"kind":"primitive"},"25:13311:15549":{"crate_id":25,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:6238:13054":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"6:4005:6622":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:5969:3495":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"25:14701:15928":{"crate_id":25,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:10266:11841":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"25:1878:11847":{"crate_id":25,"path":["object","read","elf","segment","ProgramHeader"],"kind":"trait"},"6:5292:7273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:624:3634":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"4:1497:14526":{"crate_id":4,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"16:3800:12189":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"5:2330:14759":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"12:353:16340":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"25:13748:15635":{"crate_id":25,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:542:9172":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"4:10836:9007":{"crate_id":4,"path":["std","fs","Permissions"],"kind":"struct"},"24:6607:3576":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"25:10231:9160":{"crate_id":25,"path":["object","read","util","ByteString"],"kind":"struct"},"1:8863:13677":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:7642:9072":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:12771:9210":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"23:6947:13040":{"crate_id":23,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:7514:13098":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:5140:2330":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"25:12838:9745":{"crate_id":25,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"25:12826:9744":{"crate_id":25,"path":["object","elf","HashHeader"],"kind":"struct"},"17:11082:9200":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:6413:3154":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"9:0:1683":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:6812:8222":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"24:4126:2800":{"crate_id":24,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:24:600":{"crate_id":1,"path":["core","env"],"kind":"macro"},"25:10439:9191":{"crate_id":25,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:1457:14535":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:1533:4507":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:2773:12094":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"24:4432:6668":{"crate_id":24,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"12:2036:9068":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:48740:14143":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"4:10394:1641":{"crate_id":4,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:2847:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"25:27:2486":{"crate_id":25,"path":["object","endian","Endian"],"kind":"trait"},"23:6804:2519":{"crate_id":23,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"18:695:15015":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:23732:14062":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:5585:14260":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:88:3223":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"26:745:61950":{"crate_id":26,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"23:7130:13052":{"crate_id":23,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:49377:13424":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"24:5190:7266":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"25:11289:15041":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"4:11386:14634":{"crate_id":4,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:51951:14247":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"5:6954:14689":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"25:13283:15545":{"crate_id":25,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"23:5483:12754":{"crate_id":23,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:8347:14065":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"24:3959:6618":{"crate_id":24,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:3970:15150":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"25:11843:15031":{"crate_id":25,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"25:13257:15541":{"crate_id":25,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:46004:14147":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"25:5903:2671":{"crate_id":25,"path":["object","elf","ELFCOMPRESS_ZLIB"],"kind":"constant"},"17:9769:61942":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"25:11955:54369":{"crate_id":25,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:11458:2684":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"4:4426:14489":{"crate_id":4,"path":["std","io","stdio","Stdin"],"kind":"struct"},"26:858:15005":{"crate_id":26,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:10656:15403":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"5:6257:9071":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:6636:13067":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:48991:13615":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"25:12144:9204":{"crate_id":25,"path":["object","read","SymbolMapName"],"kind":"struct"},"4:10876:14613":{"crate_id":4,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:3945:6615":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"25:10613:9195":{"crate_id":25,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"25:9785:9180":{"crate_id":25,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:51814:16602":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"23:8438:13098":{"crate_id":23,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:12494:15598":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"23:7491:14942":{"crate_id":23,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:4386:12650":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:13192:15813":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"27:0:1683":{"crate_id":27,"path":["miniz_oxide"],"kind":"module"},"4:10868:118":{"crate_id":4,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:46586:14171":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"26:886:15007":{"crate_id":26,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"4:2598:16796":{"crate_id":4,"path":["std","error","from","StringError"],"kind":"struct"},"24:4138:6638":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"25:11236:11863":{"crate_id":25,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:5029:12818":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"15:248:3158":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"13:120:49537":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:7571:13100":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"25:9925:9157":{"crate_id":25,"path":["object","endian","Endianness"],"kind":"enum"},"1:48081:2349":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"24:4442:6669":{"crate_id":24,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:9133:9180":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"4:8873:16798":{"crate_id":4,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:3326:9112":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:45757:2303":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"23:8401:13097":{"crate_id":23,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"24:4424:6667":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"14:194:2271":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:48476:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"25:12906:15469":{"crate_id":25,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"16:6682:13069":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"25:14852:15985":{"crate_id":25,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:47871:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"4:2401:13784":{"crate_id":4,"path":["std","env","VarsOs"],"kind":"struct"},"6:3966:6618":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:4073:6631":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"25:2577:11838":{"crate_id":25,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"25:11878:15050":{"crate_id":25,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:4133:2800":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"13:0:2145":{"crate_id":13,"path":["std_detect"],"kind":"module"},"23:7288:3155":{"crate_id":23,"path":["gimli","read","line","LineRow"],"kind":"struct"},"12:940:14529":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"27:920:11979":{"crate_id":27,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:4506:12670":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:12810:13442":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:13746:15972":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:1676:4521":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:10106:14984":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:3385:9119":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:21:672":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"1:49724:13440":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:4905:2337":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"25:5487:14062":{"crate_id":25,"path":["object","read","private","Sealed"],"kind":"trait"},"23:4632:12303":{"crate_id":23,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:12373:15578":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:49629:13434":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:6155:7694":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"14:231:14688":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:12155:15533":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"18:838:13417":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:5563:7319":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"4:10725:14766":{"crate_id":4,"path":["std","error","private","Internal"],"kind":"struct"},"24:504:3619":{"crate_id":24,"path":["libc","unix","group"],"kind":"struct"},"25:12557:9510":{"crate_id":25,"path":["object","elf","Sym32"],"kind":"struct"},"4:5809:9087":{"crate_id":4,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:8954:9175":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"24:3885:6612":{"crate_id":24,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"25:11913:15051":{"crate_id":25,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"18:791:14999":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"25:160:9147":{"crate_id":25,"path":["object","pod","Pod"],"kind":"trait"},"16:3392:12119":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"25:11367:15401":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:1215:14757":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"4:6116:14642":{"crate_id":4,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:49475:13428":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:11378:9213":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"23:8203:14958":{"crate_id":23,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:7477:13097":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"24:524:3622":{"crate_id":24,"path":["libc","unix","timespec"],"kind":"struct"},"23:4997:12618":{"crate_id":23,"path":["gimli","constants","DwForm"],"kind":"struct"},"16:3145:12109":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"25:10399:9190":{"crate_id":25,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:52270:14215":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"25:4637:50573":{"crate_id":25,"path":["object","read","pe","file","ImageOptionalHeader"],"kind":"trait"},"4:2437:13795":{"crate_id":4,"path":["std","env","SplitPaths"],"kind":"struct"},"4:4391:14618":{"crate_id":4,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:11147:9203":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"23:6770:189":{"crate_id":23,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:11993:15510":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"25:12184:9206":{"crate_id":25,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:4272:6647":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:3742:14027":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"4:15951:2101":{"crate_id":4,"path":["std","i8"],"kind":"primitive"},"1:3730:9134":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:22892:14062":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"23:6464:13026":{"crate_id":23,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:9245:9157":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"4:15156:14577":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:12208:15540":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"25:10280:61943":{"crate_id":25,"path":["object","read","any","FileInternal"],"kind":"enum"},"23:6504:13027":{"crate_id":23,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"24:6886:6805":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:24177:16481":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"24:4039:6627":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"24:4248:2292":{"crate_id":24,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"4:13977:14550":{"crate_id":4,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"5:6973:1499":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"23:648:14921":{"crate_id":23,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:3506:131":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:11482:9224":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"4:9662:15188":{"crate_id":4,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"25:14079:15757":{"crate_id":25,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:1602:4515":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"23:2121:12089":{"crate_id":23,"path":["gimli","read","op","EvaluationStorage"],"kind":"trait"},"23:7144:13053":{"crate_id":23,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:3218:12112":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:13041:15760":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"4:6821:14449":{"crate_id":4,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"4:12074:3128":{"crate_id":4,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:48787:16587":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:49393:1978":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"25:15006:16028":{"crate_id":25,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"25:13467:15590":{"crate_id":25,"path":["object","macho","DylibReference"],"kind":"struct"},"24:6857:6801":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"25:10797:14985":{"crate_id":25,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"25:14810:15972":{"crate_id":25,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:23044:14062":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"6:5185:7264":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"23:4036:12125":{"crate_id":23,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:22713:14111":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"24:4364:6659":{"crate_id":24,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:12467:15595":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"25:12656:9549":{"crate_id":25,"path":["object","elf","Rela64"],"kind":"struct"},"23:5170:12666":{"crate_id":23,"path":["gimli","constants","DwAccess"],"kind":"struct"},"26:775:15311":{"crate_id":26,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:12699:15634":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"4:15960:2110":{"crate_id":4,"path":["std","u128"],"kind":"primitive"},"5:3894:14751":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"25:11990:127":{"crate_id":25,"path":["object","read","Error"],"kind":"struct"},"5:8298:2288":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"4:15169:14582":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:13318:15840":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:4448:12662":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"23:8767:13106":{"crate_id":23,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:5717:13028":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:4362:9068":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"23:8068:13076":{"crate_id":23,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"4:5761:9090":{"crate_id":4,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:6126:13042":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"25:12717:9608":{"crate_id":25,"path":["object","elf","Dyn64"],"kind":"struct"},"23:457:12074":{"crate_id":23,"path":["gimli","read","cfi","UnwindSection"],"kind":"trait"},"4:14892:15195":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:51437:14234":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"23:8129:13081":{"crate_id":23,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"3:0:2142":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:8428:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:3162:228":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"5:6688:14725":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:13258:15830":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"4:14189:14487":{"crate_id":4,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:48528:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"17:13370:15856":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"24:4045:6628":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"24:4088:6633":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"4:7475:185":{"crate_id":4,"path":["std","path","Path"],"kind":"struct"},"16:6768:14949":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"4:12034:60147":{"crate_id":4,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"26:645:15012":{"crate_id":26,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"4:7826:3344":{"crate_id":4,"path":["std","process","exit"],"kind":"function"},"1:50384:14049":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"4:3194:9005":{"crate_id":4,"path":["std","fs","DirEntry"],"kind":"struct"},"17:10673:50514":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"23:8818:13110":{"crate_id":23,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:49968:14079":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"25:9581:9174":{"crate_id":25,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:46431:14371":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"25:14906:16005":{"crate_id":25,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"23:7653:14946":{"crate_id":23,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:10281:13367":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:50143:13412":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:12021:15199":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"17:13627:15923":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:5505:13022":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:3489:2246":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"25:14844:15984":{"crate_id":25,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"4:15963:2113":{"crate_id":4,"path":["std","reference"],"kind":"primitive"},"17:13497:15890":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:9689:61948":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:53344:16651":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:14204:2309":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"5:8250:3135":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"25:10329:9189":{"crate_id":25,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"6:5528:6525":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:12946:15674":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:53425:16658":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"4:2175:14511":{"crate_id":4,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:50299:16592":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:51156:14233":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:10275:109":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:11406:15466":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"9:1020:11907":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"4:9746:14626":{"crate_id":4,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"23:3139:12098":{"crate_id":23,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:537:3623":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:3088:3203":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"4:9094:2357":{"crate_id":4,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"9:157:14804":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"6:4052:6628":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"4:15141:14576":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:7894:13110":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"24:6916:8248":{"crate_id":24,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"25:5430:9167":{"crate_id":25,"path":["object","read","traits","ObjectSection"],"kind":"trait"},"4:6897:9095":{"crate_id":4,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:7884:13109":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"23:8710:13103":{"crate_id":23,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"4:14549:129":{"crate_id":4,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:5488:13021":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"24:4293:6650":{"crate_id":24,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:6491:13061":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:46934:16572":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"12:2045:9064":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"15:269:3162":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"25:11035:11845":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:51641:14221":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:11336:13597":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"24:4176:6640":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"25:2135:2677":{"crate_id":25,"path":["object","read","elf","section","SectionHeader"],"kind":"trait"},"1:4654:14463":{"crate_id":1,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"24:3944:6616":{"crate_id":24,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:157:3289":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"4:12185:2353":{"crate_id":4,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"16:7295:13087":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:46257:14303":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:3258:2374":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"17:11847:9745":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"5:2777:14762":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:11199:9206":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"24:4471:6672":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"24:4412:6665":{"crate_id":24,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"4:13729:14557":{"crate_id":4,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"25:10369:61948":{"crate_id":25,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:13540:15904":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"25:10984:11840":{"crate_id":25,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"12:979:14532":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:10095:14983":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"25:13343:15553":{"crate_id":25,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"18:0:2149":{"crate_id":18,"path":["memchr"],"kind":"module"},"5:432:1664":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"23:5043:12639":{"crate_id":23,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:3271:1935":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"25:1351:14989":{"crate_id":25,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:9600:61943":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"1:38816:3148":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"6:5436:16049":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"24:5980:7687":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"4:14959:14552":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:11604:9512":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"24:5364:7277":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:9959:14317":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:32296:9060":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:5889:15162":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"23:3665:12119":{"crate_id":23,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"25:299:16730":{"crate_id":25,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:13306:15837":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"25:12595:9512":{"crate_id":25,"path":["object","elf","Syminfo32"],"kind":"struct"},"23:7160:13054":{"crate_id":23,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"6:5228:7269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"25:14836:15981":{"crate_id":25,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"25:9554:9156":{"crate_id":25,"path":["object","common","AddressSize"],"kind":"enum"},"1:49196:13592":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:48756:14142":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:10236:11853":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"4:10850:129":{"crate_id":4,"path":["std","fs","FileType"],"kind":"struct"},"4:10892:14482":{"crate_id":4,"path":["std","io","cursor","Cursor"],"kind":"struct"},"23:8098:13078":{"crate_id":23,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"23:7604:13069":{"crate_id":23,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"4:15943:2095":{"crate_id":4,"path":["std","array"],"kind":"primitive"},"4:15433:1637":{"crate_id":4,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"25:11924:15445":{"crate_id":25,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"24:3965:6463":{"crate_id":24,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"5:1939:9064":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:14094:201":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"23:8344:13094":{"crate_id":23,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:13822:187":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"5:3362:14513":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:10293:13372":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:12431:15590":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:46288:14424":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"26:850:15004":{"crate_id":26,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:3957:6617":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"5:3329:3128":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"23:7386:13060":{"crate_id":23,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:13799:15989":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:11100:9201":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"24:5515:7317":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"23:8330:13093":{"crate_id":23,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:12736:13448":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"12:432:14905":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:5167:7263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"25:13178:15530":{"crate_id":25,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:53137:14240":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"25:9944:9158":{"crate_id":25,"path":["object","endian","LittleEndian"],"kind":"struct"},"24:4208:6643":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"24:5203:7267":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:1527:4506":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:4371:6659":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:3701:9130":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"4:2192:14514":{"crate_id":4,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:5978:7686":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"23:5397:12743":{"crate_id":23,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:9971:61940":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"16:7073:13074":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:10200:16738":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:46727:14188":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:11794:9731":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:2381:2335":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"26:730:61952":{"crate_id":26,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:53364:16653":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"25:15064:16038":{"crate_id":25,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:3265:220":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"5:8115:9068":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"24:5160:7263":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"27:234:14811":{"crate_id":27,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"4:4742:14472":{"crate_id":4,"path":["std","io","BufRead"],"kind":"trait"},"17:12442:15592":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"24:6093:7691":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:0:1684":{"crate_id":17,"path":["object"],"kind":"module"},"25:14638:15912":{"crate_id":25,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"25:3777:9171":{"crate_id":25,"path":["object","read","macho","segment","Segment"],"kind":"trait"},"23:6304:13020":{"crate_id":23,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:4419:6665":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"23:7112:13051":{"crate_id":23,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"4:12702:15192":{"crate_id":4,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:9943:61947":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"4:10593:14062":{"crate_id":4,"path":["std","sealed","Sealed"],"kind":"trait"},"4:10884:14480":{"crate_id":4,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"4:15942:2094":{"crate_id":4,"path":["std","pointer"],"kind":"primitive"},"4:14186:14491":{"crate_id":4,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"25:13204:15406":{"crate_id":25,"path":["object","macho","Dylib"],"kind":"struct"},"6:4331:6654":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:2951:184":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"4:9799:15190":{"crate_id":4,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"23:8794:13108":{"crate_id":23,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"12:764:13593":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"4:10697:14537":{"crate_id":4,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:24147:19849":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:45997:13111":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"17:12456:15594":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"24:5400:7281":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"4:3134:2152":{"crate_id":4,"path":["std","fs"],"kind":"module"},"4:4717:1956":{"crate_id":4,"path":["std","io","Write"],"kind":"trait"},"16:6691:13070":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:9332:2732":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"4:4394:14619":{"crate_id":4,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"0:0:1635":{"crate_id":0,"path":["backtrace"],"kind":"module"},"23:7566:13068":{"crate_id":23,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:10623:16744":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:13819:15992":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:3281:3147":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"25:6200:2673":{"crate_id":25,"path":["object","elf","NT_GNU_BUILD_ID"],"kind":"constant"},"6:4046:6627":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"9:234:14811":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"27:983:11905":{"crate_id":27,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"4:6015:14683":{"crate_id":4,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"4:7966:16835":{"crate_id":4,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:10914:214":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:1630:4518":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:1700:4523":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:32462:54950":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"5:4242:15150":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"9:963:11905":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:3395:9122":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:1617:4516":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:46365:14421":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"5:1597:3128":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"6:4164:6639":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:46506:2243":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:14:1957":{"crate_id":1,"path":["core","write"],"kind":"macro"},"17:10529:11891":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:10179:15400":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:10291:13371":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"4:12693:128":{"crate_id":4,"path":["std","sys","unix","fs","File"],"kind":"struct"},"4:5994:14680":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"20:204:1854":{"crate_id":20,"path":["rustc_demangle","try_demangle"],"kind":"function"},"1:8087:14495":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"23:6933:13039":{"crate_id":23,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:51303:16596":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:4439:6668":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"25:13543:15599":{"crate_id":25,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:13978:16032":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:10468:11861":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"27:618:15063":{"crate_id":27,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"24:3998:6622":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:11304:9209":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"4:12240:9033":{"crate_id":4,"path":["std","time","SystemTime"],"kind":"struct"},"16:5421:13017":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:10926:16751":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:13154:15802":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"23:7729:13072":{"crate_id":23,"path":["gimli","read","op","Operation"],"kind":"enum"},"24:1615:4517":{"crate_id":24,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"24:6805:8222":{"crate_id":24,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:50131:13409":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"25:10741:16736":{"crate_id":25,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:47498:9068":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"23:7413:13061":{"crate_id":23,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:1908:4668":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:22543:56323":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"4:11130:14167":{"crate_id":4,"path":["std","io","Chain"],"kind":"struct"},"4:10967:14563":{"crate_id":4,"path":["std","io","error","Custom"],"kind":"struct"},"25:14226:15808":{"crate_id":25,"path":["object","pe","Guid"],"kind":"struct"},"23:7335:3154":{"crate_id":23,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"4:6591:9100":{"crate_id":4,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"23:4373:12144":{"crate_id":23,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"5:3396:14514":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"24:4033:6626":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:10140:9193":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:6051:4444":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:5095:2329":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:24030:16463":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"23:6253:13017":{"crate_id":23,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:13037:13417":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"4:1501:14527":{"crate_id":4,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"24:4113:6636":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"24:571:3627":{"crate_id":24,"path":["libc","unix","iovec"],"kind":"struct"},"16:2912:12100":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:9404:9186":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:48210:13367":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:300:205":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:45821:194":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"17:10516:11863":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"26:755:61951":{"crate_id":26,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"24:5556:7319":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"4:14898:15196":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"4:1522:14530":{"crate_id":4,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:13402:15862":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:10887:15436":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"4:3642:14479":{"crate_id":4,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"25:11263:15038":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:12507:15599":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"25:12619:9546":{"crate_id":25,"path":["object","elf","Rel32"],"kind":"struct"},"1:52108:14242":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"23:3702:12120":{"crate_id":23,"path":["gimli","common","SectionId"],"kind":"enum"},"24:5221:7269":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"6:519:3620":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"25:11691:16752":{"crate_id":25,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:11888:13607":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"23:5141:12662":{"crate_id":23,"path":["gimli","constants","DwEnd"],"kind":"struct"},"4:14050:15193":{"crate_id":4,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:24199:2258":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"23:5545:12766":{"crate_id":23,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"23:209:12070":{"crate_id":23,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:7216:13082":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"23:3116:12097":{"crate_id":23,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"26:897:15008":{"crate_id":26,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"4:13530:16840":{"crate_id":4,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:24055:2257":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:4230:12569":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"24:5234:7248":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"23:5427:12748":{"crate_id":23,"path":["gimli","constants","DwInl"],"kind":"struct"},"25:14238:15813":{"crate_id":25,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"5:3772:13593":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:11767:9727":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"23:4465:12186":{"crate_id":23,"path":["gimli","constants","DwCfa"],"kind":"struct"},"4:14264:13988":{"crate_id":4,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"25:2608:11859":{"crate_id":25,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:2753:579":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:24461:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"4:11464:3052":{"crate_id":4,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:24801:164":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"24:5248:7249":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:22545:56326":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"5:2200:15152":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"4:4506:14488":{"crate_id":4,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"4:12145:14599":{"crate_id":4,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"16:5314:9158":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:23975:16458":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"4:10721:13797":{"crate_id":4,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:3064:12106":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:10420:11836":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:4241:6645":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:4293:6649":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"25:10156:9188":{"crate_id":25,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:7212:9066":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"24:5938:3537":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"14:47:1855":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:22526:56277":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"4:2031:145":{"crate_id":4,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:24767:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:53540:16663":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"12:2052:14511":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:24699:165":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"4:4072:205":{"crate_id":4,"path":["std","io","error","Result"],"kind":"typedef"},"25:702:1641":{"crate_id":25,"path":["object","read","any","Symbol"],"kind":"struct"},"5:5415:14463":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:10061:16736":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"23:8140:13082":{"crate_id":23,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:46535:14167":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"25:15027:16031":{"crate_id":25,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:49214:13591":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"4:3555:14478":{"crate_id":4,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"27:796:14831":{"crate_id":27,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"6:6935:8249":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"25:10576:61941":{"crate_id":25,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:9759:9191":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:7303:13088":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:599:3630":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"24:5340:7275":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"4:4388:14617":{"crate_id":4,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"4:9371:14506":{"crate_id":4,"path":["std","std_float","StdFloat"],"kind":"trait"},"24:6874:6803":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:6101:13040":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"24:5267:7271":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"4:13904:14551":{"crate_id":4,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"4:12090:9068":{"crate_id":4,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:24131:19840":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:10279:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:46566:14169":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:49993:14081":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"4:11096:9022":{"crate_id":4,"path":["std","io","IoSlice"],"kind":"struct"},"17:13520:15898":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:6893:6805":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:7146:13076":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"4:1156:1657":{"crate_id":4,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"5:1674:14527":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"4:10605:59631":{"crate_id":4,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:13942:16028":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:24083:16468":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"4:15409:16449":{"crate_id":4,"path":["std","alloc","System"],"kind":"struct"},"23:3291:12104":{"crate_id":23,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"16:3320:12116":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:46696:14185":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:3565:9062":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"20:250:2278":{"crate_id":20,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"4:15355:14640":{"crate_id":4,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:10224:16740":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"23:1664:12078":{"crate_id":23,"path":["gimli","read","line","LineProgram"],"kind":"trait"},"26:783:15311":{"crate_id":26,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:9899:660":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"25:12970:15498":{"crate_id":25,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"24:1515:4505":{"crate_id":24,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"23:1221:12068":{"crate_id":23,"path":["gimli","read","reader","Reader"],"kind":"trait"},"1:51261:14213":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"24:6880:6804":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:5014:2321":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"4:15032:14570":{"crate_id":4,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"6:1563:4511":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"25:10641:9196":{"crate_id":25,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:7279:14958":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"24:5285:7273":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"12:114:61937":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:10814:14976":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"25:10120:9187":{"crate_id":25,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:57644:16671":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"4:11367:14678":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:7250:13085":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:6881:6803":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"23:6023:2681":{"crate_id":23,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"25:14501:15874":{"crate_id":25,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"25:83:2485":{"crate_id":25,"path":["object","endian","NativeEndian"],"kind":"typedef"},"4:10666:43133":{"crate_id":4,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"12:1183:14901":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:4449:6669":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:48987:14428":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"24:5393:7280":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:5736:13029":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"25:11978:15451":{"crate_id":25,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:4227:6644":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"24:3983:6620":{"crate_id":24,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"4:11147:1978":{"crate_id":4,"path":["std","io","Bytes"],"kind":"struct"},"6:4306:6651":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"4:3317:2525":{"crate_id":4,"path":["std","fs","metadata"],"kind":"function"},"17:12712:15635":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"4:13365:14646":{"crate_id":4,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:4157:14980":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"4:10681:43134":{"crate_id":4,"path":["std","backtrace","RawFrame"],"kind":"enum"},"25:14108:15767":{"crate_id":25,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:8453:2375":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"14:11:1855":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"4:7366:186":{"crate_id":4,"path":["std","path","PathBuf"],"kind":"struct"},"26:802:15000":{"crate_id":26,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:46952:16574":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"26:621:15310":{"crate_id":26,"path":["memchr","cow","Imp"],"kind":"struct"},"1:46618:14173":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"4:15962:2112":{"crate_id":4,"path":["std","usize"],"kind":"primitive"},"4:11160:3153":{"crate_id":4,"path":["std","io","Lines"],"kind":"struct"},"25:13516:15597":{"crate_id":25,"path":["object","macho","UuidCommand"],"kind":"struct"},"9:1075:11910":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:6807:13072":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:12385:15580":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"25:14209:15806":{"crate_id":25,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:13884:16011":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"23:438:12072":{"crate_id":23,"path":["gimli","read","cfi","UnwindOffset"],"kind":"trait"},"24:617:3634":{"crate_id":24,"path":["libc","unix","servent"],"kind":"struct"},"4:6002:14682":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:3039:60621":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:32302:13692":{"crate_id":1,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"6:5428:7284":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:6424:13059":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"5:7379:9068":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:49425:13427":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"25:9890:9184":{"crate_id":25,"path":["object","common","SymbolFlags"],"kind":"enum"},"25:14584:15898":{"crate_id":25,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"25:11533:16746":{"crate_id":25,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:9748:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"25:9740:9179":{"crate_id":25,"path":["object","common","RelocationKind"],"kind":"enum"},"1:51092:14212":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:8263:14540":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:48564:13366":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:10289:189":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"17:13348:15851":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:49557:13435":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:3365:12118":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:10331:9193":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:9896:61941":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:11962:15504":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:52383:14204":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"4:14972:14553":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:32362:54948":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"1:11118:13593":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"12:2412:16346":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:9961:9196":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"4:9007:2364":{"crate_id":4,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:13048:13415":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"25:11149:11861":{"crate_id":25,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:9186:9183":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"27:157:14804":{"crate_id":27,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"4:10730:14167":{"crate_id":4,"path":["std","error","Chain"],"kind":"struct"},"1:3368:9116":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"23:7084:13049":{"crate_id":23,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:12327:15554":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"25:13819:15645":{"crate_id":25,"path":["object","macho","RelocationInfo"],"kind":"struct"},"5:5788:15150":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:5996:13036":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"25:1652:2676":{"crate_id":25,"path":["object","read","elf","file","FileHeader"],"kind":"trait"},"16:5815:13033":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"4:6824:9098":{"crate_id":4,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:13356:15854":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"25:14863:15989":{"crate_id":25,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"23:6684:12065":{"crate_id":23,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:10571:15042":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:48203:13368":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:12287:15550":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"27:602:15059":{"crate_id":27,"path":["miniz_oxide","inflate","stream","ResetPolicy"],"kind":"trait"},"6:6636:8060":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:48765:146":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:32121:2254":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"23:3337:12106":{"crate_id":23,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"25:11520:16745":{"crate_id":25,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"23:6393:13024":{"crate_id":23,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:52995:14236":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"24:6099:7692":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:53384:16655":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:50003:14082":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"12:2280:14535":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:47490:13593":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"25:13792:15642":{"crate_id":25,"path":["object","macho","Nlist64"],"kind":"struct"},"23:6972:13042":{"crate_id":23,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:10279:2678":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:12095:15525":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:46413:100":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:56270:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"25:10997:11839":{"crate_id":25,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:46627:14179":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"5:4643:15155":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:3262:217":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:10304:11840":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:11337:9211":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"23:7964:14957":{"crate_id":23,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"25:13421:15580":{"crate_id":25,"path":["object","macho","DylibModule32"],"kind":"struct"},"25:13557:15602":{"crate_id":25,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:2889:12099":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"11:46:15287":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"17:9809:61946":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:5018:2322":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"17:11640:9547":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"12:1682:14915":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:46636:14176":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"25:13984:15674":{"crate_id":25,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"12:1784:15148":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"4:11196:14440":{"crate_id":4,"path":["std","net","ip","IpAddr"],"kind":"enum"},"17:11045:9198":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:22566:56321":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:50289:201":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"22:0:1682":{"crate_id":22,"path":["addr2line"],"kind":"module"},"1:2910:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"5:7111:15164":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"11:0:2147":{"crate_id":11,"path":["adler"],"kind":"module"},"25:13379:15559":{"crate_id":25,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"25:2839:11835":{"crate_id":25,"path":["object","read","elf","dynamic","Dyn"],"kind":"trait"},"17:13240:15822":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"4:5687:1991":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"24:6061:4447":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"24:5352:7276":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"24:1533:4508":{"crate_id":24,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"23:7690:14949":{"crate_id":23,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:11653:9548":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"4:8959:14660":{"crate_id":4,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"24:5152:7262":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:23626:13589":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:46235:16556":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:12598:15614":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"25:11934:54368":{"crate_id":25,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:2203:1050":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"16:7119:13075":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:13564:15909":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:23051:41596":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:49661:3153":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:52077:14239":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"23:8188:13086":{"crate_id":23,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:45805:196":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"4:6649:1030":{"crate_id":4,"path":["std","os","unix","prelude"],"kind":"module"},"24:1737:4529":{"crate_id":24,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:5347:7275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"25:11102:11836":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:13054:15766":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"23:7065:13048":{"crate_id":23,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"23:3961:12124":{"crate_id":23,"path":["gimli","arch","AArch64"],"kind":"struct"},"4:3197:2483":{"crate_id":4,"path":["std","fs","read"],"kind":"function"},"17:9088:9179":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:12142:15530":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:10560:14141":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"23:8808:13109":{"crate_id":23,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:2872:104":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"25:5393:2733":{"crate_id":25,"path":["object","read","traits","Object","section_by_name"],"kind":"foreign_type"},"25:3537:14978":{"crate_id":25,"path":["object","read","macho","file","MachHeader"],"kind":"trait"},"6:4033:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"27:1016:11906":{"crate_id":27,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:47829:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"23:3560:12115":{"crate_id":23,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"18:775:15311":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"26:838:13417":{"crate_id":26,"path":["memchr","memmem","Searcher"],"kind":"struct"},"23:5110:12656":{"crate_id":23,"path":["gimli","constants","DwDs"],"kind":"struct"},"4:10480:1658":{"crate_id":4,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:4317:6652":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:2905:183":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"6:3862:6609":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:3150:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"22:153:2305":{"crate_id":22,"path":["addr2line","Context"],"kind":"struct"},"1:47745:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"12:880:9064":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:9476:9188":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"24:556:3625":{"crate_id":24,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"25:2877:2675":{"crate_id":25,"path":["object","read","elf","compression","CompressionHeader"],"kind":"trait"},"1:51714:14207":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"25:5142:15029":{"crate_id":25,"path":["object","read","pe","import","ImageThunkData"],"kind":"trait"},"17:12262:15548":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"4:1476:9066":{"crate_id":4,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"25:11566:14976":{"crate_id":25,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:8902:9156":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"25:12171:9205":{"crate_id":25,"path":["object","read","ObjectMap"],"kind":"struct"},"5:2310:14776":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:12775:13447":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"15:0:1682":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:2733:12066":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:11947:15498":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:5085:2328":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"23:4339:12135":{"crate_id":23,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:12552:15608":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"23:5966:13012":{"crate_id":23,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:5241:7248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"25:12085:9201":{"crate_id":25,"path":["object","read","SymbolIndex"],"kind":"struct"},"22:248:3158":{"crate_id":22,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"9:722:14793":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:3159:135":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"17:10938:16752":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"24:3861:6610":{"crate_id":24,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:49457:13430":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"4:15940:2093":{"crate_id":4,"path":["std","unit"],"kind":"primitive"},"23:6288:13019":{"crate_id":23,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:45846:195":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"9:809:3124":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"12:971:14531":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"25:11011:9193":{"crate_id":25,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"6:1540:4508":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:3503:130":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:7392:13092":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"25:14450:15862":{"crate_id":25,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:1736:4528":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"24:5962:3495":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"4:8680:2351":{"crate_id":4,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"23:6878:2484":{"crate_id":23,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"24:4463:6671":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"25:12363:9213":{"crate_id":25,"path":["object","read","CompressedData"],"kind":"struct"},"25:14824:15978":{"crate_id":25,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:47440:176":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"23:8662:13101":{"crate_id":23,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:4341:6655":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:3342:9111":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:13912:16020":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"25:9866:9183":{"crate_id":25,"path":["object","common","SectionFlags"],"kind":"enum"},"17:9933:9195":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"27:1097:11910":{"crate_id":27,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:1311:14989":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:1547:4509":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"25:10880:16738":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"4:14744:13797":{"crate_id":4,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"4:14518:16441":{"crate_id":4,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"4:11533:3124":{"crate_id":4,"path":["std","path","State"],"kind":"enum"},"25:12391:15466":{"crate_id":25,"path":["object","archive","Header"],"kind":"struct"},"17:10962:16754":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"9:27:14833":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"1:45890:197":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:12480:15597":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:13331:15846":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:7024:14956":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"23:7946:14956":{"crate_id":23,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:49699:13437":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:13924:16022":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:11118:9202":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:2171:578":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"17:12645:15628":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"24:5541:7318":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:49234:13599":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"24:5275:7272":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"27:608:15061":{"crate_id":27,"path":["miniz_oxide","inflate","stream","ZeroReset"],"kind":"struct"},"6:5197:7266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:8393:2376":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:3195:12111":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:11714:9607":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:49575:13436":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:52317:14219":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"25:14165:15801":{"crate_id":25,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:11391:13431":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:4515:14737":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"24:6021:4471":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"25:14691:15923":{"crate_id":25,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"25:14404:15854":{"crate_id":25,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:4501:6674":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"25:13409:15578":{"crate_id":25,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:7042:14957":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"24:4076:6632":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"25:12644:9548":{"crate_id":25,"path":["object","elf","Rel64"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:11779:9728":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:510:9171":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:9719:9190":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:3348:9110":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"25:12484:9446":{"crate_id":25,"path":["object","elf","SectionHeader32"],"kind":"struct"},"25:11302:15042":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:9849:61944":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:1486:14536":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"4:4660:9024":{"crate_id":4,"path":["std","io","Read"],"kind":"trait"},"17:13386:15858":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"24:5421:7284":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"25:13777:15638":{"crate_id":25,"path":["object","macho","Nlist32"],"kind":"struct"},"24:4016:6624":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"25:13707:15630":{"crate_id":25,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:48748:16584":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"25:15050:16035":{"crate_id":25,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"4:7683:14547":{"crate_id":4,"path":["std","process","ChildStdout"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:53448:16659":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:47611:3128":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:3500:1660":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"4:1153:1656":{"crate_id":4,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:3253:211":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"25:13831:15652":{"crate_id":25,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"23:8219:13087":{"crate_id":23,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"12:787:14526":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"4:2181:14512":{"crate_id":4,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:3352:9113":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"25:12289:9209":{"crate_id":25,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:13788:15985":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"25:11703:16753":{"crate_id":25,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:5433:13018":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"24:4265:6647":{"crate_id":24,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"24:6044:4444":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"23:5924:12995":{"crate_id":23,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:6200:7697":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"18:611:15010":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:69:2311":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:5960:14926":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"4:3319:9011":{"crate_id":4,"path":["std","fs","symlink_metadata"],"kind":"function"},"4:13602:14544":{"crate_id":4,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:3892:6612":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:4066:6630":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:46918:16571":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:2968:12102":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:4:979":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"25:14552:15887":{"crate_id":25,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"7:0:1478":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:13180:15808":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"4:10819:9003":{"crate_id":4,"path":["std","fs","Metadata"],"kind":"struct"},"4:7829:14555":{"crate_id":4,"path":["std","process","Termination"],"kind":"trait"},"5:3040:16354":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:7158:13077":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"25:13634:15614":{"crate_id":25,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"5:5837:13844":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"23:5307:12728":{"crate_id":23,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:5295:12064":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"4:15957:2107":{"crate_id":4,"path":["std","u16"],"kind":"primitive"},"16:6269:13056":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:4995:12809":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"5:1635:14523":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"16:7786:13103":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:5221:7268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"4:4294:9025":{"crate_id":4,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"16:5753:13030":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"4:11153:13429":{"crate_id":4,"path":["std","io","Split"],"kind":"struct"},"16:4641:12730":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"4:15964:2114":{"crate_id":4,"path":["std","fn"],"kind":"primitive"},"17:11572:9510":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"27:712:14792":{"crate_id":27,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:11358:9212":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"25:13109:15524":{"crate_id":25,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:5975:2519":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"25:12705:9607":{"crate_id":25,"path":["object","elf","Dyn32"],"kind":"struct"},"1:46448:2247":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:49306:13603":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:10285:13369":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:46706:14186":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:11696:9551":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:11405:13596":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"5:1195:61465":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:14000:16038":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"26:695:15015":{"crate_id":26,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"4:2460:13801":{"crate_id":4,"path":["std","env","Args"],"kind":"struct"},"1:23833:14346":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:46595:14172":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:3331:9109":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:5330:2681":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"4:7151:3051":{"crate_id":4,"path":["std","panic","always_abort"],"kind":"function"},"1:10283:13368":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"4:11087:14497":{"crate_id":4,"path":["std","io","util","Sink"],"kind":"struct"},"1:12957:3136":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:46398:14307":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:12234:15543":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:2492:2304":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"25:13761:15636":{"crate_id":25,"path":["object","macho","NoteCommand"],"kind":"struct"},"4:2399:13783":{"crate_id":4,"path":["std","env","Vars"],"kind":"struct"},"17:11738:9717":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:7761:13102":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"6:4325:6653":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:11419:13594":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"23:6860:13037":{"crate_id":23,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:3997:6621":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:50147:13413":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"25:2549:11875":{"crate_id":25,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"26:830:15003":{"crate_id":26,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"25:84:2485":{"crate_id":25,"path":["object","endian","NativeEndian"],"kind":"constant"},"4:11190:14435":{"crate_id":4,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"17:10988:16756":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"24:6169:7695":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"4:15125:14575":{"crate_id":4,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"18:755:61951":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:607:9173":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:10458:11888":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:7823:13105":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:46557:14168":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"25:12985:15502":{"crate_id":25,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:52534:14228":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:46298:14425":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"25:14517:15876":{"crate_id":25,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"25:12216:9207":{"crate_id":25,"path":["object","read","Import"],"kind":"struct"},"16:5855:12065":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:3380:9118":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"12:379:14907":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"4:12129:14598":{"crate_id":4,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"4:12116:14597":{"crate_id":4,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:681:1641":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:50151:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"17:11809:9732":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"5:2262:14760":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"4:5681:1993":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:13062:15767":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:50352:14337":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"27:604:15060":{"crate_id":27,"path":["miniz_oxide","inflate","stream","MinReset"],"kind":"struct"},"24:5946:4443":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"23:8080:13077":{"crate_id":23,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"12:2040:9066":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"23:6178:13013":{"crate_id":23,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"4:10455:1648":{"crate_id":4,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"25:13029:15510":{"crate_id":25,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:6136:13043":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:2866:12098":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:4127:6637":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"4:11981:14552":{"crate_id":4,"path":["std","process","ExitStatus"],"kind":"struct"},"6:6644:8061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:5766:13031":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"24:4394:6663":{"crate_id":24,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:1843:15150":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"4:1655:14536":{"crate_id":4,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"25:6193:2672":{"crate_id":25,"path":["object","elf","ELF_NOTE_GNU"],"kind":"static"},"1:32310:54951":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"23:6412:14918":{"crate_id":23,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"24:598:3631":{"crate_id":24,"path":["libc","unix","sigval"],"kind":"struct"},"17:13377:15857":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"12:2072:14514":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"23:3783:12122":{"crate_id":23,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:11932:15494":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:10950:16753":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"25:14662:15916":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:9729:61939":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:22955:14108":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"27:27:14833":{"crate_id":27,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"1:2062:14463":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:8867:14043":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"4:1528:14531":{"crate_id":4,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"4:5964:14677":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"23:6756:13034":{"crate_id":23,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"4:9208:16798":{"crate_id":4,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"6:6068:4447":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"4:12096:14596":{"crate_id":4,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"25:12042:9199":{"crate_id":25,"path":["object","read","ObjectKind"],"kind":"enum"}},"external_crates":{"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"gimli","html_root_url":null},"27":{"name":"miniz_oxide","html_root_url":null},"24":{"name":"libc","html_root_url":null},"26":{"name":"memchr","html_root_url":null},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"addr2line","html_root_url":null},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"28":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"rustc_demangle","html_root_url":null},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"25":{"name":"object","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":16}