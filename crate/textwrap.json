{"root":"0:0:2554","crate_version":"0.16.1","includes_private":false,"index":{"0:114:2547":{"id":"0:114:2547","crate_id":0,"name":"indent","span":{"filename":"src/indentation.rs","begin":[52,0],"end":[75,1]},"visibility":"public","docs":"Indent each line by the given prefix.\n\n# Examples\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\"First line.\\nSecond line.\\n\", \"  \"),\n           \"  First line.\\n  Second line.\\n\");\n```\n\nWhen indenting, trailing whitespace is stripped from the prefix.\nThis means that empty lines remain empty afterwards:\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\"First line.\\n\\n\\nSecond line.\\n\", \"  \"),\n           \"  First line.\\n\\n\\n  Second line.\\n\");\n```\n\nNotice how `\"\\n\\n\\n\"` remained as `\"\\n\\n\\n\"`.\n\nThis feature is useful when you want to indent text and have a\nspace between your prefix and the text. In this case, you _don't_\nwant a trailing space on empty lines:\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\"foo = 123\\n\\nprint(foo)\\n\", \"# \"),\n           \"# foo = 123\\n#\\n# print(foo)\\n\");\n```\n\nNotice how `\"\\n\\n\"` became `\"\\n#\\n\"` instead of `\"\\n# \\n\"` which\nwould have trailing whitespace.\n\nLeading and trailing whitespace coming from the text itself is\nkept unchanged:\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\" \\t  Foo   \", \"->\"), \"-> \\t  Foo   \");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["prefix",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7944:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3144-0:330:2551":{"id":"b:2:3144-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3147:3442"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:217:2820":{"id":"0:217:2820","crate_id":0,"name":"whitespace","span":{"filename":"src/core.rs","begin":[243,4],"end":[243,27]},"visibility":"public","docs":"Whitespace to insert if the word does not fall at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"0:111:2545":{"id":"0:111:2545","crate_id":0,"name":"fill_inplace","span":{"filename":"src/fill.rs","begin":[120,0],"end":[153,1]},"visibility":"public","docs":"Fill `text` in-place without reallocating the input string.\n\nThis function works by modifying the input string: some `' '`\ncharacters will be replaced by `'\\n'` characters. The rest of the\ntext remains untouched.\n\nSince we can only replace existing whitespace in the input with\n`'\\n'` (there is no space for `\"\\r\\n\"`), we cannot do hyphenation\nnor can we split words longer than the line width. We also need to\nuse `AsciiSpace` as the word separator since we need `' '`\ncharacters between words in order to replace some of them with a\n`'\\n'`. Indentation is also ruled out. In other words,\n`fill_inplace(width)` behaves as if you had called [`fill()`] with\nthese options:\n\n```\n# use textwrap::{core, LineEnding, Options, WordSplitter, WordSeparator, WrapAlgorithm};\n# let width = 80;\nOptions::new(width)\n    .break_words(false)\n    .line_ending(LineEnding::LF)\n    .word_separator(WordSeparator::AsciiSpace)\n    .wrap_algorithm(WrapAlgorithm::FirstFit)\n    .word_splitter(WordSplitter::NoHyphenation);\n```\n\nThe wrap algorithm is\n[`WrapAlgorithm::FirstFit`](crate::WrapAlgorithm::FirstFit) since\nthis is the fastest algorithm — and the main reason to use\n`fill_inplace` is to get the string broken into newlines as fast\nas possible.\n\nA last difference is that (unlike [`fill()`]) `fill_inplace` can\nleave trailing whitespace on lines. This is because we wrap by\ninserting a `'\\n'` at the final whitespace in the input string:\n\n```\nlet mut text = String::from(\"Hello   World!\");\ntextwrap::fill_inplace(&mut text, 10);\nassert_eq!(text, \"Hello  \\nWorld!\");\n```\n\nIf we didn't do this, the word `World!` would end up being\nindented. You can avoid this if you make sure that your input text\nhas no double spaces.\n\n# Performance\n\nIn benchmarks, `fill_inplace` is about twice as fast as\n[`fill()`]. Please see the [`linear`\nbenchmark](https://github.com/mgeisler/textwrap/blob/master/benchmarks/linear.rs)\nfor details.","links":{"crate::WrapAlgorithm::FirstFit":"0:272:3023","`fill()`":"0:107:2537"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7944:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["width",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3144-0:236:2552":{"id":"b:2:3144-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3147:3442"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:243:2037":{"id":"0:243:2037","crate_id":0,"name":"0","span":{"filename":"src/word_splitters.rs","begin":[88,11],"end":[88,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"function_pointer":{"decl":{"inputs":[["word",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7362:281","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}},"a:2:3371:262-0:314:2549":{"id":"a:2:3371:262-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3371:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3159-0:271:2553":{"id":"b:2:3159-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3162:150","2:3163:1861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:256:832":{"id":"0:256:832","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,22],"end":[22,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10734:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10715:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[35,9],"end":[35,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:283:498"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3159-0:287:2548":{"id":"b:2:3159-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3162:150","2:3163:1861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:283:498":{"id":"0:283:498","crate_id":0,"name":"clone","span":{"filename":"src/wrap_algorithms.rs","begin":[35,9],"end":[35,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:814-0:314:2549":{"id":"b:5:814-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:810:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:816:4247","5:817:4248","5:818:4895"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:73-0:246:3011":{"id":"0:73-0:246:3011","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[23,55],"end":[23,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"import":{"source":"optimal_fit::Penalties","name":"Penalties","id":"0:246:3011","glob":false}}},"0:83:3069":{"id":"0:83:3069","crate_id":0,"name":"new_optimal_fit","span":{"filename":"src/wrap_algorithms.rs","begin":[157,4],"end":[159,5]},"visibility":"public","docs":"New [`WrapAlgorithm::OptimalFit`] with default penalties. This\nworks well for monospace text.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"`WrapAlgorithm::OptimalFit`":"0:274:3032"},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:134":{"id":"0:134","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[50,0],"end":[54,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:136:862"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:329:498":{"id":"0:329:498","crate_id":0,"name":"clone","span":{"filename":"src/options.rs","begin":[7,16],"end":[7,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:35621:250-0:214:2815":{"id":"a:2:35621:250-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35621:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:139:1215":{"id":"0:139:1215","crate_id":0,"name":"new","span":{"filename":"src/options.rs","begin":[86,4],"end":[97,5]},"visibility":"public","docs":"Creates a new [`Options`] with the specified width.\n\nThe other fields are given default values as follows:\n\n```\n# use textwrap::{LineEnding, Options, WordSplitter, WordSeparator, WrapAlgorithm};\n# let width = 80;\nlet options = Options::new(width);\nassert_eq!(options.line_ending, LineEnding::LF);\nassert_eq!(options.initial_indent, \"\");\nassert_eq!(options.subsequent_indent, \"\");\nassert_eq!(options.break_words, true);\n\n#[cfg(feature = \"unicode-linebreak\")]\nassert_eq!(options.word_separator, WordSeparator::UnicodeBreakProperties);\n#[cfg(not(feature = \"unicode-linebreak\"))]\nassert_eq!(options.word_separator, WordSeparator::AsciiSpace);\n\n#[cfg(feature = \"smawk\")]\nassert_eq!(options.wrap_algorithm, WrapAlgorithm::new_optimal_fit());\n#[cfg(not(feature = \"smawk\"))]\nassert_eq!(options.wrap_algorithm, WrapAlgorithm::FirstFit);\n\nassert_eq!(options.word_splitter, WordSplitter::HyphenSplitter);\n```\n\nNote that the default word separator and wrap algorithms\nchanges based on the available Cargo features. The best\navailable algorithms are used by default.","links":{"`Options`":"0:314:2549"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["width",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:814-0:214:2815":{"id":"b:5:814-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:810:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:816:4247","5:817:4248","5:818:4895"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:333:4031":{"id":"0:333:4031","crate_id":0,"name":"UnicodeBreakProperties","span":{"filename":"src/word_separators.rs","begin":[119,4],"end":[119,26]},"visibility":"default","docs":"Split `line` into words using Unicode break properties.\n\nThis word separator uses the Unicode line breaking algorithm\ndescribed in [Unicode Standard Annex\n#14](https://www.unicode.org/reports/tr14/) to find legal places\nto break lines. There is a small difference in that the U+002D\n(Hyphen-Minus) and U+00AD (Soft Hyphen) don’t create a line break:\nto allow a line break at a hyphen, use\n[`WordSplitter::HyphenSplitter`](crate::WordSplitter::HyphenSplitter).\nSoft hyphens are not currently supported.\n\n# Examples\n\nUnlike [`WordSeparator::AsciiSpace`], the Unicode line\nbreaking algorithm will find line break opportunities between\nsome characters with no intervening whitespace:\n\n```\n#[cfg(feature = \"unicode-linebreak\")] {\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::UnicodeBreakProperties;\n\nassert_eq!(UnicodeBreakProperties.find_words(\"Emojis: 😂😍\").collect::<Vec<_>>(),\n           vec![Word::from(\"Emojis: \"),\n                Word::from(\"😂\"),\n                Word::from(\"😍\")]);\n\nassert_eq!(UnicodeBreakProperties.find_words(\"CJK: 你好\").collect::<Vec<_>>(),\n           vec![Word::from(\"CJK: \"),\n                Word::from(\"你\"),\n                Word::from(\"好\")]);\n}\n```\n\nA U+2060 (Word Joiner) character can be inserted if you want to\nmanually override the defaults and keep the characters together:\n\n```\n#[cfg(feature = \"unicode-linebreak\")] {\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::UnicodeBreakProperties;\n\nassert_eq!(UnicodeBreakProperties.find_words(\"Emojis: 😂\\u{2060}😍\").collect::<Vec<_>>(),\n           vec![Word::from(\"Emojis: \"),\n                Word::from(\"😂\\u{2060}😍\")]);\n}\n```\n\nThe Unicode line breaking algorithm will also automatically\nsuppress break breaks around certain punctuation characters::\n\n```\n#[cfg(feature = \"unicode-linebreak\")] {\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::UnicodeBreakProperties;\n\nassert_eq!(UnicodeBreakProperties.find_words(\"[ foo ] bar !\").collect::<Vec<_>>(),\n           vec![Word::from(\"[ foo ] \"),\n                Word::from(\"bar !\")]);\n}\n```","links":{"`WordSeparator::AsciiSpace`":"0:331:3552","crate::WordSplitter::HyphenSplitter":"0:239:2918"},"attrs":["#[cfg(feature = \"unicode-linebreak\")]"],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:4016-0:262:3010":{"id":"b:2:4016-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4014:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4018:1876"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:4016-0:330:2551":{"id":"b:2:4016-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4014:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4018:1876"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:131":{"id":"0:131","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[35,0],"end":[48,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:133:862"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2829-0:246:3011":{"id":"b:2:2829-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2823:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2831:3300"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2829-0:314:2549":{"id":"b:2:2829-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2823:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2831:3300"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3406:4733-0:214:2815":{"id":"a:2:3406:4733-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3406:4733","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:71-0:65:3009":{"id":"0:71-0:65:3009","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[23,22],"end":[23,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"import":{"source":"optimal_fit::wrap_optimal_fit","name":"wrap_optimal_fit","id":"0:65:3009","glob":false}}},"0:27:2811":{"id":"0:27:2811","crate_id":0,"name":"penalty_width","span":{"filename":"src/core.rs","begin":[344,4],"end":[346,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:45500:10756-0:214:2815":{"id":"a:2:45500:10756-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45500:10756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:239:2918":{"id":"0:239:2918","crate_id":0,"name":"HyphenSplitter","span":{"filename":"src/word_splitters.rs","begin":[68,4],"end":[68,18]},"visibility":"default","docs":"`HyphenSplitter` is the default `WordSplitter` used by\n[`Options::new`](super::Options::new). It will split words on\nexisting hyphens in the word.\n\nIt will only use hyphens that are surrounded by alphanumeric\ncharacters, which prevents a word like `\"--foo-bar\"` from\nbeing split into `\"--\"` and `\"foo-bar\"`.\n\n# Examples\n\n```\nuse textwrap::WordSplitter;\n\nassert_eq!(WordSplitter::HyphenSplitter.split_points(\"--foo-bar\"),\n           vec![6]);\n```","links":{"super::Options::new":"0:139:1215"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:38:727":{"id":"0:38:727","crate_id":0,"name":"eq","span":{"filename":"src/word_splitters.rs","begin":[114,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3148-0:236:2552":{"id":"b:2:3148-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3150:862"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:28:2847":{"id":"0:28:2847","crate_id":0,"name":"break_words","span":{"filename":"src/core.rs","begin":[354,0],"end":[367,1]},"visibility":"public","docs":"Forcibly break words wider than `line_width` into smaller words.\n\nThis simply calls [`Word::break_apart`] on words that are too\nwide. This means that no extra `'-'` is inserted, the word is\nsimply broken into smaller pieces.","links":{"`Word::break_apart`":"0:20:2837"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["words",{"generic":"I"}],["line_width",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Vec","id":"5:7362:281","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8411:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:2969":{"id":"0:147:2969","crate_id":0,"name":"word_splitter","span":{"filename":"src/options.rs","begin":[274,4],"end":[279,5]},"visibility":"public","docs":"Change [`self.word_splitter`]. The [`WordSplitter`] is used to\nfit part of a word into the current line when wrapping text.\n\nSee [`Options::break_words`] instead if you want to control the\nhandling of words longer than the line width.\n\n# Examples\n\n```\nuse textwrap::{wrap, Options, WordSplitter};\n\n// The default is WordSplitter::HyphenSplitter.\nlet options = Options::new(5);\nassert_eq!(wrap(\"foo-bar-baz\", &options),\n           vec![\"foo-\", \"bar-\", \"baz\"]);\n\n// The word is now so long that break_words kick in:\nlet options = Options::new(5)\n    .word_splitter(WordSplitter::NoHyphenation);\nassert_eq!(wrap(\"foo-bar-baz\", &options),\n           vec![\"foo-b\", \"ar-ba\", \"z\"]);\n\n// If you want to breaks at all, disable both:\nlet options = Options::new(5)\n    .break_words(false)\n    .word_splitter(WordSplitter::NoHyphenation);\nassert_eq!(wrap(\"foo-bar-baz\", &options),\n           vec![\"foo-bar-baz\"]);\n```\n\n[`self.word_splitter`]: #structfield.word_splitter","links":{"`WordSplitter`":"0:236:2552","`Options::break_words`":"0:144:2847"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["word_splitter",{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133:862":{"id":"0:133:862","crate_id":0,"name":"from","span":{"filename":"src/options.rs","begin":[36,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["options",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:814-0:236:2552":{"id":"b:5:814-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:810:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:816:4247","5:817:4248","5:818:4895"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3406:4733-0:287:2548":{"id":"a:2:3406:4733-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3406:4733","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:204-0:114:2547":{"id":"0:204-0:114:2547","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[226,30],"end":[226,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"indentation::indent","name":"indent","id":"0:114:2547","glob":false}}},"b:2:3144-0:262:3010":{"id":"b:2:3144-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3147:3442"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3154-0:246:3011":{"id":"b:2:3154-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3124:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3157:150","2:3158:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:90:3077":{"id":"0:90:3077","crate_id":0,"name":"wrap_first_fit","span":{"filename":"src/wrap_algorithms.rs","begin":[347,0],"end":[371,1]},"visibility":"public","docs":"Wrap abstract fragments into lines with a first-fit algorithm.\n\nThe `line_widths` slice gives the target line width for each line\n(the last slice element is repeated as necessary). This can be\nused to implement hanging indentation.\n\nThe fragments must already have been split into the desired\nwidths, this function will not (and cannot) attempt to split them\nfurther when arranging them into lines.\n\n# First-Fit Algorithm\n\nThis implements a simple “greedy” algorithm: accumulate fragments\none by one and when a fragment no longer fits, start a new line.\nThere is no look-ahead, we simply take first fit of the fragments\nwe find.\n\nWhile fast and predictable, this algorithm can produce poor line\nbreaks when a long fragment is moved to a new line, leaving behind\na large gap:\n\n```\nuse textwrap::core::Word;\nuse textwrap::wrap_algorithms::wrap_first_fit;\nuse textwrap::WordSeparator;\n\n// Helper to convert wrapped lines to a Vec<String>.\nfn lines_to_strings(lines: Vec<&[Word<'_>]>) -> Vec<String> {\n    lines.iter().map(|line| {\n        line.iter().map(|word| &**word).collect::<Vec<_>>().join(\" \")\n    }).collect::<Vec<_>>()\n}\n\nlet text = \"These few words will unfortunately not wrap nicely.\";\nlet words = WordSeparator::AsciiSpace.find_words(text).collect::<Vec<_>>();\nassert_eq!(lines_to_strings(wrap_first_fit(&words, &[15.0])),\n           vec![\"These few words\",\n                \"will\",  // <-- short line\n                \"unfortunately\",\n                \"not wrap\",\n                \"nicely.\"]);\n\n// We can avoid the short line if we look ahead:\n#[cfg(feature = \"smawk\")]\nuse textwrap::wrap_algorithms::{wrap_optimal_fit, Penalties};\n#[cfg(feature = \"smawk\")]\nassert_eq!(lines_to_strings(wrap_optimal_fit(&words, &[15.0], &Penalties::new()).unwrap()),\n           vec![\"These few\",\n                \"words will\",\n                \"unfortunately\",\n                \"not wrap\",\n                \"nicely.\"]);\n```\n\nThe [`wrap_optimal_fit()`] function was used above to get better\nline breaks. It uses an advanced algorithm which tries to avoid\nshort lines. This function is about 4 times faster than\n[`wrap_optimal_fit()`].\n\n# Examples\n\nImagine you're building a house site and you have a number of\ntasks you need to execute. Things like pour foundation, complete\nframing, install plumbing, electric cabling, install insulation.\n\nThe construction workers can only work during daytime, so they\nneed to pack up everything at night. Because they need to secure\ntheir tools and move machines back to the garage, this process\ntakes much more time than the time it would take them to simply\nswitch to another task.\n\nYou would like to make a list of tasks to execute every day based\non your estimates. You can model this with a program like this:\n\n```\nuse textwrap::core::{Fragment, Word};\nuse textwrap::wrap_algorithms::wrap_first_fit;\n\n#[derive(Debug)]\nstruct Task<'a> {\n    name: &'a str,\n    hours: f64,   // Time needed to complete task.\n    sweep: f64,   // Time needed for a quick sweep after task during the day.\n    cleanup: f64, // Time needed for full cleanup if day ends with this task.\n}\n\nimpl Fragment for Task<'_> {\n    fn width(&self) -> f64 { self.hours }\n    fn whitespace_width(&self) -> f64 { self.sweep }\n    fn penalty_width(&self) -> f64 { self.cleanup }\n}\n\n// The morning tasks\nlet tasks = vec![\n    Task { name: \"Foundation\",  hours: 4.0, sweep: 2.0, cleanup: 3.0 },\n    Task { name: \"Framing\",     hours: 3.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Plumbing\",    hours: 2.0, sweep: 2.0, cleanup: 2.0 },\n    Task { name: \"Electrical\",  hours: 2.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Insulation\",  hours: 2.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Drywall\",     hours: 3.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Floors\",      hours: 3.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Countertops\", hours: 1.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Bathrooms\",   hours: 2.0, sweep: 1.0, cleanup: 2.0 },\n];\n\n// Fill tasks into days, taking `day_length` into account. The\n// output shows the hours worked per day along with the names of\n// the tasks for that day.\nfn assign_days<'a>(tasks: &[Task<'a>], day_length: f64) -> Vec<(f64, Vec<&'a str>)> {\n    let mut days = Vec::new();\n    // Assign tasks to days. The assignment is a vector of slices,\n    // with a slice per day.\n    let assigned_days: Vec<&[Task<'a>]> = wrap_first_fit(&tasks, &[day_length]);\n    for day in assigned_days.iter() {\n        let last = day.last().unwrap();\n        let work_hours: f64 = day.iter().map(|t| t.hours + t.sweep).sum();\n        let names = day.iter().map(|t| t.name).collect::<Vec<_>>();\n        days.push((work_hours - last.sweep + last.cleanup, names));\n    }\n    days\n}\n\n// With a single crew working 8 hours a day:\nassert_eq!(\n    assign_days(&tasks, 8.0),\n    [\n        (7.0, vec![\"Foundation\"]),\n        (8.0, vec![\"Framing\", \"Plumbing\"]),\n        (7.0, vec![\"Electrical\", \"Insulation\"]),\n        (5.0, vec![\"Drywall\"]),\n        (7.0, vec![\"Floors\", \"Countertops\"]),\n        (4.0, vec![\"Bathrooms\"]),\n    ]\n);\n\n// With two crews working in shifts, 16 hours a day:\nassert_eq!(\n    assign_days(&tasks, 16.0),\n    [\n        (14.0, vec![\"Foundation\", \"Framing\", \"Plumbing\"]),\n        (15.0, vec![\"Electrical\", \"Insulation\", \"Drywall\", \"Floors\"]),\n        (6.0, vec![\"Countertops\", \"Bathrooms\"]),\n    ]\n);\n```\n\nApologies to anyone who actually knows how to build a house and\nknows how long each step takes :-)","links":{"`wrap_optimal_fit()`":"0:65:3009"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fragments",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"generic":"T"}}}}],["line_widths",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"f64"}}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7362:281","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"generic":"T"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fragment","id":"0:10:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[56,0],"end":[280,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:139:1215","0:140:2539","0:141:2730","0:142:3505","0:143:3747","0:144:2847","0:145:3755","0:146:3582","0:147:2969"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:337:2037":{"id":"0:337:2037","crate_id":0,"name":"0","span":{"filename":"src/word_separators.rs","begin":[122,11],"end":[122,68]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"function_pointer":{"decl":{"inputs":[["line",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Box","id":"5:328:4033","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Iterator","id":"2:8584:190","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"crate::core::Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}},"0:143:3747":{"id":"0:143:3747","crate_id":0,"name":"subsequent_indent","span":{"filename":"src/options.rs","begin":[182,4],"end":[187,5]},"visibility":"public","docs":"Change [`self.subsequent_indent`]. The subsequent indentation\nis used on lines following the first line of output.\n\n# Examples\n\nCombining initial and subsequent indentation lets you format a\nsingle paragraph as a bullet list:\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(12)\n    .initial_indent(\"* \")\n    .subsequent_indent(\"  \");\n#[cfg(feature = \"smawk\")]\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"* This is\",\n                \"  a little\",\n                \"  example.\"]);\n\n// Without the `smawk` feature, the wrapping is a little different:\n#[cfg(not(feature = \"smawk\"))]\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"* This is a\",\n                \"  little\",\n                \"  example.\"]);\n```\n\n[`self.subsequent_indent`]: #structfield.subsequent_indent","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["subsequent_indent",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:314:2549":{"id":"0:314:2549","crate_id":0,"name":"Options","span":{"filename":"src/options.rs","begin":[8,0],"end":[33,1]},"visibility":"public","docs":"Holds configuration options for wrapping and filling text.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:316:2730","0:317:2539","0:318:3505","0:319:3747","0:320:2847","0:321:3582","0:322:3755","0:323:2969"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:137","a:2:35621:250-0:314:2549","a:2:3371:262-0:314:2549","a:2:3406:4733-0:314:2549","a:2:35679:4577-0:314:2549","a:2:45500:10756-0:314:2549","a:2:45501:10958-0:314:2549","b:2:2829-0:314:2549","b:2:2832-0:314:2549","b:2:2887-0:314:2549","b:2:3144-0:314:2549","b:2:3148-0:314:2549","b:2:3154-0:314:2549","b:2:3159-0:314:2549","b:2:4016-0:314:2549","b:5:814-0:314:2549","0:324","0:327","0:131","0:134"]}}},"0:168:3553":{"id":"0:168:3553","crate_id":0,"name":"find_words","span":{"filename":"src/word_separators.rs","begin":[192,4],"end":[199,5]},"visibility":"public","docs":"Find all words in `line`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["line",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Box","id":"5:328:4033","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Iterator","id":"2:8584:190","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[258,0],"end":[326,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:19:862","0:20:2837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3154-0:236:2552":{"id":"b:2:3154-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3124:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3157:150","2:3158:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3:587":{"id":"0:3:587","crate_id":0,"name":"core","span":{"filename":"src/core.rs","begin":[1,0],"end":[461,1]},"visibility":"public","docs":"Building blocks for advanced wrapping functionality.\n\nThe functions and structs in this module can be used to implement\nadvanced wrapping functionality when [`wrap()`](crate::wrap())\n[`fill()`](crate::fill()) don't do what you want.\n\nIn general, you want to follow these steps when wrapping\nsomething:\n\n1. Split your input into [`Fragment`]s. These are abstract blocks\n   of text or content which can be wrapped into lines. See\n   [`WordSeparator`](crate::word_separators::WordSeparator) for\n   how to do this for text.\n\n2. Potentially split your fragments into smaller pieces. This\n   allows you to implement things like hyphenation. If you use the\n   `Word` type, you can use [`WordSplitter`](crate::WordSplitter)\n   enum for this.\n\n3. Potentially break apart fragments that are still too large to\n   fit on a single line. This is implemented in [`break_words`].\n\n4. Finally take your fragments and put them into lines. There are\n   two algorithms for this in the\n   [`wrap_algorithms`](crate::wrap_algorithms) module:\n   [`wrap_optimal_fit`](crate::wrap_algorithms::wrap_optimal_fit)\n   and [`wrap_first_fit`](crate::wrap_algorithms::wrap_first_fit).\n   The former produces better line breaks, the latter is faster.\n\n5. Iterate through the slices returned by the wrapping functions\n   and construct your lines of output.\n\nPlease [open an issue](https://github.com/mgeisler/textwrap/) if\nthe functionality here is not sufficient or if you have ideas for\nimproving it. We would love to hear from you!","links":{"crate::word_separators::WordSeparator":"0:330:2551","crate::wrap_algorithms::wrap_first_fit":"0:90:3077","`Fragment`":"0:10:2804","`break_words`":"0:28:2847","crate::wrap()":"0:190:2543","crate::fill()":"0:107:2537","crate::WordSplitter":"0:236:2552","crate::wrap_algorithms":"0:48:2535","crate::wrap_algorithms::wrap_optimal_fit":"0:65:3009"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:9:2794","0:10:2804","0:214:2815","0:28:2847"],"is_stripped":false}}},"0:84:2543":{"id":"0:84:2543","crate_id":0,"name":"wrap","span":{"filename":"src/wrap_algorithms.rs","begin":[167,4],"end":[190,5]},"visibility":"public","docs":"Wrap words according to line widths.\n\nThe `line_widths` slice gives the target line width for each\nline (the last slice element is repeated as necessary). This\ncan be used to implement hanging indentation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["words",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}],["line_widths",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"usize"}}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7362:281","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[133,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:82:1215","0:83:3069","0:84:2543"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,16],"end":[238,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3366:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[193,0],"end":[197,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3196:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:227:498":{"id":"0:227:498","crate_id":0,"name":"clone","span":{"filename":"src/core.rs","begin":[238,22],"end":[238,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319:3747":{"id":"0:319:3747","crate_id":0,"name":"subsequent_indent","span":{"filename":"src/options.rs","begin":[18,4],"end":[18,34]},"visibility":"public","docs":"Indentation used for subsequent lines of output. See the\n[`Options::subsequent_indent`] method.","links":{"`Options::subsequent_indent`":"0:143:3747"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"0:206-0:314:2549":{"id":"0:206-0:314:2549","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[228,0],"end":[228,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"options::Options","name":"Options","id":"0:314:2549","glob":false}}},"b:2:3159-0:214:2815":{"id":"b:2:3159-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3162:150","2:3163:1861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3147:3442":{"id":"2:3147:3442","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3121:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:45500:10756-0:236:2552":{"id":"a:2:45500:10756-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45500:10756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:9:2794":{"id":"0:9:2794","crate_id":0,"name":"display_width","span":{"filename":"src/core.rs","begin":[199,0],"end":[209,1]},"visibility":"public","docs":"Compute the display width of `text` while skipping over ANSI\nescape sequences.\n\n# Examples\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(display_width(\"Café Plain\"), 10);\nassert_eq!(display_width(\"\\u{1b}[31mCafé Rouge\\u{1b}[0m\"), 10);\nassert_eq!(display_width(\"\\x1b]8;;http://example.com\\x1b\\\\This is a link\\x1b]8;;\\x1b\\\\\"), 14);\n```\n\n**Note:** When the `unicode-width` Cargo feature is disabled, the\nwidth of a `char` is determined by a crude approximation which\nsimply counts chars below U+1100 as 1 column wide, and all other\ncharacters as 2 columns wide. With the feature enabled, function\nwill correctly deal with [combining characters] in their\ndecomposed form (see [Unicode equivalence]).\n\nAn example of a decomposed character is “é”, which can be\ndecomposed into: “e” followed by a combining acute accent: “◌́”.\nWithout the `unicode-width` Cargo feature, every `char` below\nU+1100 has a width of 1. This includes the combining accent:\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(display_width(\"Cafe Plain\"), 10);\n#[cfg(feature = \"unicode-width\")]\nassert_eq!(display_width(\"Cafe\\u{301} Plain\"), 10);\n#[cfg(not(feature = \"unicode-width\"))]\nassert_eq!(display_width(\"Cafe\\u{301} Plain\"), 11);\n```\n\n## Emojis and CJK Characters\n\nCharacters such as emojis and [CJK characters] used in the\nChinese, Japanese, and Korean languages are seen as double-width,\neven if the `unicode-width` feature is disabled:\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(display_width(\"😂😭🥺🤣✨😍🙏🥰😊🔥\"), 20);\nassert_eq!(display_width(\"你好\"), 4);  // “Nǐ hǎo” or “Hello” in Chinese\n```\n\n# Limitations\n\nThe displayed width of a string cannot always be computed from the\nstring alone. This is because the width depends on the rendering\nengine used. This is particularly visible with [emoji modifier\nsequences] where a base emoji is modified with, e.g., skin tone or\nhair color modifiers. It is up to the rendering engine to detect\nthis and to produce a suitable emoji.\n\nA simple example is “❤️”, which consists of “❤” (U+2764: Black\nHeart Symbol) followed by U+FE0F (Variation Selector-16). By\nitself, “❤” is a black heart, but if you follow it with the\nvariant selector, you may get a wider red heart.\n\nA more complex example would be “👨‍🦰” which should depict a man\nwith red hair. Here the computed width is too large — and the\nwidth differs depending on the use of the `unicode-width` feature:\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(\"👨‍🦰\".chars().collect::<Vec<char>>(), ['\\u{1f468}', '\\u{200d}', '\\u{1f9b0}']);\n#[cfg(feature = \"unicode-width\")]\nassert_eq!(display_width(\"👨‍🦰\"), 4);\n#[cfg(not(feature = \"unicode-width\"))]\nassert_eq!(display_width(\"👨‍🦰\"), 6);\n```\n\nThis happens because the grapheme consists of three code points:\n“👨” (U+1F468: Man), Zero Width Joiner (U+200D), and “🦰”\n(U+1F9B0: Red Hair). You can see them above in the test. With\n`unicode-width` enabled, the ZWJ is correctly seen as having zero\nwidth, without it is counted as a double-width character.\n\n## Terminal Support\n\nModern browsers typically do a great job at combining characters\nas shown above, but terminals often struggle more. As an example,\nGnome Terminal version 3.38.1, shows “❤️” as a big red heart, but\nshows \"👨‍🦰\" as “👨🦰”.\n\n[combining characters]: https://en.wikipedia.org/wiki/Combining_character\n[Unicode equivalence]: https://en.wikipedia.org/wiki/Unicode_equivalence\n[CJK characters]: https://en.wikipedia.org/wiki/CJK_characters\n[emoji modifier sequences]: https://unicode.org/emoji/charts/full-emoji-modifiers.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:2808":{"id":"0:26:2808","crate_id":0,"name":"whitespace_width","span":{"filename":"src/core.rs","begin":[337,4],"end":[339,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:4016-0:271:2553":{"id":"b:2:4016-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4014:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4018:1876"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:35679:4577-0:314:2549":{"id":"a:2:35679:4577-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:35679:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:45500:10756-0:314:2549":{"id":"a:2:45500:10756-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45500:10756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2829-0:287:2548":{"id":"b:2:2829-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2823:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2831:3300"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:214:2815":{"id":"0:214:2815","crate_id":0,"name":"Word","span":{"filename":"src/core.rs","begin":[239,0],"end":[248,1]},"visibility":"public","docs":"A piece of wrappable text, including any trailing whitespace.\n\nA `Word` is an example of a [`Fragment`], so it has a width,\ntrailing whitespace, and potentially a penalty item.","links":{"`Fragment`":"0:10:2804"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:216:2818","0:217:2820","0:218:2822"],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:17","a:2:35621:250-0:214:2815","a:2:3371:262-0:214:2815","a:2:3406:4733-0:214:2815","a:2:35679:4577-0:214:2815","a:2:45500:10756-0:214:2815","a:2:45501:10958-0:214:2815","b:2:2829-0:214:2815","b:2:2832-0:214:2815","b:2:2887-0:214:2815","b:2:3144-0:214:2815","b:2:3148-0:214:2815","b:2:3154-0:214:2815","b:2:3159-0:214:2815","b:2:4016-0:214:2815","b:5:814-0:214:2815","0:220","0:223","0:225","0:228","0:230","0:233","0:14","0:24"]}}},"a:2:45501:10958-0:330:2551":{"id":"a:2:45501:10958-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45501:10958","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:318:3505":{"id":"0:318:3505","crate_id":0,"name":"initial_indent","span":{"filename":"src/options.rs","begin":[15,4],"end":[15,31]},"visibility":"public","docs":"Indentation used for the first line of output. See the\n[`Options::initial_indent`] method.","links":{"`Options::initial_indent`":"0:142:3505"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"b:2:3154-0:330:2551":{"id":"b:2:3154-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3124:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3157:150","2:3158:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:35679:4577-0:330:2551":{"id":"a:2:35679:4577-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:35679:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:335:2927":{"id":"0:335:2927","crate_id":0,"name":"Custom","span":{"filename":"src/word_separators.rs","begin":[122,4],"end":[122,69]},"visibility":"default","docs":"Find words using a custom word separator","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:337:2037"]},"discriminant":null}}},"0:203-0:115:2546":{"id":"0:203-0:115:2546","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[226,22],"end":[226,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"indentation::dedent","name":"dedent","id":"0:115:2546","glob":false}}},"0:72-0:262:3010":{"id":"0:72-0:262:3010","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[23,40],"end":[23,53]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"import":{"source":"optimal_fit::OverflowError","name":"OverflowError","id":"0:262:3010","glob":false}}},"0:211-0:236:2552":{"id":"0:211-0:236:2552","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[233,0],"end":[233,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"word_splitters::WordSplitter","name":"WordSplitter","id":"0:236:2552","glob":false}}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,22],"end":[22,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10767:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:256:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:15:264":{"id":"0:15:264","crate_id":0,"name":"Target","span":{"filename":"src/core.rs","begin":[251,4],"end":[251,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:222:832":{"id":"0:222:832","crate_id":0,"name":"fmt","span":{"filename":"src/core.rs","begin":[238,9],"end":[238,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10734:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10715:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:35621:250-0:246:3011":{"id":"a:2:35621:250-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35621:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:265:832":{"id":"0:265:832","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,9],"end":[185,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10734:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10715:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:299:727":{"id":"0:299:727","crate_id":0,"name":"eq","span":{"filename":"src/line_ending.rs","begin":[7,29],"end":[7,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:45501:10958-0:214:2815":{"id":"a:2:45501:10958-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45501:10958","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:216:2818":{"id":"0:216:2818","crate_id":0,"name":"word","span":{"filename":"src/core.rs","begin":[241,4],"end":[241,21]},"visibility":"public","docs":"Word content.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"0:163:727":{"id":"0:163:727","crate_id":0,"name":"eq","span":{"filename":"src/word_separators.rs","begin":[149,4],"end":[156,5]},"visibility":"default","docs":"Compare two word separators.\n\n```\nuse textwrap::WordSeparator;\n\nassert_eq!(WordSeparator::AsciiSpace, WordSeparator::AsciiSpace);\n#[cfg(feature = \"unicode-linebreak\")] {\n    assert_eq!(WordSeparator::UnicodeBreakProperties,\n               WordSeparator::UnicodeBreakProperties);\n}\n```\n\nNote that `WordSeparator::Custom` values never compare equal:\n\n```\nuse textwrap::WordSeparator;\nuse textwrap::core::Word;\nfn word_separator(line: &str) -> Box<dyn Iterator<Item = Word<'_>> + '_> {\n    Box::new(line.split_inclusive(' ').map(Word::from))\n}\nassert_ne!(WordSeparator::Custom(word_separator),\n           WordSeparator::Custom(word_separator));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,40],"end":[22,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:241:2927":{"id":"0:241:2927","crate_id":0,"name":"Custom","span":{"filename":"src/word_splitters.rs","begin":[88,4],"end":[88,40]},"visibility":"default","docs":"Use a custom function as the word splitter.\n\nThis variant lets you implement a custom word splitter using\nyour own function.\n\n# Examples\n\n```\nuse textwrap::WordSplitter;\n\nfn split_at_underscore(word: &str) -> Vec<usize> {\n    word.match_indices('_').map(|(idx, _)| idx + 1).collect()\n}\n\nlet word_splitter = WordSplitter::Custom(split_at_underscore);\nassert_eq!(word_splitter.split_points(\"a_long_identifier\"),\n           vec![2, 7]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:243:2037"]},"discriminant":null}}},"b:2:2829-0:262:3010":{"id":"b:2:2829-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2823:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2831:3300"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:82:1215":{"id":"0:82:1215","crate_id":0,"name":"new","span":{"filename":"src/wrap_algorithms.rs","begin":[139,4],"end":[149,5]},"visibility":"public","docs":"Create new wrap algorithm.\n\nThe best wrapping algorithm is used by default, i.e.,\n[`WrapAlgorithm::OptimalFit`] if available, otherwise\n[`WrapAlgorithm::FirstFit`].","links":{"`WrapAlgorithm::OptimalFit`":"0:274:3032","`WrapAlgorithm::FirstFit`":"0:272:3023"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3148-0:214:2815":{"id":"b:2:3148-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3150:862"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:316:2730":{"id":"0:316:2730","crate_id":0,"name":"width","span":{"filename":"src/options.rs","begin":[10,4],"end":[10,20]},"visibility":"public","docs":"The width in columns at which the text will be wrapped.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:140:2539":{"id":"0:140:2539","crate_id":0,"name":"line_ending","span":{"filename":"src/options.rs","begin":[114,4],"end":[119,5]},"visibility":"public","docs":"Change [`self.line_ending`]. This specifies which of the\nsupported line endings should be used to break the lines of the\ninput text.\n\n# Examples\n\n```\nuse textwrap::{refill, LineEnding, Options};\n\nlet options = Options::new(15).line_ending(LineEnding::CRLF);\nassert_eq!(refill(\"This is a little example.\", options),\n           \"This is a\\r\\nlittle example.\");\n```\n\n[`self.line_ending`]: #structfield.line_ending","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["line_ending",{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,29],"end":[22,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:35623:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:340":{"id":"0:340","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[41,16],"end":[41,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3366:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2829-0:236:2552":{"id":"b:2:2829-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2823:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2831:3300"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,16],"end":[185,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:727"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:35679:4577-0:262:3010":{"id":"a:2:35679:4577-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:35679:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:141:2730":{"id":"0:141:2730","crate_id":0,"name":"width","span":{"filename":"src/options.rs","begin":[124,4],"end":[126,5]},"visibility":"public","docs":"Set [`self.width`] to the given value.\n\n[`self.width`]: #structfield.width","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["width",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2887-0:236:2552":{"id":"b:2:2887-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2885:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2889:29552"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:246:3011":{"id":"0:246:3011","crate_id":0,"name":"Penalties","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[23,0],"end":[132,1]},"visibility":"public","docs":"Penalties for\n[`WrapAlgorithm::OptimalFit`](crate::WrapAlgorithm::OptimalFit)\nand [`wrap_optimal_fit`].\n\nThis wrapping algorithm in [`wrap_optimal_fit`] considers the\nentire paragraph to find optimal line breaks. When wrapping text,\n\"penalties\" are assigned to line breaks based on the gaps left at\nthe end of lines. The penalties are given by this struct, with\n[`Penalties::default`] assigning penalties that work well for\nmonospace text.\n\nIf you are wrapping proportional text, you are advised to assign\nyour own penalties according to your font size. See the individual\npenalties below for details.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"crate::WrapAlgorithm::OptimalFit":"0:274:3032","`wrap_optimal_fit`":"0:65:3009","`Penalties::default`":"0:55:60"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:247:3215","0:248:3246","0:249:3278","0:250:3281","0:251:3283"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:52","a:2:35621:250-0:246:3011","a:2:3371:262-0:246:3011","a:2:3406:4733-0:246:3011","a:2:35679:4577-0:246:3011","a:2:45500:10756-0:246:3011","a:2:45501:10958-0:246:3011","b:2:2829-0:246:3011","b:2:2832-0:246:3011","b:2:2887-0:246:3011","b:2:3144-0:246:3011","b:2:3148-0:246:3011","b:2:3154-0:246:3011","b:2:3159-0:246:3011","b:2:4016-0:246:3011","b:5:814-0:246:3011","0:252","0:254","0:255","0:257","0:258","0:260","0:54"]}}},"b:2:3144-0:287:2548":{"id":"b:2:3144-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3147:3442"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[152,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3196:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:55:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3371:262-0:330:2551":{"id":"a:2:3371:262-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3371:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:276:2037":{"id":"0:276:2037","crate_id":0,"name":"0","span":{"filename":"src/wrap_algorithms.rs","begin":[57,15],"end":[57,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:320:2847":{"id":"0:320:2847","crate_id":0,"name":"break_words","span":{"filename":"src/options.rs","begin":[22,4],"end":[22,25]},"visibility":"public","docs":"Allow long words to be broken if they cannot fit on a line.\nWhen set to `false`, some lines may be longer than\n`self.width`. See the [`Options::break_words`] method.","links":{"`Options::break_words`":"0:144:2847"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"2:3162:150":{"id":"2:3162:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:35545:8411","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:247:3215":{"id":"0:247:3215","crate_id":0,"name":"nline_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[26,4],"end":[26,28]},"visibility":"public","docs":"Per-line penalty. This is added for every line, which makes it\nexpensive to output more lines than the minimum required.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:45501:10958-0:287:2548":{"id":"a:2:45501:10958-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45501:10958","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:295":{"id":"0:295","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,22],"end":[7,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10767:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:296:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:4018:1876":{"id":"2:4018:1876","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:43122:7493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248:3246":{"id":"0:248:3246","crate_id":0,"name":"overflow_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[70,4],"end":[70,31]},"visibility":"public","docs":"Per-character cost for lines that overflow the target line width.\n\nWith a default value of 50², every single character costs as\nmuch as leaving a gap of 50 characters behind. This is because\nwe assign as cost of `gap * gap` to a short line. When\nwrapping monospace text, we can overflow the line by 1\ncharacter in extreme cases:\n\n```\nuse textwrap::core::Word;\nuse textwrap::wrap_algorithms::{wrap_optimal_fit, Penalties};\n\nlet short = \"foo \";\nlet long = \"x\".repeat(50);\nlet length = (short.len() + long.len()) as f64;\nlet fragments = vec![Word::from(short), Word::from(&long)];\nlet penalties = Penalties::new();\n\n// Perfect fit, both words are on a single line with no overflow.\nlet wrapped = wrap_optimal_fit(&fragments, &[length], &penalties).unwrap();\nassert_eq!(wrapped, vec![&[Word::from(short), Word::from(&long)]]);\n\n// The words no longer fit, yet we get a single line back. While\n// the cost of overflow (`1 * 2500`) is the same as the cost of the\n// gap (`50 * 50 = 2500`), the tie is broken by `nline_penalty`\n// which makes it cheaper to overflow than to use two lines.\nlet wrapped = wrap_optimal_fit(&fragments, &[length - 1.0], &penalties).unwrap();\nassert_eq!(wrapped, vec![&[Word::from(short), Word::from(&long)]]);\n\n// The cost of overflow would be 2 * 2500, whereas the cost of\n// the gap is only `49 * 49 + nline_penalty = 2401 + 1000 =\n// 3401`. We therefore get two lines.\nlet wrapped = wrap_optimal_fit(&fragments, &[length - 2.0], &penalties).unwrap();\nassert_eq!(wrapped, vec![&[Word::from(short)],\n                         &[Word::from(&long)]]);\n```\n\nThis only happens if the overflowing word is 50 characters\nlong _and_ if the word overflows the line by exactly one\ncharacter. If it overflows by more than one character, the\noverflow penalty will quickly outgrow the cost of the gap, as\nseen above.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:272:3023":{"id":"0:272:3023","crate_id":0,"name":"FirstFit","span":{"filename":"src/wrap_algorithms.rs","begin":[42,4],"end":[42,12]},"visibility":"default","docs":"Wrap words using a fast and simple algorithm.\n\nThis algorithm uses no look-ahead when finding line breaks.\nImplemented by [`wrap_first_fit()`], please see that function\nfor details and examples.","links":{"`wrap_first_fit()`":"0:90:3077"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3154-0:271:2553":{"id":"b:2:3154-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3124:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3157:150","2:3158:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3406:4733-0:236:2552":{"id":"a:2:3406:4733-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3406:4733","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3150:862":{"id":"2:3150:862","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:35679:4577-0:271:2553":{"id":"a:2:35679:4577-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:35679:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:292":{"id":"0:292","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:293:498"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:250:3281":{"id":"0:250:3281","crate_id":0,"name":"short_last_line_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[128,4],"end":[128,38]},"visibility":"public","docs":"Penalty for a last line with a single short word.\n\nSet this to zero if you do not want to penalize short last lines.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:2832-0:262:3010":{"id":"b:2:2832-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2826:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2834:3298"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[7,16],"end":[7,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:329:498"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:45501:10958-0:246:3011":{"id":"a:2:45501:10958-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45501:10958","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3371:262-0:214:2815":{"id":"a:2:3371:262-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3371:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2889:29552":{"id":"2:2889:29552","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:4016-0:236:2552":{"id":"b:2:4016-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4014:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4018:1876"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:317:2539":{"id":"0:317:2539","crate_id":0,"name":"line_ending","span":{"filename":"src/options.rs","begin":[12,4],"end":[12,31]},"visibility":"public","docs":"Line ending used for breaking lines.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:251:3283":{"id":"0:251:3283","crate_id":0,"name":"hyphen_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[131,4],"end":[131,29]},"visibility":"public","docs":"Penalty for lines ending with a hyphen.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:52":{"id":"0:52","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[134,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:53:1215"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2887-0:246:3011":{"id":"b:2:2887-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2885:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2889:29552"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:63:832":{"id":"0:63:832","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[189,4],"end":[191,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:10734:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:10715:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3406:4733-0:330:2551":{"id":"a:2:3406:4733-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3406:4733","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,40],"end":[7,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3371:262-0:246:3011":{"id":"a:2:3371:262-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3371:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:323:2969":{"id":"0:323:2969","crate_id":0,"name":"word_splitter","span":{"filename":"src/options.rs","begin":[32,4],"end":[32,35]},"visibility":"public","docs":"The method for splitting words. This can be used to prohibit\nsplitting words on hyphens, or it can be used to implement\nlanguage-aware machine hyphenation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:190:2543":{"id":"0:190:2543","crate_id":0,"name":"wrap","span":{"filename":"src/wrap.rs","begin":[180,0],"end":[193,1]},"visibility":"public","docs":"Wrap a line of text at a given width.\n\nThe result is a vector of lines, each line is of type [`Cow<'_,\nstr>`](Cow), which means that the line will borrow from the input\n`&str` if possible. The lines do not have trailing whitespace,\nincluding a final `'\\n'`. Please use [`fill()`](crate::fill()) if\nyou need a [`String`] instead.\n\nThe easiest way to use this function is to pass an integer for\n`width_or_options`:\n\n```\nuse textwrap::wrap;\n\nlet lines = wrap(\"Memory safety without garbage collection.\", 15);\nassert_eq!(lines, &[\n    \"Memory safety\",\n    \"without garbage\",\n    \"collection.\",\n]);\n```\n\nIf you need to customize the wrapping, you can pass an [`Options`]\ninstead of an `usize`:\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(15)\n    .initial_indent(\"- \")\n    .subsequent_indent(\"  \");\nlet lines = wrap(\"Memory safety without garbage collection.\", &options);\nassert_eq!(lines, &[\n    \"- Memory safety\",\n    \"  without\",\n    \"  garbage\",\n    \"  collection.\",\n]);\n```\n\n# Optimal-Fit Wrapping\n\nBy default, `wrap` will try to ensure an even right margin by\nfinding breaks which avoid short lines. We call this an\n“optimal-fit algorithm” since the line breaks are computed by\nconsidering all possible line breaks. The alternative is a\n“first-fit algorithm” which simply accumulates words until they no\nlonger fit on the line.\n\nAs an example, using the first-fit algorithm to wrap the famous\nHamlet quote “To be, or not to be: that is the question” in a\nnarrow column with room for only 10 characters looks like this:\n\n```\n# use textwrap::{WrapAlgorithm::FirstFit, Options, wrap};\n#\n# let lines = wrap(\"To be, or not to be: that is the question\",\n#                  Options::new(10).wrap_algorithm(FirstFit));\n# assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\\nTo be, or\nnot to be:\nthat is\nthe\nquestion\n# \");\n```\n\nNotice how the second to last line is quite narrow because\n“question” was too large to fit? The greedy first-fit algorithm\ndoesn’t look ahead, so it has no other option than to put\n“question” onto its own line.\n\nWith the optimal-fit wrapping algorithm, the previous lines are\nshortened slightly in order to make the word “is” go into the\nsecond last line:\n\n```\n# #[cfg(feature = \"smawk\")] {\n# use textwrap::{Options, WrapAlgorithm, wrap};\n#\n# let lines = wrap(\n#     \"To be, or not to be: that is the question\",\n#     Options::new(10).wrap_algorithm(WrapAlgorithm::new_optimal_fit())\n# );\n# assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\\nTo be,\nor not to\nbe: that\nis the\nquestion\n# \"); }\n```\n\nPlease see [`WrapAlgorithm`](crate::WrapAlgorithm) for details on\nthe choices.\n\n# Examples\n\nThe returned iterator yields lines of type `Cow<'_, str>`. If\npossible, the wrapped lines will borrow from the input string. As\nan example, a hanging indentation, the first line can borrow from\nthe input, but the subsequent lines become owned strings:\n\n```\nuse std::borrow::Cow::{Borrowed, Owned};\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(15).subsequent_indent(\"....\");\nlet lines = wrap(\"Wrapping text all day long.\", &options);\nlet annotated = lines\n    .iter()\n    .map(|line| match line {\n        Borrowed(text) => format!(\"[Borrowed] {}\", text),\n        Owned(text) => format!(\"[Owned]    {}\", text),\n    })\n    .collect::<Vec<_>>();\nassert_eq!(\n    annotated,\n    &[\n        \"[Borrowed] Wrapping text\",\n        \"[Owned]    ....all day\",\n        \"[Owned]    ....long.\",\n    ]\n);\n```\n\n## Leading and Trailing Whitespace\n\nAs a rule, leading whitespace (indentation) is preserved and\ntrailing whitespace is discarded.\n\nIn more details, when wrapping words into lines, words are found\nby splitting the input text on space characters. One or more\nspaces (shown here as “␣”) are attached to the end of each word:\n\n```text\n\"Foo␣␣␣bar␣baz\" -> [\"Foo␣␣␣\", \"bar␣\", \"baz\"]\n```\n\nThese words are then put into lines. The interword whitespace is\npreserved, unless the lines are wrapped so that the `\"Foo␣␣␣\"`\nword falls at the end of a line:\n\n```\nuse textwrap::wrap;\n\nassert_eq!(wrap(\"Foo   bar baz\", 10), vec![\"Foo   bar\", \"baz\"]);\nassert_eq!(wrap(\"Foo   bar baz\", 8), vec![\"Foo\", \"bar baz\"]);\n```\n\nNotice how the trailing whitespace is removed in both case: in the\nfirst example, `\"bar␣\"` becomes `\"bar\"` and in the second case\n`\"Foo␣␣␣\"` becomes `\"Foo\"`.\n\nLeading whitespace is preserved when the following word fits on\nthe first line. To understand this, consider how words are found\nin a text with leading spaces:\n\n```text\n\"␣␣foo␣bar\" -> [\"␣␣\", \"foo␣\", \"bar\"]\n```\n\nWhen put into lines, the indentation is preserved if `\"foo\"` fits\non the first line, otherwise you end up with an empty line:\n\n```\nuse textwrap::wrap;\n\nassert_eq!(wrap(\"  foo bar\", 8), vec![\"  foo\", \"bar\"]);\nassert_eq!(wrap(\"  foo bar\", 4), vec![\"\", \"foo\", \"bar\"]);\n```","links":{"`Options`":"0:314:2549","Cow":"5:819:122","crate::WrapAlgorithm":"0:271:2553","crate::fill()":"0:107:2537","`String`":"5:7944:258"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["width_or_options",{"generic":"Opt"}]],"output":{"resolved_path":{"name":"Vec","id":"5:7362:281","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::borrow::Cow","id":"5:819:122","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:330:2551":{"id":"0:330:2551","crate_id":0,"name":"WordSeparator","span":{"filename":"src/word_separators.rs","begin":[42,0],"end":[123,1]},"visibility":"public","docs":"Describes where words occur in a line of text.\n\nThe simplest approach is say that words are separated by one or\nmore ASCII spaces (`' '`). This works for Western languages\nwithout emojis. A more complex approach is to use the Unicode line\nbreaking algorithm, which finds break points in non-ASCII text.\n\nThe line breaks occur between words, please see\n[`WordSplitter`](crate::WordSplitter) for options of how to handle\nhyphenation of individual words.\n\n# Examples\n\n```\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::AsciiSpace;\n\nlet words = AsciiSpace.find_words(\"Hello World!\").collect::<Vec<_>>();\nassert_eq!(words, vec![Word::from(\"Hello \"), Word::from(\"World!\")]);\n```","links":{"crate::WordSplitter":"0:236:2552"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:331:3552","0:333:4031","0:335:2927"],"impls":["0:166","a:2:35621:250-0:330:2551","a:2:3371:262-0:330:2551","a:2:3406:4733-0:330:2551","a:2:35679:4577-0:330:2551","a:2:45500:10756-0:330:2551","a:2:45501:10958-0:330:2551","b:2:2829-0:330:2551","b:2:2832-0:330:2551","b:2:2887-0:330:2551","b:2:3144-0:330:2551","b:2:3148-0:330:2551","b:2:3154-0:330:2551","b:2:3159-0:330:2551","b:2:4016-0:330:2551","b:5:814-0:330:2551","0:338","0:340","0:162","0:164"]}}},"0:322:3755":{"id":"0:322:3755","crate_id":0,"name":"word_separator","span":{"filename":"src/options.rs","begin":[28,4],"end":[28,37]},"visibility":"public","docs":"The line breaking algorithm to use, see the [`WordSeparator`]\ntrait for an overview and possible implementations.","links":{"`WordSeparator`":"0:330:2551"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,29],"end":[238,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:35623:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:814-0:246:3011":{"id":"b:5:814-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:810:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:816:4247","5:817:4248","5:818:4895"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,29],"end":[7,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:35623:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:25:2730":{"id":"0:25:2730","crate_id":0,"name":"width","span":{"filename":"src/core.rs","begin":[330,4],"end":[332,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213-0:271:2553":{"id":"0:213-0:271:2553","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[235,0],"end":[235,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"wrap_algorithms::WrapAlgorithm","name":"WrapAlgorithm","id":"0:271:2553","glob":false}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[122,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10767:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:814-0:271:2553":{"id":"b:5:814-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:810:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:816:4247","5:817:4248","5:818:4895"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3158:1863":{"id":"2:3158:1863","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:45672:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:814-0:287:2548":{"id":"b:5:814-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:810:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:816:4247","5:817:4248","5:818:4895"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:200-0:107:2537":{"id":"0:200-0:107:2537","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[225,15],"end":[225,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"fill::fill","name":"fill","id":"0:107:2537","glob":false}}},"0:262:3010":{"id":"0:262:3010","crate_id":0,"name":"OverflowError","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[186,0],"end":[186,25]},"visibility":"public","docs":"Overflow error during the [`wrap_optimal_fit`] computation.","links":{"`wrap_optimal_fit`":"0:65:3009"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:2:35621:250-0:262:3010","a:2:3371:262-0:262:3010","a:2:3406:4733-0:262:3010","a:2:35679:4577-0:262:3010","a:2:45500:10756-0:262:3010","a:2:45501:10958-0:262:3010","b:2:2829-0:262:3010","b:2:2832-0:262:3010","b:2:3144-0:262:3010","b:2:3148-0:262:3010","b:2:3154-0:262:3010","b:2:3159-0:262:3010","b:2:4016-0:262:3010","b:5:6115-0:262:3010","0:264","0:266","0:267","0:269","0:62","0:64"]}}},"0:107:2537":{"id":"0:107:2537","crate_id":0,"name":"fill","span":{"filename":"src/fill.rs","begin":[36,0],"end":[47,1]},"visibility":"public","docs":"Fill a line of text at a given width.\n\nThe result is a [`String`], complete with newlines between each\nline. Use [`wrap()`] if you need access to the individual lines.\n\nThe easiest way to use this function is to pass an integer for\n`width_or_options`:\n\n```\nuse textwrap::fill;\n\nassert_eq!(\n    fill(\"Memory safety without garbage collection.\", 15),\n    \"Memory safety\\nwithout garbage\\ncollection.\"\n);\n```\n\nIf you need to customize the wrapping, you can pass an [`Options`]\ninstead of an `usize`:\n\n```\nuse textwrap::{fill, Options};\n\nlet options = Options::new(15)\n    .initial_indent(\"- \")\n    .subsequent_indent(\"  \");\nassert_eq!(\n    fill(\"Memory safety without garbage collection.\", &options),\n    \"- Memory safety\\n  without\\n  garbage\\n  collection.\"\n);\n```","links":{"`wrap()`":"0:190:2543","`Options`":"0:314:2549","`String`":"5:7944:258"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["width_or_options",{"generic":"Opt"}]],"output":{"resolved_path":{"name":"String","id":"5:7944:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:35621:250-0:271:2553":{"id":"a:2:35621:250-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35621:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,29],"end":[238,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:232:727"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3406:4733-0:262:3010":{"id":"a:2:3406:4733-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3406:4733","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:13:2811":{"id":"0:13:2811","crate_id":0,"name":"penalty_width","span":{"filename":"src/core.rs","begin":[231,4],"end":[231,35]},"visibility":"default","docs":"Displayed width of the penalty that must be inserted if the\nword falls at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:35679:4577-0:287:2548":{"id":"a:2:35679:4577-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:35679:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:45501:10958-0:314:2549":{"id":"a:2:45501:10958-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45501:10958","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3159-0:236:2552":{"id":"b:2:3159-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3162:150","2:3163:1861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:45500:10756-0:246:3011":{"id":"a:2:45500:10756-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45500:10756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[18,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:120:355"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[92,0],"end":[120,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:78:727"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2832-0:271:2553":{"id":"b:2:2832-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2826:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2834:3298"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3148-0:271:2553":{"id":"b:2:3148-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3150:862"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3406:4733-0:314:2549":{"id":"a:2:3406:4733-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3406:4733","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:212-0:190:2543":{"id":"0:212-0:190:2543","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[234,0],"end":[234,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"wrap::wrap","name":"wrap","id":"0:190:2543","glob":false}}},"b:2:3148-0:287:2548":{"id":"b:2:3148-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3150:862"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2832-0:287:2548":{"id":"b:2:2832-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2826:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2834:3298"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:288:3718":{"id":"0:288:3718","crate_id":0,"name":"CRLF","span":{"filename":"src/line_ending.rs","begin":[12,4],"end":[12,8]},"visibility":"default","docs":"_Carriage return and line feed_ – a line ending sequence\nhistorically used in Windows. Corresponds to the sequence\nof ASCII control characters `0x0D 0x0A` or `\\r\\n`","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:4016-0:287:2548":{"id":"b:2:4016-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4014:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4018:1876"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:2554":{"id":"0:0:2554","crate_id":0,"name":"textwrap","span":{"filename":"src/lib.rs","begin":[1,0],"end":[235,39]},"visibility":"public","docs":"The textwrap library provides functions for word wrapping and\nindenting text.\n\n# Wrapping Text\n\nWrapping text can be very useful in command-line programs where\nyou want to format dynamic output nicely so it looks good in a\nterminal. A quick example:\n\n```\n# #[cfg(feature = \"smawk\")] {\nlet text = \"textwrap: a small library for wrapping text.\";\nassert_eq!(textwrap::wrap(text, 18),\n           vec![\"textwrap: a\",\n                \"small library for\",\n                \"wrapping text.\"]);\n# }\n```\n\nThe [`wrap()`] function returns the individual lines, use\n[`fill()`] is you want the lines joined with `'\\n'` to form a\n`String`.\n\nIf you enable the `hyphenation` Cargo feature, you can get\nautomatic hyphenation for a number of languages:\n\n```\n#[cfg(feature = \"hyphenation\")] {\nuse hyphenation::{Language, Load, Standard};\nuse textwrap::{wrap, Options, WordSplitter};\n\nlet text = \"textwrap: a small library for wrapping text.\";\nlet dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();\nlet options = Options::new(18).word_splitter(WordSplitter::Hyphenation(dictionary));\nassert_eq!(wrap(text, &options),\n           vec![\"textwrap: a small\",\n                \"library for wrap-\",\n                \"ping text.\"]);\n}\n```\n\nSee also the [`unfill()`] and [`refill()`] functions which allow\nyou to manipulate already wrapped text.\n\n## Wrapping Strings at Compile Time\n\nIf your strings are known at compile time, please take a look at\nthe procedural macros from the [textwrap-macros] crate.\n\n## Displayed Width vs Byte Size\n\nTo word wrap text, one must know the width of each word so one can\nknow when to break lines. This library will by default measure the\nwidth of text using the _displayed width_, not the size in bytes.\nThe `unicode-width` Cargo feature controls this.\n\nThis is important for non-ASCII text. ASCII characters such as `a`\nand `!` are simple and take up one column each. This means that\nthe displayed width is equal to the string length in bytes.\nHowever, non-ASCII characters and symbols take up more than one\nbyte when UTF-8 encoded: `é` is `0xc3 0xa9` (two bytes) and `⚙` is\n`0xe2 0x9a 0x99` (three bytes) in UTF-8, respectively.\n\nThis is why we take care to use the displayed width instead of the\nbyte count when computing line lengths. All functions in this\nlibrary handle Unicode characters like this when the\n`unicode-width` Cargo feature is enabled (it is enabled by\ndefault).\n\n# Indentation and Dedentation\n\nThe textwrap library also offers functions for adding a prefix to\nevery line of a string and to remove leading whitespace. As an\nexample, [`indent()`] allows you to turn lines of text into a\nbullet list:\n\n```\nlet before = \"\\\nfoo\nbar\nbaz\n\";\nlet after = \"\\\n* foo\n* bar\n* baz\n\";\nassert_eq!(textwrap::indent(before, \"* \"), after);\n```\n\nRemoving leading whitespace is done with [`dedent()`]:\n\n```\nlet before = \"\n    Some\n      indented\n        text\n\";\nlet after = \"\nSome\n  indented\n    text\n\";\nassert_eq!(textwrap::dedent(before), after);\n```\n\n# Cargo Features\n\nThe textwrap library can be slimmed down as needed via a number of\nCargo features. This means you only pay for the features you\nactually use.\n\nThe full dependency graph, where dashed lines indicate optional\ndependencies, is shown below:\n\n<img src=\"https://raw.githubusercontent.com/mgeisler/textwrap/master/images/textwrap-0.16.1.svg\">\n\n## Default Features\n\nThese features are enabled by default:\n\n* `unicode-linebreak`: enables finding words using the\n  [unicode-linebreak] crate, which implements the line breaking\n  algorithm described in [Unicode Standard Annex\n  #14](https://www.unicode.org/reports/tr14/).\n\n  This feature can be disabled if you are happy to find words\n  separated by ASCII space characters only. People wrapping text\n  with emojis or East-Asian characters will want most likely want\n  to enable this feature. See [`WordSeparator`] for details.\n\n* `unicode-width`: enables correct width computation of non-ASCII\n  characters via the [unicode-width] crate. Without this feature,\n  every [`char`] is 1 column wide, except for emojis which are 2\n  columns wide. See [`core::display_width()`] for details.\n\n  This feature can be disabled if you only need to wrap ASCII\n  text, or if the functions in [`core`] are used directly with\n  [`core::Fragment`]s for which the widths have been computed in\n  other ways.\n\n* `smawk`: enables linear-time wrapping of the whole paragraph via\n  the [smawk] crate. See [`wrap_algorithms::wrap_optimal_fit()`]\n  for details on the optimal-fit algorithm.\n\n  This feature can be disabled if you only ever intend to use\n  [`wrap_algorithms::wrap_first_fit()`].\n\n<!-- begin binary-sizes -->\n\nWith Rust 1.64.0, the size impact of the above features on your\nbinary is as follows:\n\n| Configuration                            |  Binary Size |    Delta |\n| :---                                     |         ---: |     ---: |\n| quick-and-dirty implementation           |       289 KB |     — KB |\n| textwrap without default features        |       305 KB |    16 KB |\n| textwrap with smawk                      |       317 KB |    28 KB |\n| textwrap with unicode-width              |       309 KB |    20 KB |\n| textwrap with unicode-linebreak          |       342 KB |    53 KB |\n\n<!-- end binary-sizes -->\n\nThe above sizes are the stripped sizes and the binary is compiled\nin release mode with this profile:\n\n```toml\n[profile.release]\nlto = true\ncodegen-units = 1\n```\n\nSee the [binary-sizes demo] if you want to reproduce these\nresults.\n\n## Optional Features\n\nThese Cargo features enable new functionality:\n\n* `terminal_size`: enables automatic detection of the terminal\n  width via the [terminal_size] crate. See\n  [`Options::with_termwidth()`] for details.\n\n* `hyphenation`: enables language-sensitive hyphenation via the\n  [hyphenation] crate. See the [`word_splitters::WordSplitter`]\n  trait for details.\n\n[unicode-linebreak]: https://docs.rs/unicode-linebreak/\n[unicode-width]: https://docs.rs/unicode-width/\n[smawk]: https://docs.rs/smawk/\n[binary-sizes demo]: https://github.com/mgeisler/textwrap/tree/master/examples/binary-sizes\n[textwrap-macros]: https://docs.rs/textwrap-macros/\n[terminal_size]: https://docs.rs/terminal_size/\n[hyphenation]: https://docs.rs/hyphenation/","links":{"`dedent()`":"0:115:2546","`refill()`":"0:156:2540","`char`":"1:12765:494","`word_splitters::WordSplitter`":"0:236:2552","`wrap_algorithms::wrap_optimal_fit()`":"0:65:3009","`WordSeparator`":"0:330:2551","`wrap_algorithms::wrap_first_fit()`":"0:90:3077","`wrap()`":"0:190:2543","`core::Fragment`":"0:10:2804","`core::display_width()`":"0:9:2794","`unfill()`":"0:155:2550","`core`":"0:3:587","`indent()`":"0:114:2547","`fill()`":"0:107:2537"},"attrs":["#![doc(html_root_url = \"https://docs.rs/textwrap/0.16.1\")]","#![forbid(unsafe_code)]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![allow(clippy::redundant_field_names)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3:587","0:31:2534","0:48:2535","0:198-0:98:2544","0:200-0:107:2537","0:201-0:111:2545","0:203-0:115:2546","0:204-0:114:2547","0:205-0:287:2548","0:206-0:314:2549","0:208-0:156:2540","0:209-0:155:2550","0:210-0:330:2551","0:211-0:236:2552","0:212-0:190:2543","0:213-0:271:2553"],"is_stripped":false}}},"a:2:35621:250-0:314:2549":{"id":"a:2:35621:250-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35621:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10767:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:326:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:287:2548":{"id":"0:287:2548","crate_id":0,"name":"LineEnding","span":{"filename":"src/line_ending.rs","begin":[8,0],"end":[16,1]},"visibility":"public","docs":"Supported line endings. Like in the Rust standard library, two line\nendings are supported: `\\r\\n` and `\\n`","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:288:3718","0:290:3721"],"impls":["0:119","a:2:35621:250-0:287:2548","a:2:3371:262-0:287:2548","a:2:3406:4733-0:287:2548","a:2:35679:4577-0:287:2548","a:2:45500:10756-0:287:2548","a:2:45501:10958-0:287:2548","b:2:2829-0:287:2548","b:2:2832-0:287:2548","b:2:2887-0:287:2548","b:2:3144-0:287:2548","b:2:3148-0:287:2548","b:2:3154-0:287:2548","b:2:3159-0:287:2548","b:2:4016-0:287:2548","b:5:814-0:287:2548","0:292","0:294","0:295","0:297","0:298","0:300"]}}},"2:3157:150":{"id":"2:3157:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:36:832":{"id":"0:36:832","crate_id":0,"name":"fmt","span":{"filename":"src/word_splitters.rs","begin":[102,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:10734:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:10715:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,9],"end":[238,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10767:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:222:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[36,9],"end":[36,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:245:498"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:53:1215":{"id":"0:53:1215","crate_id":0,"name":"new","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[141,4],"end":[149,5]},"visibility":"public","docs":"Default penalties for monospace text.\n\nThe penalties here work well for monospace text. This is\nbecause they expect the gaps at the end of lines to be roughly\nin the range `0..100`. If the gaps are larger, the\n`overflow_penalty` and `hyphen_penalty` become insignificant.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:727":{"id":"0:259:727","crate_id":0,"name":"eq","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,29],"end":[22,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:3552":{"id":"0:331:3552","crate_id":0,"name":"AsciiSpace","span":{"filename":"src/word_separators.rs","begin":[55,4],"end":[55,14]},"visibility":"default","docs":"Find words by splitting on runs of `' '` characters.\n\n# Examples\n\n```\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::AsciiSpace;\n\nlet words = AsciiSpace.find_words(\"Hello   World!\").collect::<Vec<_>>();\nassert_eq!(words, vec![Word::from(\"Hello   \"),\n                       Word::from(\"World!\")]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:12:2808":{"id":"0:12:2808","crate_id":0,"name":"whitespace_width","span":{"filename":"src/core.rs","begin":[227,4],"end":[227,38]},"visibility":"default","docs":"Displayed width of the whitespace that must follow the word\nwhen the word is not at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:145:3755":{"id":"0:145:3755","crate_id":0,"name":"word_separator","span":{"filename":"src/options.rs","begin":[224,4],"end":[229,5]},"visibility":"public","docs":"Change [`self.word_separator`].\n\nSee the [`WordSeparator`] trait for details on the choices.\n\n[`self.word_separator`]: #structfield.word_separator","links":{"`WordSeparator`":"0:330:2551"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["word_separator",{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:339:498":{"id":"0:339:498","crate_id":0,"name":"clone","span":{"filename":"src/word_separators.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3371:262-0:262:3010":{"id":"a:2:3371:262-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3371:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:298":{"id":"0:298","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,29],"end":[7,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:299:727"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2832-0:314:2549":{"id":"b:2:2832-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2826:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2834:3298"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:155:2550":{"id":"0:155:2550","crate_id":0,"name":"unfill","span":{"filename":"src/refill.rs","begin":[62,0],"end":[114,1]},"visibility":"public","docs":"Unpack a paragraph of already-wrapped text.\n\nThis function attempts to recover the original text from a single\nparagraph of wrapped text, such as what [`fill()`] would produce.\nThis means that it turns\n\n```text\ntextwrap: a small\nlibrary for\nwrapping text.\n```\n\nback into\n\n```text\ntextwrap: a small library for wrapping text.\n```\n\nIn addition, it will recognize a common prefix and a common line\nending among the lines.\n\nThe prefix of the first line is returned in\n[`Options::initial_indent`] and the prefix (if any) of the the\nother lines is returned in [`Options::subsequent_indent`].\n\nLine ending is returned in [`Options::line_ending`]. If line ending\ncan not be confidently detected (mixed or no line endings in the\ninput), [`LineEnding::LF`] will be returned.\n\nIn addition to `' '`, the prefixes can consist of characters used\nfor unordered lists (`'-'`, `'+'`, and `'*'`) and block quotes\n(`'>'`) in Markdown as well as characters often used for inline\ncomments (`'#'` and `'/'`).\n\nThe text must come from a single wrapped paragraph. This means\nthat there can be no empty lines (`\"\\n\\n\"` or `\"\\r\\n\\r\\n\"`) within\nthe text. It is unspecified what happens if `unfill` is called on\nmore than one paragraph of text.\n\n# Examples\n\n```\nuse textwrap::{LineEnding, unfill};\n\nlet (text, options) = unfill(\"\\\n* This is an\n  example of\n  a list item.\n\");\n\nassert_eq!(text, \"This is an example of a list item.\\n\");\nassert_eq!(options.initial_indent, \"* \");\nassert_eq!(options.subsequent_indent, \"  \");\nassert_eq!(options.line_ending, LineEnding::LF);\n```","links":{"`Options::line_ending`":"0:140:2539","`Options::subsequent_indent`":"0:143:3747","`LineEnding::LF`":"0:290:3721","`Options::initial_indent`":"0:142:3505","`fill()`":"0:107:2537"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"tuple":[{"resolved_path":{"name":"String","id":"5:7944:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"crate::Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167:1215":{"id":"0:167:1215","crate_id":0,"name":"new","span":{"filename":"src/word_separators.rs","begin":[176,4],"end":[186,5]},"visibility":"public","docs":"Create a new word separator.\n\nThe best available algorithm is used by default, i.e.,\n[`WordSeparator::UnicodeBreakProperties`] if available,\notherwise [`WordSeparator::AsciiSpace`].","links":{"`WordSeparator::UnicodeBreakProperties`":"0:333:4031","`WordSeparator::AsciiSpace`":"0:331:3552"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208-0:156:2540":{"id":"0:208-0:156:2540","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[229,17],"end":[229,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"refill::refill","name":"refill","id":"0:156:2540","glob":false}}},"a:2:35621:250-0:236:2552":{"id":"a:2:35621:250-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35621:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,40],"end":[238,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:45501:10958-0:262:3010":{"id":"a:2:45501:10958-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45501:10958","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:290:3721":{"id":"0:290:3721","crate_id":0,"name":"LF","span":{"filename":"src/line_ending.rs","begin":[15,4],"end":[15,6]},"visibility":"default","docs":"_Line feed_ – a line ending historically used in Unix.\n Corresponds to the ASCII control character `0x0A` or `\\n`","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2831:3300":{"id":"2:2831:3300","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:14":{"id":"0:14","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[250,0],"end":[256,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3607:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:15:264","0:16:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:321:3582":{"id":"0:321:3582","crate_id":0,"name":"wrap_algorithm","span":{"filename":"src/options.rs","begin":[25,4],"end":[25,37]},"visibility":"public","docs":"Wrapping algorithm to use, see the implementations of the\n[`WrapAlgorithm`] trait for details.","links":{"`WrapAlgorithm`":"0:271:2553"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:4016-0:314:2549":{"id":"b:2:4016-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4014:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4018:1876"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3154-0:214:2815":{"id":"b:2:3154-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3124:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3157:150","2:3158:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:146:3582":{"id":"0:146:3582","crate_id":0,"name":"wrap_algorithm","span":{"filename":"src/options.rs","begin":[236,4],"end":[241,5]},"visibility":"public","docs":"Change [`self.wrap_algorithm`].\n\nSee the [`WrapAlgorithm`] trait for details on the choices.\n\n[`self.wrap_algorithm`]: #structfield.wrap_algorithm","links":{"`WrapAlgorithm`":"0:271:2553"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["wrap_algorithm",{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:45501:10958-0:236:2552":{"id":"a:2:45501:10958-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45501:10958","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:209-0:155:2550":{"id":"0:209-0:155:2550","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[229,25],"end":[229,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"refill::unfill","name":"unfill","id":"0:155:2550","glob":false}}},"b:2:3148-0:262:3010":{"id":"b:2:3148-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3150:862"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[194,0],"end":[194,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","description","type_id","cause","source"],"trait":{"name":"Error","id":"2:3207:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2834:3298":{"id":"2:2834:3298","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277:2927":{"id":"0:277:2927","crate_id":0,"name":"Custom","span":{"filename":"src/wrap_algorithms.rs","begin":[89,4],"end":[89,98]},"visibility":"default","docs":"Custom wrapping function.\n\nUse this if you want to implement your own wrapping algorithm.\nThe function can freely decide how to turn a slice of\n[`Word`]s into lines.\n\n# Example\n\n```\nuse textwrap::core::Word;\nuse textwrap::{wrap, Options, WrapAlgorithm};\n\nfn stair<'a, 'b>(words: &'b [Word<'a>], _: &'b [usize]) -> Vec<&'b [Word<'a>]> {\n    let mut lines = Vec::new();\n    let mut step = 1;\n    let mut start_idx = 0;\n    while start_idx + step <= words.len() {\n      lines.push(&words[start_idx .. start_idx+step]);\n      start_idx += step;\n      step += 1;\n    }\n    lines\n}\n\nlet options = Options::new(10).wrap_algorithm(WrapAlgorithm::Custom(stair));\nassert_eq!(wrap(\"First, second, third, fourth, fifth, sixth\", options),\n           vec![\"First,\",\n                \"second, third,\",\n                \"fourth, fifth, sixth\"]);\n```","links":{"`Word`":"0:214:2815"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:279:2037"]},"discriminant":null}}},"0:279:2037":{"id":"0:279:2037","crate_id":0,"name":"0","span":{"filename":"src/wrap_algorithms.rs","begin":[89,11],"end":[89,97]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"function_pointer":{"decl":{"inputs":[["words",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"resolved_path":{"name":"crate::core::Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}],["line_widths",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"usize"}}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7362:281","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"resolved_path":{"name":"crate::core::Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}},"b:2:2829-0:214:2815":{"id":"b:2:2829-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2823:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2831:3300"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2829-0:271:2553":{"id":"b:2:2829-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2823:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2831:3300"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3163:1861":{"id":"2:3163:1861","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:45672:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,27],"end":[185,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:43:2968":{"id":"0:43:2968","crate_id":0,"name":"split_words","span":{"filename":"src/word_splitters.rs","begin":[181,0],"end":[218,1]},"visibility":"public","docs":"Split words into smaller words according to the split points given\nby `word_splitter`.\n\nNote that we split all words, regardless of their length. This is\nto more cleanly separate the business of splitting (including\nautomatic hyphenation) from the business of word wrapping.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["words",{"generic":"I"}],["word_splitter",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8584:190","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8411:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"crate::core::Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:832":{"id":"0:165:832","crate_id":0,"name":"fmt","span":{"filename":"src/word_separators.rs","begin":[160,4],"end":[167,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:10734:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:10715:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198-0:98:2544":{"id":"0:198-0:98:2544","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[224,0],"end":[224,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"columns::wrap_columns","name":"wrap_columns","id":"0:98:2544","glob":false}}},"0:65:3009":{"id":"0:65:3009","crate_id":0,"name":"wrap_optimal_fit","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[302,0],"end":[389,1]},"visibility":"public","docs":"Wrap abstract fragments into lines with an optimal-fit algorithm.\n\nThe `line_widths` slice gives the target line width for each line\n(the last slice element is repeated as necessary). This can be\nused to implement hanging indentation.\n\nThe fragments must already have been split into the desired\nwidths, this function will not (and cannot) attempt to split them\nfurther when arranging them into lines.\n\n# Optimal-Fit Algorithm\n\nThe algorithm considers all possible break points and picks the\nbreaks which minimizes the gaps at the end of each line. More\nprecisely, the algorithm assigns a cost or penalty to each break\npoint, determined by `cost = gap * gap` where `gap = target_width -\nline_width`. Shorter lines are thus penalized more heavily since\nthey leave behind a larger gap.\n\nWe can illustrate this with the text “To be, or not to be: that is\nthe question”. We will be wrapping it in a narrow column with room\nfor only 10 characters. The [greedy\nalgorithm](super::wrap_first_fit) will produce these lines, each\nannotated with the corresponding penalty:\n\n```text\n\"To be, or\"   1² =  1\n\"not to be:\"  0² =  0\n\"that is\"     3² =  9\n\"the\"         7² = 49\n\"question\"    2² =  4\n```\n\nWe see that line four with “the” leaves a gap of 7 columns, which\ngives it a penalty of 49. The sum of the penalties is 63.\n\nThere are 10 words, which means that there are `2_u32.pow(9)` or\n512 different ways to typeset it. We can compute\nthe sum of the penalties for each possible line break and search\nfor the one with the lowest sum:\n\n```text\n\"To be,\"     4² = 16\n\"or not to\"  1² =  1\n\"be: that\"   2² =  4\n\"is the\"     4² = 16\n\"question\"   2² =  4\n```\n\nThe sum of the penalties is 41, which is better than what the\ngreedy algorithm produced.\n\nSearching through all possible combinations would normally be\nprohibitively slow. However, it turns out that the problem can be\nformulated as the task of finding column minima in a cost matrix.\nThis matrix has a special form (totally monotone) which lets us\nuse a [linear-time algorithm called\nSMAWK](https://lib.rs/crates/smawk) to find the optimal break\npoints.\n\nThis means that the time complexity remains O(_n_) where _n_ is\nthe number of words. Compared to\n[`wrap_first_fit()`](super::wrap_first_fit), this function is\nabout 4 times slower.\n\nThe optimization of per-line costs over the entire paragraph is\ninspired by the line breaking algorithm used in TeX, as described\nin the 1981 article [_Breaking Paragraphs into\nLines_](http://www.eprg.org/G53DOC/pdfs/knuth-plass-breaking.pdf)\nby Knuth and Plass. The implementation here is based on [Python\ncode by David\nEppstein](https://github.com/jfinkels/PADS/blob/master/pads/wrap.py).\n\n# Errors\n\nIn case of an overflow during the cost computation, an `Err` is\nreturned. Overflows happens when fragments or lines have infinite\nwidths (`f64::INFINITY`) or if the widths are so large that the\ngaps at the end of lines have sizes larger than `f64::MAX.sqrt()`\n(approximately 1e154):\n\n```\nuse textwrap::core::Fragment;\nuse textwrap::wrap_algorithms::{wrap_optimal_fit, OverflowError, Penalties};\n\n#[derive(Debug, PartialEq)]\nstruct Word(f64);\n\nimpl Fragment for Word {\n    fn width(&self) -> f64 { self.0 }\n    fn whitespace_width(&self) -> f64 { 1.0 }\n    fn penalty_width(&self) -> f64 { 0.0 }\n}\n\n// Wrapping overflows because 1e155 * 1e155 = 1e310, which is\n// larger than f64::MAX:\nassert_eq!(wrap_optimal_fit(&[Word(0.0), Word(0.0)], &[1e155], &Penalties::default()),\n           Err(OverflowError));\n```\n\nWhen using fragment widths and line widths which fit inside an\n`u64`, overflows cannot happen. This means that fragments derived\nfrom a `&str` cannot cause overflows.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"super::wrap_first_fit":"0:90:3077"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fragments",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"generic":"T"}}}}],["line_widths",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"f64"}}}}],["penalties",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:45672:239","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:7362:281","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"generic":"T"}}}}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fragment","id":"0:10:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3144-0:246:3011":{"id":"b:2:3144-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3147:3442"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:218:2822":{"id":"0:218:2822","crate_id":0,"name":"penalty","span":{"filename":"src/core.rs","begin":[245,4],"end":[245,24]},"visibility":"public","docs":"Penalty string to insert if the word falls at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"b:2:2887-0:214:2815":{"id":"b:2:2887-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2885:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2889:29552"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:45501:10958-0:271:2553":{"id":"a:2:45501:10958-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45501:10958","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2832-0:330:2551":{"id":"b:2:2832-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2826:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2834:3298"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3159-0:330:2551":{"id":"b:2:3159-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3162:150","2:3163:1861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:6115-0:262:3010":{"id":"b:5:6115-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10772:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6113:266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6117:1836"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:45500:10756-0:271:2553":{"id":"a:2:45500:10756-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45500:10756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:232:727":{"id":"0:232:727","crate_id":0,"name":"eq","span":{"filename":"src/core.rs","begin":[238,29],"end":[238,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,9],"end":[185,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10767:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:201-0:111:2545":{"id":"0:201-0:111:2545","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[225,21],"end":[225,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"fill::fill_inplace","name":"fill_inplace","id":"0:111:2545","glob":false}}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,9],"end":[22,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:253:498"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:35679:4577-0:236:2552":{"id":"a:2:35679:4577-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:35679:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2887-0:287:2548":{"id":"b:2:2887-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2885:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2889:29552"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3371:262-0:287:2548":{"id":"a:2:3371:262-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3371:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:6117:1836":{"id":"5:6117:1836","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7944:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:326:832":{"id":"0:326:832","crate_id":0,"name":"fmt","span":{"filename":"src/options.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10734:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10715:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:818:4895":{"id":"5:818:4895","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3154-0:262:3010":{"id":"b:2:3154-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3124:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3157:150","2:3158:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:245:498":{"id":"0:245:498","crate_id":0,"name":"clone","span":{"filename":"src/word_splitters.rs","begin":[36,9],"end":[36,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[188,0],"end":[192,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10772:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:236:2552":{"id":"0:236:2552","crate_id":0,"name":"WordSplitter","span":{"filename":"src/word_splitters.rs","begin":[37,0],"end":[99,1]},"visibility":"public","docs":"The `WordSplitter` enum describes where words can be split.\n\nIf the textwrap crate has been compiled with the `hyphenation`\nCargo feature enabled, you will find a\n[`WordSplitter::Hyphenation`] variant. Use this struct for\nlanguage-aware hyphenation:\n\n```\n#[cfg(feature = \"hyphenation\")] {\n    use hyphenation::{Language, Load, Standard};\n    use textwrap::{wrap, Options, WordSplitter};\n\n    let text = \"Oxidation is the loss of electrons.\";\n    let dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();\n    let options = Options::new(8).word_splitter(WordSplitter::Hyphenation(dictionary));\n    assert_eq!(wrap(text, &options), vec![\"Oxida-\",\n                                          \"tion is\",\n                                          \"the loss\",\n                                          \"of elec-\",\n                                          \"trons.\"]);\n}\n```\n\nPlease see the documentation for the [hyphenation] crate for more\ndetails.\n\n[hyphenation]: https://docs.rs/hyphenation/","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:237:2908","0:239:2918","0:241:2927"],"impls":["0:39","a:2:35621:250-0:236:2552","a:2:3371:262-0:236:2552","a:2:3406:4733-0:236:2552","a:2:35679:4577-0:236:2552","a:2:45500:10756-0:236:2552","a:2:45501:10958-0:236:2552","b:2:2829-0:236:2552","b:2:2832-0:236:2552","b:2:2887-0:236:2552","b:2:3144-0:236:2552","b:2:3148-0:236:2552","b:2:3154-0:236:2552","b:2:3159-0:236:2552","b:2:4016-0:236:2552","b:5:814-0:236:2552","0:244","0:35","0:37"]}}},"b:2:3144-0:314:2549":{"id":"b:2:3144-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3147:3442"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3154-0:287:2548":{"id":"b:2:3154-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3124:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3157:150","2:3158:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:817:4248":{"id":"5:817:4248","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[125,0],"end":[157,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:163:727"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:210-0:330:2551":{"id":"0:210-0:330:2551","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[232,0],"end":[232,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"word_separators::WordSeparator","name":"WordSeparator","id":"0:330:2551","glob":false}}},"0:16:656":{"id":"0:16:656","crate_id":0,"name":"deref","span":{"filename":"src/core.rs","begin":[253,4],"end":[255,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3607:128","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[127,0],"end":[173,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:40:2949"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2832-0:214:2815":{"id":"b:2:2832-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2826:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2834:3298"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:10:2804":{"id":"0:10:2804","crate_id":0,"name":"Fragment","span":{"filename":"src/core.rs","begin":[221,0],"end":[232,1]},"visibility":"public","docs":"A (text) fragment denotes the unit which we wrap into lines.\n\nFragments represent an abstract _word_ plus the _whitespace_\nfollowing the word. In case the word falls at the end of the line,\nthe whitespace is dropped and a so-called _penalty_ is inserted\ninstead (typically `\"-\"` if the word was hyphenated).\n\nFor wrapping purposes, the precise content of the word, the\nwhitespace, and the penalty is irrelevant. All we need to know is\nthe displayed width of each part, which this trait provides.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:11:2730","0:12:2808","0:13:2811"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"std::fmt::Debug","id":"2:10767:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:24"]}}},"0:249:3278":{"id":"0:249:3278","crate_id":0,"name":"short_last_line_fraction","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[123,4],"end":[123,39]},"visibility":"public","docs":"When should the a single word on the last line be considered\n\"too short\"?\n\nIf the last line of the text consist of a single word and if\nthis word is shorter than `1 / short_last_line_fraction` of\nthe line width, then the final line will be considered \"short\"\nand `short_last_line_penalty` is added as an extra penalty.\n\nThe effect of this is to avoid a final line consisting of a\nsingle small word. For example, with a\n`short_last_line_penalty` of 25 (the default), a gap of up to\n5 columns will be seen as more desirable than having a final\nshort line.\n\n## Examples\n\n```\nuse textwrap::{wrap, wrap_algorithms, Options, WrapAlgorithm};\n\nlet text = \"This is a demo of the short last line penalty.\";\n\n// The first-fit algorithm leaves a single short word on the last line:\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::FirstFit)),\n           vec![\"This is a demo of the short last line\",\n                \"penalty.\"]);\n\n#[cfg(feature = \"smawk\")] {\nlet mut penalties = wrap_algorithms::Penalties::new();\n\n// Since \"penalty.\" is shorter than 25% of the line width, the\n// optimal-fit algorithm adds a penalty of 25. This is enough\n// to move \"line \" down:\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::OptimalFit(penalties))),\n           vec![\"This is a demo of the short last\",\n                \"line penalty.\"]);\n\n// We can change the meaning of \"short\" lines. Here, only words\n// shorter than 1/10th of the line width will be considered short:\npenalties.short_last_line_fraction = 10;\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::OptimalFit(penalties))),\n           vec![\"This is a demo of the short last line\",\n                \"penalty.\"]);\n\n// If desired, the penalty can also be disabled:\npenalties.short_last_line_fraction = 4;\npenalties.short_last_line_penalty = 0;\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::OptimalFit(penalties))),\n           vec![\"This is a demo of the short last line\",\n                \"penalty.\"]);\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:45500:10756-0:262:3010":{"id":"a:2:45500:10756-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45500:10756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:115:2546":{"id":"0:115:2546","crate_id":0,"name":"dedent","span":{"filename":"src/indentation.rs","begin":[95,0],"end":[150,1]},"visibility":"public","docs":"Removes common leading whitespace from each line.\n\nThis function will look at each non-empty line and determine the\nmaximum amount of whitespace that can be removed from all lines:\n\n```\nuse textwrap::dedent;\n\nassert_eq!(dedent(\"\n    1st line\n      2nd line\n    3rd line\n\"), \"\n1st line\n  2nd line\n3rd line\n\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7944:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:35621:250-0:330:2551":{"id":"a:2:35621:250-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35621:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,16],"end":[22,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3366:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:45500:10756-0:330:2551":{"id":"a:2:45500:10756-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45500:10756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:35679:4577-0:214:2815":{"id":"a:2:35679:4577-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:35679:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,29],"end":[22,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:259:727"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:296:832":{"id":"0:296:832","crate_id":0,"name":"fmt","span":{"filename":"src/line_ending.rs","begin":[7,22],"end":[7,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10734:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10715:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,16],"end":[185,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:35623:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:45500:10756-0:287:2548":{"id":"a:2:45500:10756-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45500:10756","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2887-0:314:2549":{"id":"b:2:2887-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2885:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2889:29552"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:4016-0:246:3011":{"id":"b:2:4016-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4014:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4018:1876"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:268:727":{"id":"0:268:727","crate_id":0,"name":"eq","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,16],"end":[185,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:2534":{"id":"0:31:2534","crate_id":0,"name":"word_splitters","span":{"filename":"src/word_splitters.rs","begin":[1,0],"end":[314,1]},"visibility":"public","docs":"Word splitting functionality.\n\nTo wrap text into lines, long words sometimes need to be split\nacross lines. The [`WordSplitter`] enum defines this\nfunctionality.","links":{"`WordSplitter`":"0:236:2552"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:236:2552","0:43:2968"],"is_stripped":false}}},"0:156:2540":{"id":"0:156:2540","crate_id":0,"name":"refill","span":{"filename":"src/refill.rs","begin":[169,0],"end":[188,1]},"visibility":"public","docs":"Refill a paragraph of wrapped text with a new width.\n\nThis function will first use [`unfill()`] to remove newlines from\nthe text. Afterwards the text is filled again using [`fill()`].\n\nThe `new_width_or_options` argument specify the new width and can\nspecify other options as well — except for\n[`Options::initial_indent`] and [`Options::subsequent_indent`],\nwhich are deduced from `filled_text`.\n\n# Examples\n\n```\nuse textwrap::refill;\n\n// Some loosely wrapped text. The \"> \" prefix is recognized automatically.\nlet text = \"\\\n> Memory\n> safety without garbage\n> collection.\n\";\n\nassert_eq!(refill(text, 20), \"\\\n> Memory safety\n> without garbage\n> collection.\n\");\n\nassert_eq!(refill(text, 40), \"\\\n> Memory safety without garbage\n> collection.\n\");\n\nassert_eq!(refill(text, 60), \"\\\n> Memory safety without garbage collection.\n\");\n```\n\nYou can also reshape bullet points:\n\n```\nuse textwrap::refill;\n\nlet text = \"\\\n- This is my\n  list item.\n\";\n\nassert_eq!(refill(text, 20), \"\\\n- This is my list\n  item.\n\");\n```","links":{"`unfill()`":"0:155:2550","`Options::subsequent_indent`":"0:143:3747","`Options::initial_indent`":"0:142:3505","`fill()`":"0:107:2537"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["filled_text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["new_width_or_options",{"generic":"Opt"}]],"output":{"resolved_path":{"name":"String","id":"5:7944:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2829-0:330:2551":{"id":"b:2:2829-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2823:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2831:3300"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3159-0:314:2549":{"id":"b:2:3159-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3162:150","2:3163:1861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3148-0:246:3011":{"id":"b:2:3148-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3150:862"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:55:60":{"id":"0:55:60","crate_id":0,"name":"default","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[153,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[159,0],"end":[168,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10767:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:165:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:37":{"id":"0:37","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[113,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:38:727"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:78:727":{"id":"0:78:727","crate_id":0,"name":"eq","span":{"filename":"src/wrap_algorithms.rs","begin":[112,4],"end":[119,5]},"visibility":"default","docs":"Compare two wrap algorithms.\n\n```\nuse textwrap::WrapAlgorithm;\n\nassert_eq!(WrapAlgorithm::FirstFit, WrapAlgorithm::FirstFit);\n#[cfg(feature = \"smawk\")] {\n    assert_eq!(WrapAlgorithm::new_optimal_fit(), WrapAlgorithm::new_optimal_fit());\n}\n```\n\nNote that `WrapAlgorithm::Custom` values never compare equal:\n\n```\nuse textwrap::WrapAlgorithm;\n\nassert_ne!(WrapAlgorithm::Custom(|words, line_widths| vec![words]),\n           WrapAlgorithm::Custom(|words, line_widths| vec![words]));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:862":{"id":"0:136:862","crate_id":0,"name":"from","span":{"filename":"src/options.rs","begin":[51,4],"end":[53,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["width",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2887-0:330:2551":{"id":"b:2:2887-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2885:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2889:29552"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:35679:4577-0:246:3011":{"id":"a:2:35679:4577-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:35679:4577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:816:4247":{"id":"5:816:4247","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:3148-0:330:2551":{"id":"b:2:3148-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3150:862"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:40:2949":{"id":"0:40:2949","crate_id":0,"name":"split_points","span":{"filename":"src/word_splitters.rs","begin":[143,4],"end":[172,5]},"visibility":"public","docs":"Return all possible indices where `word` can be split.\n\nThe indices are in the range `0..word.len()`. They point to\nthe index _after_ the split point, i.e., after `-` if\nsplitting on hyphens. This way, `word.split_at(idx)` will\nbreak the word into two well-formed pieces.\n\n# Examples\n\n```\nuse textwrap::WordSplitter;\nassert_eq!(WordSplitter::NoHyphenation.split_points(\"cannot-be-split\"), vec![]);\nassert_eq!(WordSplitter::HyphenSplitter.split_points(\"can-be-split\"), vec![4, 7]);\nassert_eq!(WordSplitter::Custom(|word| vec![word.len()/2]).split_points(\"middle\"), vec![3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["word",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7362:281","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:11:2730":{"id":"0:11:2730","crate_id":0,"name":"width","span":{"filename":"src/core.rs","begin":[223,4],"end":[223,27]},"visibility":"default","docs":"Displayed width of word represented by this fragment.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3159-0:262:3010":{"id":"b:2:3159-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3162:150","2:3163:1861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:89:60":{"id":"0:89:60","crate_id":0,"name":"default","span":{"filename":"src/wrap_algorithms.rs","begin":[194,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:2544":{"id":"0:98:2544","crate_id":0,"name":"wrap_columns","span":{"filename":"src/columns.rs","begin":[63,0],"end":[114,1]},"visibility":"public","docs":"Wrap text into columns with a given total width.\n\nThe `left_gap`, `middle_gap` and `right_gap` arguments specify the\nstrings to insert before, between, and after the columns. The\ntotal width of all columns and all gaps is specified using the\n`total_width_or_options` argument. This argument can simply be an\ninteger if you want to use default settings when wrapping, or it\ncan be a [`Options`] value if you want to customize the wrapping.\n\nIf the columns are narrow, it is recommended to set\n[`Options::break_words`] to `true` to prevent words from\nprotruding into the margins.\n\nThe per-column width is computed like this:\n\n```\n# let (left_gap, middle_gap, right_gap) = (\"\", \"\", \"\");\n# let columns = 2;\n# let options = textwrap::Options::new(80);\nlet inner_width = options.width\n    - textwrap::core::display_width(left_gap)\n    - textwrap::core::display_width(right_gap)\n    - textwrap::core::display_width(middle_gap) * (columns - 1);\nlet column_width = inner_width / columns;\n```\n\nThe `text` is wrapped using [`wrap()`] and the given `options`\nargument, but the width is overwritten to the computed\n`column_width`.\n\n# Panics\n\nPanics if `columns` is zero.\n\n# Examples\n\n```\nuse textwrap::wrap_columns;\n\nlet text = \"\\\nThis is an example text, which is wrapped into three columns. \\\nNotice how the final column can be shorter than the others.\";\n\n#[cfg(feature = \"smawk\")]\nassert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),\n           vec![\"| This is       | into three    | column can be  |\",\n                \"| an example    | columns.      | shorter than   |\",\n                \"| text, which   | Notice how    | the others.    |\",\n                \"| is wrapped    | the final     |                |\"]);\n\n// Without the `smawk` feature, the middle column is a little more uneven:\n#[cfg(not(feature = \"smawk\"))]\nassert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),\n           vec![\"| This is an    | three         | column can be  |\",\n                \"| example text, | columns.      | shorter than   |\",\n                \"| which is      | Notice how    | the others.    |\",\n                \"| wrapped into  | the final     |                |\"]);","links":{"`Options::break_words`":"0:144:2847","`wrap()`":"0:190:2543","`Options`":"0:314:2549"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["columns",{"primitive":"usize"}],["total_width_or_options",{"generic":"Opt"}],["left_gap",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["middle_gap",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["right_gap",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7362:281","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7944:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:271:2553":{"id":"0:271:2553","crate_id":0,"name":"WrapAlgorithm","span":{"filename":"src/wrap_algorithms.rs","begin":[36,0],"end":[90,1]},"visibility":"public","docs":"Describes how to wrap words into lines.\n\nThe simplest approach is to wrap words one word at a time and\naccept the first way of wrapping which fit\n([`WrapAlgorithm::FirstFit`]). If the `smawk` Cargo feature is\nenabled, a more complex algorithm is available which will look at\nan entire paragraph at a time in order to find optimal line breaks\n([`WrapAlgorithm::OptimalFit`]).","links":{"`WrapAlgorithm::OptimalFit`":"0:274:3032","`WrapAlgorithm::FirstFit`":"0:272:3023"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:272:3023","0:274:3032","0:277:2927"],"impls":["0:81","a:2:35621:250-0:271:2553","a:2:3371:262-0:271:2553","a:2:3406:4733-0:271:2553","a:2:35679:4577-0:271:2553","a:2:45500:10756-0:271:2553","a:2:45501:10958-0:271:2553","b:2:2829-0:271:2553","b:2:2832-0:271:2553","b:2:2887-0:271:2553","b:2:3144-0:271:2553","b:2:3148-0:271:2553","b:2:3154-0:271:2553","b:2:3159-0:271:2553","b:2:4016-0:271:2553","b:5:814-0:271:2553","0:282","0:286","0:77","0:79","0:88"]}}},"b:2:2832-0:246:3011":{"id":"b:2:2832-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2826:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2834:3298"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3406:4733-0:246:3011":{"id":"a:2:3406:4733-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3406:4733","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:48:2535":{"id":"0:48:2535","crate_id":0,"name":"wrap_algorithms","span":{"filename":"src/wrap_algorithms.rs","begin":[1,0],"end":[413,1]},"visibility":"public","docs":"Word wrapping algorithms.\n\nAfter a text has been broken into words (or [`Fragment`]s), one\nnow has to decide how to break the fragments into lines. The\nsimplest algorithm for this is implemented by\n[`wrap_first_fit()`]: it uses no look-ahead and simply adds\nfragments to the line as long as they fit. However, this can lead\nto poor line breaks if a large fragment almost-but-not-quite fits\non a line. When that happens, the fragment is moved to the next\nline and it will leave behind a large gap.\n\nA more advanced algorithm, implemented by [`wrap_optimal_fit()`],\nwill take this into account. The optimal-fit algorithm considers\nall possible line breaks and will attempt to minimize the gaps\nleft behind by overly short lines.\n\nWhile both algorithms run in linear time, the first-fit algorithm\nis about 4 times faster than the optimal-fit algorithm.","links":{"`Fragment`":"0:10:2804","`wrap_optimal_fit()`":"0:65:3009","`wrap_first_fit()`":"0:90:3077"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:71-0:65:3009","0:72-0:262:3010","0:73-0:246:3011","0:271:2553","0:90:3077"],"is_stripped":false}}},"0:166":{"id":"0:166","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[170,0],"end":[200,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:167:1215","0:168:3553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2887-0:271:2553":{"id":"b:2:2887-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2885:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2889:29552"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:814-0:330:2551":{"id":"b:5:814-0:330:2551","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:810:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:816:4247","5:817:4248","5:818:4895"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3144-0:271:2553":{"id":"b:2:3144-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3147:3442"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3406:4733-0:271:2553":{"id":"a:2:3406:4733-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3406:4733","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,16],"end":[7,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3366:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:19:862":{"id":"0:19:862","crate_id":0,"name":"from","span":{"filename":"src/core.rs","begin":[263,4],"end":[271,5]},"visibility":"public","docs":"Construct a `Word` from a string.\n\nA trailing stretch of `' '` is automatically taken to be the\nwhitespace part of the word.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["word",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35":{"id":"0:35","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[101,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10767:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:36:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3371:262-0:236:2552":{"id":"a:2:3371:262-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3371:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:35621:250-0:262:3010":{"id":"a:2:35621:250-0:262:3010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35621:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:262:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[35,16],"end":[35,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3366:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:144:2847":{"id":"0:144:2847","crate_id":0,"name":"break_words","span":{"filename":"src/options.rs","begin":[212,4],"end":[217,5]},"visibility":"public","docs":"Change [`self.break_words`]. This controls if words longer\nthan `self.width` can be broken, or if they will be left\nsticking out into the right margin.\n\nSee [`Options::word_splitter`] instead if you want to control\nhyphenation.\n\n# Examples\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(4).break_words(true);\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"This\",\n                \"is a\",\n                \"litt\",\n                \"le\",\n                \"exam\",\n                \"ple.\"]);\n```\n\n[`self.break_words`]: #structfield.break_words","links":{"`Options::word_splitter`":"0:147:2969"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["break_words",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3148-0:314:2549":{"id":"b:2:3148-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3150:862"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:80:832":{"id":"0:80:832","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms.rs","begin":[123,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:10734:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:10715:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3144-0:214:2815":{"id":"b:2:3144-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3121:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3147:3442"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2832-0:236:2552":{"id":"b:2:2832-0:236:2552","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2826:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:236:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2834:3298"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:205-0:287:2548":{"id":"0:205-0:287:2548","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[227,0],"end":[227,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"line_ending::LineEnding","name":"LineEnding","id":"0:287:2548","glob":false}}},"0:237:2908":{"id":"0:237:2908","crate_id":0,"name":"NoHyphenation","span":{"filename":"src/word_splitters.rs","begin":[50,4],"end":[50,17]},"visibility":"default","docs":"Use this as a [`Options.word_splitter`] to avoid any kind of\nhyphenation:\n\n```\nuse textwrap::{wrap, Options, WordSplitter};\n\nlet options = Options::new(8).word_splitter(WordSplitter::NoHyphenation);\nassert_eq!(wrap(\"foo bar-baz\", &options),\n           vec![\"foo\", \"bar-baz\"]);\n```\n\n[`Options.word_splitter`]: super::Options::word_splitter","links":{"super::Options::word_splitter":"0:147:2969"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3159-0:246:3011":{"id":"b:2:3159-0:246:3011","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3118:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3162:150","2:3163:1861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3154-0:314:2549":{"id":"b:2:3154-0:314:2549","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3128:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3124:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:314:2549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3157:150","2:3158:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:253:498":{"id":"0:253:498","crate_id":0,"name":"clone","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,9],"end":[22,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Penalties","id":"0:246:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274:3032":{"id":"0:274:3032","crate_id":0,"name":"OptimalFit","span":{"filename":"src/wrap_algorithms.rs","begin":[57,4],"end":[57,25]},"visibility":"default","docs":"Wrap words using an advanced algorithm with look-ahead.\n\nThis wrapping algorithm considers the entire paragraph to find\noptimal line breaks. When wrapping text, \"penalties\" are\nassigned to line breaks based on the gaps left at the end of\nlines. See [`Penalties`] for details.\n\nThe underlying wrapping algorithm is implemented by\n[`wrap_optimal_fit()`], please see that function for examples.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"`Penalties`":"0:246:3011","`wrap_optimal_fit()`":"0:65:3009"},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:276:2037"]},"discriminant":null}}},"0:24":{"id":"0:24","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[328,0],"end":[347,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Fragment","id":"0:10:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:25:2730","0:26:2808","0:27:2811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:20:2837":{"id":"0:20:2837","crate_id":0,"name":"break_apart","span":{"filename":"src/core.rs","begin":[286,4],"end":[325,5]},"visibility":"public","docs":"Break this word into smaller words with a width of at most\n`line_width`. The whitespace and penalty from this `Word` is\nadded to the last piece.\n\n# Examples\n\n```\nuse textwrap::core::Word;\nassert_eq!(\n    Word::from(\"Hello!  \").break_apart(3).collect::<Vec<_>>(),\n    vec![Word::from(\"Hel\"), Word::from(\"lo!  \")]\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Self"}}}],["line_width",{"primitive":"usize"}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8584:190","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'b"}]},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:35621:250-0:287:2548":{"id":"a:2:35621:250-0:287:2548","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35621:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:142:3505":{"id":"0:142:3505","crate_id":0,"name":"initial_indent","span":{"filename":"src/options.rs","begin":[146,4],"end":[151,5]},"visibility":"public","docs":"Change [`self.initial_indent`]. The initial indentation is\nused on the very first line of output.\n\n# Examples\n\nClassic paragraph indentation can be achieved by specifying an\ninitial indentation and wrapping each paragraph by itself:\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(16).initial_indent(\"    \");\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"    This is a\",\n                \"little example.\"]);\n```\n\n[`self.initial_indent`]: #structfield.initial_indent","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["initial_indent",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120:355":{"id":"0:120:355","crate_id":0,"name":"as_str","span":{"filename":"src/line_ending.rs","begin":[21,4],"end":[26,5]},"visibility":"public","docs":"Turns this [`LineEnding`] value into its ASCII representation.","links":{"`LineEnding`":"0:287:2548"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338":{"id":"0:338","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:330:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:339:498"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,22],"end":[238,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2875:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:227:498"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:4016-0:214:2815":{"id":"b:2:4016-0:214:2815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35622:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4014:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:214:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4018:1876"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:293:498":{"id":"0:293:498","crate_id":0,"name":"clone","span":{"filename":"src/line_ending.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LineEnding","id":"0:287:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3371:262-0:271:2553":{"id":"a:2:3371:262-0:271:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3371:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:271:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"2:51181:8036":{"crate_id":2,"path":["core","core_arch","x86","__m128h"],"kind":"struct"},"5:4338:7346":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:12770:1742":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:49684:7914":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"5:4501:7327":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:51219:8038":{"crate_id":2,"path":["core","core_arch","x86","__m512h"],"kind":"struct"},"6:6858:9256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:10994:8077":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"17:11743:5712":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:6645:8105":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:44638:4957":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"11:1542:24343":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:11564:5699":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:13799:123":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:11770:25381":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"18:491:5454":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:46798:7826":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:25782:11101":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:24877:10839":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"5:7435:37302":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:2020:8060":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:3366:121":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"11:832:7335":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:5664:9036":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"18:521:29545":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:51196:8037":{"crate_id":2,"path":["core","core_arch","x86","__m256h"],"kind":"struct"},"2:11195:36182":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"17:14571:5798":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"11:2115:7339":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:6792:6954":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"5:1246:10445":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:11291:29771":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:9578:7654":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:867:166":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"18:754:5502":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:43999:7773":{"crate_id":2,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"6:4929:8733":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:10772:133":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:11863:7327":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:2658:6751":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:48491:7890":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:15801:6426":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:6852:9255":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:48147:9638":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:12160:7673":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:50822:8010":{"crate_id":2,"path":["core","core_arch","simd","u16x64"],"kind":"struct"},"2:49847:7930":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:2423:8065":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:49503:7899":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"11:676:4848":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:51258:2146":{"crate_id":2,"path":["core","core_arch","x86","bf16"],"kind":"struct"},"6:553:8479":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:2192:1400":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:46486:4554":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"11:2513:8408":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:15:2936":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:16040:6489":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"11:2099:7072":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:3439:6792":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"18:96:10417":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:47824:7864":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:24825:36948":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:11574:174":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"17:12575:5826":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:2726:17842":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"2:9541:7653":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"2:44623:4954":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:8623:7230":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:9969:131":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"16:2682:6752":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:10995:169":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:13030:5870":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:11512:25362":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"17:15456:6331":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:3636:4574":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:5770:8097":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:12160:5759":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"5:2185:7439":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:8007:10051":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"17:16828:6710":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"17:16191:6547":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:3693:6794":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:11521:9555":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"5:2622:9472":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:11602:9561":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:6939:6971":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:8362:4970":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:894:6729":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"1:12383:29933":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"17:2243:5523":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:16177:6541":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:10763:116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:13592:5911":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"2:44149:7783":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:10571:5653":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:47851:7867":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:3792:10859":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:8133:29935":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:13133:5879":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:16219:6554":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:5328:5542":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"1:7338:11020":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:1710:7327":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:4019:8082":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:8420:4576":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:3342:7352":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:12254:5769":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"6:1584:8555":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"21:27:4897":{"crate_id":21,"path":["unicode_width","UnicodeWidthStr"],"kind":"trait"},"17:14350:6072":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"1:9442:10993":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:2577:10824":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:46025:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:9491:8255":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:12331:5780":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:10776:4557":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:6486:9115":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:42970:226":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:7720:3660":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:15469:6338":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:45198:10881":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:50994:8014":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:44163:4937":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"16:6820:25275":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"5:7797:4848":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:37798:4818":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:5375:8894":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"5:4461:9648":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:8162:6776":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:5415:6823":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:13700:5924":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"5:5279:9648":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"18:573:5455":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:4456:10924":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:4871:6806":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:5048:10914":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:5239:10947":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:4828:4535":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:43133:7756":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:25321:10839":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"16:6586:6911":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"6:538:8471":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:2210:7442":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"2:10715:239":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:14521:6101":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:7445:9352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:34023:4554":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"18:651:5455":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:12768:1355":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:5107:8091":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:12072:5745":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"5:4630:37249":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"11:820:10769":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:6850:6962":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:26069:35419":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:5713:17872":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:12878:5853":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:42985:223":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:2603:10834":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"5:6728:11113":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"5:3125:9475":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"5:7838:7472":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:6864:25276":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:4923:10903":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:12781:929":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:8457:8167":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:44054:4921":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:5357:8884":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"1:12284:8084":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:6602:9178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:4182:6798":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:11267:8289":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"17:13585:5910":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"6:5255:8845":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:8735:7665":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:35623:259":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:8304:9464":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:10912:29924":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"17:15868:6443":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:2838:6759":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:3705:7442":{"crate_id":5,"path":["alloc","collections","btree","set","CursorMutKey"],"kind":"struct"},"2:45500:10756":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:13795:5951":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:8977:7822":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:6983:8125":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:11395:25359":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:5740:5654":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:1507:8508":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:10455:25344":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:5836:116":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:11255:8225":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"16:7835:25281":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"0:43:2968":{"crate_id":0,"path":["textwrap","word_splitters","split_words"],"kind":"function"},"3:0:529":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:12067:7670":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:316:5511":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:12055:5740":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"16:8666:7124":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:7041:8129":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"17:14883:6170":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:15919:6456":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:4552:7623":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:47404:7665":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:1997:8059":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:10821:5656":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"11:2519:8409":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:12223:8082":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"11:1898:7354":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"16:7334:7040":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"5:7711:7469":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:25686:37181":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"2:11326:36184":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"2:25725:11111":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:45344:8085":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:47508:7672":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:25950:7709":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"5:7944:258":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:8225:9447":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:7984:9434":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:6841:6961":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:3118:175":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"0:31:2534":{"crate_id":0,"path":["textwrap","word_splitters"],"kind":"module"},"1:8903:8226":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"11:2297:7339":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"1:9071:8243":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:44071:4922":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:44250:4943":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:9550:8266":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:3511:8076":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:13876:5966":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:12791:1463":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:45531:7656":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"22:78:5261":{"crate_id":22,"path":["unicode_linebreak","BreakClass"],"kind":"enum"},"2:47221:7830":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:12686:5832":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:2638:6750":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:13608:25319":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:16700:6682":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"1:7603:9916":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:1494:8502":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"0:48:2535":{"crate_id":0,"path":["textwrap","wrap_algorithms"],"kind":"module"},"6:5019:8776":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:49488:7898":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:16672:6675":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"17:13014:5868":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:8722:4945":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"5:7893:17953":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:16359:6598":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:8115:4953":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:44215:4940":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:8411:177":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:8249:9451":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:5652:9031":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:14337:6070":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"2:12730:17851":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:3196:127":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:45448:4848":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:10062:25332":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"18:531:5459":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:12935:5860":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:11482:8248":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:14166:7694":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:45579:7809":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"1:11374:29923":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:2199:7441":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:10405:25342":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:43306:17788":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"11:1558:7349":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:2426:5657":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:4469:10451":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"11:292:9620":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:5958:9242":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:3306:6734":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:14206:4937":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"2:3841:269":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:12093:5752":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:1178:7072":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:16613:5955":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:6175:8114":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:24849:36954":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:37134:4809":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:11728:5710":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:46064:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:3852:4833":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"11:123:9619":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:16051:6490":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"5:7362:281":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:50288:7965":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:11783:7411":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:42873:4825":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:680:5436":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:3585:6793":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"20:0:2048":{"crate_id":20,"path":["smawk"],"kind":"module"},"17:10586:5654":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:12409:5790":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:47323:7840":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"5:3306:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:5521:8966":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:24838:36953":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:47004:9637":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:14178:6031":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:11513:29808":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"9:490:7414":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:9940:151":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:26324:7741":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"17:16230:6559":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:25895:7708":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:15844:6434":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:3046:24412":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:10898:151":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:36382:4802":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:16512:5937":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"1:1018:7331":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:15733:6407":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"6:6792:9241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"9:226:7822":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:7284:9288":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:6687:9210":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"6:5450:8936":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:1963:8058":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:0:1034":{"crate_id":6,"path":["libc"],"kind":"module"},"17:13231:5885":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"6:4964:8747":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:6590:9171":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:6835:6960":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:26020:9631":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:5007:8770":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:4705:4553":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:49997:7938":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:10602:8059":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"6:7424:9346":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:13947:5978":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"22:187:5247":{"crate_id":22,"path":["unicode_linebreak","BreakOpportunity"],"kind":"enum"},"17:16380:6601":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:2261:17854":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"18:659:5478":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"0:9:2794":{"crate_id":0,"path":["textwrap","core","display_width"],"kind":"function"},"1:5475:216":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:7672:5349":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:4810:10927":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:1047:7347":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:13219:5884":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"2:42953:4828":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:3121:157":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:45652:225":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"16:2548:6746":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"18:718:5494":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:47363:7845":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:8377:5594":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:46515:7193":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:16164:6535":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:13593:17883":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"5:6675:18306":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"17:10815:5655":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"5:1555:7327":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10431:25343":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:14910:6172":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"16:7279:7035":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:987:7346":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:14598:6111":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:15746:6413":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:12287:5775":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:15995:6478":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:46101:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:47712:7621":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:5429:8096":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:6040:6771":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"13:0:4393":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:9639:248":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:6523:9129":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:44202:4926":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:10778:4566":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:5253:6818":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:34408:4751":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:4823:4534":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:7904:7143":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:12385:5788":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"9:380:24264":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:15963:6470":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:6610:9179":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:4888:10944":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:5440:7464":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:26379:7746":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"1:11211:152":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"1:2650:4410":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:15951:6467":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:9325:8247":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:2161:5083":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:2616:10836":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"6:4976:8752":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:7518:7069":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"11:389:10437":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:50985:8013":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:10216:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:14152:6026":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:15013:6190":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:6096:6834":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:48159:9641":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"16:6623:6914":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"5:1432:7339":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:12663:5831":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:6719:9217":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:1056:7329":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:7459:7058":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:10830:5660":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"9:0:4396":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:12134:8145":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:45742:208":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"18:765:29544":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:3460:4804":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"11:2525:38983":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:15985:6475":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:12357:5785":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:6187:9648":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"5:7681:4848":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:9947:8159":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"17:11552:5696":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:11502:5693":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"1:8394:8161":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:5057:8794":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:6736:38990":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:11576:5700":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:43065:229":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:11035:7662":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:12608:5829":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:523:8462":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:5224:8832":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:3886:115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:13021:25478":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:13071:7678":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:8278:9458":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:16029:6485":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:7789:4848":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:2885:4740":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"6:5241:8839":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:10553:25347":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:6304:7464":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:46243:4558":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:12784:1907":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:4990:8760":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:44647:4959":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:15785:6424":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:5568:8990":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:50383:7968":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:10733:5507":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:13529:5905":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:48352:163":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:46570:150":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"16:901:5511":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"1:6862:4954":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:15159:6216":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:4124:8084":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:14558:6105":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:6335:6864":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:49588:7908":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:5395:8904":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:1066:10769":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:13928:5977":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:9355:8249":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:48201:135":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:463:8046":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:10770:123":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:12725:5838":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:6727:9218":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"2:49765:7926":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:1489:8500":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:4564:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:45460:5060":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:49748:7925":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:5325:8878":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:3500:7437":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:11470:36187":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"2:2259:17853":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:11263:8158":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"5:1608:7330":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:15771:6421":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:6631:9191":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:3994:7441":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"9:435:24263":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:34381:208":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:5307:10953":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"14:164:24347":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:1233:5520":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:3182:150":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:50154:7959":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:3620:4550":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:10987:165":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"14:159:7315":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:12782:935":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:920:7431":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"18:507:5455":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:47293:7837":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:3645:4957":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:44080:4932":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:901:202":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"2:14594:10772":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:5224:10946":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"2:43941:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"11:2275:7072":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:35545:8411":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:12120:8143":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:15817:6430":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:2875:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:26035:7711":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:3985:5558":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"2:44121:146":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:12551:9917":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:13641:17890":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:13260:25348":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:7326:9312":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:13108:5676":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"17:11842:5725":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:8088:8147":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:47526:7673":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"6:1657:8610":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"16:6571:6908":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:47838:7866":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:2593:10829":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"11:686:7328":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:2337:201":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:12045:5593":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:7505:7066":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:1727:8639":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:12790:1971":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"18:613:39012":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:4118:6796":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:13079:5878":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"2:36170:4803":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"11:1652:9913":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:9415:8253":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:13044:5873":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:47261:7835":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:2179:209":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:35622:252":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:44131:4934":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:12430:5792":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:4402:6801":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:13571:7655":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:5804:8102":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:7553:9421":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:7891:10447":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:1643:8599":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:14545:6102":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"11:1862:4848":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:35679:4577":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:26189:7731":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:13423:5898":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:14443:6087":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"6:8007:9445":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:41550:4820":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:49727:7924":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"11:423:10439":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:25058:7707":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:47788:17896":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"5:5668:37239":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:10716:4563":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:44111:4933":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:11210:39006":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:1667:8616":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:14365:6074":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:7977:6782":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:15477:6339":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:14637:6116":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:7496:10048":{"crate_id":1,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"17:5154:5540":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"1:12263:8083":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:5142:6814":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:8793:8085":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:5604:9011":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"11:851:7337":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:8021:10052":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"2:6263:4936":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:44102:4924":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:12777:784":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:11161:39005":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:45491:5061":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:49471:7895":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:7337:9317":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:6422:9083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:3831:4831":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:10784:4564":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:26368:7745":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"2:50042:7955":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:3133:37449":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"11:1027:7341":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:47668:7855":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:9000:8238":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:2461:7492":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"11:1878:7351":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:6737:9225":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:46991:9554":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"17:14373:6076":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"0:3:587":{"crate_id":0,"path":["textwrap","core"],"kind":"module"},"11:2206:5745":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2:50582:8002":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:11688:253":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:16755:6698":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"6:5301:8870":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:3413:34106":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:25660:10839":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"17:12814:5845":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:13120:5677":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"17:15763:6418":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:8052:7437":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:14258:6036":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"16:8134:6785":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:6873:6965":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"5:4431:9648":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:12774:5842":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:1539:8524":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"5:7908:7476":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:11540:5695":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"5:1446:7345":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:5640:9024":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"6:5230:8835":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:5550:8983":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:4764:6803":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:8674:8206":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:12789:998":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:7671:10452":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:13274:7684":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:5398:8096":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:8175:9446":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:6710:9215":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"2:49982:7937":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:9496:119":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"5:3122:4247":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:35709:4736":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"6:7439:9351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:16814:6709":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:12854:5535":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"5:328:4033":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:5186:8812":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:7786:38993":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:9342:8248":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:11318:5678":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"6:7539:9412":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:8237:9449":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:7302:7036":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:11912:7665":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:14081:6002":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:3445:4568":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:12748:29804":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:5961:10977":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:12772:1866":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:14110:6011":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:4949:4544":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:51051:8019":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:12787:1901":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:42909:4827":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:47687:7857":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:4014:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:1743:7354":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:4753:4533":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:16777:6700":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:49535:7901":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:48418:7885":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:5503:8964":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"5:1016:10771":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:4278:10902":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:47554:7850":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:1726:7351":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:6203:25272":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:7575:8266":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:6360:9040":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:47282:4921":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:24836:36951":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:45310:35449":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:15971:6473":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:48171:9644":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:12022:5738":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:5428:8920":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:2964:6765":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:3480:4813":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"6:4902:8718":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:37067:4807":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:14690:6123":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:12344:5782":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"17:14665:6121":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:11915:5676":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:24938:11025":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:6702:9214":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"2:14480:7704":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:6406:6877":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:35621:250":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:10782:219":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:14307:6061":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:11037:5796":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"5:819:122":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:7369:6778":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:26357:7744":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"2:4902:4543":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:5471:8951":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:43045:227":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:7825:4930":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:4521:8086":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:5196:8819":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:4958:4545":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:14730:6127":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"6:5420:8915":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"16:6981:6787":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:15937:6460":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:14457:119":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:14008:5988":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:16315:6583":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:578:8492":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:43913:7768":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:39674:4819":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:4602:8087":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:4340:10908":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:15624:6386":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"16:2465:6737":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:9634:247":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:5405:8910":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:16021:6484":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:11423:25360":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:6866:8123":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:5585:8997":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:10634:5504":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:5687:6826":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:8294:9463":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:10786:4565":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:44657:4961":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"18:735:29543":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:49556:7906":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:26176:7730":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:6082:6829":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:9315:8245":{"crate_id":1,"path":["std","pipe","PipeReader"],"kind":"struct"},"1:12778:763":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"6:6416:9080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:12588:5828":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"5:916:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:13351:7667":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:11333:36186":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"6:1684:8623":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:7165:7009":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:45712:7327":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:8272:10754":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:11171:9649":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"17:3743:5533":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:51089:8022":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:50780:8008":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:15611:6381":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:26058:7716":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:25046:10839":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:43780:7761":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:5139:8808":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:1089:7338":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"11:1042:24342":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:12990:5866":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:15713:6403":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:6729:6950":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:8595:7228":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:14955:6181":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:47230:7832":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:1721:7437":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:16417:6608":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:9583:9558":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"16:6606:219":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:2022:8061":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:43803:7763":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:9530:8262":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:11887:7346":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"3:1788:239":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:12008:5737":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:2988:6766":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:49698:7915":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:6747:6727":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:3552:8077":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:1551:8533":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:2921:213":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:3458:8074":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:0:4402":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:43817:7764":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:3450:4806":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:6062:6773":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:9780:8060":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:1060:7332":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:7946:6781":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:6466:29915":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:4805:8654":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:13297:7685":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:44665:4963":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:6590:8117":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"16:5111:6813":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:29333:284":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:14021:5989":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"0:274:3032":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm","OptimalFit"],"kind":"variant"},"17:10479:25345":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:16838:5982":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"1:6034:8106":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"16:8562:7223":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:51119:8024":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:16250:6562":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:2823:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:9537:8263":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:6542:7704":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:13207:5883":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"2:45766:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"16:7398:38991":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:3406:4733":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:12786:1895":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:2422:5527":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:49809:7928":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"14:40:5952":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:50092:7957":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:44409:4946":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:12898:5858":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:6027:8105":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:2340:133":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"1:8912:10957":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:6383:233":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:9809:218":{"crate_id":2,"path":["core","pin","PinCoerceUnsized"],"kind":"trait"},"6:5319:8877":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"16:4265:6800":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:5663:133":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:4954:6809":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"11:357:10435":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"22:0:2555":{"crate_id":22,"path":["unicode_linebreak"],"kind":"module"},"1:8416:152":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:9082:8244":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:9055:8092":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:11868:5700":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:2722:6754":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:41715:4823":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:11643:5676":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:50071:7956":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:47333:7841":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:13892:5970":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:35598:7749":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:15353:6245":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:5334:8881":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"0:28:2847":{"crate_id":0,"path":["textwrap","core","break_words"],"kind":"function"},"8:0:4395":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"11:1885:7352":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:7987:7157":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:48452:192":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:6184:7348":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:15691:6401":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"5:4263:7348":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:15659:6390":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:5755:6827":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"11:649:7327":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:5539:8977":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:11955:7667":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:8055:7160":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:10311:25339":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:5557:8985":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:9657:174":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:8532:4575":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:34034:35431":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"6:4970:8749":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:3139:5545":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:14585:6110":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"16:6387:6870":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:13087:3562":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"18:643:5455":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:5205:8824":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:8260:9455":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:1157:37239":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"6:4881:8708":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:9611:8120":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"17:10202:25336":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:7956:7155":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:5011:4547":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:12779:941":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:9384:8252":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:7515:9402":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:15115:6209":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"11:1871:7437":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:4120:7348":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"11:321:9623":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:5483:1009":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:16650:6670":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"6:7990:9436":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:10621:8277":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"1:5050:10916":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:8382:8159":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:44225:4941":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"11:1063:38984":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:11151:5675":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:4896:8715":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:16203:6550":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:45185:7646":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:11200:5676":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:5462:8945":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:48163:9642":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"5:8068:7483":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:8811:8221":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:6500:24382":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:48183:9555":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"14:213:7321":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:1589:8557":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:15908:6452":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:2430:10820":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:45803:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:34002:5087":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:7220:7022":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:3112:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"5:7745:4848":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:15587:6379":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:6995:6973":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"11:1083:7343":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:43718:7621":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:14476:6095":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:49669:7913":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:24950:7707":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"5:1667:7436":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:7731:37327":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:2794:6757":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:14746:6132":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:4418:10448":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:25359:36959":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"5:4061:7437":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:12173:5760":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:3124:273":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:10780:4567":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:7430:9348":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:35711:118":{"crate_id":2,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"17:14845:6165":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:43765:35444":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:45522:5059":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:46788:7822":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:45172:7644":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:9675:8137":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"5:5717:17873":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"0:0:2554":{"crate_id":0,"path":["textwrap"],"kind":"module"},"16:6779:6953":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:16791:6704":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:5202:17778":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:12133:5757":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"5:243:7428":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:14985:6184":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:4661:9648":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:8326:9470":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:43793:7762":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:45501:10958":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:2448:6735":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:11276:8104":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"2:50362:7967":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:8929:5435":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:14870:6168":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:3782:10837":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:1690:8626":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:5623:9020":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"18:635:5477":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:26221:10839":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"2:25463:11024":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:12716:8300":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:48410:7883":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:3877:5534":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:519:5518":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"14:219:7323":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:8889:162":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:9065:7327":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:47454:7848":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:5036:8785":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:2575:10823":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:8264:7174":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:8479:134":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"0:277:2927":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm","Custom"],"kind":"variant"},"2:43920:7769":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:4022:8083":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:6148:8113":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:8720:150":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:7880:6881":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:49862:7931":{"crate_id":2,"path":["core","core_arch","simd","f16x8"],"kind":"struct"},"2:3128:272":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:14323:7699":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:12447:25452":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:50944:8012":{"crate_id":2,"path":["core","core_arch","simd","u32x32"],"kind":"struct"},"2:3589:4826":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:35612:7750":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"15:288:10424":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"9:318:8415":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:13509:5535":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:6638:9192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:4900:6807":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"11:2440:7437":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:12691:7677":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"16:2818:6758":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:45423:185":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"6:8284:9459":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:41605:4821":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:1031:7348":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:12737:10755":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"5:753:7430":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"18:623:39013":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"5:1033:7327":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:12263:5770":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:8937:36716":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:3376:7351":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:12100:8296":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:46476:9544":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:46503:9553":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:50627:8003":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:1352:5522":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"5:7260:17915":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:1945:724":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:10408:10005":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:5316:6820":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:6376:4925":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:1521:8513":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:11667:5706":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:7524:9405":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:7713:38992":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:46751:7815":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:12776:768":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:8544:10872":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:44616:4555":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:6769:9235":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:12094:8138":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"18:689:5487":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:15088:6205":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:4673:4552":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:11308:8250":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"2:43085:4832":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:13328:5613":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:4284:10903":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"5:7701:7348":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:8848:9321":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:13856:5965":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"6:4875:8706":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:13465:5901":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"17:14384:6079":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:48359:232":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:7209:7021":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:6441:9085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"5:7761:7439":{"crate_id":5,"path":["alloc","collections","btree","set","Cursor"],"kind":"struct"},"6:1703:8630":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:10872:8247":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:615:10731":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"16:6142:25271":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:14039:5997":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:12836:25476":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:810:265":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:10255:25337":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"5:1920:7437":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:25598:11106":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"16:8317:25284":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:15074:6204":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:12766:1929":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:9331:211":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:45404:206":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:8844:8225":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"7:31:24249":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:12103:5753":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:24851:36956":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:49780:7927":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:7468:7061":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:13730:5928":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"16:2588:6748":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:321:5512":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:13344:5894":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"11:663:7346":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:3371:262":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:47994:7869":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:51066:8020":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:12944:5861":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:35712:279":{"crate_id":2,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"1:5052:10917":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:10965:5672":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"9:168:9997":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:46236:4557":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"5:3835:7327":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"18:598:39011":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:6711:6940":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:15062:6203":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:5151:8809":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:5482:8956":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:8316:9468":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:47380:7846":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:11458:5689":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:12924:5859":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:8665:4953":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:49830:7929":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:3115:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:16058:6492":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:3124:24413":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:3677:4829":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:11603:5702":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:761:5014":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:4842:6805":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:13673:5918":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:26291:7738":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:12775:765":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"5:3696:7441":{"crate_id":5,"path":["alloc","collections","btree","set","CursorMut"],"kind":"struct"},"11:1892:7353":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:16658:6671":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"5:7920:7478":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:2618:6749":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:12242:5767":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"0:90:3077":{"crate_id":0,"path":["textwrap","wrap_algorithms","wrap_first_fit"],"kind":"function"},"2:33970:5086":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:3248:5013":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"16:6694:6939":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"11:481:166":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:4984:8757":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:50730:8006":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"11:787:7437":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:13093:5700":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"6:1563:8541":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:12907:5903":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"16:6157:6840":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:2421:151":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:12106:8142":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:46591:4556":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:8063:25282":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"11:776:7348":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:5422:456":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:15928:6459":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:14093:6003":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:12763:438":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:14057:5998":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:4788:10926":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:11201:8161":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"6:7317:9311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:6020:233":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:45951:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"11:427:10440":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:14122:6014":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:12783:916":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:8212:8151":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:48179:9646":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"18:80:10416":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:12298:25451":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"1:11239:29805":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"1:4935:9334":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"7:78:24256":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:9368:8250":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:6171:6843":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:14710:6126":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:8206:6774":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:48060:7690":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:47212:7829":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:41660:4822":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:14413:6084":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:47696:7687":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:3413:4735":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:13066:5877":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"17:13757:5936":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:12658:7676":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"17:13630:5914":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:7308:9305":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:49602:7909":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"11:750:7330":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:12359:8146":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:3092:17787":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:13819:5952":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:16573:6656":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"5:3381:37445":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:48442:7888":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"5:7721:7470":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"1:1714:4848":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"0:272:3023":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm","FirstFit"],"kind":"variant"},"17:13195:5882":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"5:5974:17914":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:640:9915":{"crate_id":1,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"6:5658:9033":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:11989:5735":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:12800:5844":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:4150:6797":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:47390:5509":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"5:313:37239":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:13247:150":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:15128:6210":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:3091:10839":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:26313:7740":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"16:5058:6811":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:5494:8959":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"16:5280:6819":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:11539:8137":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:11152:8286":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"2:47472:7849":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:35605:4543":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:9644:8135":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"16:8295:7178":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:12711:5834":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:12105:7671":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:12318:5778":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:8230:5796":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"7:0:1961":{"crate_id":7,"path":["unwind"],"kind":"module"},"13:271:8406":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:2896:8071":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:45607:223":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"2:13564:17882":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:8176:7164":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:16211:6553":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:11112:39004":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:46776:169":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:5127:8807":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:4440:10449":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:16395:6602":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:15792:6425":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:13399:5897":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:4892:4542":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:14165:6030":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:3364:278":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:50204:7961":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:12272:5771":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:51005:8015":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:42294:4824":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:49915:7934":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:45840:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:2724:17841":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"2:26280:7737":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"11:2374:7346":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"6:6472:9104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:7027:6982":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:532:8468":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:5311:8873":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:5215:10945":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:3858:4836":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:2484:6743":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:7728:5060":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:3645:154":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:12979:5865":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:14500:7705":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:3416:34250":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:51014:8016":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:2110:815":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"5:7270:17916":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"12:0:4399":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:10774:4558":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:16288:6576":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:3887:5550":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:11629:5637":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:4890:8713":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"11:2533:8412":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"15:306:10428":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:11495:8249":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:5349:8883":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:3607:128":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:13243:5886":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:5282:8862":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:12969:5864":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:785:10751":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:6366:6715":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:6645:9193":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:6679:9207":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"16:7966:7156":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:26933:249":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"6:5117:8806":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:5083:6812":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"11:2540:7472":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:12229:5766":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"16:7055:6984":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:5441:7626":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"16:5377:6822":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"5:4293:37239":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:3923:132":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:3707:8217":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:8430:131":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:11353:4127":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:10700:5506":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:6878:9270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:0:4403":{"crate_id":17,"path":["object"],"kind":"module"},"2:26083:7717":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:8582:7225":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:49965:7936":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:485:5514":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"11:718:7329":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:16241:6560":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:11814:5720":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:586:29886":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:11218:8275":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"2:3207:150":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:13313:7686":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"11:344:10432":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:49655:7912":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:7367:9339":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:47350:7842":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:9509:29759":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"6:7494:9388":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:7925:32173":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"16:7551:25280":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:12787:5843":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:8230:25283":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:4808:6804":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:6237:6848":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"11:1001:7339":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:13959:5981":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:47658:7854":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"6:8231:9448":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:24930:10839":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:2074:5009":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:9952:29920":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"5:2294:10731":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:3180:239":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"17:16005:6481":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:13157:5880":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"18:706:5490":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:3957:10882":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"6:1696:8627":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:4615:282":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:45631:227":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"1:3764:4563":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:5488:8957":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"5:4707:37249":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:44234:4942":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:7292:9293":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:43962:17953":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:12732:10007":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:42957:4830":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:8278:10795":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:697:8049":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:6254:6853":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:4937:9336":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"16:8480:7214":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:11102:5674":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:7942:4950":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:2103:5010":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:777:8050":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:12065:5742":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:6578:9166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:10840:5509":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"5:6325:18298":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:14924:6175":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:47943:7689":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:16301:6581":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:11368:29922":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:7344:9321":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:15048:6202":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:4927:6808":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:16013:6482":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:26200:10883":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:5412:1282":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:6500:9116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:8870:8089":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:25348:7706":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:7075:9629":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"11:983:7072":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"11:2394:4848":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:2963:214":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:14678:6122":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:15569:6374":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:13360:25350":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:7916:7144":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:15035:6201":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:12030:7822":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"2:11994:7668":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:4980:4546":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:50250:7963":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:479:8434":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:9542:8264":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:5069:8803":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:5820:8103":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"5:6430:9648":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:9563:29760":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:6505:9117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:45988:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:12035:5739":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:11063:39003":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:10150:25334":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:26107:35421":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:9478:8254":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:9502:8258":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:12749:5840":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"21:21:2729":{"crate_id":21,"path":["unicode_width","UnicodeWidthChar"],"kind":"trait"},"2:14183:7697":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"2:48029:7874":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:12120:5755":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:5044:8790":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"13:124:38986":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:8404:8162":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"0:239:2918":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter","HyphenSplitter"],"kind":"variant"},"6:5088:8804":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:15448:6328":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:6617:9180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:4957:8744":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:45440:7346":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:2504:6744":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:2453:5530":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:47809:7859":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:16269:6575":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:11030:10843":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:5249:8843":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:48369:240":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:51025:8017":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:5381:8896":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:50656:8004":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:47608:7852":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"0:214:2815":{"crate_id":0,"path":["textwrap","core","Word"],"kind":"struct"},"18:481:5453":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:11556:9560":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"6:7562:9424":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:15198:6223":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:44140:4935":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:7421:25279":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:465:8426":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:8025:7158":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:12032:7669":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:8754:8216":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:4606:17769":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"2:11675:10839":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"18:515:5452":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:13909:5972":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:6659:9198":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:5512:8965":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"6:6513:9122":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:1500:8505":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:15809:6428":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:7995:10050":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"1:12788:1883":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:48479:7359":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:12737:5839":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:3979:7439":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:15861:6442":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:12780:923":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"0:241:2927":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter","Custom"],"kind":"variant"},"19:0:1330":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:14624:6114":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"18:563:5464":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:3472:4811":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:6904:8124":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:15595:6380":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:50271:7964":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:586:8496":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:43833:7765":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:45720:7346":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:14137:6020":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:14776:6151":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:35680:4737":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:15534:6373":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:10333:25340":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:1530:8518":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:1005:7330":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:11181:8160":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"5:3928:37239":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:544:6720":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:48151:9639":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:6272:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:12621:5830":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:11794:25382":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"5:3129:37448":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:43840:17783":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:3509:8075":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:4332:10906":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:6756:198":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:8102:7162":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"11:2340:7357":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"1:8683:8081":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:10369:25341":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:4816:8662":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:44181:4948":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:47313:7839":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:51142:8025":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:7463:9362":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:12201:5762":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:47161:7828":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:13522:10818":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:8266:9456":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:1816:37239":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"11:2469:24338":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"11:0:4398":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:46531:35514":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:15513:6368":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:13489:5903":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:4219:10899":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:6220:8115":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:8220:7166":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"5:7077:37239":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:44172:4938":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:50221:7962":{"crate_id":2,"path":["core","core_arch","simd","f16x16"],"kind":"struct"},"2:44193:4939":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:35587:7748":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"16:8148:6786":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:10767:123":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:11616:5704":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:1210:7345":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:9691:7655":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"21:0:2556":{"crate_id":21,"path":["unicode_width"],"kind":"module"},"1:11715:8295":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"1:6986:10989":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:8805:10925":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:44047:7780":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"16:8500:7215":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:8748:8214":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:50109:7958":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:50801:8009":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"16:8525:7218":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:3524:5531":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:16848:5987":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"1:5784:8101":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:12200:10454":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:25810:11102":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:12188:7675":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:3456:8073":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:37625:4816":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"18:608:5472":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"5:960:10770":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:12771:1776":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"5:2407:9628":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:11855:5726":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"11:2507:8407":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:9392:4848":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"10:44:7361":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:25768:10839":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:43989:5509":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"9:412:24265":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:16341:6592":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:16329:6590":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:596:5519":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:6390:9065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"18:0:4404":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:6967:6770":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:47721:7764":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:11053:5673":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:7962:9433":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:26169:9634":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:43122:7493":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"18:680:5485":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:780:8052":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"11:102:9618":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"5:3335:7327":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:3773:33763":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:4676:8088":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:13983:5985":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:8819:8214":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:48377:220":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:4328:10905":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:26258:7735":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"1:6693:233":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:46545:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:50183:7960":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:6367:8105":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:6709:11112":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:6678:6936":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"16:7355:6777":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:5107:8805":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"15:394:24374":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:8293:8158":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"11:1858:7327":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:25636:11107":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"14:186:24354":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:26142:35423":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:0:587":{"crate_id":2,"path":["core"],"kind":"module"},"1:2835:29888":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:6026:6768":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"5:7880:7473":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:6558:29919":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"17:15978:6474":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:6651:9196":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:7932:7479":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:6670:9201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"11:2354:7327":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"1:12769:352":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:3475:4812":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"2:10734:156":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:1658:223":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:11757:5714":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"6:6543:9145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:4692:6802":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:8759:10880":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:10403:36717":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:49900:7933":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"16:6911:6969":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:12146:7672":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:5611:9014":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:4869:8705":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:9015:10971":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:728:10748":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"16:155:6713":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:49520:7900":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:46553:4554":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:49573:7907":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"16:7347:7042":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:6806:6767":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:7753:223":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:1584:168":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:11494:5692":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"6:5025:8779":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:47572:7851":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:48355:176":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:5265:8851":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:12146:5758":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:8118:223":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"5:5567:17870":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"16:3108:6789":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:5477:8954":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"3:2184:7486":{"crate_id":3,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"1:9320:8246":{"crate_id":1,"path":["std","pipe","PipeWriter"],"kind":"struct"},"5:7849:10763":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:44264:4944":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:8011:6784":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:6428:9084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"18:589:5465":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:1636:7328":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:7110:246":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:11356:39008":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:8175:4532":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:5295:8867":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:6459:9095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:8543:7220":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:8708:7237":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:997:4848":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:7983:10049":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"1:11872:29926":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"6:5366:8888":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:9606:199":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:12145:9652":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:9693:8268":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:13237:7681":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:1732:7352":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:14431:6085":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:1192:7339":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:24879:11026":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:8898:4967":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:12562:5825":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:43879:7767":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"6:6893:9281":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:2878:6761":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:7413:7047":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:26127:35422":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:16403:6605":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:1738:7353":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:2861:36179":{"crate_id":2,"path":["core","clone","uninit","InitializingSlice"],"kind":"struct"},"2:43115:4834":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:36594:4805":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:497:8442":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:48175:9645":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:974:7327":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:5890:8104":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:1950:5220":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"2:47008:7663":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:5222:6817":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:3376:4549":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"18:581:4751":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:6113:266":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:13052:5875":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:25554:11105":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:3146:8072":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:44609:7639":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:9619:9648":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"5:7864:7463":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"10:0:4397":{"crate_id":10,"path":["adler"],"kind":"module"},"16:2858:6760":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:24932:11022":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"14:31:7315":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:9427:10994":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:6452:9093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:14971:6182":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"20:15:5025":{"crate_id":20,"path":["smawk","Matrix"],"kind":"trait"},"17:14940:6177":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:8449:8165":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:7390:9340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:8093:7161":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:50460:8000":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:12174:7674":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:11825:5722":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:15001:6188":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"11:1579:7350":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:15896:6451":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:2702:6753":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:46767:7818":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:15876:6444":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:11176:9651":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:9457:10995":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:10667:5505":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:49623:7910":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:12761:5841":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:11901:5729":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:2926:147":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:5630:9023":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:2957:207":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:491:8439":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:8441:8164":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"16:2948:6764":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:473:8431":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"11:1703:168":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:3642:153":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:47304:7838":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:25815:11100":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"5:7967:7481":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:45432:7327":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:11888:5728":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:12151:9653":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:45366:7647":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"11:763:7331":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:11485:5690":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:12366:8146":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:13304:25349":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:47374:7680":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:898:10884":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:50759:8007":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:45877:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"16:7189:25278":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:2394:25407":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:2857:8068":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:48468:7889":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:8584:190":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:1569:8543":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:48042:7878":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:16538:6626":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"2:4462:9648":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:3012:24411":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:9376:7327":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"18:726:5497":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:14811:6162":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:1518:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:44632:4956":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:9398:8107":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:12214:5763":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:8800:9647":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:4239:6799":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:16116:6534":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:6908:37239":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:4256:10900":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:14322:6065":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:8197:8048":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:45332:7802":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"5:1401:7072":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"5:7410:37298":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:15144:6212":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"5:3347:37444":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:3832:6795":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:14611:6113":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"11:859:7338":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:16068:6497":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:1052:7328":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:13588:17884":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:26005:7710":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:1514:8510":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:47240:7833":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:24807:4751":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:43825:7621":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:14498:6096":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:24815:36948":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:5007:10948":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:45226:9543":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"10:36:8414":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"11:2126:7341":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:6267:6854":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:3648:155":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:50333:7966":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:9649:8136":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"17:15884:6445":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:1201:7341":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:13648:5917":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:8465:7439":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:6802:9244":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:6638:6916":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"11:1118:7344":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:3530:4817":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:559:8482":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"9:49:9987":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:11715:5709":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:4270:10901":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:11259:5677":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:14897:6171":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:2710:699":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:10975:39001":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:5617:9017":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"15:327:9984":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"16:8040:38997":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:11995:5736":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:12785:1889":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:564:8484":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:25688:17841":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"2:47909:7868":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:3602:10867":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"5:0:326":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:7935:7152":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:11192:8269":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"6:5217:8831":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:8436:8066":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"5:3368:7353":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:13553:25351":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"5:1282:10446":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:5529:8971":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:8366:4969":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"5:1570:7346":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:7826:4931":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:25461:10839":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"6:5341:8882":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"2:51104:8023":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:7013:6980":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:485:8437":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:2747:8067":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:49456:7894":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:14190:6034":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:1711:8634":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:6695:9213":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"17:12081:5748":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:16525:5951":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"2:2268:7488":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:16684:6677":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"15:0:4401":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:12792:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:10494:7799":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:16631:5965":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"16:6109:6839":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:5346:6821":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:2898:6762":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"0:236:2552":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter"],"kind":"enum"},"5:4694:9648":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"16:5170:6815":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:33735:10885":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:16766:6699":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:1717:7348":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:10524:25346":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"1:2821:8069":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:11939:5733":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:8892:4966":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:49944:7935":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:12864:5848":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:46759:7817":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:11346:5679":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:13436:5900":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:8539:2927":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:43754:7758":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:12958:5862":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:7064:4927":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:3554:8078":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"14:201:17898":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:1083:7337":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:13996:5987":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:49883:7932":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:4921:8731":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:7383:7044":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:43977:7772":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:16802:6706":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"17:14650:6118":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:13000:25477":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"6:6398:9067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:47703:7765":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:3123:37450":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:8207:8149":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"11:2414:7348":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:50537:8001":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:5271:8854":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:6438:25273":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"14:7:7315":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:7804:38994":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:2413:24383":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"5:2304:7443":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:2433:24410":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"0:237:2908":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter","NoHyphenation"],"kind":"variant"},"1:3419:34251":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:15677:6398":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:6901:6968":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:4937:8735":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:2075:9648":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"6:545:8474":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:37279:4814":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:51040:8018":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:45597:7810":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"2:4540:7622":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:25674:11110":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:8078:5436":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:4318:10904":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:10132:25333":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"1:7573:29930":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:673:10737":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:15102:6208":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:11469:25361":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:10780:32125":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"6:4997:8763":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:43951:7771":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:37000:4808":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"11:813:7332":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:34008:5088":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:0:1768":{"crate_id":1,"path":["std"],"kind":"module"},"6:5575:8992":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:5135:230":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"11:808:7347":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:3846:159":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:48167:9643":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:15640:6389":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:3675:9648":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:4933:9332":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"17:11328:39007":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:43007:225":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:7997:6783":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:7072:25277":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:6887:6769":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:7256:7034":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"16:7156:7008":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:44029:10805":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"6:5051:8792":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:1077:7335":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:5447:6824":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:47678:7856":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:45150:182":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:46250:4566":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:4829:8672":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:44274:4929":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"18:538:5462":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"5:1262:37447":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:2826:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:7769:7471":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:45728:4848":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:3768:224":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:7055:8133":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"6:1632:8591":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:7957:7480":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:8742:7854":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:8387:8160":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:8243:9450":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"11:1866:7348":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"9:470:24262":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:7492:7062":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:14834:6163":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:8272:9457":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:36866:4569":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:12373:5787":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:10176:25335":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:14298:217":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"6:6749:9227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"5:1417:7341":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:10601:5503":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:10550:4555":{"crate_id":2,"path":["core","fmt","builders","FromFn"],"kind":"struct"},"1:8825:8223":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"2:47422:7670":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"18:113:10420":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:44423:4947":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:26335:7742":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"1:12352:29775":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:11438:5686":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:11654:5677":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:26302:7739":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"5:6988:4848":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:1961:8057":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"5:1617:7331":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:11269:25362":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:4220:4848":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:1041:7437":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"9:345:24278":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:15721:6404":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:48019:7870":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:12764:1211":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:45539:7808":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"16:5707:25270":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:49441:7891":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:5389:36171":{"crate_id":2,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"6:570:8487":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:6460:25274":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"5:41:10779":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:3871:36393":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:36933:4810":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:12340:8297":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:14859:6167":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:10221:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:3725:8080":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"11:2323:7341":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:48155:9640":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"5:3822:194":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:47626:7853":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:14271:36766":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"11:1136:7345":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:4792:8645":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:5725:5653":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:45384:7650":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"6:1675:8617":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:47250:7834":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:906:5512":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"1:6141:8109":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"14:0:4400":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:516:197":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:6876:4949":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:6756:9228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"2:46138:7660":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:15174:5864":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"16:6656:6930":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:2262:10823":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"2:25739:17841":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"1:8692:10838":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:13582:5490":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:45914:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:2334:9625":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:48225:7880":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:5165:8810":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:7539:7071":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:48008:17897":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:12397:5789":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:8729:5509":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:13387:5896":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:12889:5857":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:6419:6722":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:2746:6755":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:2918:6763":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:2568:6747":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:6121:6772":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:15389:6276":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:8534:8168":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:25056:11023":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:7689:7468":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:4947:8741":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:5387:8899":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"5:1626:7347":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:15324:6225":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:6862:7348":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:16730:6690":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"5:1586:4848":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:7407:9341":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:457:8044":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:2770:6756":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:13771:5937":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:43928:7770":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:14538:164":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:5010:10926":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:4448:10450":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:13057:17968":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:11590:5701":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:50685:8005":{"crate_id":2,"path":["core","core_arch","simd","f16x32"],"kind":"struct"},"6:6744:9226":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"2:48431:35577":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"16:5647:6825":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:8712:4932":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:10623:8276":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"1:11694:9565":{"crate_id":1,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"1:8192:10839":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:44093:4923":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:4225:10898":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:35591:7124":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"5:3848:7346":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:8258:10753":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:3625:4551":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"17:14788:6153":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:37452:4815":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"6:1597:8562":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:13575:5864":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:45672:239":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:8400:158":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:25326:11028":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"17:13971:5982":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:10991:8075":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"1:5130:10913":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"18:670:5484":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:26091:7718":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:14396:6081":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:6300:6861":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:10766:5508":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:12187:5761":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:48236:17995":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:11963:5734":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:48347:9556":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"16:7762:7103":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:8633:25285":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:10880:5661":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:14069:6001":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:24861:36957":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:22:847":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:15186:6219":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:10988:8073":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"16:4981:6810":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:2591:10828":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"5:2853:9476":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"0:10:2804":{"crate_id":0,"path":["textwrap","core","Fragment"],"kind":"trait"},"6:4914:8727":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:16744:6693":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"6:7580:9427":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:11247:29807":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:7041:6775":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:2387:37330":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:7236:17914":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:2528:6745":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:11690:5707":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:10283:25338":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"18:548:165":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:44009:7779":{"crate_id":2,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"18:698:5488":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:2176:210":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:11230:8081":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"6:517:8459":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:5441:8930":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:43724:7757":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:46257:4567":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:16717:6684":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"17:10860:5513":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:43025:228":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:5591:215":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:11014:39002":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:50899:8011":{"crate_id":2,"path":["core","core_arch","simd","i32x32"],"kind":"struct"},"2:2154:698":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:44399:4945":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:12643:5676":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"16:8609:6788":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:15699:6402":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:4:1295":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:15578:6378":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:4819:234":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"16:6950:6972":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"3:2199:7487":{"crate_id":3,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"6:1625:8587":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"0:271:2553":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm"],"kind":"enum"},"5:1647:7329":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:7070:9630":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:14454:6088":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:13183:5881":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:12765:494":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:4842:8682":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:51266:8039":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:26346:7743":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"17:16350:6596":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:4587:17768":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"4:0:4394":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:49640:7911":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:26269:7736":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"5:3402:7354":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:6186:6844":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:46806:7827":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:5196:6816":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:12825:5846":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"6:5288:8865":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:13836:5955":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:5179:8811":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"}},"external_crates":{"20":{"name":"smawk","html_root_url":"https://docs.rs/smawk/0.3.2/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"unicode_linebreak","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"unicode_width","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":33}