{"root":"0:0:2664","crate_version":"0.16.1","includes_private":false,"index":{"b:2:4055-0:248:3119":{"id":"b:2:4055-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4053:71","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:4057:1938"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:333:3660":{"id":"0:333:3660","crate_id":0,"name":"AsciiSpace","span":{"filename":"src/word_separators.rs","begin":[55,4],"end":[55,14]},"visibility":"default","docs":"Find words by splitting on runs of `' '` characters.\n\n# Examples\n\n```\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::AsciiSpace;\n\nlet words = AsciiSpace.find_words(\"Hello   World!\").collect::<Vec<_>>();\nassert_eq!(words, vec![Word::from(\"Hello   \"),\n                       Word::from(\"World!\")]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:165:739":{"id":"0:165:739","crate_id":0,"name":"eq","span":{"filename":"src/word_separators.rs","begin":[149,4],"end":[156,5]},"visibility":"default","docs":"Compare two word separators.\n\n```\nuse textwrap::WordSeparator;\n\nassert_eq!(WordSeparator::AsciiSpace, WordSeparator::AsciiSpace);\n#[cfg(feature = \"unicode-linebreak\")] {\n    assert_eq!(WordSeparator::UnicodeBreakProperties,\n               WordSeparator::UnicodeBreakProperties);\n}\n```\n\nNote that `WordSeparator::Custom` values never compare equal:\n\n```\nuse textwrap::WordSeparator;\nuse textwrap::core::Word;\nfn word_separator(line: &str) -> Box<dyn Iterator<Item = Word<'_>> + '_> {\n    Box::new(line.split_inclusive(' ').map(Word::from))\n}\nassert_ne!(WordSeparator::Custom(word_separator),\n           WordSeparator::Custom(word_separator));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:214-0:192:2653":{"id":"0:214-0:192:2653","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[234,0],"end":[234,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"wrap::wrap","name":"wrap","id":"0:192:2653","is_glob":false}}},"0:57:60":{"id":"0:57:60","crate_id":0,"name":"default","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[153,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:261:739":{"id":"0:261:739","crate_id":0,"name":"eq","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,29],"end":[22,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2:3188:150":{"id":"2:3188:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}}}}}},"5:819:4355":{"id":"5:819:4355","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"0:267:847":{"id":"0:267:847","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,9],"end":[185,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:116:2657":{"id":"0:116:2657","crate_id":0,"name":"indent","span":{"filename":"src/indentation.rs","begin":[52,0],"end":[75,1]},"visibility":"public","docs":"Indent each line by the given prefix.\n\n# Examples\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\"First line.\\nSecond line.\\n\", \"  \"),\n           \"  First line.\\n  Second line.\\n\");\n```\n\nWhen indenting, trailing whitespace is stripped from the prefix.\nThis means that empty lines remain empty afterwards:\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\"First line.\\n\\n\\nSecond line.\\n\", \"  \"),\n           \"  First line.\\n\\n\\n  Second line.\\n\");\n```\n\nNotice how `\"\\n\\n\\n\"` remained as `\"\\n\\n\\n\"`.\n\nThis feature is useful when you want to indent text and have a\nspace between your prefix and the text. In this case, you _don't_\nwant a trailing space on empty lines:\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\"foo = 123\\n\\nprint(foo)\\n\", \"# \"),\n           \"# foo = 123\\n#\\n# print(foo)\\n\");\n```\n\nNotice how `\"\\n\\n\"` became `\"\\n#\\n\"` instead of `\"\\n# \\n\"` which\nwould have trailing whitespace.\n\nLeading and trailing whitespace coming from the text itself is\nkept unchanged:\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\" \\t  Foo   \", \"->\"), \"-> \\t  Foo   \");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["prefix",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7976:259","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"2:3189:1925":{"id":"2:3189:1925","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:46033:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:10:2912":{"id":"0:10:2912","crate_id":0,"name":"Fragment","span":{"filename":"src/core.rs","begin":[221,0],"end":[232,1]},"visibility":"public","docs":"A (text) fragment denotes the unit which we wrap into lines.\n\nFragments represent an abstract _word_ plus the _whitespace_\nfollowing the word. In case the word falls at the end of the line,\nthe whitespace is dropped and a so-called _penalty_ is inserted\ninstead (typically `\"-\"` if the word was hyphenated).\n\nFor wrapping purposes, the precise content of the word, the\nwhitespace, and the penalty is irrelevant. All we need to know is\nthe displayed width of each part, which this trait provides.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:11:2838","0:12:2916","0:13:2919"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"std::fmt::Debug","id":"2:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:25"]}}},"2:3181:878":{"id":"2:3181:878","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:3190-0:332:2661":{"id":"b:2:3190-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3193:150","2:3194:1923"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:321:3855":{"id":"0:321:3855","crate_id":0,"name":"subsequent_indent","span":{"filename":"src/options.rs","begin":[18,4],"end":[18,34]},"visibility":"public","docs":"Indentation used for subsequent lines of output. See the\n[`Options::subsequent_indent`] method.","links":{"`Options::subsequent_indent`":"0:145:3855"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}}},"0:15:265":{"id":"0:15:265","crate_id":0,"name":"Target","span":{"filename":"src/core.rs","begin":[251,4],"end":[251,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"primitive":"str"}}}},"0:16:668":{"id":"0:16:668","crate_id":0,"name":"deref","span":{"filename":"src/core.rs","begin":[253,4],"end":[255,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3642:128","args":null}}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[35,0],"end":[48,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["0:135:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"a:2:36049:4686-0:248:3119":{"id":"a:2:36049:4686-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36049:4686","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:215-0:273:2663":{"id":"0:215-0:273:2663","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[235,0],"end":[235,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"wrap_algorithms::WrapAlgorithm","name":"WrapAlgorithm","id":"0:273:2663","is_glob":false}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,22],"end":[238,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["0:229:508"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:208-0:316:2659":{"id":"0:208-0:316:2659","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[228,0],"end":[228,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"options::Options","name":"Options","id":"0:316:2659","is_glob":false}}},"2:4057:1938":{"id":"2:4057:1938","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:43492:7602","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,40],"end":[7,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2957:147","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:148:3690":{"id":"0:148:3690","crate_id":0,"name":"wrap_algorithm","span":{"filename":"src/options.rs","begin":[236,4],"end":[241,5]},"visibility":"public","docs":"Change [`self.wrap_algorithm`].\n\nSee the [`WrapAlgorithm`] trait for details on the choices.\n\n[`self.wrap_algorithm`]: #structfield.wrap_algorithm","links":{"`WrapAlgorithm`":"0:273:2663"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["wrap_algorithm",{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:2:35991:251-0:332:2661":{"id":"a:2:35991:251-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:3190-0:264:3118":{"id":"b:2:3190-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3193:150","2:3194:1923"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:2664":{"id":"0:0:2664","crate_id":0,"name":"textwrap","span":{"filename":"src/lib.rs","begin":[1,0],"end":[235,39]},"visibility":"public","docs":"The textwrap library provides functions for word wrapping and\nindenting text.\n\n# Wrapping Text\n\nWrapping text can be very useful in command-line programs where\nyou want to format dynamic output nicely so it looks good in a\nterminal. A quick example:\n\n```\n# #[cfg(feature = \"smawk\")] {\nlet text = \"textwrap: a small library for wrapping text.\";\nassert_eq!(textwrap::wrap(text, 18),\n           vec![\"textwrap: a\",\n                \"small library for\",\n                \"wrapping text.\"]);\n# }\n```\n\nThe [`wrap()`] function returns the individual lines, use\n[`fill()`] is you want the lines joined with `'\\n'` to form a\n`String`.\n\nIf you enable the `hyphenation` Cargo feature, you can get\nautomatic hyphenation for a number of languages:\n\n```\n#[cfg(feature = \"hyphenation\")] {\nuse hyphenation::{Language, Load, Standard};\nuse textwrap::{wrap, Options, WordSplitter};\n\nlet text = \"textwrap: a small library for wrapping text.\";\nlet dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();\nlet options = Options::new(18).word_splitter(WordSplitter::Hyphenation(dictionary));\nassert_eq!(wrap(text, &options),\n           vec![\"textwrap: a small\",\n                \"library for wrap-\",\n                \"ping text.\"]);\n}\n```\n\nSee also the [`unfill()`] and [`refill()`] functions which allow\nyou to manipulate already wrapped text.\n\n## Wrapping Strings at Compile Time\n\nIf your strings are known at compile time, please take a look at\nthe procedural macros from the [textwrap-macros] crate.\n\n## Displayed Width vs Byte Size\n\nTo word wrap text, one must know the width of each word so one can\nknow when to break lines. This library will by default measure the\nwidth of text using the _displayed width_, not the size in bytes.\nThe `unicode-width` Cargo feature controls this.\n\nThis is important for non-ASCII text. ASCII characters such as `a`\nand `!` are simple and take up one column each. This means that\nthe displayed width is equal to the string length in bytes.\nHowever, non-ASCII characters and symbols take up more than one\nbyte when UTF-8 encoded: `é` is `0xc3 0xa9` (two bytes) and `⚙` is\n`0xe2 0x9a 0x99` (three bytes) in UTF-8, respectively.\n\nThis is why we take care to use the displayed width instead of the\nbyte count when computing line lengths. All functions in this\nlibrary handle Unicode characters like this when the\n`unicode-width` Cargo feature is enabled (it is enabled by\ndefault).\n\n# Indentation and Dedentation\n\nThe textwrap library also offers functions for adding a prefix to\nevery line of a string and to remove leading whitespace. As an\nexample, [`indent()`] allows you to turn lines of text into a\nbullet list:\n\n```\nlet before = \"\\\nfoo\nbar\nbaz\n\";\nlet after = \"\\\n* foo\n* bar\n* baz\n\";\nassert_eq!(textwrap::indent(before, \"* \"), after);\n```\n\nRemoving leading whitespace is done with [`dedent()`]:\n\n```\nlet before = \"\n    Some\n      indented\n        text\n\";\nlet after = \"\nSome\n  indented\n    text\n\";\nassert_eq!(textwrap::dedent(before), after);\n```\n\n# Cargo Features\n\nThe textwrap library can be slimmed down as needed via a number of\nCargo features. This means you only pay for the features you\nactually use.\n\nThe full dependency graph, where dashed lines indicate optional\ndependencies, is shown below:\n\n<img src=\"https://raw.githubusercontent.com/mgeisler/textwrap/master/images/textwrap-0.16.1.svg\">\n\n## Default Features\n\nThese features are enabled by default:\n\n* `unicode-linebreak`: enables finding words using the\n  [unicode-linebreak] crate, which implements the line breaking\n  algorithm described in [Unicode Standard Annex\n  #14](https://www.unicode.org/reports/tr14/).\n\n  This feature can be disabled if you are happy to find words\n  separated by ASCII space characters only. People wrapping text\n  with emojis or East-Asian characters will want most likely want\n  to enable this feature. See [`WordSeparator`] for details.\n\n* `unicode-width`: enables correct width computation of non-ASCII\n  characters via the [unicode-width] crate. Without this feature,\n  every [`char`] is 1 column wide, except for emojis which are 2\n  columns wide. See [`core::display_width()`] for details.\n\n  This feature can be disabled if you only need to wrap ASCII\n  text, or if the functions in [`core`] are used directly with\n  [`core::Fragment`]s for which the widths have been computed in\n  other ways.\n\n* `smawk`: enables linear-time wrapping of the whole paragraph via\n  the [smawk] crate. See [`wrap_algorithms::wrap_optimal_fit()`]\n  for details on the optimal-fit algorithm.\n\n  This feature can be disabled if you only ever intend to use\n  [`wrap_algorithms::wrap_first_fit()`].\n\n<!-- begin binary-sizes -->\n\nWith Rust 1.64.0, the size impact of the above features on your\nbinary is as follows:\n\n| Configuration                            |  Binary Size |    Delta |\n| :---                                     |         ---: |     ---: |\n| quick-and-dirty implementation           |       289 KB |     — KB |\n| textwrap without default features        |       305 KB |    16 KB |\n| textwrap with smawk                      |       317 KB |    28 KB |\n| textwrap with unicode-width              |       309 KB |    20 KB |\n| textwrap with unicode-linebreak          |       342 KB |    53 KB |\n\n<!-- end binary-sizes -->\n\nThe above sizes are the stripped sizes and the binary is compiled\nin release mode with this profile:\n\n```toml\n[profile.release]\nlto = true\ncodegen-units = 1\n```\n\nSee the [binary-sizes demo] if you want to reproduce these\nresults.\n\n## Optional Features\n\nThese Cargo features enable new functionality:\n\n* `terminal_size`: enables automatic detection of the terminal\n  width via the [terminal_size] crate. See\n  [`Options::with_termwidth()`] for details.\n\n* `hyphenation`: enables language-sensitive hyphenation via the\n  [hyphenation] crate. See the [`word_splitters::WordSplitter`]\n  trait for details.\n\n[unicode-linebreak]: https://docs.rs/unicode-linebreak/\n[unicode-width]: https://docs.rs/unicode-width/\n[smawk]: https://docs.rs/smawk/\n[binary-sizes demo]: https://github.com/mgeisler/textwrap/tree/master/examples/binary-sizes\n[textwrap-macros]: https://docs.rs/textwrap-macros/\n[terminal_size]: https://docs.rs/terminal_size/\n[hyphenation]: https://docs.rs/hyphenation/","links":{"`dedent()`":"0:117:2656","`refill()`":"0:158:2650","`char`":"1:12835:504","`word_splitters::WordSplitter`":"0:238:2662","`wrap_algorithms::wrap_optimal_fit()`":"0:67:3117","`WordSeparator`":"0:332:2661","`wrap_algorithms::wrap_first_fit()`":"0:92:3185","`wrap()`":"0:192:2653","`core::Fragment`":"0:10:2912","`core::display_width()`":"0:9:2902","`unfill()`":"0:157:2660","`core`":"0:3:597","`indent()`":"0:116:2657","`fill()`":"0:109:2647"},"attrs":["#![doc(html_root_url = \"https://docs.rs/textwrap/0.16.1\")]","#![forbid(unsafe_code)]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![allow(clippy::redundant_field_names)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3:597","0:32:2644","0:50:2645","0:200-0:100:2654","0:202-0:109:2647","0:203-0:113:2655","0:205-0:117:2656","0:206-0:116:2657","0:207-0:289:2658","0:208-0:316:2659","0:210-0:158:2650","0:211-0:157:2660","0:212-0:332:2661","0:213-0:238:2662","0:214-0:192:2653","0:215-0:273:2663"],"is_stripped":false}}},"a:2:36049:4686-0:273:2663":{"id":"a:2:36049:4686-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36049:4686","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:234:739":{"id":"0:234:739","crate_id":0,"name":"eq","span":{"filename":"src/core.rs","begin":[238,29],"end":[238,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:3175-0:264:3118":{"id":"b:2:3175-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3178:3550"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3408:263-0:216:2923":{"id":"a:2:3408:263-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:2863-0:316:2659":{"id":"b:2:2863-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2857:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:2865:3406"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:817-0:238:2662":{"id":"b:5:817-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:813:266","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["5:819:4355","5:820:4356","5:821:5004"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:45862:10998-0:238:2662":{"id":"a:2:45862:10998-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45862:10998","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,40],"end":[238,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2957:147","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:2:3185-0:289:2658":{"id":"b:2:3185-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3155:274","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3188:150","2:3189:1925"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:247:508":{"id":"0:247:508","crate_id":0,"name":"clone","span":{"filename":"src/word_splitters.rs","begin":[36,9],"end":[36,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:75-0:248:3119":{"id":"0:75-0:248:3119","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[23,55],"end":[23,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"use":{"source":"optimal_fit::Penalties","name":"Penalties","id":"0:248:3119","is_glob":false}}},"0:167:847":{"id":"0:167:847","crate_id":0,"name":"fmt","span":{"filename":"src/word_separators.rs","begin":[160,4],"end":[167,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:332:2661":{"id":"0:332:2661","crate_id":0,"name":"WordSeparator","span":{"filename":"src/word_separators.rs","begin":[42,0],"end":[123,1]},"visibility":"public","docs":"Describes where words occur in a line of text.\n\nThe simplest approach is say that words are separated by one or\nmore ASCII spaces (`' '`). This works for Western languages\nwithout emojis. A more complex approach is to use the Unicode line\nbreaking algorithm, which finds break points in non-ASCII text.\n\nThe line breaks occur between words, please see\n[`WordSplitter`](crate::WordSplitter) for options of how to handle\nhyphenation of individual words.\n\n# Examples\n\n```\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::AsciiSpace;\n\nlet words = AsciiSpace.find_words(\"Hello World!\").collect::<Vec<_>>();\nassert_eq!(words, vec![Word::from(\"Hello \"), Word::from(\"World!\")]);\n```","links":{"crate::WordSplitter":"0:238:2662"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":["0:333:3660","0:335:4139","0:337:3035"],"impls":["0:168","a:2:35991:251-0:332:2661","a:2:3408:263-0:332:2661","a:2:3443:4842-0:332:2661","a:2:36049:4686-0:332:2661","a:2:45861:10797-0:332:2661","a:2:45862:10998-0:332:2661","b:2:2860-0:332:2661","b:2:2863-0:332:2661","b:2:2918-0:332:2661","b:2:3175-0:332:2661","b:2:3179-0:332:2661","b:2:3185-0:332:2661","b:2:3190-0:332:2661","b:2:4055-0:332:2661","b:5:817-0:332:2661","0:340","0:342","0:164","0:166"]}}},"0:290:3826":{"id":"0:290:3826","crate_id":0,"name":"CRLF","span":{"filename":"src/line_ending.rs","begin":[12,4],"end":[12,8]},"visibility":"default","docs":"_Carriage return and line feed_ – a line ending sequence\nhistorically used in Windows. Corresponds to the sequence\nof ASCII control characters `0x0D 0x0A` or `\\r\\n`","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:273:2663":{"id":"0:273:2663","crate_id":0,"name":"WrapAlgorithm","span":{"filename":"src/wrap_algorithms.rs","begin":[36,0],"end":[90,1]},"visibility":"public","docs":"Describes how to wrap words into lines.\n\nThe simplest approach is to wrap words one word at a time and\naccept the first way of wrapping which fit\n([`WrapAlgorithm::FirstFit`]). If the `smawk` Cargo feature is\nenabled, a more complex algorithm is available which will look at\nan entire paragraph at a time in order to find optimal line breaks\n([`WrapAlgorithm::OptimalFit`]).","links":{"`WrapAlgorithm::OptimalFit`":"0:276:3140","`WrapAlgorithm::FirstFit`":"0:274:3131"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":["0:274:3131","0:276:3140","0:279:3035"],"impls":["0:83","a:2:35991:251-0:273:2663","a:2:3408:263-0:273:2663","a:2:3443:4842-0:273:2663","a:2:36049:4686-0:273:2663","a:2:45861:10797-0:273:2663","a:2:45862:10998-0:273:2663","b:2:2860-0:273:2663","b:2:2863-0:273:2663","b:2:2918-0:273:2663","b:2:3175-0:273:2663","b:2:3179-0:273:2663","b:2:3185-0:273:2663","b:2:3190-0:273:2663","b:2:4055-0:273:2663","b:5:817-0:273:2663","0:284","0:288","0:79","0:81","0:90"]}}},"b:2:4055-0:238:2662":{"id":"b:2:4055-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4053:71","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:4057:1938"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:232":{"id":"0:232","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,29],"end":[238,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2952:213","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["0:234:739"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[127,0],"end":[173,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:41:3057"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:2:3175-0:273:2663":{"id":"b:2:3175-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3178:3550"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3408:263-0:289:2658":{"id":"a:2:3408:263-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:2860-0:332:2661":{"id":"b:2:2860-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2854:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2862:3408"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3175-0:248:3119":{"id":"b:2:3175-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3178:3550"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[258,0],"end":[326,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["0:19:878","0:20:2945"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[122,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:82:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2:2862:3408":{"id":"2:2862:3408","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:2:45862:10998-0:332:2661":{"id":"a:2:45862:10998-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45862:10998","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"a:2:36049:4686-0:264:3118":{"id":"a:2:36049:4686-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36049:4686","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:5:817-0:316:2659":{"id":"b:5:817-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:813:266","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["5:819:4355","5:820:4356","5:821:5004"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:316:2659":{"id":"0:316:2659","crate_id":0,"name":"Options","span":{"filename":"src/options.rs","begin":[8,0],"end":[33,1]},"visibility":"public","docs":"Holds configuration options for wrapping and filling text.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:318:2838","0:319:2649","0:320:3613","0:321:3855","0:322:2955","0:323:3690","0:324:3863","0:325:3077"],"has_stripped_fields":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:139","a:2:35991:251-0:316:2659","a:2:3408:263-0:316:2659","a:2:3443:4842-0:316:2659","a:2:36049:4686-0:316:2659","a:2:45861:10797-0:316:2659","a:2:45862:10998-0:316:2659","b:2:2860-0:316:2659","b:2:2863-0:316:2659","b:2:2918-0:316:2659","b:2:3175-0:316:2659","b:2:3179-0:316:2659","b:2:3185-0:316:2659","b:2:3190-0:316:2659","b:2:4055-0:316:2659","b:5:817-0:316:2659","0:326","0:329","0:133","0:136"]}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[193,0],"end":[197,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3227:127","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:91:60"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"5:6135:1898":{"id":"5:6135:1898","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7976:259","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:143:2838":{"id":"0:143:2838","crate_id":0,"name":"width","span":{"filename":"src/options.rs","begin":[124,4],"end":[126,5]},"visibility":"public","docs":"Set [`self.width`] to the given value.\n\n[`self.width`]: #structfield.width","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["width",{"primitive":"usize"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:320:3613":{"id":"0:320:3613","crate_id":0,"name":"initial_indent","span":{"filename":"src/options.rs","begin":[15,4],"end":[15,31]},"visibility":"public","docs":"Indentation used for the first line of output. See the\n[`Options::initial_indent`] method.","links":{"`Options::initial_indent`":"0:144:3613"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}}},"b:5:817-0:216:2923":{"id":"b:5:817-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:813:266","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["5:819:4355","5:820:4356","5:821:5004"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[101,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:37:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[36,9],"end":[36,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:247:508"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:74-0:264:3118":{"id":"0:74-0:264:3118","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[23,40],"end":[23,53]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"use":{"source":"optimal_fit::OverflowError","name":"OverflowError","id":"0:264:3118","is_glob":false}}},"b:2:4055-0:273:2663":{"id":"b:2:4055-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4053:71","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:4057:1938"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:50:2645":{"id":"0:50:2645","crate_id":0,"name":"wrap_algorithms","span":{"filename":"src/wrap_algorithms.rs","begin":[1,0],"end":[413,1]},"visibility":"public","docs":"Word wrapping algorithms.\n\nAfter a text has been broken into words (or [`Fragment`]s), one\nnow has to decide how to break the fragments into lines. The\nsimplest algorithm for this is implemented by\n[`wrap_first_fit()`]: it uses no look-ahead and simply adds\nfragments to the line as long as they fit. However, this can lead\nto poor line breaks if a large fragment almost-but-not-quite fits\non a line. When that happens, the fragment is moved to the next\nline and it will leave behind a large gap.\n\nA more advanced algorithm, implemented by [`wrap_optimal_fit()`],\nwill take this into account. The optimal-fit algorithm considers\nall possible line breaks and will attempt to minimize the gaps\nleft behind by overly short lines.\n\nWhile both algorithms run in linear time, the first-fit algorithm\nis about 4 times faster than the optimal-fit algorithm.","links":{"`Fragment`":"0:10:2912","`wrap_optimal_fit()`":"0:67:3117","`wrap_first_fit()`":"0:92:3185"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:73-0:67:3117","0:74-0:264:3118","0:75-0:248:3119","0:273:2663","0:92:3185"],"is_stripped":false}}},"0:135:878":{"id":"0:135:878","crate_id":0,"name":"from","span":{"filename":"src/options.rs","begin":[36,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["options",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:2863-0:264:3118":{"id":"b:2:2863-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2857:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2865:3406"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[18,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:122:359"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:2:3190-0:238:2662":{"id":"b:2:3190-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3193:150","2:3194:1923"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:279:3035":{"id":"0:279:3035","crate_id":0,"name":"Custom","span":{"filename":"src/wrap_algorithms.rs","begin":[89,4],"end":[89,98]},"visibility":"default","docs":"Custom wrapping function.\n\nUse this if you want to implement your own wrapping algorithm.\nThe function can freely decide how to turn a slice of\n[`Word`]s into lines.\n\n# Example\n\n```\nuse textwrap::core::Word;\nuse textwrap::{wrap, Options, WrapAlgorithm};\n\nfn stair<'a, 'b>(words: &'b [Word<'a>], _: &'b [usize]) -> Vec<&'b [Word<'a>]> {\n    let mut lines = Vec::new();\n    let mut step = 1;\n    let mut start_idx = 0;\n    while start_idx + step <= words.len() {\n      lines.push(&words[start_idx .. start_idx+step]);\n      start_idx += step;\n      step += 1;\n    }\n    lines\n}\n\nlet options = Options::new(10).wrap_algorithm(WrapAlgorithm::Custom(stair));\nassert_eq!(wrap(\"First, second, third, fourth, fifth, sixth\", options),\n           vec![\"First,\",\n                \"second, third,\",\n                \"fourth, fifth, sixth\"]);\n```","links":{"`Word`":"0:216:2923"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:281:2107"]},"discriminant":null}}},"a:2:3408:263-0:238:2662":{"id":"a:2:3408:263-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:41:3057":{"id":"0:41:3057","crate_id":0,"name":"split_points","span":{"filename":"src/word_splitters.rs","begin":[143,4],"end":[172,5]},"visibility":"public","docs":"Return all possible indices where `word` can be split.\n\nThe indices are in the range `0..word.len()`. They point to\nthe index _after_ the split point, i.e., after `-` if\nsplitting on hyphens. This way, `word.split_at(idx)` will\nbreak the word into two well-formed pieces.\n\n# Examples\n\n```\nuse textwrap::WordSplitter;\nassert_eq!(WordSplitter::NoHyphenation.split_points(\"cannot-be-split\"), vec![]);\nassert_eq!(WordSplitter::HyphenSplitter.split_points(\"can-be-split\"), vec![4, 7]);\nassert_eq!(WordSplitter::Custom(|word| vec![word.len()/2]).split_points(\"middle\"), vec![3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["word",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7390:282","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:2:45862:10998-0:289:2658":{"id":"a:2:45862:10998-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45862:10998","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:342":{"id":"0:342","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[41,16],"end":[41,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3403:121","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,29],"end":[22,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:35993:260","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:335:4139":{"id":"0:335:4139","crate_id":0,"name":"UnicodeBreakProperties","span":{"filename":"src/word_separators.rs","begin":[119,4],"end":[119,26]},"visibility":"default","docs":"Split `line` into words using Unicode break properties.\n\nThis word separator uses the Unicode line breaking algorithm\ndescribed in [Unicode Standard Annex\n#14](https://www.unicode.org/reports/tr14/) to find legal places\nto break lines. There is a small difference in that the U+002D\n(Hyphen-Minus) and U+00AD (Soft Hyphen) don’t create a line break:\nto allow a line break at a hyphen, use\n[`WordSplitter::HyphenSplitter`](crate::WordSplitter::HyphenSplitter).\nSoft hyphens are not currently supported.\n\n# Examples\n\nUnlike [`WordSeparator::AsciiSpace`], the Unicode line\nbreaking algorithm will find line break opportunities between\nsome characters with no intervening whitespace:\n\n```\n#[cfg(feature = \"unicode-linebreak\")] {\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::UnicodeBreakProperties;\n\nassert_eq!(UnicodeBreakProperties.find_words(\"Emojis: 😂😍\").collect::<Vec<_>>(),\n           vec![Word::from(\"Emojis: \"),\n                Word::from(\"😂\"),\n                Word::from(\"😍\")]);\n\nassert_eq!(UnicodeBreakProperties.find_words(\"CJK: 你好\").collect::<Vec<_>>(),\n           vec![Word::from(\"CJK: \"),\n                Word::from(\"你\"),\n                Word::from(\"好\")]);\n}\n```\n\nA U+2060 (Word Joiner) character can be inserted if you want to\nmanually override the defaults and keep the characters together:\n\n```\n#[cfg(feature = \"unicode-linebreak\")] {\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::UnicodeBreakProperties;\n\nassert_eq!(UnicodeBreakProperties.find_words(\"Emojis: 😂\\u{2060}😍\").collect::<Vec<_>>(),\n           vec![Word::from(\"Emojis: \"),\n                Word::from(\"😂\\u{2060}😍\")]);\n}\n```\n\nThe Unicode line breaking algorithm will also automatically\nsuppress break breaks around certain punctuation characters::\n\n```\n#[cfg(feature = \"unicode-linebreak\")] {\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::UnicodeBreakProperties;\n\nassert_eq!(UnicodeBreakProperties.find_words(\"[ foo ] bar !\").collect::<Vec<_>>(),\n           vec![Word::from(\"[ foo ] \"),\n                Word::from(\"bar !\")]);\n}\n```","links":{"`WordSeparator::AsciiSpace`":"0:333:3660","crate::WordSplitter::HyphenSplitter":"0:241:3026"},"attrs":["#[cfg(feature = \"unicode-linebreak\")]"],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3175-0:332:2661":{"id":"b:2:3175-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3178:3550"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:252:3389":{"id":"0:252:3389","crate_id":0,"name":"short_last_line_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[128,4],"end":[128,38]},"visibility":"public","docs":"Penalty for a last line with a single short word.\n\nSet this to zero if you do not want to penalize short last lines.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:45862:10998-0:273:2663":{"id":"a:2:45862:10998-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45862:10998","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:109:2647":{"id":"0:109:2647","crate_id":0,"name":"fill","span":{"filename":"src/fill.rs","begin":[36,0],"end":[47,1]},"visibility":"public","docs":"Fill a line of text at a given width.\n\nThe result is a [`String`], complete with newlines between each\nline. Use [`wrap()`] if you need access to the individual lines.\n\nThe easiest way to use this function is to pass an integer for\n`width_or_options`:\n\n```\nuse textwrap::fill;\n\nassert_eq!(\n    fill(\"Memory safety without garbage collection.\", 15),\n    \"Memory safety\\nwithout garbage\\ncollection.\"\n);\n```\n\nIf you need to customize the wrapping, you can pass an [`Options`]\ninstead of an `usize`:\n\n```\nuse textwrap::{fill, Options};\n\nlet options = Options::new(15)\n    .initial_indent(\"- \")\n    .subsequent_indent(\"  \");\nassert_eq!(\n    fill(\"Memory safety without garbage collection.\", &options),\n    \"- Memory safety\\n  without\\n  garbage\\n  collection.\"\n);\n```","links":{"`wrap()`":"0:192:2653","`Options`":"0:316:2659","`String`":"5:7976:259"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["width_or_options",{"generic":"Opt"}]],"output":{"resolved_path":{"name":"String","id":"5:7976:259","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:274:3131":{"id":"0:274:3131","crate_id":0,"name":"FirstFit","span":{"filename":"src/wrap_algorithms.rs","begin":[42,4],"end":[42,12]},"visibility":"default","docs":"Wrap words using a fast and simple algorithm.\n\nThis algorithm uses no look-ahead when finding line breaks.\nImplemented by [`wrap_first_fit()`], please see that function\nfor details and examples.","links":{"`wrap_first_fit()`":"0:92:3185"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:100:2654":{"id":"0:100:2654","crate_id":0,"name":"wrap_columns","span":{"filename":"src/columns.rs","begin":[63,0],"end":[114,1]},"visibility":"public","docs":"Wrap text into columns with a given total width.\n\nThe `left_gap`, `middle_gap` and `right_gap` arguments specify the\nstrings to insert before, between, and after the columns. The\ntotal width of all columns and all gaps is specified using the\n`total_width_or_options` argument. This argument can simply be an\ninteger if you want to use default settings when wrapping, or it\ncan be a [`Options`] value if you want to customize the wrapping.\n\nIf the columns are narrow, it is recommended to set\n[`Options::break_words`] to `true` to prevent words from\nprotruding into the margins.\n\nThe per-column width is computed like this:\n\n```\n# let (left_gap, middle_gap, right_gap) = (\"\", \"\", \"\");\n# let columns = 2;\n# let options = textwrap::Options::new(80);\nlet inner_width = options.width\n    - textwrap::core::display_width(left_gap)\n    - textwrap::core::display_width(right_gap)\n    - textwrap::core::display_width(middle_gap) * (columns - 1);\nlet column_width = inner_width / columns;\n```\n\nThe `text` is wrapped using [`wrap()`] and the given `options`\nargument, but the width is overwritten to the computed\n`column_width`.\n\n# Panics\n\nPanics if `columns` is zero.\n\n# Examples\n\n```\nuse textwrap::wrap_columns;\n\nlet text = \"\\\nThis is an example text, which is wrapped into three columns. \\\nNotice how the final column can be shorter than the others.\";\n\n#[cfg(feature = \"smawk\")]\nassert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),\n           vec![\"| This is       | into three    | column can be  |\",\n                \"| an example    | columns.      | shorter than   |\",\n                \"| text, which   | Notice how    | the others.    |\",\n                \"| is wrapped    | the final     |                |\"]);\n\n// Without the `smawk` feature, the middle column is a little more uneven:\n#[cfg(not(feature = \"smawk\"))]\nassert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),\n           vec![\"| This is an    | three         | column can be  |\",\n                \"| example text, | columns.      | shorter than   |\",\n                \"| which is      | Notice how    | the others.    |\",\n                \"| wrapped into  | the final     |                |\"]);","links":{"`Options::break_words`":"0:146:2955","`wrap()`":"0:192:2653","`Options`":"0:316:2659"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["columns",{"primitive":"usize"}],["total_width_or_options",{"generic":"Opt"}],["left_gap",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["middle_gap",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["right_gap",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7390:282","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7976:259","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:2860-0:216:2923":{"id":"b:2:2860-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2854:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:2862:3408"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3190-0:248:3119":{"id":"b:2:3190-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3193:150","2:3194:1923"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3408:263-0:248:3119":{"id":"a:2:3408:263-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,29],"end":[22,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2952:213","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:261:739"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[35,9],"end":[35,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:285:508"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"a:2:35991:251-0:316:2659":{"id":"a:2:35991:251-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"a:2:3443:4842-0:316:2659":{"id":"a:2:3443:4842-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3443:4842","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:340":{"id":"0:340","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:341:508"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,22],"end":[22,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:258:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2:3178:3550":{"id":"2:3178:3550","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3152:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:2860-0:238:2662":{"id":"b:2:2860-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2854:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2862:3408"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:35991:251-0:273:2663":{"id":"a:2:35991:251-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:249:3323":{"id":"0:249:3323","crate_id":0,"name":"nline_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[26,4],"end":[26,28]},"visibility":"public","docs":"Per-line penalty. This is added for every line, which makes it\nexpensive to output more lines than the minimum required.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:4055-0:264:3118":{"id":"b:2:4055-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4053:71","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:4057:1938"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:331:508":{"id":"0:331:508","crate_id":0,"name":"clone","span":{"filename":"src/options.rs","begin":[7,16],"end":[7,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:2918-0:332:2661":{"id":"b:2:2918-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2916:4849","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2920:29529"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[134,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:55:1249"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2:3193:150":{"id":"2:3193:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"name":"Infallible","id":"2:35915:8453","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}},"a:2:45861:10797-0:216:2923":{"id":"a:2:45861:10797-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45861:10797","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:2918-0:248:3119":{"id":"b:2:2918-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2916:4849","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2920:29529"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,40],"end":[22,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2957:147","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"a:2:35991:251-0:264:3118":{"id":"a:2:35991:251-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"a:2:3408:263-0:264:3118":{"id":"a:2:3408:263-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:2918-0:289:2658":{"id":"b:2:2918-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2916:4849","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2920:29529"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2860-0:264:3118":{"id":"b:2:2860-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2854:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2862:3408"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2863-0:273:2663":{"id":"b:2:2863-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2857:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2865:3406"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:299":{"id":"0:299","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,29],"end":[7,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:35993:260","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2:3194:1923":{"id":"2:3194:1923","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:46033:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"constraints":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:3185-0:273:2663":{"id":"b:2:3185-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3155:274","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3188:150","2:3189:1925"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:271":{"id":"0:271","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,27],"end":[185,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2957:147","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:281:2107":{"id":"0:281:2107","crate_id":0,"name":"0","span":{"filename":"src/wrap_algorithms.rs","begin":[89,11],"end":[89,97]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"function_pointer":{"sig":{"inputs":[["words",{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"slice":{"resolved_path":{"name":"crate::core::Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}}],["line_widths",{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"slice":{"primitive":"usize"}}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7390:282","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"slice":{"resolved_path":{"name":"crate::core::Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"}}}}},"0:32:2644":{"id":"0:32:2644","crate_id":0,"name":"word_splitters","span":{"filename":"src/word_splitters.rs","begin":[1,0],"end":[314,1]},"visibility":"public","docs":"Word splitting functionality.\n\nTo wrap text into lines, long words sometimes need to be split\nacross lines. The [`WordSplitter`] enum defines this\nfunctionality.","links":{"`WordSplitter`":"0:238:2662"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:238:2662","0:44:3076"],"is_stripped":false}}},"0:86:2653":{"id":"0:86:2653","crate_id":0,"name":"wrap","span":{"filename":"src/wrap_algorithms.rs","begin":[167,4],"end":[190,5]},"visibility":"public","docs":"Wrap words according to line widths.\n\nThe `line_widths` slice gives the target line width for each\nline (the last slice element is repeated as necessary). This\ncan be used to implement hanging indentation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["words",{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"slice":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}}],["line_widths",{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"slice":{"primitive":"usize"}}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7390:282","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"slice":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:323:3690":{"id":"0:323:3690","crate_id":0,"name":"wrap_algorithm","span":{"filename":"src/options.rs","begin":[25,4],"end":[25,37]},"visibility":"public","docs":"Wrapping algorithm to use, see the implementations of the\n[`WrapAlgorithm`] trait for details.","links":{"`WrapAlgorithm`":"0:273:2663"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"0:122:359":{"id":"0:122:359","crate_id":0,"name":"as_str","span":{"filename":"src/line_ending.rs","begin":[21,4],"end":[26,5]},"visibility":"public","docs":"Turns this [`LineEnding`] value into its ASCII representation.","links":{"`LineEnding`":"0:289:2658"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'static","is_mutable":false,"type":{"primitive":"str"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:341:508":{"id":"0:341:508","crate_id":0,"name":"clone","span":{"filename":"src/word_separators.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:92:3185":{"id":"0:92:3185","crate_id":0,"name":"wrap_first_fit","span":{"filename":"src/wrap_algorithms.rs","begin":[347,0],"end":[371,1]},"visibility":"public","docs":"Wrap abstract fragments into lines with a first-fit algorithm.\n\nThe `line_widths` slice gives the target line width for each line\n(the last slice element is repeated as necessary). This can be\nused to implement hanging indentation.\n\nThe fragments must already have been split into the desired\nwidths, this function will not (and cannot) attempt to split them\nfurther when arranging them into lines.\n\n# First-Fit Algorithm\n\nThis implements a simple “greedy” algorithm: accumulate fragments\none by one and when a fragment no longer fits, start a new line.\nThere is no look-ahead, we simply take first fit of the fragments\nwe find.\n\nWhile fast and predictable, this algorithm can produce poor line\nbreaks when a long fragment is moved to a new line, leaving behind\na large gap:\n\n```\nuse textwrap::core::Word;\nuse textwrap::wrap_algorithms::wrap_first_fit;\nuse textwrap::WordSeparator;\n\n// Helper to convert wrapped lines to a Vec<String>.\nfn lines_to_strings(lines: Vec<&[Word<'_>]>) -> Vec<String> {\n    lines.iter().map(|line| {\n        line.iter().map(|word| &**word).collect::<Vec<_>>().join(\" \")\n    }).collect::<Vec<_>>()\n}\n\nlet text = \"These few words will unfortunately not wrap nicely.\";\nlet words = WordSeparator::AsciiSpace.find_words(text).collect::<Vec<_>>();\nassert_eq!(lines_to_strings(wrap_first_fit(&words, &[15.0])),\n           vec![\"These few words\",\n                \"will\",  // <-- short line\n                \"unfortunately\",\n                \"not wrap\",\n                \"nicely.\"]);\n\n// We can avoid the short line if we look ahead:\n#[cfg(feature = \"smawk\")]\nuse textwrap::wrap_algorithms::{wrap_optimal_fit, Penalties};\n#[cfg(feature = \"smawk\")]\nassert_eq!(lines_to_strings(wrap_optimal_fit(&words, &[15.0], &Penalties::new()).unwrap()),\n           vec![\"These few\",\n                \"words will\",\n                \"unfortunately\",\n                \"not wrap\",\n                \"nicely.\"]);\n```\n\nThe [`wrap_optimal_fit()`] function was used above to get better\nline breaks. It uses an advanced algorithm which tries to avoid\nshort lines. This function is about 4 times faster than\n[`wrap_optimal_fit()`].\n\n# Examples\n\nImagine you're building a house site and you have a number of\ntasks you need to execute. Things like pour foundation, complete\nframing, install plumbing, electric cabling, install insulation.\n\nThe construction workers can only work during daytime, so they\nneed to pack up everything at night. Because they need to secure\ntheir tools and move machines back to the garage, this process\ntakes much more time than the time it would take them to simply\nswitch to another task.\n\nYou would like to make a list of tasks to execute every day based\non your estimates. You can model this with a program like this:\n\n```\nuse textwrap::core::{Fragment, Word};\nuse textwrap::wrap_algorithms::wrap_first_fit;\n\n#[derive(Debug)]\nstruct Task<'a> {\n    name: &'a str,\n    hours: f64,   // Time needed to complete task.\n    sweep: f64,   // Time needed for a quick sweep after task during the day.\n    cleanup: f64, // Time needed for full cleanup if day ends with this task.\n}\n\nimpl Fragment for Task<'_> {\n    fn width(&self) -> f64 { self.hours }\n    fn whitespace_width(&self) -> f64 { self.sweep }\n    fn penalty_width(&self) -> f64 { self.cleanup }\n}\n\n// The morning tasks\nlet tasks = vec![\n    Task { name: \"Foundation\",  hours: 4.0, sweep: 2.0, cleanup: 3.0 },\n    Task { name: \"Framing\",     hours: 3.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Plumbing\",    hours: 2.0, sweep: 2.0, cleanup: 2.0 },\n    Task { name: \"Electrical\",  hours: 2.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Insulation\",  hours: 2.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Drywall\",     hours: 3.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Floors\",      hours: 3.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Countertops\", hours: 1.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Bathrooms\",   hours: 2.0, sweep: 1.0, cleanup: 2.0 },\n];\n\n// Fill tasks into days, taking `day_length` into account. The\n// output shows the hours worked per day along with the names of\n// the tasks for that day.\nfn assign_days<'a>(tasks: &[Task<'a>], day_length: f64) -> Vec<(f64, Vec<&'a str>)> {\n    let mut days = Vec::new();\n    // Assign tasks to days. The assignment is a vector of slices,\n    // with a slice per day.\n    let assigned_days: Vec<&[Task<'a>]> = wrap_first_fit(&tasks, &[day_length]);\n    for day in assigned_days.iter() {\n        let last = day.last().unwrap();\n        let work_hours: f64 = day.iter().map(|t| t.hours + t.sweep).sum();\n        let names = day.iter().map(|t| t.name).collect::<Vec<_>>();\n        days.push((work_hours - last.sweep + last.cleanup, names));\n    }\n    days\n}\n\n// With a single crew working 8 hours a day:\nassert_eq!(\n    assign_days(&tasks, 8.0),\n    [\n        (7.0, vec![\"Foundation\"]),\n        (8.0, vec![\"Framing\", \"Plumbing\"]),\n        (7.0, vec![\"Electrical\", \"Insulation\"]),\n        (5.0, vec![\"Drywall\"]),\n        (7.0, vec![\"Floors\", \"Countertops\"]),\n        (4.0, vec![\"Bathrooms\"]),\n    ]\n);\n\n// With two crews working in shifts, 16 hours a day:\nassert_eq!(\n    assign_days(&tasks, 16.0),\n    [\n        (14.0, vec![\"Foundation\", \"Framing\", \"Plumbing\"]),\n        (15.0, vec![\"Electrical\", \"Insulation\", \"Drywall\", \"Floors\"]),\n        (6.0, vec![\"Countertops\", \"Bathrooms\"]),\n    ]\n);\n```\n\nApologies to anyone who actually knows how to build a house and\nknows how long each step takes :-)","links":{"`wrap_optimal_fit()`":"0:67:3117"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["fragments",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"slice":{"generic":"T"}}}}],["line_widths",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"slice":{"primitive":"f64"}}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7390:282","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"slice":{"generic":"T"}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fragment","id":"0:10:2912","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:2:35991:251-0:289:2658":{"id":"a:2:35991:251-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:229:508":{"id":"0:229:508","crate_id":0,"name":"clone","span":{"filename":"src/core.rs","begin":[238,22],"end":[238,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[133,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:84:1249","0:85:3177","0:86:2653"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"a:2:3408:263-0:332:2661":{"id":"a:2:3408:263-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:3175-0:289:2658":{"id":"b:2:3175-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3178:3550"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:73-0:67:3117":{"id":"0:73-0:67:3117","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[23,22],"end":[23,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"use":{"source":"optimal_fit::wrap_optimal_fit","name":"wrap_optimal_fit","id":"0:67:3117","is_glob":false}}},"0:212-0:332:2661":{"id":"0:212-0:332:2661","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[232,0],"end":[232,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"word_separators::WordSeparator","name":"WordSeparator","id":"0:332:2661","is_glob":false}}},"a:2:3443:4842-0:248:3119":{"id":"a:2:3443:4842-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3443:4842","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:3179-0:273:2663":{"id":"b:2:3179-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3181:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,29],"end":[7,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2952:213","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:301:739"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:328:847":{"id":"0:328:847","crate_id":0,"name":"fmt","span":{"filename":"src/options.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:5:817-0:332:2661":{"id":"b:5:817-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:813:266","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["5:819:4355","5:820:4356","5:821:5004"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3190-0:273:2663":{"id":"b:2:3190-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3193:150","2:3194:1923"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:276:3140":{"id":"0:276:3140","crate_id":0,"name":"OptimalFit","span":{"filename":"src/wrap_algorithms.rs","begin":[57,4],"end":[57,25]},"visibility":"default","docs":"Wrap words using an advanced algorithm with look-ahead.\n\nThis wrapping algorithm considers the entire paragraph to find\noptimal line breaks. When wrapping text, \"penalties\" are\nassigned to line breaks based on the gaps left at the end of\nlines. See [`Penalties`] for details.\n\nThe underlying wrapping algorithm is implemented by\n[`wrap_optimal_fit()`], please see that function for examples.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"`Penalties`":"0:248:3119","`wrap_optimal_fit()`":"0:67:3117"},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:278:2107"]},"discriminant":null}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[113,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2952:213","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:39:739"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,22],"end":[7,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:298:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"a:2:45861:10797-0:248:3119":{"id":"a:2:45861:10797-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45861:10797","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"a:2:45861:10797-0:316:2659":{"id":"a:2:45861:10797-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45861:10797","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:253:3391":{"id":"0:253:3391","crate_id":0,"name":"hyphen_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[131,4],"end":[131,29]},"visibility":"public","docs":"Penalty for lines ending with a hyphen.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:248:3119":{"id":"0:248:3119","crate_id":0,"name":"Penalties","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[23,0],"end":[132,1]},"visibility":"public","docs":"Penalties for\n[`WrapAlgorithm::OptimalFit`](crate::WrapAlgorithm::OptimalFit)\nand [`wrap_optimal_fit`].\n\nThis wrapping algorithm in [`wrap_optimal_fit`] considers the\nentire paragraph to find optimal line breaks. When wrapping text,\n\"penalties\" are assigned to line breaks based on the gaps left at\nthe end of lines. The penalties are given by this struct, with\n[`Penalties::default`] assigning penalties that work well for\nmonospace text.\n\nIf you are wrapping proportional text, you are advised to assign\nyour own penalties according to your font size. See the individual\npenalties below for details.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"crate::WrapAlgorithm::OptimalFit":"0:276:3140","`wrap_optimal_fit`":"0:67:3117","`Penalties::default`":"0:57:60"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:249:3323","0:250:3354","0:251:3386","0:252:3389","0:253:3391"],"has_stripped_fields":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:54","a:2:35991:251-0:248:3119","a:2:3408:263-0:248:3119","a:2:3443:4842-0:248:3119","a:2:36049:4686-0:248:3119","a:2:45861:10797-0:248:3119","a:2:45862:10998-0:248:3119","b:2:2860-0:248:3119","b:2:2863-0:248:3119","b:2:2918-0:248:3119","b:2:3175-0:248:3119","b:2:3179-0:248:3119","b:2:3185-0:248:3119","b:2:3190-0:248:3119","b:2:4055-0:248:3119","b:5:817-0:248:3119","0:254","0:256","0:257","0:259","0:260","0:262","0:56"]}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[92,0],"end":[120,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2952:213","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:80:739"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:37:847":{"id":"0:37:847","crate_id":0,"name":"fmt","span":{"filename":"src/word_splitters.rs","begin":[102,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:255:508":{"id":"0:255:508","crate_id":0,"name":"clone","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,9],"end":[22,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:12:2916":{"id":"0:12:2916","crate_id":0,"name":"whitespace_width","span":{"filename":"src/core.rs","begin":[227,4],"end":[227,38]},"visibility":"default","docs":"Displayed width of the whitespace that must follow the word\nwhen the word is not at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"b:2:4055-0:316:2659":{"id":"b:2:4055-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4053:71","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:4057:1938"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:157:2660":{"id":"0:157:2660","crate_id":0,"name":"unfill","span":{"filename":"src/refill.rs","begin":[62,0],"end":[114,1]},"visibility":"public","docs":"Unpack a paragraph of already-wrapped text.\n\nThis function attempts to recover the original text from a single\nparagraph of wrapped text, such as what [`fill()`] would produce.\nThis means that it turns\n\n```text\ntextwrap: a small\nlibrary for\nwrapping text.\n```\n\nback into\n\n```text\ntextwrap: a small library for wrapping text.\n```\n\nIn addition, it will recognize a common prefix and a common line\nending among the lines.\n\nThe prefix of the first line is returned in\n[`Options::initial_indent`] and the prefix (if any) of the the\nother lines is returned in [`Options::subsequent_indent`].\n\nLine ending is returned in [`Options::line_ending`]. If line ending\ncan not be confidently detected (mixed or no line endings in the\ninput), [`LineEnding::LF`] will be returned.\n\nIn addition to `' '`, the prefixes can consist of characters used\nfor unordered lists (`'-'`, `'+'`, and `'*'`) and block quotes\n(`'>'`) in Markdown as well as characters often used for inline\ncomments (`'#'` and `'/'`).\n\nThe text must come from a single wrapped paragraph. This means\nthat there can be no empty lines (`\"\\n\\n\"` or `\"\\r\\n\\r\\n\"`) within\nthe text. It is unspecified what happens if `unfill` is called on\nmore than one paragraph of text.\n\n# Examples\n\n```\nuse textwrap::{LineEnding, unfill};\n\nlet (text, options) = unfill(\"\\\n* This is an\n  example of\n  a list item.\n\");\n\nassert_eq!(text, \"This is an example of a list item.\\n\");\nassert_eq!(options.initial_indent, \"* \");\nassert_eq!(options.subsequent_indent, \"  \");\nassert_eq!(options.line_ending, LineEnding::LF);\n```","links":{"`Options::line_ending`":"0:142:2649","`Options::subsequent_indent`":"0:145:3855","`LineEnding::LF`":"0:292:3829","`Options::initial_indent`":"0:144:3613","`fill()`":"0:109:2647"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"tuple":[{"resolved_path":{"name":"String","id":"5:7976:259","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},{"resolved_path":{"name":"crate::Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:3179-0:216:2923":{"id":"b:2:3179-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:3181:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3443:4842-0:216:2923":{"id":"a:2:3443:4842-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3443:4842","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:3185-0:332:2661":{"id":"b:2:3185-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3155:274","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3188:150","2:3189:1925"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2860-0:316:2659":{"id":"b:2:2860-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2854:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:2862:3408"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:210-0:158:2650":{"id":"0:210-0:158:2650","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[229,17],"end":[229,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"refill::refill","name":"refill","id":"0:158:2650","is_glob":false}}},"0:80:739":{"id":"0:80:739","crate_id":0,"name":"eq","span":{"filename":"src/wrap_algorithms.rs","begin":[112,4],"end":[119,5]},"visibility":"default","docs":"Compare two wrap algorithms.\n\n```\nuse textwrap::WrapAlgorithm;\n\nassert_eq!(WrapAlgorithm::FirstFit, WrapAlgorithm::FirstFit);\n#[cfg(feature = \"smawk\")] {\n    assert_eq!(WrapAlgorithm::new_optimal_fit(), WrapAlgorithm::new_optimal_fit());\n}\n```\n\nNote that `WrapAlgorithm::Custom` values never compare equal:\n\n```\nuse textwrap::WrapAlgorithm;\n\nassert_ne!(WrapAlgorithm::Custom(|words, line_widths| vec![words]),\n           WrapAlgorithm::Custom(|words, line_widths| vec![words]));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:141:1249":{"id":"0:141:1249","crate_id":0,"name":"new","span":{"filename":"src/options.rs","begin":[86,4],"end":[97,5]},"visibility":"public","docs":"Creates a new [`Options`] with the specified width.\n\nThe other fields are given default values as follows:\n\n```\n# use textwrap::{LineEnding, Options, WordSplitter, WordSeparator, WrapAlgorithm};\n# let width = 80;\nlet options = Options::new(width);\nassert_eq!(options.line_ending, LineEnding::LF);\nassert_eq!(options.initial_indent, \"\");\nassert_eq!(options.subsequent_indent, \"\");\nassert_eq!(options.break_words, true);\n\n#[cfg(feature = \"unicode-linebreak\")]\nassert_eq!(options.word_separator, WordSeparator::UnicodeBreakProperties);\n#[cfg(not(feature = \"unicode-linebreak\"))]\nassert_eq!(options.word_separator, WordSeparator::AsciiSpace);\n\n#[cfg(feature = \"smawk\")]\nassert_eq!(options.wrap_algorithm, WrapAlgorithm::new_optimal_fit());\n#[cfg(not(feature = \"smawk\"))]\nassert_eq!(options.wrap_algorithm, WrapAlgorithm::FirstFit);\n\nassert_eq!(options.word_splitter, WordSplitter::HyphenSplitter);\n```\n\nNote that the default word separator and wrap algorithms\nchanges based on the available Cargo features. The best\navailable algorithms are used by default.","links":{"`Options`":"0:316:2659"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["width",{"primitive":"usize"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:292:3829":{"id":"0:292:3829","crate_id":0,"name":"LF","span":{"filename":"src/line_ending.rs","begin":[15,4],"end":[15,6]},"visibility":"default","docs":"_Line feed_ – a line ending historically used in Unix.\n Corresponds to the ASCII control character `0x0A` or `\\n`","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:258:847":{"id":"0:258:847","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,22],"end":[22,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:2:35991:251-0:216:2923":{"id":"a:2:35991:251-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"a:2:3408:263-0:273:2663":{"id":"a:2:3408:263-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:318:2838":{"id":"0:318:2838","crate_id":0,"name":"width","span":{"filename":"src/options.rs","begin":[10,4],"end":[10,20]},"visibility":"public","docs":"The width in columns at which the text will be wrapped.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,29],"end":[238,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:35993:260","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:2:2863-0:289:2658":{"id":"b:2:2863-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2857:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2865:3406"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:146:2955":{"id":"0:146:2955","crate_id":0,"name":"break_words","span":{"filename":"src/options.rs","begin":[212,4],"end":[217,5]},"visibility":"public","docs":"Change [`self.break_words`]. This controls if words longer\nthan `self.width` can be broken, or if they will be left\nsticking out into the right margin.\n\nSee [`Options::word_splitter`] instead if you want to control\nhyphenation.\n\n# Examples\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(4).break_words(true);\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"This\",\n                \"is a\",\n                \"litt\",\n                \"le\",\n                \"exam\",\n                \"ple.\"]);\n```\n\n[`self.break_words`]: #structfield.break_words","links":{"`Options::word_splitter`":"0:149:3077"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["break_words",{"primitive":"bool"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:202-0:109:2647":{"id":"0:202-0:109:2647","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[225,15],"end":[225,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"fill::fill","name":"fill","id":"0:109:2647","is_glob":false}}},"a:2:36049:4686-0:332:2661":{"id":"a:2:36049:4686-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36049:4686","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"a:2:36049:4686-0:316:2659":{"id":"a:2:36049:4686-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36049:4686","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:4055-0:216:2923":{"id":"b:2:4055-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4053:71","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:4057:1938"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:45862:10998-0:316:2659":{"id":"a:2:45862:10998-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45862:10998","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:91:60":{"id":"0:91:60","crate_id":0,"name":"default","span":{"filename":"src/wrap_algorithms.rs","begin":[194,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:3179-0:238:2662":{"id":"b:2:3179-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3181:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3179-0:332:2661":{"id":"b:2:3179-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3181:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2863-0:216:2923":{"id":"b:2:2863-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2857:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:2865:3406"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:192:2653":{"id":"0:192:2653","crate_id":0,"name":"wrap","span":{"filename":"src/wrap.rs","begin":[180,0],"end":[193,1]},"visibility":"public","docs":"Wrap a line of text at a given width.\n\nThe result is a vector of lines, each line is of type [`Cow<'_,\nstr>`](Cow), which means that the line will borrow from the input\n`&str` if possible. The lines do not have trailing whitespace,\nincluding a final `'\\n'`. Please use [`fill()`](crate::fill()) if\nyou need a [`String`] instead.\n\nThe easiest way to use this function is to pass an integer for\n`width_or_options`:\n\n```\nuse textwrap::wrap;\n\nlet lines = wrap(\"Memory safety without garbage collection.\", 15);\nassert_eq!(lines, &[\n    \"Memory safety\",\n    \"without garbage\",\n    \"collection.\",\n]);\n```\n\nIf you need to customize the wrapping, you can pass an [`Options`]\ninstead of an `usize`:\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(15)\n    .initial_indent(\"- \")\n    .subsequent_indent(\"  \");\nlet lines = wrap(\"Memory safety without garbage collection.\", &options);\nassert_eq!(lines, &[\n    \"- Memory safety\",\n    \"  without\",\n    \"  garbage\",\n    \"  collection.\",\n]);\n```\n\n# Optimal-Fit Wrapping\n\nBy default, `wrap` will try to ensure an even right margin by\nfinding breaks which avoid short lines. We call this an\n“optimal-fit algorithm” since the line breaks are computed by\nconsidering all possible line breaks. The alternative is a\n“first-fit algorithm” which simply accumulates words until they no\nlonger fit on the line.\n\nAs an example, using the first-fit algorithm to wrap the famous\nHamlet quote “To be, or not to be: that is the question” in a\nnarrow column with room for only 10 characters looks like this:\n\n```\n# use textwrap::{WrapAlgorithm::FirstFit, Options, wrap};\n#\n# let lines = wrap(\"To be, or not to be: that is the question\",\n#                  Options::new(10).wrap_algorithm(FirstFit));\n# assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\\nTo be, or\nnot to be:\nthat is\nthe\nquestion\n# \");\n```\n\nNotice how the second to last line is quite narrow because\n“question” was too large to fit? The greedy first-fit algorithm\ndoesn’t look ahead, so it has no other option than to put\n“question” onto its own line.\n\nWith the optimal-fit wrapping algorithm, the previous lines are\nshortened slightly in order to make the word “is” go into the\nsecond last line:\n\n```\n# #[cfg(feature = \"smawk\")] {\n# use textwrap::{Options, WrapAlgorithm, wrap};\n#\n# let lines = wrap(\n#     \"To be, or not to be: that is the question\",\n#     Options::new(10).wrap_algorithm(WrapAlgorithm::new_optimal_fit())\n# );\n# assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\\nTo be,\nor not to\nbe: that\nis the\nquestion\n# \"); }\n```\n\nPlease see [`WrapAlgorithm`](crate::WrapAlgorithm) for details on\nthe choices.\n\n# Examples\n\nThe returned iterator yields lines of type `Cow<'_, str>`. If\npossible, the wrapped lines will borrow from the input string. As\nan example, a hanging indentation, the first line can borrow from\nthe input, but the subsequent lines become owned strings:\n\n```\nuse std::borrow::Cow::{Borrowed, Owned};\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(15).subsequent_indent(\"....\");\nlet lines = wrap(\"Wrapping text all day long.\", &options);\nlet annotated = lines\n    .iter()\n    .map(|line| match line {\n        Borrowed(text) => format!(\"[Borrowed] {}\", text),\n        Owned(text) => format!(\"[Owned]    {}\", text),\n    })\n    .collect::<Vec<_>>();\nassert_eq!(\n    annotated,\n    &[\n        \"[Borrowed] Wrapping text\",\n        \"[Owned]    ....all day\",\n        \"[Owned]    ....long.\",\n    ]\n);\n```\n\n## Leading and Trailing Whitespace\n\nAs a rule, leading whitespace (indentation) is preserved and\ntrailing whitespace is discarded.\n\nIn more details, when wrapping words into lines, words are found\nby splitting the input text on space characters. One or more\nspaces (shown here as “␣”) are attached to the end of each word:\n\n```text\n\"Foo␣␣␣bar␣baz\" -> [\"Foo␣␣␣\", \"bar␣\", \"baz\"]\n```\n\nThese words are then put into lines. The interword whitespace is\npreserved, unless the lines are wrapped so that the `\"Foo␣␣␣\"`\nword falls at the end of a line:\n\n```\nuse textwrap::wrap;\n\nassert_eq!(wrap(\"Foo   bar baz\", 10), vec![\"Foo   bar\", \"baz\"]);\nassert_eq!(wrap(\"Foo   bar baz\", 8), vec![\"Foo\", \"bar baz\"]);\n```\n\nNotice how the trailing whitespace is removed in both case: in the\nfirst example, `\"bar␣\"` becomes `\"bar\"` and in the second case\n`\"Foo␣␣␣\"` becomes `\"Foo\"`.\n\nLeading whitespace is preserved when the following word fits on\nthe first line. To understand this, consider how words are found\nin a text with leading spaces:\n\n```text\n\"␣␣foo␣bar\" -> [\"␣␣\", \"foo␣\", \"bar\"]\n```\n\nWhen put into lines, the indentation is preserved if `\"foo\"` fits\non the first line, otherwise you end up with an empty line:\n\n```\nuse textwrap::wrap;\n\nassert_eq!(wrap(\"  foo bar\", 8), vec![\"  foo\", \"bar\"]);\nassert_eq!(wrap(\"  foo bar\", 4), vec![\"\", \"foo\", \"bar\"]);\n```","links":{"`Options`":"0:316:2659","Cow":"5:822:122","crate::WrapAlgorithm":"0:273:2663","crate::fill()":"0:109:2647","`String`":"5:7976:259"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["width_or_options",{"generic":"Opt"}]],"output":{"resolved_path":{"name":"Vec","id":"5:7390:282","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::borrow::Cow","id":"5:822:122","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:3:597":{"id":"0:3:597","crate_id":0,"name":"core","span":{"filename":"src/core.rs","begin":[1,0],"end":[461,1]},"visibility":"public","docs":"Building blocks for advanced wrapping functionality.\n\nThe functions and structs in this module can be used to implement\nadvanced wrapping functionality when [`wrap()`](crate::wrap())\n[`fill()`](crate::fill()) don't do what you want.\n\nIn general, you want to follow these steps when wrapping\nsomething:\n\n1. Split your input into [`Fragment`]s. These are abstract blocks\n   of text or content which can be wrapped into lines. See\n   [`WordSeparator`](crate::word_separators::WordSeparator) for\n   how to do this for text.\n\n2. Potentially split your fragments into smaller pieces. This\n   allows you to implement things like hyphenation. If you use the\n   `Word` type, you can use [`WordSplitter`](crate::WordSplitter)\n   enum for this.\n\n3. Potentially break apart fragments that are still too large to\n   fit on a single line. This is implemented in [`break_words`].\n\n4. Finally take your fragments and put them into lines. There are\n   two algorithms for this in the\n   [`wrap_algorithms`](crate::wrap_algorithms) module:\n   [`wrap_optimal_fit`](crate::wrap_algorithms::wrap_optimal_fit)\n   and [`wrap_first_fit`](crate::wrap_algorithms::wrap_first_fit).\n   The former produces better line breaks, the latter is faster.\n\n5. Iterate through the slices returned by the wrapping functions\n   and construct your lines of output.\n\nPlease [open an issue](https://github.com/mgeisler/textwrap/) if\nthe functionality here is not sufficient or if you have ideas for\nimproving it. We would love to hear from you!","links":{"crate::word_separators::WordSeparator":"0:332:2661","crate::wrap_algorithms::wrap_first_fit":"0:92:3185","`Fragment`":"0:10:2912","`break_words`":"0:29:2955","crate::wrap()":"0:192:2653","crate::fill()":"0:109:2647","crate::WordSplitter":"0:238:2662","crate::wrap_algorithms":"0:50:2645","crate::wrap_algorithms::wrap_optimal_fit":"0:67:3117"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:9:2902","0:10:2912","0:216:2923","0:29:2955"],"is_stripped":false}}},"a:2:36049:4686-0:289:2658":{"id":"a:2:36049:4686-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36049:4686","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[328,0],"end":[347,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Fragment","id":"0:10:2912","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}},"items":["0:26:2838","0:27:2916","0:28:2919"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[152,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3227:127","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:57:60"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2:2865:3406":{"id":"2:2865:3406","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:26:2838":{"id":"0:26:2838","crate_id":0,"name":"width","span":{"filename":"src/core.rs","begin":[330,4],"end":[332,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:158:2650":{"id":"0:158:2650","crate_id":0,"name":"refill","span":{"filename":"src/refill.rs","begin":[169,0],"end":[188,1]},"visibility":"public","docs":"Refill a paragraph of wrapped text with a new width.\n\nThis function will first use [`unfill()`] to remove newlines from\nthe text. Afterwards the text is filled again using [`fill()`].\n\nThe `new_width_or_options` argument specify the new width and can\nspecify other options as well — except for\n[`Options::initial_indent`] and [`Options::subsequent_indent`],\nwhich are deduced from `filled_text`.\n\n# Examples\n\n```\nuse textwrap::refill;\n\n// Some loosely wrapped text. The \"> \" prefix is recognized automatically.\nlet text = \"\\\n> Memory\n> safety without garbage\n> collection.\n\";\n\nassert_eq!(refill(text, 20), \"\\\n> Memory safety\n> without garbage\n> collection.\n\");\n\nassert_eq!(refill(text, 40), \"\\\n> Memory safety without garbage\n> collection.\n\");\n\nassert_eq!(refill(text, 60), \"\\\n> Memory safety without garbage collection.\n\");\n```\n\nYou can also reshape bullet points:\n\n```\nuse textwrap::refill;\n\nlet text = \"\\\n- This is my\n  list item.\n\";\n\nassert_eq!(refill(text, 20), \"\\\n- This is my list\n  item.\n\");\n```","links":{"`unfill()`":"0:157:2660","`Options::subsequent_indent`":"0:145:3855","`Options::initial_indent`":"0:144:3613","`fill()`":"0:109:2647"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["filled_text",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}],["new_width_or_options",{"generic":"Opt"}]],"output":{"resolved_path":{"name":"String","id":"5:7976:259","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:11:2838":{"id":"0:11:2838","crate_id":0,"name":"width","span":{"filename":"src/core.rs","begin":[223,4],"end":[223,27]},"visibility":"default","docs":"Displayed width of word represented by this fragment.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"0:220:2930":{"id":"0:220:2930","crate_id":0,"name":"penalty","span":{"filename":"src/core.rs","begin":[245,4],"end":[245,24]},"visibility":"public","docs":"Penalty string to insert if the word falls at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}}},"0:324:3863":{"id":"0:324:3863","crate_id":0,"name":"word_separator","span":{"filename":"src/options.rs","begin":[28,4],"end":[28,37]},"visibility":"public","docs":"The line breaking algorithm to use, see the [`WordSeparator`]\ntrait for an overview and possible implementations.","links":{"`WordSeparator`":"0:332:2661"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"b:2:3175-0:316:2659":{"id":"b:2:3175-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:3178:3550"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:170:3661":{"id":"0:170:3661","crate_id":0,"name":"find_words","span":{"filename":"src/word_separators.rs","begin":[192,4],"end":[199,5]},"visibility":"public","docs":"Find all words in `line`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["line",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Box","id":"5:325:4141","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Iterator","id":"2:8763:190","args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:3190-0:289:2658":{"id":"b:2:3190-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3193:150","2:3194:1923"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3443:4842-0:289:2658":{"id":"a:2:3443:4842-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3443:4842","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:2860-0:248:3119":{"id":"b:2:2860-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2854:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2862:3408"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:251:3386":{"id":"0:251:3386","crate_id":0,"name":"short_last_line_fraction","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[123,4],"end":[123,39]},"visibility":"public","docs":"When should the a single word on the last line be considered\n\"too short\"?\n\nIf the last line of the text consist of a single word and if\nthis word is shorter than `1 / short_last_line_fraction` of\nthe line width, then the final line will be considered \"short\"\nand `short_last_line_penalty` is added as an extra penalty.\n\nThe effect of this is to avoid a final line consisting of a\nsingle small word. For example, with a\n`short_last_line_penalty` of 25 (the default), a gap of up to\n5 columns will be seen as more desirable than having a final\nshort line.\n\n## Examples\n\n```\nuse textwrap::{wrap, wrap_algorithms, Options, WrapAlgorithm};\n\nlet text = \"This is a demo of the short last line penalty.\";\n\n// The first-fit algorithm leaves a single short word on the last line:\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::FirstFit)),\n           vec![\"This is a demo of the short last line\",\n                \"penalty.\"]);\n\n#[cfg(feature = \"smawk\")] {\nlet mut penalties = wrap_algorithms::Penalties::new();\n\n// Since \"penalty.\" is shorter than 25% of the line width, the\n// optimal-fit algorithm adds a penalty of 25. This is enough\n// to move \"line \" down:\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::OptimalFit(penalties))),\n           vec![\"This is a demo of the short last\",\n                \"line penalty.\"]);\n\n// We can change the meaning of \"short\" lines. Here, only words\n// shorter than 1/10th of the line width will be considered short:\npenalties.short_last_line_fraction = 10;\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::OptimalFit(penalties))),\n           vec![\"This is a demo of the short last line\",\n                \"penalty.\"]);\n\n// If desired, the penalty can also be disabled:\npenalties.short_last_line_fraction = 4;\npenalties.short_last_line_penalty = 0;\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::OptimalFit(penalties))),\n           vec![\"This is a demo of the short last line\",\n                \"penalty.\"]);\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:5:817-0:273:2663":{"id":"b:5:817-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:813:266","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["5:819:4355","5:820:4356","5:821:5004"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:145:3855":{"id":"0:145:3855","crate_id":0,"name":"subsequent_indent","span":{"filename":"src/options.rs","begin":[182,4],"end":[187,5]},"visibility":"public","docs":"Change [`self.subsequent_indent`]. The subsequent indentation\nis used on lines following the first line of output.\n\n# Examples\n\nCombining initial and subsequent indentation lets you format a\nsingle paragraph as a bullet list:\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(12)\n    .initial_indent(\"* \")\n    .subsequent_indent(\"  \");\n#[cfg(feature = \"smawk\")]\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"* This is\",\n                \"  a little\",\n                \"  example.\"]);\n\n// Without the `smawk` feature, the wrapping is a little different:\n#[cfg(not(feature = \"smawk\"))]\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"* This is a\",\n                \"  little\",\n                \"  example.\"]);\n```\n\n[`self.subsequent_indent`]: #structfield.subsequent_indent","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["subsequent_indent",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:3175-0:216:2923":{"id":"b:2:3175-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:3178:3550"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:200-0:100:2654":{"id":"0:200-0:100:2654","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[224,0],"end":[224,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"columns::wrap_columns","name":"wrap_columns","id":"0:100:2654","is_glob":false}}},"0:14":{"id":"0:14","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[250,0],"end":[256,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3642:128","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}},"items":["0:15:265","0:16:668"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:2:3179-0:248:3119":{"id":"b:2:3179-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3181:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:278:2107":{"id":"0:278:2107","crate_id":0,"name":"0","span":{"filename":"src/wrap_algorithms.rs","begin":[57,15],"end":[57,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"b:2:3179-0:289:2658":{"id":"b:2:3179-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3181:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2863-0:332:2661":{"id":"b:2:2863-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2857:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2865:3406"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:85:3177":{"id":"0:85:3177","crate_id":0,"name":"new_optimal_fit","span":{"filename":"src/wrap_algorithms.rs","begin":[157,4],"end":[159,5]},"visibility":"public","docs":"New [`WrapAlgorithm::OptimalFit`] with default penalties. This\nworks well for monospace text.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"`WrapAlgorithm::OptimalFit`":"0:276:3140"},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:2860-0:289:2658":{"id":"b:2:2860-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2854:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2862:3408"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:45861:10797-0:289:2658":{"id":"a:2:45861:10797-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45861:10797","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:211-0:157:2660":{"id":"0:211-0:157:2660","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[229,25],"end":[229,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"refill::unfill","name":"unfill","id":"0:157:2660","is_glob":false}}},"b:2:3175-0:238:2662":{"id":"b:2:3175-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3178:3550"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:45861:10797-0:273:2663":{"id":"a:2:45861:10797-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45861:10797","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:339:2107":{"id":"0:339:2107","crate_id":0,"name":"0","span":{"filename":"src/word_separators.rs","begin":[122,11],"end":[122,68]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"function_pointer":{"sig":{"inputs":[["line",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Box","id":"5:325:4141","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Iterator","id":"2:8763:190","args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"crate::core::Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"constraints":[]}}}},"is_c_variadic":false},"generic_params":[],"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"}}}}},"b:5:817-0:248:3119":{"id":"b:5:817-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:813:266","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["5:819:4355","5:820:4356","5:821:5004"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[56,0],"end":[280,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["0:141:1249","0:142:2649","0:143:2838","0:144:3613","0:145:3855","0:146:2955","0:147:3863","0:148:3690","0:149:3077"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:289:2658":{"id":"0:289:2658","crate_id":0,"name":"LineEnding","span":{"filename":"src/line_ending.rs","begin":[8,0],"end":[16,1]},"visibility":"public","docs":"Supported line endings. Like in the Rust standard library, two line\nendings are supported: `\\r\\n` and `\\n`","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":["0:290:3826","0:292:3829"],"impls":["0:121","a:2:35991:251-0:289:2658","a:2:3408:263-0:289:2658","a:2:3443:4842-0:289:2658","a:2:36049:4686-0:289:2658","a:2:45861:10797-0:289:2658","a:2:45862:10998-0:289:2658","b:2:2860-0:289:2658","b:2:2863-0:289:2658","b:2:2918-0:289:2658","b:2:3175-0:289:2658","b:2:3179-0:289:2658","b:2:3185-0:289:2658","b:2:3190-0:289:2658","b:2:4055-0:289:2658","b:5:817-0:289:2658","0:294","0:296","0:297","0:299","0:300","0:302"]}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[188,0],"end":[192,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:11010:133","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:65:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:113:2655":{"id":"0:113:2655","crate_id":0,"name":"fill_inplace","span":{"filename":"src/fill.rs","begin":[120,0],"end":[153,1]},"visibility":"public","docs":"Fill `text` in-place without reallocating the input string.\n\nThis function works by modifying the input string: some `' '`\ncharacters will be replaced by `'\\n'` characters. The rest of the\ntext remains untouched.\n\nSince we can only replace existing whitespace in the input with\n`'\\n'` (there is no space for `\"\\r\\n\"`), we cannot do hyphenation\nnor can we split words longer than the line width. We also need to\nuse `AsciiSpace` as the word separator since we need `' '`\ncharacters between words in order to replace some of them with a\n`'\\n'`. Indentation is also ruled out. In other words,\n`fill_inplace(width)` behaves as if you had called [`fill()`] with\nthese options:\n\n```\n# use textwrap::{core, LineEnding, Options, WordSplitter, WordSeparator, WrapAlgorithm};\n# let width = 80;\nOptions::new(width)\n    .break_words(false)\n    .line_ending(LineEnding::LF)\n    .word_separator(WordSeparator::AsciiSpace)\n    .wrap_algorithm(WrapAlgorithm::FirstFit)\n    .word_splitter(WordSplitter::NoHyphenation);\n```\n\nThe wrap algorithm is\n[`WrapAlgorithm::FirstFit`](crate::WrapAlgorithm::FirstFit) since\nthis is the fastest algorithm — and the main reason to use\n`fill_inplace` is to get the string broken into newlines as fast\nas possible.\n\nA last difference is that (unlike [`fill()`]) `fill_inplace` can\nleave trailing whitespace on lines. This is because we wrap by\ninserting a `'\\n'` at the final whitespace in the input string:\n\n```\nlet mut text = String::from(\"Hello   World!\");\ntextwrap::fill_inplace(&mut text, 10);\nassert_eq!(text, \"Hello  \\nWorld!\");\n```\n\nIf we didn't do this, the word `World!` would end up being\nindented. You can avoid this if you make sure that your input text\nhas no double spaces.\n\n# Performance\n\nIn benchmarks, `fill_inplace` is about twice as fast as\n[`fill()`]. Please see the [`linear`\nbenchmark](https://github.com/mgeisler/textwrap/blob/master/benchmarks/linear.rs)\nfor details.","links":{"crate::WrapAlgorithm::FirstFit":"0:274:3131","`fill()`":"0:109:2647"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7976:259","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}],["width",{"primitive":"usize"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,16],"end":[185,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2952:213","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:270:739"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:5:817-0:289:2658":{"id":"b:5:817-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:813:266","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["5:819:4355","5:820:4356","5:821:5004"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:169:1249":{"id":"0:169:1249","crate_id":0,"name":"new","span":{"filename":"src/word_separators.rs","begin":[176,4],"end":[186,5]},"visibility":"public","docs":"Create a new word separator.\n\nThe best available algorithm is used by default, i.e.,\n[`WordSeparator::UnicodeBreakProperties`] if available,\notherwise [`WordSeparator::AsciiSpace`].","links":{"`WordSeparator::UnicodeBreakProperties`":"0:335:4139","`WordSeparator::AsciiSpace`":"0:333:3660"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:245:2107":{"id":"0:245:2107","crate_id":0,"name":"0","span":{"filename":"src/word_splitters.rs","begin":[88,11],"end":[88,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"function_pointer":{"sig":{"inputs":[["word",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7390:282","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}},"is_c_variadic":false},"generic_params":[],"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"}}}}},"0:142:2649":{"id":"0:142:2649","crate_id":0,"name":"line_ending","span":{"filename":"src/options.rs","begin":[114,4],"end":[119,5]},"visibility":"public","docs":"Change [`self.line_ending`]. This specifies which of the\nsupported line endings should be used to break the lines of the\ninput text.\n\n# Examples\n\n```\nuse textwrap::{refill, LineEnding, Options};\n\nlet options = Options::new(15).line_ending(LineEnding::CRLF);\nassert_eq!(refill(\"This is a little example.\", options),\n           \"This is a\\r\\nlittle example.\");\n```\n\n[`self.line_ending`]: #structfield.line_ending","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["line_ending",{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:136":{"id":"0:136","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[50,0],"end":[54,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["0:138:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:13:2919":{"id":"0:13:2919","crate_id":0,"name":"penalty_width","span":{"filename":"src/core.rs","begin":[231,4],"end":[231,35]},"visibility":"default","docs":"Displayed width of the penalty that must be inserted if the\nword falls at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":false}}},"0:29:2955":{"id":"0:29:2955","crate_id":0,"name":"break_words","span":{"filename":"src/core.rs","begin":[354,0],"end":[367,1]},"visibility":"public","docs":"Forcibly break words wider than `line_width` into smaller words.\n\nThis simply calls [`Word::break_apart`] on words that are too\nwide. This means that no extra `'-'` is inserted, the word is\nsimply broken into smaller pieces.","links":{"`Word::break_apart`":"0:20:2945"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["words",{"generic":"I"}],["line_width",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Vec","id":"5:7390:282","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8581:177","args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:264:3118":{"id":"0:264:3118","crate_id":0,"name":"OverflowError","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[186,0],"end":[186,25]},"visibility":"public","docs":"Overflow error during the [`wrap_optimal_fit`] computation.","links":{"`wrap_optimal_fit`":"0:67:3117"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:2:35991:251-0:264:3118","a:2:3408:263-0:264:3118","a:2:3443:4842-0:264:3118","a:2:36049:4686-0:264:3118","a:2:45861:10797-0:264:3118","a:2:45862:10998-0:264:3118","b:2:2860-0:264:3118","b:2:2863-0:264:3118","b:2:3175-0:264:3118","b:2:3179-0:264:3118","b:2:3185-0:264:3118","b:2:3190-0:264:3118","b:2:4055-0:264:3118","b:5:6133-0:264:3118","0:266","0:268","0:269","0:271","0:64","0:66"]}}},"a:2:3443:4842-0:332:2661":{"id":"a:2:3443:4842-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3443:4842","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:4055-0:332:2661":{"id":"b:2:4055-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4053:71","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:4057:1938"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:39:739":{"id":"0:39:739","crate_id":0,"name":"eq","span":{"filename":"src/word_splitters.rs","begin":[114,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:3185-0:248:3119":{"id":"b:2:3185-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3155:274","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3188:150","2:3189:1925"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:207-0:289:2658":{"id":"0:207-0:289:2658","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[227,0],"end":[227,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"line_ending::LineEnding","name":"LineEnding","id":"0:289:2658","is_glob":false}}},"b:2:2863-0:248:3119":{"id":"b:2:2863-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2857:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2865:3406"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:218:2926":{"id":"0:218:2926","crate_id":0,"name":"word","span":{"filename":"src/core.rs","begin":[241,4],"end":[241,21]},"visibility":"public","docs":"Word content.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}}},"0:219:2928":{"id":"0:219:2928","crate_id":0,"name":"whitespace","span":{"filename":"src/core.rs","begin":[243,4],"end":[243,27]},"visibility":"public","docs":"Whitespace to insert if the word does not fall at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}}},"b:2:2860-0:273:2663":{"id":"b:2:2860-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2854:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2862:3408"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:36049:4686-0:216:2923":{"id":"a:2:36049:4686-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36049:4686","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:325:3077":{"id":"0:325:3077","crate_id":0,"name":"word_splitter","span":{"filename":"src/options.rs","begin":[32,4],"end":[32,35]},"visibility":"public","docs":"The method for splitting words. This can be used to prohibit\nsplitting words on hyphens, or it can be used to implement\nlanguage-aware machine hyphenation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"0:82:847":{"id":"0:82:847","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms.rs","begin":[123,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:337:3035":{"id":"0:337:3035","crate_id":0,"name":"Custom","span":{"filename":"src/word_separators.rs","begin":[122,4],"end":[122,69]},"visibility":"default","docs":"Find words using a custom word separator","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:339:2107"]},"discriminant":null}}},"0:213-0:238:2662":{"id":"0:213-0:238:2662","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[233,0],"end":[233,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"word_splitters::WordSplitter","name":"WordSplitter","id":"0:238:2662","is_glob":false}}},"b:2:3185-0:238:2662":{"id":"b:2:3185-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3155:274","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3188:150","2:3189:1925"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:205-0:117:2656":{"id":"0:205-0:117:2656","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[226,22],"end":[226,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"indentation::dedent","name":"dedent","id":"0:117:2656","is_glob":false}}},"0:84:1249":{"id":"0:84:1249","crate_id":0,"name":"new","span":{"filename":"src/wrap_algorithms.rs","begin":[139,4],"end":[149,5]},"visibility":"public","docs":"Create new wrap algorithm.\n\nThe best wrapping algorithm is used by default, i.e.,\n[`WrapAlgorithm::OptimalFit`] if available, otherwise\n[`WrapAlgorithm::FirstFit`].","links":{"`WrapAlgorithm::OptimalFit`":"0:276:3140","`WrapAlgorithm::FirstFit`":"0:274:3131"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:2:35991:251-0:238:2662":{"id":"a:2:35991:251-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:2863-0:238:2662":{"id":"b:2:2863-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2857:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2865:3406"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:298:847":{"id":"0:298:847","crate_id":0,"name":"fmt","span":{"filename":"src/line_ending.rs","begin":[7,22],"end":[7,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:2:3443:4842-0:238:2662":{"id":"a:2:3443:4842-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3443:4842","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,9],"end":[22,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:255:508"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:322:2955":{"id":"0:322:2955","crate_id":0,"name":"break_words","span":{"filename":"src/options.rs","begin":[22,4],"end":[22,25]},"visibility":"public","docs":"Allow long words to be broken if they cannot fit on a line.\nWhen set to `false`, some lines may be longer than\n`self.width`. See the [`Options::break_words`] method.","links":{"`Options::break_words`":"0:146:2955"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:44:3076":{"id":"0:44:3076","crate_id":0,"name":"split_words","span":{"filename":"src/word_splitters.rs","begin":[181,0],"end":[218,1]},"visibility":"public","docs":"Split words into smaller words according to the split points given\nby `word_splitter`.\n\nNote that we split all words, regardless of their length. This is\nto more cleanly separate the business of splitting (including\nautomatic hyphenation) from the business of word wrapping.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["words",{"generic":"I"}],["word_splitter",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8763:190","args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8581:177","args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"crate::core::Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:2:3408:263-0:316:2659":{"id":"a:2:3408:263-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3408:263","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,9],"end":[185,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:267:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:149:3077":{"id":"0:149:3077","crate_id":0,"name":"word_splitter","span":{"filename":"src/options.rs","begin":[274,4],"end":[279,5]},"visibility":"public","docs":"Change [`self.word_splitter`]. The [`WordSplitter`] is used to\nfit part of a word into the current line when wrapping text.\n\nSee [`Options::break_words`] instead if you want to control the\nhandling of words longer than the line width.\n\n# Examples\n\n```\nuse textwrap::{wrap, Options, WordSplitter};\n\n// The default is WordSplitter::HyphenSplitter.\nlet options = Options::new(5);\nassert_eq!(wrap(\"foo-bar-baz\", &options),\n           vec![\"foo-\", \"bar-\", \"baz\"]);\n\n// The word is now so long that break_words kick in:\nlet options = Options::new(5)\n    .word_splitter(WordSplitter::NoHyphenation);\nassert_eq!(wrap(\"foo-bar-baz\", &options),\n           vec![\"foo-b\", \"ar-ba\", \"z\"]);\n\n// If you want to breaks at all, disable both:\nlet options = Options::new(5)\n    .break_words(false)\n    .word_splitter(WordSplitter::NoHyphenation);\nassert_eq!(wrap(\"foo-bar-baz\", &options),\n           vec![\"foo-bar-baz\"]);\n```\n\n[`self.word_splitter`]: #structfield.word_splitter","links":{"`WordSplitter`":"0:238:2662","`Options::break_words`":"0:146:2955"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["word_splitter",{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:285:508":{"id":"0:285:508","crate_id":0,"name":"clone","span":{"filename":"src/wrap_algorithms.rs","begin":[35,9],"end":[35,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:216:2923":{"id":"0:216:2923","crate_id":0,"name":"Word","span":{"filename":"src/core.rs","begin":[239,0],"end":[248,1]},"visibility":"public","docs":"A piece of wrappable text, including any trailing whitespace.\n\nA `Word` is an example of a [`Fragment`], so it has a width,\ntrailing whitespace, and potentially a penalty item.","links":{"`Fragment`":"0:10:2912"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:218:2926","0:219:2928","0:220:2930"],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:17","a:2:35991:251-0:216:2923","a:2:3408:263-0:216:2923","a:2:3443:4842-0:216:2923","a:2:36049:4686-0:216:2923","a:2:45861:10797-0:216:2923","a:2:45862:10998-0:216:2923","b:2:2860-0:216:2923","b:2:2863-0:216:2923","b:2:2918-0:216:2923","b:2:3175-0:216:2923","b:2:3179-0:216:2923","b:2:3185-0:216:2923","b:2:3190-0:216:2923","b:2:4055-0:216:2923","b:5:817-0:216:2923","0:222","0:225","0:227","0:230","0:232","0:235","0:14","0:25"]}}},"0:319:2649":{"id":"0:319:2649","crate_id":0,"name":"line_ending","span":{"filename":"src/options.rs","begin":[12,4],"end":[12,31]},"visibility":"public","docs":"Line ending used for breaking lines.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}},"0:28:2919":{"id":"0:28:2919","crate_id":0,"name":"penalty_width","span":{"filename":"src/core.rs","begin":[344,4],"end":[346,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[125,0],"end":[157,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2952:213","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:165:739"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:20:2945":{"id":"0:20:2945","crate_id":0,"name":"break_apart","span":{"filename":"src/core.rs","begin":[286,4],"end":[325,5]},"visibility":"public","docs":"Break this word into smaller words with a width of at most\n`line_width`. The whitespace and penalty from this `Word` is\nadded to the last piece.\n\n# Examples\n\n```\nuse textwrap::core::Word;\nassert_eq!(\n    Word::from(\"Hello!  \").break_apart(3).collect::<Vec<_>>(),\n    vec![Word::from(\"Hel\"), Word::from(\"lo!  \")]\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"Self"}}}],["line_width",{"primitive":"usize"}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8763:190","args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":{"angle_bracketed":{"args":[],"constraints":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'b"}]},"is_c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:9:2902":{"id":"0:9:2902","crate_id":0,"name":"display_width","span":{"filename":"src/core.rs","begin":[199,0],"end":[209,1]},"visibility":"public","docs":"Compute the display width of `text` while skipping over ANSI\nescape sequences.\n\n# Examples\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(display_width(\"Café Plain\"), 10);\nassert_eq!(display_width(\"\\u{1b}[31mCafé Rouge\\u{1b}[0m\"), 10);\nassert_eq!(display_width(\"\\x1b]8;;http://example.com\\x1b\\\\This is a link\\x1b]8;;\\x1b\\\\\"), 14);\n```\n\n**Note:** When the `unicode-width` Cargo feature is disabled, the\nwidth of a `char` is determined by a crude approximation which\nsimply counts chars below U+1100 as 1 column wide, and all other\ncharacters as 2 columns wide. With the feature enabled, function\nwill correctly deal with [combining characters] in their\ndecomposed form (see [Unicode equivalence]).\n\nAn example of a decomposed character is “é”, which can be\ndecomposed into: “e” followed by a combining acute accent: “◌́”.\nWithout the `unicode-width` Cargo feature, every `char` below\nU+1100 has a width of 1. This includes the combining accent:\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(display_width(\"Cafe Plain\"), 10);\n#[cfg(feature = \"unicode-width\")]\nassert_eq!(display_width(\"Cafe\\u{301} Plain\"), 10);\n#[cfg(not(feature = \"unicode-width\"))]\nassert_eq!(display_width(\"Cafe\\u{301} Plain\"), 11);\n```\n\n## Emojis and CJK Characters\n\nCharacters such as emojis and [CJK characters] used in the\nChinese, Japanese, and Korean languages are seen as double-width,\neven if the `unicode-width` feature is disabled:\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(display_width(\"😂😭🥺🤣✨😍🙏🥰😊🔥\"), 20);\nassert_eq!(display_width(\"你好\"), 4);  // “Nǐ hǎo” or “Hello” in Chinese\n```\n\n# Limitations\n\nThe displayed width of a string cannot always be computed from the\nstring alone. This is because the width depends on the rendering\nengine used. This is particularly visible with [emoji modifier\nsequences] where a base emoji is modified with, e.g., skin tone or\nhair color modifiers. It is up to the rendering engine to detect\nthis and to produce a suitable emoji.\n\nA simple example is “❤️”, which consists of “❤” (U+2764: Black\nHeart Symbol) followed by U+FE0F (Variation Selector-16). By\nitself, “❤” is a black heart, but if you follow it with the\nvariant selector, you may get a wider red heart.\n\nA more complex example would be “👨‍🦰” which should depict a man\nwith red hair. Here the computed width is too large — and the\nwidth differs depending on the use of the `unicode-width` feature:\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(\"👨‍🦰\".chars().collect::<Vec<char>>(), ['\\u{1f468}', '\\u{200d}', '\\u{1f9b0}']);\n#[cfg(feature = \"unicode-width\")]\nassert_eq!(display_width(\"👨‍🦰\"), 4);\n#[cfg(not(feature = \"unicode-width\"))]\nassert_eq!(display_width(\"👨‍🦰\"), 6);\n```\n\nThis happens because the grapheme consists of three code points:\n“👨” (U+1F468: Man), Zero Width Joiner (U+200D), and “🦰”\n(U+1F9B0: Red Hair). You can see them above in the test. With\n`unicode-width` enabled, the ZWJ is correctly seen as having zero\nwidth, without it is counted as a double-width character.\n\n## Terminal Support\n\nModern browsers typically do a great job at combining characters\nas shown above, but terminals often struggle more. As an example,\nGnome Terminal version 3.38.1, shows “❤️” as a big red heart, but\nshows \"👨‍🦰\" as “👨🦰”.\n\n[combining characters]: https://en.wikipedia.org/wiki/Combining_character\n[Unicode equivalence]: https://en.wikipedia.org/wiki/Unicode_equivalence\n[CJK characters]: https://en.wikipedia.org/wiki/CJK_characters\n[emoji modifier sequences]: https://unicode.org/emoji/charts/full-emoji-modifiers.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:138:878":{"id":"0:138:878","crate_id":0,"name":"from","span":{"filename":"src/options.rs","begin":[51,4],"end":[53,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["width",{"primitive":"usize"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[170,0],"end":[200,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:169:1249","0:170:3661"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[35,16],"end":[35,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3403:121","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,16],"end":[185,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:35993:260","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:67:3117":{"id":"0:67:3117","crate_id":0,"name":"wrap_optimal_fit","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[302,0],"end":[389,1]},"visibility":"public","docs":"Wrap abstract fragments into lines with an optimal-fit algorithm.\n\nThe `line_widths` slice gives the target line width for each line\n(the last slice element is repeated as necessary). This can be\nused to implement hanging indentation.\n\nThe fragments must already have been split into the desired\nwidths, this function will not (and cannot) attempt to split them\nfurther when arranging them into lines.\n\n# Optimal-Fit Algorithm\n\nThe algorithm considers all possible break points and picks the\nbreaks which minimizes the gaps at the end of each line. More\nprecisely, the algorithm assigns a cost or penalty to each break\npoint, determined by `cost = gap * gap` where `gap = target_width -\nline_width`. Shorter lines are thus penalized more heavily since\nthey leave behind a larger gap.\n\nWe can illustrate this with the text “To be, or not to be: that is\nthe question”. We will be wrapping it in a narrow column with room\nfor only 10 characters. The [greedy\nalgorithm](super::wrap_first_fit) will produce these lines, each\nannotated with the corresponding penalty:\n\n```text\n\"To be, or\"   1² =  1\n\"not to be:\"  0² =  0\n\"that is\"     3² =  9\n\"the\"         7² = 49\n\"question\"    2² =  4\n```\n\nWe see that line four with “the” leaves a gap of 7 columns, which\ngives it a penalty of 49. The sum of the penalties is 63.\n\nThere are 10 words, which means that there are `2_u32.pow(9)` or\n512 different ways to typeset it. We can compute\nthe sum of the penalties for each possible line break and search\nfor the one with the lowest sum:\n\n```text\n\"To be,\"     4² = 16\n\"or not to\"  1² =  1\n\"be: that\"   2² =  4\n\"is the\"     4² = 16\n\"question\"   2² =  4\n```\n\nThe sum of the penalties is 41, which is better than what the\ngreedy algorithm produced.\n\nSearching through all possible combinations would normally be\nprohibitively slow. However, it turns out that the problem can be\nformulated as the task of finding column minima in a cost matrix.\nThis matrix has a special form (totally monotone) which lets us\nuse a [linear-time algorithm called\nSMAWK](https://lib.rs/crates/smawk) to find the optimal break\npoints.\n\nThis means that the time complexity remains O(_n_) where _n_ is\nthe number of words. Compared to\n[`wrap_first_fit()`](super::wrap_first_fit), this function is\nabout 4 times slower.\n\nThe optimization of per-line costs over the entire paragraph is\ninspired by the line breaking algorithm used in TeX, as described\nin the 1981 article [_Breaking Paragraphs into\nLines_](http://www.eprg.org/G53DOC/pdfs/knuth-plass-breaking.pdf)\nby Knuth and Plass. The implementation here is based on [Python\ncode by David\nEppstein](https://github.com/jfinkels/PADS/blob/master/pads/wrap.py).\n\n# Errors\n\nIn case of an overflow during the cost computation, an `Err` is\nreturned. Overflows happens when fragments or lines have infinite\nwidths (`f64::INFINITY`) or if the widths are so large that the\ngaps at the end of lines have sizes larger than `f64::MAX.sqrt()`\n(approximately 1e154):\n\n```\nuse textwrap::core::Fragment;\nuse textwrap::wrap_algorithms::{wrap_optimal_fit, OverflowError, Penalties};\n\n#[derive(Debug, PartialEq)]\nstruct Word(f64);\n\nimpl Fragment for Word {\n    fn width(&self) -> f64 { self.0 }\n    fn whitespace_width(&self) -> f64 { 1.0 }\n    fn penalty_width(&self) -> f64 { 0.0 }\n}\n\n// Wrapping overflows because 1e155 * 1e155 = 1e310, which is\n// larger than f64::MAX:\nassert_eq!(wrap_optimal_fit(&[Word(0.0), Word(0.0)], &[1e155], &Penalties::default()),\n           Err(OverflowError));\n```\n\nWhen using fragment widths and line widths which fit inside an\n`u64`, overflows cannot happen. This means that fragments derived\nfrom a `&str` cannot cause overflows.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"super::wrap_first_fit":"0:92:3185"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["fragments",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"slice":{"generic":"T"}}}}],["line_widths",{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"slice":{"primitive":"f64"}}}}],["penalties",{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:46033:239","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:7390:282","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"slice":{"generic":"T"}}}}}],"constraints":[]}}}}},{"type":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fragment","id":"0:10:2912","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,16],"end":[22,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3403:121","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"b:2:3190-0:216:2923":{"id":"b:2:3190-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:3193:150","2:3194:1923"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:144:3613":{"id":"0:144:3613","crate_id":0,"name":"initial_indent","span":{"filename":"src/options.rs","begin":[146,4],"end":[151,5]},"visibility":"public","docs":"Change [`self.initial_indent`]. The initial indentation is\nused on the very first line of output.\n\n# Examples\n\nClassic paragraph indentation can be achieved by specifying an\ninitial indentation and wrapping each paragraph by itself:\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(16).initial_indent(\"    \");\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"    This is a\",\n                \"little example.\"]);\n```\n\n[`self.initial_indent`]: #structfield.initial_indent","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["initial_indent",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:2:35991:251-0:248:3119":{"id":"a:2:35991:251-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:35991:251","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:243:3035":{"id":"0:243:3035","crate_id":0,"name":"Custom","span":{"filename":"src/word_splitters.rs","begin":[88,4],"end":[88,40]},"visibility":"default","docs":"Use a custom function as the word splitter.\n\nThis variant lets you implement a custom word splitter using\nyour own function.\n\n# Examples\n\n```\nuse textwrap::WordSplitter;\n\nfn split_at_underscore(word: &str) -> Vec<usize> {\n    word.match_indices('_').map(|(idx, _)| idx + 1).collect()\n}\n\nlet word_splitter = WordSplitter::Custom(split_at_underscore);\nassert_eq!(word_splitter.split_points(\"a_long_identifier\"),\n           vec![2, 7]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:245:2107"]},"discriminant":null}}},"0:295:508":{"id":"0:295:508","crate_id":0,"name":"clone","span":{"filename":"src/line_ending.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:2:3443:4842-0:273:2663":{"id":"a:2:3443:4842-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3443:4842","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:117:2656":{"id":"0:117:2656","crate_id":0,"name":"dedent","span":{"filename":"src/indentation.rs","begin":[95,0],"end":[150,1]},"visibility":"public","docs":"Removes common leading whitespace from each line.\n\nThis function will look at each non-empty line and determine the\nmaximum amount of whitespace that can be removed from all lines:\n\n```\nuse textwrap::dedent;\n\nassert_eq!(dedent(\"\n    1st line\n      2nd line\n    3rd line\n\"), \"\n1st line\n  2nd line\n3rd line\n\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7976:259","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:3185-0:216:2923":{"id":"b:2:3185-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3155:274","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:3188:150","2:3189:1925"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3179-0:264:3118":{"id":"b:2:3179-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3181:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3185-0:316:2659":{"id":"b:2:3185-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3155:274","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:3188:150","2:3189:1925"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:36049:4686-0:238:2662":{"id":"a:2:36049:4686-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36049:4686","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"a:2:45862:10998-0:216:2923":{"id":"a:2:45862:10998-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45862:10998","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"a:2:45862:10998-0:264:3118":{"id":"a:2:45862:10998-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45862:10998","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:3185-0:264:3118":{"id":"b:2:3185-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3155:274","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:3188:150","2:3189:1925"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:4055-0:289:2658":{"id":"b:2:4055-0:289:2658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4053:71","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:4057:1938"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250:3354":{"id":"0:250:3354","crate_id":0,"name":"overflow_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[70,4],"end":[70,31]},"visibility":"public","docs":"Per-character cost for lines that overflow the target line width.\n\nWith a default value of 50², every single character costs as\nmuch as leaving a gap of 50 characters behind. This is because\nwe assign as cost of `gap * gap` to a short line. When\nwrapping monospace text, we can overflow the line by 1\ncharacter in extreme cases:\n\n```\nuse textwrap::core::Word;\nuse textwrap::wrap_algorithms::{wrap_optimal_fit, Penalties};\n\nlet short = \"foo \";\nlet long = \"x\".repeat(50);\nlet length = (short.len() + long.len()) as f64;\nlet fragments = vec![Word::from(short), Word::from(&long)];\nlet penalties = Penalties::new();\n\n// Perfect fit, both words are on a single line with no overflow.\nlet wrapped = wrap_optimal_fit(&fragments, &[length], &penalties).unwrap();\nassert_eq!(wrapped, vec![&[Word::from(short), Word::from(&long)]]);\n\n// The words no longer fit, yet we get a single line back. While\n// the cost of overflow (`1 * 2500`) is the same as the cost of the\n// gap (`50 * 50 = 2500`), the tie is broken by `nline_penalty`\n// which makes it cheaper to overflow than to use two lines.\nlet wrapped = wrap_optimal_fit(&fragments, &[length - 1.0], &penalties).unwrap();\nassert_eq!(wrapped, vec![&[Word::from(short), Word::from(&long)]]);\n\n// The cost of overflow would be 2 * 2500, whereas the cost of\n// the gap is only `49 * 49 + nline_penalty = 2401 + 1000 =\n// 3401`. We therefore get two lines.\nlet wrapped = wrap_optimal_fit(&fragments, &[length - 2.0], &penalties).unwrap();\nassert_eq!(wrapped, vec![&[Word::from(short)],\n                         &[Word::from(&long)]]);\n```\n\nThis only happens if the overflowing word is 50 characters\nlong _and_ if the word overflows the line by exactly one\ncharacter. If it overflows by more than one character, the\noverflow penalty will quickly outgrow the cost of the gap, as\nseen above.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:166":{"id":"0:166","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[159,0],"end":[168,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:167:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:206-0:116:2657":{"id":"0:206-0:116:2657","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[226,30],"end":[226,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"indentation::indent","name":"indent","id":"0:116:2657","is_glob":false}}},"b:2:2918-0:273:2663":{"id":"b:2:2918-0:273:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2916:4849","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2663","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2920:29529"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:45862:10998-0:248:3119":{"id":"a:2:45862:10998-0:248:3119","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:45862:10998","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3119","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:2918-0:238:2662":{"id":"b:2:2918-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2916:4849","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["2:2920:29529"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:820:4356":{"id":"5:820:4356","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[194,0],"end":[194,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","cause","provide","source","description"],"trait":{"name":"Error","id":"2:3238:150","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["0:295:508"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:147:3863":{"id":"0:147:3863","crate_id":0,"name":"word_separator","span":{"filename":"src/options.rs","begin":[224,4],"end":[229,5]},"visibility":"public","docs":"Change [`self.word_separator`].\n\nSee the [`WordSeparator`] trait for details on the choices.\n\n[`self.word_separator`]: #structfield.word_separator","links":{"`WordSeparator`":"0:332:2661"},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["word_separator",{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}]],"output":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"b:2:2918-0:216:2923":{"id":"b:2:2918-0:216:2923","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2916:4849","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:2920:29529"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[7,16],"end":[7,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["0:331:508"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:203-0:113:2655":{"id":"0:203-0:113:2655","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[225,21],"end":[225,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"fill::fill_inplace","name":"fill_inplace","id":"0:113:2655","is_glob":false}}},"b:5:6133-0:264:3118":{"id":"b:5:6133-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:11010:133","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:35992:253","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6131:267","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":["5:6135:1898"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:65:847":{"id":"0:65:847","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[189,4],"end":[191,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:238:2662":{"id":"0:238:2662","crate_id":0,"name":"WordSplitter","span":{"filename":"src/word_splitters.rs","begin":[37,0],"end":[99,1]},"visibility":"public","docs":"The `WordSplitter` enum describes where words can be split.\n\nIf the textwrap crate has been compiled with the `hyphenation`\nCargo feature enabled, you will find a\n[`WordSplitter::Hyphenation`] variant. Use this struct for\nlanguage-aware hyphenation:\n\n```\n#[cfg(feature = \"hyphenation\")] {\n    use hyphenation::{Language, Load, Standard};\n    use textwrap::{wrap, Options, WordSplitter};\n\n    let text = \"Oxidation is the loss of electrons.\";\n    let dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();\n    let options = Options::new(8).word_splitter(WordSplitter::Hyphenation(dictionary));\n    assert_eq!(wrap(text, &options), vec![\"Oxida-\",\n                                          \"tion is\",\n                                          \"the loss\",\n                                          \"of elec-\",\n                                          \"trons.\"]);\n}\n```\n\nPlease see the documentation for the [hyphenation] crate for more\ndetails.\n\n[hyphenation]: https://docs.rs/hyphenation/","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":["0:239:3016","0:241:3026","0:243:3035"],"impls":["0:40","a:2:35991:251-0:238:2662","a:2:3408:263-0:238:2662","a:2:3443:4842-0:238:2662","a:2:36049:4686-0:238:2662","a:2:45861:10797-0:238:2662","a:2:45862:10998-0:238:2662","b:2:2860-0:238:2662","b:2:2863-0:238:2662","b:2:2918-0:238:2662","b:2:3175-0:238:2662","b:2:3179-0:238:2662","b:2:3185-0:238:2662","b:2:3190-0:238:2662","b:2:4055-0:238:2662","b:5:817-0:238:2662","0:246","0:36","0:38"]}}},"a:2:45861:10797-0:264:3118":{"id":"a:2:45861:10797-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45861:10797","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:3179-0:316:2659":{"id":"b:2:3179-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3152:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:3181:878"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:45861:10797-0:332:2661":{"id":"a:2:45861:10797-0:332:2661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45861:10797","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2661","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"b:2:2918-0:316:2659":{"id":"b:2:2918-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2906:114","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2916:4849","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:2920:29529"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3443:4842-0:264:3118":{"id":"a:2:3443:4842-0:264:3118","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3443:4842","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["0:328:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,9],"end":[238,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11005:123","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["0:224:847"],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:270:739":{"id":"0:270:739","crate_id":0,"name":"eq","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,16],"end":[185,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"name":"OverflowError","id":"0:264:3118","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:55:1249":{"id":"0:55:1249","crate_id":0,"name":"new","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[141,4],"end":[149,5]},"visibility":"public","docs":"Default penalties for monospace text.\n\nThe penalties here work well for monospace text. This is\nbecause they expect the gaps at the end of lines to be roughly\nin the range `0..100`. If the gaps are larger, the\n`overflow_penalty` and `hyphen_penalty` become insignificant.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:19:878":{"id":"0:19:878","crate_id":0,"name":"from","span":{"filename":"src/core.rs","begin":[263,4],"end":[271,5]},"visibility":"public","docs":"Construct a `Word` from a string.\n\nA trailing stretch of `' '` is automatically taken to be the\nwhitespace part of the word.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["word",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"a:2:45861:10797-0:238:2662":{"id":"a:2:45861:10797-0:238:2662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:45861:10797","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2662","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"0:241:3026":{"id":"0:241:3026","crate_id":0,"name":"HyphenSplitter","span":{"filename":"src/word_splitters.rs","begin":[68,4],"end":[68,18]},"visibility":"default","docs":"`HyphenSplitter` is the default `WordSplitter` used by\n[`Options::new`](super::Options::new). It will split words on\nexisting hyphens in the word.\n\nIt will only use hyphens that are surrounded by alphanumeric\ncharacters, which prevents a word like `\"--foo-bar\"` from\nbeing split into `\"--\"` and `\"foo-bar\"`.\n\n# Examples\n\n```\nuse textwrap::WordSplitter;\n\nassert_eq!(WordSplitter::HyphenSplitter.split_points(\"--foo-bar\"),\n           vec![6]);\n```","links":{"super::Options::new":"0:141:1249"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3190-0:316:2659":{"id":"b:2:3190-0:316:2659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3149:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3159:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":["2:3193:150","2:3194:1923"],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:224:847":{"id":"0:224:847","crate_id":0,"name":"fmt","span":{"filename":"src/core.rs","begin":[238,9],"end":[238,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10972:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10953:239","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:301:739":{"id":"0:301:739","crate_id":0,"name":"eq","span":{"filename":"src/line_ending.rs","begin":[7,29],"end":[7,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:239:3016":{"id":"0:239:3016","crate_id":0,"name":"NoHyphenation","span":{"filename":"src/word_splitters.rs","begin":[50,4],"end":[50,17]},"visibility":"default","docs":"Use this as a [`Options.word_splitter`] to avoid any kind of\nhyphenation:\n\n```\nuse textwrap::{wrap, Options, WordSplitter};\n\nlet options = Options::new(8).word_splitter(WordSplitter::NoHyphenation);\nassert_eq!(wrap(\"foo bar-baz\", &options),\n           vec![\"foo\", \"bar-baz\"]);\n```\n\n[`Options.word_splitter`]: super::Options::word_splitter","links":{"super::Options::word_splitter":"0:149:3077"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,16],"end":[238,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3403:121","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"2:2920:29529":{"id":"2:2920:29529","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"is_mutable":true,"type":{"generic":"T"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,16],"end":[7,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3403:121","args":{"angle_bracketed":{"args":[],"constraints":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2658","args":{"angle_bracketed":{"args":[],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"0:27:2916":{"id":"0:27:2916","crate_id":0,"name":"whitespace_width","span":{"filename":"src/core.rs","begin":[337,4],"end":[339,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"5:821:5004":{"id":"5:821:5004","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:13306:18011":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:8483:8100":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"16:4118:6905":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:47915:7958":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:15956:6576":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:13404:6006":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:11416:29904":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:12613:5938":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:1234:5629":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:13914:6081":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:46604:4667":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"16:6366:6824":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"5:5583:17912":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"1:12271:10495":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:5374:8930":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:43355:223":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:16677:6784":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"16:5083:6921":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:14157:6135":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:50100:8010":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:1490:8542":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:9669:9689":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"2:26401:35413":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:1720:7457":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:41:10820":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:15976:6582":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:6995:7082":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:1587:168":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:48057:7797":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:8776:5618":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:16306:6690":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:3432:34232":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:51470:8061":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:50167:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:4850:8724":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:4437:9689":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:12730:5947":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:3740:8114":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"5:1160:37224":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:47887:7783":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:13113:5785":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:5271:17819":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:49924:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:16819:6818":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:13837:17926":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:26624:7847":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"2:51580:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:8782:7775":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:10529:25323":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"5:1285:10487":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:51072:8046":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:50613:8029":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:44520:7892":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:1558:7436":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:13470:6010":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"5:1650:7438":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:15664:6499":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"5:1249:10486":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:6967:6879":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"5:7896:7572":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:45745:7760":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"5:3353:37429":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:50599:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:4053:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:47741:7954":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:12430:8180":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:16796:6813":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:9541:8289":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:45883:5168":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:12294:8116":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:43485:4943":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:1717:4957":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:3193:239":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"6:5496:8999":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"1:5679:133":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:1704:8672":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:3159:8106":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:16760:6807":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"1:9988:29901":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"6:7318:9347":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:46201:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"16:2448:6844":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"9:471:24239":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:46275:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:12408:7783":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:15924:6565":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:46462:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:25595:10879":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:44151:7870":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"16:155:6822":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:15629:6495":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:50032:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:50059:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:13653:6026":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"18:735:29520":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:6254:6962":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:8480:7323":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:8134:6894":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:12788:8336":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:50383:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:1034:7457":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"6:5631:9062":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:9372:8281":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:41920:4929":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:9465:8287":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:3803:224":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:11564:36171":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"11:852:7444":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:16618:6064":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"2:45968:223":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"17:16056:6599":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"11:871:7446":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:44994:5063":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:11428:25337":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"16:2433:24387":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:45693:7910":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:13005:25454":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:12856:1957":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:8277:5905":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:5491:465":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:14563:6214":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"11:338:9664":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:7449:9393":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:13224:5993":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"6:7590:9469":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"13:272:8448":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"0:92:3185":{"crate_id":0,"path":["textwrap","wrap_algorithms","wrap_first_fit"],"kind":"function"},"6:5529:9008":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:2000:8093":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:45546:7756":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:4347:10946":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:48403:7986":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"6:7400:9382":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:25622:7815":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:43377:225":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:13897:6079":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:48524:9683":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:11225:165":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"11:2560:38970":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:4260:4957":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:46597:4666":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"5:1036:7436":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:13933:6086":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:5413:8952":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:10288:25315":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:13776:6046":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:8504:8201":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:12411:8333":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:9118:8277":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:48170:7967":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:15574:6483":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:12242:7778":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:680:5545":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:15067:6312":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:2456:5639":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:11333:29748":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:5067:10957":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"9:491:7523":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"20:15:5134":{"crate_id":20,"path":["smawk","Matrix"],"kind":"trait"},"17:16807:6815":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"5:6889:7457":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:12869:5957":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:11830:5831":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"9:319:8457":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:6656:7039":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:8543:7329":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:44204:7874":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:14859:10813":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:2287:10864":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"5:7940:7585":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:5225:8873":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"6:7377:9381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"11:1083:38971":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:16749:6802":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"2:10634:10046":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:12978:17893":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"6:5666:9075":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:5583:9034":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:3677:153":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"6:5357:8925":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"16:8025:7267":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:6406:6986":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:8288:9500":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"16:2548:6855":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"5:3129:37435":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:7334:7149":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:12838:1400":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"11:309:9661":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:14781:6260":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:45671:35440":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:1685:8665":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:46892:35500":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"5:7777:4957":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:1573:7455":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:50545:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:25206:11063":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:25999:11152":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:5122:8125":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"6:8000:9478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:51328:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:13705:6033":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:47167:7935":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:41975:4930":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"0:29:2955":{"crate_id":0,"path":["textwrap","core","break_words"],"kind":"function"},"17:14086:6111":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"11:2554:8451":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:8416:5068":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"11:374:10476":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:12906:7786":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"2:50275:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:13200:5991":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2:4508:9689":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:14629:6223":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:5033:8821":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:6553:9187":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:9725:8171":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:5687:6935":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:10826:5765":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"6:1570:8585":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:15822:6539":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:7417:9383":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:4984:8794":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:45705:8119":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:5395:8941":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"18:613:38999":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:9918:7765":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"0:216:2923":{"crate_id":0,"path":["textwrap","core","Word"],"kind":"struct"},"2:50437:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:6648:9234":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:10629:36704":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"16:7165:7118":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:11323:5787":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:36050:4846":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:44451:5041":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:50761:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:12819:5954":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:48019:7962":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11608:5811":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"0:9:2902":{"crate_id":0,"path":["textwrap","core","display_width"],"kind":"function"},"16:6694:7048":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:51207:8051":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:14711:119":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:25934:10879":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"16:8500:7324":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:14603:6220":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:16578:6765":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"11:2146:7450":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:8595:7337":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:11351:5788":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:1508:8550":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:3881:159":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:2215:1445":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"16:6950:7081":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:51355:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"16:6142:25248":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:11672:5815":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:6898:8157":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:5389:8938":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:7398:38978":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:10820:5764":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"5:5729:17914":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:35915:8453":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:6868:9298":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:12834:1245":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:34392:4663":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"16:2988:6875":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:6747:6836":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:43340:226":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:9546:119":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:10260:25314":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:10980:38988":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:50478:8024":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:1633:8633":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:3387:37430":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:14576:5907":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:3439:6901":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:15901:6560":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:12846:780":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:5547:9019":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:14793:6262":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:9684:247":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"5:7801:7580":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:8206:6883":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:10822:32106":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2:2295:7597":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"18:507:5564":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:13333:5722":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"5:7466:37287":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:16320:6692":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:14670:6230":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:11117:38991":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:15203:6332":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"5:4269:7457":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"5:7881:10804":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"16:3693:6903":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:12394:7782":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:51452:8060":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:1724:7546":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:5022:10988":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:46952:4665":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:51220:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:15990:6584":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:6026:6877":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:4463:10491":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:3515:4922":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"2:3122:10879":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:5077:4656":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:12820:29782":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"0:0:2664":{"crate_id":0,"path":["textwrap"],"kind":"module"},"5:5991:17956":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:5280:6928":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:586:29864":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:14734:284":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"18:80:10457":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:5445:8130":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:10970:5781":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:4954:6918":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:48064:7874":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"18:706:5599":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:5428:8957":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:34778:4860":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:14115:6120":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:12353:7781":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:12593:5937":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:1086:7446":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"11:2226:5854":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"11:828:7456":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"15:299:10465":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:11012:4667":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:2578:10864":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:43323:4937":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:11873:5809":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:4536:8120":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:2091:9689":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"5:6702:18273":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"11:102:9659":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:44635:5053":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:46386:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:13635:6023":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:8866:8248":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:48185:7972":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:3711:7551":{"crate_id":5,"path":["alloc","collections","btree","set","CursorMutKey"],"kind":"struct"},"17:11775:25358":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"5:6322:7573":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:8806:10920":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:10903:151":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:3450:4844":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"11:1672:9954":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:5755:6936":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"5:5456:7573":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:6939:7080":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:12847:797":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:13098:5809":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"1:11030:8107":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"6:5238:8877":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:50653:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:26089:11141":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:11213:9690":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"5:7288:17957":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:11968:5843":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:46425:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:4433:10489":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"0:274:3131":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm","FirstFit"],"kind":"variant"},"2:45821:5169":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"11:1156:7454":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:2343:133":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"17:16216:6662":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"11:1891:7546":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:9633:9601":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:7504:9430":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:47573:7937":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:6482:9146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"11:361:10473":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"17:14001:6096":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"9:0:4506":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:8254:8183":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:3722:8251":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:44543:5047":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:11156:5784":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:2916:4849":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"16:4402:6910":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:44987:4664":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:12849:969":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:15933:6568":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:14642:6225":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:7966:7265":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:2425:5636":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"6:6438:9126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:26712:7855":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"6:587:8538":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:4484:10492":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:6620:9221":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:47601:7941":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"16:7977:6891":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:48792:35564":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"17:13236:5994":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"16:5222:6926":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:14448:6196":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"11:706:7437":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:6935:37224":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"22:0:2665":{"crate_id":22,"path":["unicode_linebreak"],"kind":"module"},"2:44299:7879":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:47128:7926":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:26443:9675":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:8759:5041":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"6:7455:9394":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:11634:5746":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:5520:9007":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"5:1435:7448":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:16833:6819":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"1:3797:10878":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:14481:6204":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:12336:5889":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:16722:6793":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"17:11733:5819":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:8623:7339":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:8730:8115":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:12191:8177":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:13494:6012":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:13534:6014":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:6911:7078":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:26084:11143":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"16:5707:25247":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:45900:7916":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"16:2702:6862":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:8047:10488":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:560:8524":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:51536:8064":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:45801:7455":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"18:113:10461":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:5552:1039":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:13188:5990":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"16:6864:25253":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:6779:7062":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"0:3:597":{"crate_id":0,"path":["textwrap","core"],"kind":"module"},"17:11107:5783":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"11:696:4957":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:8098:5059":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:16853:6096":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"6:6759:9269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"21:27:5006":{"crate_id":21,"path":["unicode_width","UnicodeWidthStr"],"kind":"trait"},"6:4955:8783":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:1195:7448":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:16655:6779":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"1:9362:8279":{"crate_id":1,"path":["std","pipe","PipeReader"],"kind":"struct"},"17:11557:5805":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:15776:6530":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:3683:155":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:787:10792":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:13820:7765":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:46081:7455":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:7563:9463":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:4764:6912":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:48355:7977":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:11782:8331":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"17:12206:5871":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"6:7534:9447":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:8084:7546":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"6:5327:8919":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:2213:7551":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"11:1047:7450":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:26463:7840":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:49816:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:50046:8008":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:1552:8575":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:51572:8066":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"18:698:5597":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:6729:7059":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:5249:8881":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"10:0:4507":{"crate_id":10,"path":["adler"],"kind":"module"},"2:25151:10879":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"6:5279:8896":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:14098:6112":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:25600:11069":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"5:6736:11153":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:7880:6990":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:1644:8641":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:47665:7946":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:4715:37234":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:12234:5875":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:47120:7925":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:8917:8123":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"5:7763:37312":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:12349:5891":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"18:754:5611":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:12219:5872":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"5:3131:9517":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:10374:25318":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:6612:9220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:5672:9078":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:6812:9286":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:3565:4926":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:6267:6963":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:5502:9001":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:47654:7945":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:49911:8003":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:11005:123":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:5906:8138":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:43455:4941":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:13365:25327":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:48716:176":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:2286:17896":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"2:25135:36943":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"17:12691:5941":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:16224:6663":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:3510:4921":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"2:7209:9670":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:15942:6569":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:26701:7854":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"17:14026:6098":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:46906:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"5:822:122":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:46103:208":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:2964:6874":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:8336:9512":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:48029:7963":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:14715:6235":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:4803:10966":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:12436:7785":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:8259:9493":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:12098:5861":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:44095:7866":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:51247:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:10885:5770":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:48270:7976":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:3495:4913":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:45018:5070":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:4691:8122":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:13486:7791":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:3880:5643":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:47159:7934":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:3485:4915":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:16782:6809":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"11:2119:7181":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:44089:7730":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:498:8484":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:51722:2216":{"crate_id":2,"path":["core","core_arch","x86","bf16"],"kind":"struct"},"2:43279:4936":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"16:2413:24360":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:50194:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:14044:6106":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:7935:7261":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:4889:4643":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:50505:8025":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"16:6736:38977":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:3195:150":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:977:7436":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:4910:8760":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:11194:8320":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"2:3893:4945":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:6981:6896":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:48738:220":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:11033:8109":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"17:15482:6448":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:9983:8193":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"18:680:5594":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:12861:1508":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:3429:34231":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:15726:6513":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:50127:8011":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:12855:1951":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:9689:248":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:7468:7170":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:12101:7930":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"16:2588:6857":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:1661:223":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:7753:7579":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"16:7713:38979":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:46349:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:8581:8202":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:12027:5847":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:43395:228":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:8429:8193":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"5:3985:7548":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:9694:8169":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"2:3238:150":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:22:863":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:4877:8747":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:11058:5782":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:4240:10938":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:6712:9256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"16:6082:6938":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:44174:7872":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:25737:11065":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"19:0:1370":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:4467:9689":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"6:5273:8893":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:50640:8030":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:4937:8775":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:49965:8005":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"11:770:7439":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:8068:10093":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"14:167:24324":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:1540:8566":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:2653:4520":{"crate_id":1,"path":["std","io"],"kind":"module"},"6:6669:9240":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:51274:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:50896:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:50856:8038":{"crate_id":2,"path":["core","core_arch","simd","f16x16"],"kind":"struct"},"6:4992:8799":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:7704:5458":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"5:7989:7589":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:25872:11147":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:8488:8198":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"16:8525:7327":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:51620:8068":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:12060:5849":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:14312:6170":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:6164:8147":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:4842:6914":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:11598:9603":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2:47751:5618":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:10661:8311":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"17:13988:6094":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:13057:5984":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"0:50:2645":{"crate_id":0,"path":["textwrap","wrap_algorithms"],"kind":"module"},"9:413:24242":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:11648:5785":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:16169:6644":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:43503:7865":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:8570:158":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:12070:5851":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:5537:9013":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:3624:4935":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"11:1905:7461":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:5005:8805":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:7946:6890":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:1515:8552":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:6157:8143":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:5820:8136":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:12315:7780":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:5027:8818":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:11571:36173":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"11:2375:7466":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:51628:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"5:7999:7590":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:2397:25384":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:13162:5989":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"1:2025:8095":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"16:4981:6919":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:14756:7814":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:9743:8302":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"10:36:8456":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:10005:131":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"17:14945:6286":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:51686:8071":{"crate_id":2,"path":["core","core_arch","x86","__m256h"],"kind":"struct"},"5:3702:7550":{"crate_id":5,"path":["alloc","collections","btree","set","CursorMut"],"kind":"struct"},"2:50302:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:1585:8597":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:9600:8300":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:45992:227":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"17:11893:5837":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:6462:9135":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:12857:1963":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:45009:5066":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:26690:7853":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"2:9109:162":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:14888:6279":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:12854:1969":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:6171:6952":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:5316:6929":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"0:32:2644":{"crate_id":0,"path":["textwrap","word_splitters"],"kind":"module"},"1:9378:211":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:6498:29896":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:50140:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:44794:5056":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:7327:9353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:50788:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:44564:5048":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"11:796:7457":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:4293:10942":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:50694:8032":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:6588:9208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:7302:9335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"0:276:3140":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm","OptimalFit"],"kind":"variant"},"17:11443:5795":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:12355:8118":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:12151:5867":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:9587:8297":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:5044:8827":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:50572:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:14839:6272":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:35968:7858":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"16:3046:24389":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"12:0:4509":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:50424:8022":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:51424:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"17:14875:6277":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:13613:25296":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:47711:7950":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:6680:9243":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"1:5977:11018":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:44418:7889":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:48516:9681":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:11563:9597":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"1:1746:7463":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:10558:25324":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:13976:6091":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:10606:5612":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:11748:5821":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:8712:5062":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:8180:29916":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:3470:8107":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:8176:7273":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:9580:8296":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"18:581:4860":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:50518:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:12402:5898":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:13600:7777":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:5015:4653":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:9047:8272":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:11659:9604":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:50869:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"9:49:10028":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:4034:8116":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:25332:7816":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:3680:154":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"11:2568:8454":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"21:21:2837":{"crate_id":21,"path":["unicode_width","UnicodeWidthChar"],"kind":"trait"},"22:79:5370":{"crate_id":22,"path":["unicode_linebreak","BreakClass"],"kind":"enum"},"17:13212:5992":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"16:3139:5654":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:8708:7346":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"6:5648:9066":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"5:6202:7457":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:1000:4957":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:15866:6551":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:2952:213":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:11022:4673":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:36540:4912":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:10460:25321":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"5:0:329":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:9976:151":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:12135:7455":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:44380:7888":{"crate_id":2,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"2:48771:7991":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"5:3854:7455":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:5309:8912":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:5145:10953":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:4182:6907":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:5725:5762":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:12940:5969":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"6:5479:8993":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"6:5383:8936":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:48779:7993":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:6408:9109":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:13084:5987":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"2:50586:8028":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:5187:8853":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:26679:7852":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"17:11361:38995":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:47724:7953":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:50815:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:12111:7436":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:4285:10941":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:15849:6543":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"5:4621:283":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:15704:6511":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:51496:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:25735:10879":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:15768:6527":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:46073:7436":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:2854:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:37822:4924":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:8325:10836":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:48212:7975":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"5:2392:37315":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:6121:6881":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:5096:8846":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:51416:8058":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"16:2568:6856":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:7220:7131":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"5:1620:7440":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:524:8504":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:3149:175":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:14796:164":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:16517:6046":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:15583:6487":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:6426:9122":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:49938:8004":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:3159:273":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:15718:6512":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:47735:7790":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:12247:5876":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:11860:5835":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"11:1021:7448":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:2794:6866":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:1691:8668":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:7088:8167":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"2:3876:270":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"16:6606:219":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:2770:6865":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:7793:7548":{"crate_id":5,"path":["alloc","collections","btree","set","Cursor"],"kind":"struct"},"2:11708:36174":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"1:7143:246":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"11:879:7447":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:8054:10092":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"2:51514:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:13771:10859":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:5836:8137":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:13523:7794":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:15696:6510":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:6600:9213":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:50802:8036":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:6873:7074":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:37437:4916":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:1668:8658":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:6850:7071":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:9661:8154":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"15:0:4511":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:14074:6110":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:12268:5879":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"6:6689:9249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"17:14436:6194":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:51099:8047":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:8030:10090":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"1:763:5123":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:11595:5810":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:7371:11061":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:14976:6291":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:8331:4641":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:11400:25336":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:4952:9378":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"2:2988:207":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:25960:37166":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"11:1003:7181":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:1404:7181":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:44645:5038":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:5414:8130":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:35993:260":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:44211:17824":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"8:0:4505":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:4927:6917":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:51112:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"11:2308:7181":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"6:5420:1318":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:3712:4938":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:5290:8904":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:7615:29911":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:51460:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:45958:7918":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"1:12858:1945":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:47643:5030":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:12138:5866":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:2077:5118":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:51126:8048":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:15814:6537":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:12804:10048":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:1069:10810":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:8055:7269":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:12842:1928":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:11273:7772":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:45892:7766":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"11:2449:7457":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"16:7835:25258":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:8633:25262":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:16063:6601":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:14459:6197":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"6:1590:8599":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:3746:5642":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:12840:1791":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:7733:7457":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:6387:6979":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:4900:6916":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:15806:6535":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"14:216:7430":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:14902:6280":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:5684:37224":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:3655:4659":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:16334:6699":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:3585:6902":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"2:42030:4931":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:11395:4235":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:16182:6650":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:51288:8054":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:10484:25322":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:14263:6145":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:2299:10772":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:14418:6193":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:11068:38990":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:2858:9518":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:34339:5195":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:14195:6143":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:7981:5039":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"5:7976:259":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"18:531:5568":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"5:4000:7550":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:3152:157":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:16293:6685":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:50667:8031":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:47815:7956":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:14170:6139":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"0:279:3035":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm","Custom"],"kind":"variant"},"2:46164:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:12125:5864":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:15018:6299":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:15358:6354":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:7421:25256":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:45533:7754":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:16689:6786":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"1:615:10772":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:16543:6735":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"1:9477:11035":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"5:3348:7461":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:7209:7130":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:5196:6925":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:16208:6659":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:9656:199":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:14389:6188":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:7527:10089":{"crate_id":1,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"16:544:6829":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:51315:8055":{"crate_id":2,"path":["core","core_arch","simd","u16x64"],"kind":"struct"},"2:37370:4917":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:10338:25317":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:7549:9454":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:11944:5842":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:44196:7730":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:49951:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:51610:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:4160:7457":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:6109:6948":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:45026:5072":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:480:8476":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:14655:6227":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:5170:6924":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:9492:11034":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:11761:9608":{"crate_id":1,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"2:46837:9586":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:1966:8092":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:15616:6490":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:1948:736":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:10914:8281":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:50356:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:6705:9255":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"5:5733:17915":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:2638:6859":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:14062:6107":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:3887:4942":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:10534:7907":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:25828:11146":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:14432:7807":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"11:2389:7436":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:5046:4655":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:48562:135":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:48508:9679":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:44586:5049":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:46914:4663":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:26668:7851":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:50532:8026":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:16636:6074":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"1:5065:10956":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"5:3408:7463":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:2618:6858":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:2738:711":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:45727:7757":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:45511:182":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:12963:5971":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:7972:32154":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:9415:8284":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:45003:5065":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:6903:9323":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:16705:6791":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"1:9389:8282":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:2682:6861":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:48841:7468":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:51478:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:11433:36169":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"2:51058:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:6937:8158":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:26169:7817":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:12580:5935":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:5638:9065":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:50221:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:10181:25312":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"5:4507:7436":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:44482:5042":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:50019:8007":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:8895:9363":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:12836:1991":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:0:597":{"crate_id":2,"path":["core"],"kind":"module"},"2:48540:9687":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:26474:10923":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:25123:36940":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:11272:8115":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"11:1918:7463":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:5333:5651":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:15394:6385":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:15889:6554":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:47833:7957":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:12040:5848":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"14:204:17940":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"5:7743:7578":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:10442:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:26365:7827":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"5:7298:17958":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"2:51193:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:1728:8681":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:15120:6318":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:2113:829":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:48073:7730":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:13514:5644":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:48421:7800":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"5:4299:37224":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:51562:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"16:8720:150":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:12192:5870":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"17:12259:5878":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"15:405:24351":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"17:14327:6174":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:51694:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:5025:10966":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:48713:163":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:15149:6321":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:6415:233":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:12850:951":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:1055:7437":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:1741:7462":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:14013:6097":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:7256:7143":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:4950:9376":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"18:573:5564":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:36964:4914":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"7:78:24233":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:16246:6669":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:44250:7876":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:6835:7069":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"5:3135:37433":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:6862:9297":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:12984:5974":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:518:8501":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:12323:5887":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:50235:8015":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:1670:7545":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:7336:9354":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"11:1103:7452":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:40044:4928":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:8496:8199":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:44492:146":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:7492:7171":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:8872:8257":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"16:4692:6911":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:50370:8020":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:565:8526":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:2177:710":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"16:3124:24390":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:15093:6314":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:240:7537":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:8319:10795":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:51712:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"6:554:8521":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:12378:5896":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:16408:6714":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:5607:215":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"20:0:2118":{"crate_id":20,"path":["smawk"],"kind":"module"},"2:2857:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:11297:8259":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"5:3341:7436":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:12779:5951":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:11020:219":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"6:6496:9157":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:6725:233":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:8739:250":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:3788:33744":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:34104:10925":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:11305:8192":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"5:7264:17956":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:3910:36380":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:47684:7948":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:7027:7091":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:3925:115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:51045:8045":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:6236:8149":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:1059:7438":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:2594:10869":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:4771:4662":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:6250:29893":{"crate_id":1,"path":["std","sync","lazy_lock","force_mut","really_init_mut","PoisonOnPanic"],"kind":"struct"},"11:1578:7458":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:13841:6064":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:15790:6533":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:2484:6852":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:8011:6893":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:5063:10954":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:14401:6190":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:48803:7996":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:13546:7795":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"3:353:239":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:12177:8176":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:15539:6482":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"16:2838:6868":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:5740:5763":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"5:310:37224":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:8441:8195":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"11:2548:8450":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:485:5623":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:51668:8070":{"crate_id":2,"path":["core","core_arch","x86","__m128h"],"kind":"struct"},"2:2364:201":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:12939:7787":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"0:10:2912":{"crate_id":0,"path":["textwrap","core","Fragment"],"kind":"trait"},"2:10953:239":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:35957:7857":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"3:756:7596":{"crate_id":3,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"1:12334:8117":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:6590:29900":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"16:8666:7233":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:12766:5950":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:7539:7180":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:8294:9501":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:5852:116":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:7016:8159":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"18:651:5564":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:12859:5644":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:8434:8194":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"5:1521:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:2746:6864":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:47365:9678":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:44284:7877":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"6:5173:8852":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:2878:6870":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:12862:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:5377:6931":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:3642:128":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:12848:775":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"17:14526:6210":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:11223:8194":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"16:8582:7334":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:25110:36937":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:1658:8652":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:11616:174":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:14554:217":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:8451:8196":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:9765:7763":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"17:16400:6711":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:8276:9498":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"9:168:10038":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:10835:5769":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"1:1080:7444":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:7189:25255":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:7994:9476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:12292:5884":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:6237:6957":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:6574:284":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:11490:5799":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:4808:6913":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:42664:4933":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:26450:7839":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:5077:8845":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:11850:7520":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:45793:7436":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"11:406:10478":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"5:1265:37432":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:44980:7748":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:49992:8006":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:44136:35435":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"11:683:7455":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:51261:8053":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:48512:9680":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:47137:169":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"16:2948:6873":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:1964:8091":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:2864:8102":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:14378:6185":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"16:6711:7049":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:2828:8103":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"16:6500:24359":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:7804:38981":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:44291:7878":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"2:48390:7982":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"3:0:539":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:1697:8669":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:12929:5968":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"18:635:5586":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"5:7964:7588":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:7572:9466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:7916:7253":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"11:1882:4957":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:11024:4674":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:14142:6129":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:5254:10987":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:5257:8885":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:2580:10865":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:8247:9491":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:14590:6219":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:12203:7777":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"18:623:39000":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:15913:6561":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:44621:5052":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:1522:8555":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:14616:6222":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:963:10811":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"16:7041:6884":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:4239:6908":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:4669:9689":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:11920:5785":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:9448:8141":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"21:0:2666":{"crate_id":21,"path":["unicode_width"],"kind":"module"},"2:51730:8073":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:13580:5973":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:13678:6027":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"11:440:10480":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:25330:11064":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:4998:8802":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:13762:6045":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:8891:8259":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:35975:4652":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"16:8230:25260":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:16364:6707":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:9707:174":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:50680:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:48199:7974":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:8317:25261":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:12216:9693":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:47783:7780":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:4894:4644":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:25081:4860":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"5:7870:7581":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"5:6344:18265":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"18:598:38998":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:11819:5829":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"5:923:7540":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"7:31:24226":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:2752:17882":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"16:2504:6853":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:1092:7447":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:7198:5036":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:3567:8111":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"18:765:29521":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:16196:6656":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:1021:7440":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:13336:3670":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:7912:7582":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:44464:5032":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"6:6754:9268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:8795:8248":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:25948:11151":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"5:2412:9669":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:16422:6717":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:12845:777":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"18:491:5563":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:48532:9685":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:16771:6808":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"6:5511:9006":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"9:381:24241":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:14370:6183":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:44780:5055":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:51602:8067":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:11499:5801":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"1:6043:8139":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:474:8473":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:5491:216":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:2023:8094":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:4837:8714":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:1495:8544":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:49870:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:7972:9475":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:782:8086":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:12716:5943":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"16:7279:7144":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"18:515:5561":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"18:563:5573":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:8950:8260":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"1:7019:11030":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:9442:4957":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:50829:8037":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:918:202":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"17:14850:6274":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:4968:4652":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:675:10778":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"11:2542:8449":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:457:8078":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:8840:8119":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"5:6290:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:8801:8250":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:10771:5617":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:46312:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:5015:8812":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:48544:9597":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:15968:6579":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"18:538:5571":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:13562:7796":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:11264:5786":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:37995:4925":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:44605:5051":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:10576:5762":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:9816:8094":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"2:36752:4911":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:6476:5034":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:51153:8049":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:10845:5618":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"11:2135:7448":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:26613:7846":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"16:6792:7063":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"16:6096:6943":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:5239:10986":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"16:8102:7271":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"11:840:10810":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:13441:6009":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:3012:24388":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:7459:7167":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:13049:5982":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:4455:10490":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:16121:6643":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:15797:6534":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:1019:10812":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:7575:8300":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:2658:6860":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:919:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:8581:177":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:6655:9235":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:29666:286":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:11205:5785":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"18:0:4514":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:16663:6780":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"16:8220:7275":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:8148:6895":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:15645:6498":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:26381:35412":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:12423:29753":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:9592:8298":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"0:243:3035":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter","Custom"],"kind":"variant"},"2:48520:9682":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:3507:4920":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"17:5159:5649":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"5:5295:9689":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:48597:18038":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:12859:1028":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:50343:8019":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:12171:8332":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:25224:7816":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:11080:5905":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:3426:34087":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"16:901:5620":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"17:16018:6591":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:7383:7153":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:8271:5062":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:10805:116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"2:11014:4666":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:6285:9689":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"0:238:2662":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter"],"kind":"enum"},"1:9528:8288":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:10738:5616":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:5576:9032":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:11281:29783":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"11:2504:24315":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"5:3506:7546":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:10207:25313":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"5:7015:4957":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"18:481:5562":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:7713:4957":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"0:241:3026":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter","HyphenSplitter"],"kind":"variant"},"2:13813:17924":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:4800:8687":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:49884:8002":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:47582:7938":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:3382:7460":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:13861:6074":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:8847:9688":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:12303:25428":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"17:11847:5834":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:6457:9689":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:13349:6003":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:1213:7454":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:50181:8013":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:50491:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:11410:29903":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:11289:29785":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:870:166":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:26332:7825":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:7355:6886":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"11:1562:24320":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:7072:25254":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:4938:10943":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:12742:5948":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:49843:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"11:123:9660":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:0:1819":{"crate_id":1,"path":["std"],"kind":"module"},"2:51234:8052":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:46611:4675":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:9112:7436":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:11474:25338":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:51506:8063":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:47674:7947":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:1204:7450":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:5059:8834":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:11923:10879":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:519:5627":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"18:96:10458":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:5213:8866":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:11659:5786":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:8162:6885":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:5612:9053":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:7997:6892":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:7440:9390":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:6887:6878":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:6036:233":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"16:7156:7117":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:3472:8108":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:6623:7023":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:11018:4676":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:5447:6933":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:8270:9497":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:9402:8283":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"18:589:5574":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:12860:2033":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:12974:5973":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:4945:8777":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:13320:7788":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:6586:7020":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"2:12160:7775":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:47522:7936":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:6451:9127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"5:2339:9666":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:13590:6019":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"14:222:7432":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:11268:10883":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:3660:4660":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"17:15682:6507":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:15873:6552":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"5:1819:37224":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:43492:7602":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:51301:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:43676:17829":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"16:7347:7151":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:6806:6876":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"13:125:38973":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:13952:6087":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:12648:5785":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:26042:10879":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"6:5263:8887":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:2842:29866":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:50559:8027":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:48536:9686":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"6:6729:9259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"16:6460:25251":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:4922:8769":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:3108:6898":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:46127:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"14:0:4510":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"11:2409:7455":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"5:7821:4957":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:15592:6488":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:5625:9059":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"17:12165:5868":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:14527:36753":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:10447:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"11:807:7546":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"6:5159:8851":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:50397:8021":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:34371:5196":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:44473:5033":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:48304:7799":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:13831:5599":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:14342:6179":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"2:50937:8041":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"2:35961:7233":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"6:8185:9488":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:9552:8292":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:26602:7845":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"9:436:24240":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:14579:7809":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:5660:9073":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:11215:38993":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:47622:7943":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:6697:9252":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"2:47694:7949":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:13392:6005":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:12277:5880":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:1420:7450":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"14:40:6061":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:4813:8696":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:3690:9689":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:48586:7988":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"5:7952:7587":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:7055:7093":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:12435:5901":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:7413:7156":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:27266:249":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:14816:6271":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:779:8084":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:5142:6923":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:51442:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"6:546:8516":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:26646:7849":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"2:50734:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:35982:7859":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:50073:8009":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:50329:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:50262:8016":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:9434:8286":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:48082:7873":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:50248:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:539:8513":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:12852:963":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:10784:4664":{"crate_id":2,"path":["core","fmt","builders","FromFn"],"kind":"struct"},"1:699:8083":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:51488:8062":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:15518:6477":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:26657:7850":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"6:8235:9489":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:12841:1827":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"16:8093:7270":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:46033:239":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:13735:6037":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:44322:7880":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"3:741:7595":{"crate_id":3,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"17:13428:6007":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:11537:8283":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:533:8510":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:5319:8915":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"11:1912:7462":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:571:8529":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:10067:25309":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:50113:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:4355:10948":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:50910:8040":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:44425:5030":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:16530:6060":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"1:10954:29905":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:51166:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:45784:185":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:3524:8109":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:7013:7089":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:48730:240":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:2619:10877":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"11:1886:7457":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:8424:5703":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:13138:5988":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"1:8852:10965":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:4885:234":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"16:5647:6934":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:46618:4676":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:51554:8065":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:1044:7546":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:4265:6909":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:6533:9171":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:7004:5058":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:2627:9514":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:4139:8118":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:16034:6594":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:15600:6489":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:5510:7735":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"16:6571:7017":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:48813:192":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"6:5436:8962":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:9699:8170":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"17:316:5620":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:3312:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:3306:6843":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:15179:5973":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:47765:7775":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:10035:218":{"crate_id":2,"path":["core","pin","PinCoerceUnsized"],"kind":"trait"},"17:11762:5823":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:34377:5197":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:16045:6598":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:8858:8255":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:14355:6181":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"1:3617:10907":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:8244:8082":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"5:7721:7577":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:4825:10967":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:906:5621":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"2:8763:190":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"16:7551:25257":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:2752:8101":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:9426:7436":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:15107:6317":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:6515:9159":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:50775:8035":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:11016:4675":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:6300:6970":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:8532:5079":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"18:726:5606":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"5:4636:37234":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:10865:5622":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:51382:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:47369:7773":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:11234:8303":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:2184:5192":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:9062:11012":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:9613:29737":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:11243:8195":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"6:5052:8832":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:4037:8117":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:4819:4642":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"11:2332:7448":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:45862:10998":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:3832:6904":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:12853:944":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:50154:8012":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:7347:9359":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:1501:8547":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:7714:10493":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:43243:4934":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:1729:7460":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:5974:9284":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:47591:7940":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:16073:6606":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:2429:5766":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:730:10789":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:9367:8280":{"crate_id":1,"path":["std","pipe","PipeWriter"],"kind":"struct"},"1:11524:8282":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:46499:7770":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:8125:5545":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:3128:4355":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:14695:6232":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:50289:8017":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:2528:6854":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:11036:8111":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"11:1138:7453":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:36079:4845":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:44534:5046":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"16:7728:5169":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:15751:6522":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:12833:443":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:9507:11036":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:11581:8171":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"17:16843:6091":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"1:8340:8192":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:47352:9596":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"17:11019:38989":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:8118:223":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:4234:10939":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"11:1898:7460":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:50707:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:46876:7302":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:13071:5986":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"1:1008:7439":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"18:659:5587":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:7369:6887":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:6788:198":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:4617:8121":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:7354:9363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:11463:5798":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:8135:8181":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:15461:6440":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:3401:279":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:47969:7960":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:1063:7441":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:8314:9506":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"14:162:7424":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:11517:25339":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"17:15053:6311":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:6040:6880":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:4637:17809":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:37236:4678":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:44370:7882":{"crate_id":2,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"2:51676:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:463:8080":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:46931:150":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:4590:7731":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:5253:6927":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:2858:6869":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:10672:5614":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:10155:25311":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"18:521:29522":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:492:8481":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:12165:8172":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:11333:38994":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:1626:8629":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:6622:8151":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"6:6523:9164":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:47869:7782":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:6469:9137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:5786:8131":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:25633:36945":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:14415:7804":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:3403:121":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:7646:9957":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:50991:8043":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"5:3828:194":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:12851:957":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:5365:8926":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"18:689:5596":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:2489:7601":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:26416:35414":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:3480:4677":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"11:444:10481":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:5346:6930":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:2898:6871":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:51544:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"17:15191:6328":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:50316:8018":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:37649:4923":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:51180:8050":{"crate_id":2,"path":["core","core_arch","simd","f16x32"],"kind":"struct"},"5:3934:37224":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:5470:8987":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:8042:10091":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"2:49830:8000":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:44502:5043":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:6720:9257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"6:5619:9056":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"1:8976:5544":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"0:273:2663":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm"],"kind":"enum"},"16:6203:25249":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:2426:8099":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:10972:156":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:14990:6293":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:12280:7779":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:10410:25319":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"22:188:5356":{"crate_id":22,"path":["unicode_linebreak","BreakOpportunity"],"kind":"enum"},"5:5144:230":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:6638:7025":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"2:14457:5046":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"2:47611:7942":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:8586:3035":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"5:7829:4957":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:8063:25259":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:11939:29907":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"2:2284:17895":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"6:4889:8750":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:6641:9233":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:12178:5869":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"15:317:10469":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"5:3374:7462":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:5349:8924":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:13597:6020":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"2:46089:4957":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:26635:7848":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"6:6370:9082":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:13265:25325":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:14127:6123":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:2892:36166":{"crate_id":2,"path":["core","clone","uninit","InitializingSlice"],"kind":"struct"},"2:6363:5045":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:15006:6297":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:26591:7844":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"14:7:7424":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:12805:5953":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:13248:5995":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:13842:17925":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:596:5628":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:25204:10879":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:11569:5808":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:16385:6710":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:46864:9595":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"16:5111:6922":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:13252:150":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:486:8479":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:8590:4685":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:15453:6437":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:11008:123":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:11720:5818":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:15133:6319":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:0:1067":{"crate_id":6,"path":["libc"],"kind":"module"},"1:3779:4672":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:4602:7732":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:5204:8861":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:50923:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:25320:10879":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:47987:7961":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:50086:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:9559:29736":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:915:10924":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"11:2429:4957":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:48380:7978":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:3282:5122":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:2182:209":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:15738:6516":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:49978:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"11:738:7438":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:48528:9684":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:7473:9404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:49803:7999":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"16:6678:7045":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"5:1629:7456":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:5135:8849":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:6677:8139":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:44188:7873":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:2722:6863":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:1735:7461":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:11936:254":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:12077:5854":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:8253:9492":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:50208:8014":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"11:669:7436":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:5303:8909":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:5593:9039":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:10642:8093":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"2:26056:11142":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:11744:29750":{"crate_id":1,"path":["std","sys","dbg","DebuggerPresence"],"kind":"enum"},"2:51139:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:6747:9267":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"16:4150:6906":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"9:227:7930":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:3443:4842":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:15164:6325":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:11555:29786":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:12362:5894":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:9129:8278":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:3962:132":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:50748:8034":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:5415:6932":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:1564:8583":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:3807:10899":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:6050:8140":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"5:7441:37283":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:26309:7820":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:466:8468":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:9112:5075":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:1966:5329":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"16:4871:6915":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:48708:9598":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:12623:9958":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:50883:8039":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:3526:8110":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:0:4512":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:13035:5979":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:7074:8163":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"16:3985:5667":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"2:36082:280":{"crate_id":2,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"2:44164:7871":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:25153:11067":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:11581:5809":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:16010:6590":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:45765:206":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:44552:5057":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:44573:5035":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:5800:8135":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:37303:4919":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:44511:5044":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:13125:5786":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"2:35991:251":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:26343:35410":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:3527:5640":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:51004:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:5449:8972":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:15079:6313":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"18:643:5564":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:7925:17996":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:6820:25252":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"17:12013:5846":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:8959:10997":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:8769:5054":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:1598:8604":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:7525:9444":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:4271:10940":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"5:1923:7546":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"17:14503:6205":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:6432:9125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:2246:5632":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:4471:10964":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:47149:7930":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:4948:9374":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"1:5323:10993":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"6:5333:8920":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:0:4513":{"crate_id":17,"path":["object"],"kind":"module"},"2:2754:17883":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"2:25112:36939":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:50451:8023":{"crate_id":2,"path":["core","core_arch","simd","f16x8"],"kind":"struct"},"6:5403:8946":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:11218:9692":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"17:13824:6061":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:34404:35422":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:45852:5170":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:51646:9599":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:25125:36942":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"0:44:3076":{"crate_id":0,"path":["textwrap","word_splitters","split_words"],"kind":"function"},"1:12222:9694":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:6157:6949":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:6419:6831":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:10663:8310":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"1:4333:10944":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:5565:9027":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:2918:6872":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:14751:6241":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:5342:8923":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"17:12000:5845":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:34751:208":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:8239:10879":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:48720:232":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:51085:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:1676:8659":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:8591:10912":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:14960:6290":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:1050:7456":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:3123:17828":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:8305:10794":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:2106:5119":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:11545:5804":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"2:50964:8042":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"2:25099:36934":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:4343:10945":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"6:6510:9158":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:6737:9260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"11:833:7441":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:990:7455":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:11906:5838":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:12454:29914":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"5:1449:7454":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:15040:6310":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:3660:5066":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:3866:4940":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:2179:210":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:4299:10943":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:12668:5940":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:15881:6553":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:14915:6281":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"11:2358:7450":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:36049:4686":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:12912:6012":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"16:8040:38984":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"5:6755:11154":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"2:4614:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:51031:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:3408:263":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:13800:6060":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:26357:7826":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:13019:5977":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:36081:118":{"crate_id":2,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"6:5458:8978":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:16274:6684":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:8264:7283":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:46013:225":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"16:7302:7145":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:6627:9222":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"11:2575:7581":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:12949:5970":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:9802:7764":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:2957:147":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:11010:133":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:4883:8748":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:50464:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"5:4702:9689":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"2:26279:7819":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:12894:5966":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:26294:9672":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:11507:5802":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"17:13881:6075":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"7:0:2023":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:8326:9510":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:43327:4939":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"6:8017:9487":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:25962:17882":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"18:670:5593":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:3569:8112":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:47112:7923":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:9102:8126":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:16346:6701":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"5:3841:7436":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"11:2475:7546":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:12830:5955":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:12839:356":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:12567:5934":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:4903:10984":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"16:7762:7212":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:16735:6799":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"16:2818:6867":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:48853:7998":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:6802:9283":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:48048:7965":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"5:813:266":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:15474:6447":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:321:5621":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"14:31:7424":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:25910:11148":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"17:11799:25359":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"5:1611:7439":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:5230:10985":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:11260:8309":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"2:48149:17938":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:26224:7818":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:3227:127":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"5:1639:7437":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:12205:8179":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:12792:5952":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:12809:10796":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:16255:6671":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"11:498:166":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:12086:5857":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:6661:9238":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:1713:7436":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:10639:5613":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:8609:6897":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:3143:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:5558:9025":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:3887:5659":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:6841:7070":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:12995:5975":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:12903:5967":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"11:783:7440":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:11233:169":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:25212:11066":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:14929:6284":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:49857:8001":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:3155:274":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:10591:5763":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:44596:5050":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:44442:5031":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:45940:7917":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"6:4929:8773":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:44312:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:16235:6668":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:11695:5816":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:12754:5949":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:50005:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:47933:7959":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:46238:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:11994:5844":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:6186:6953":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:4958:4651":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"5:6131:267":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:2465:6846":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:45861:10797":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"5:3139:37434":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:5065:8836":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:516:197":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:12841:25453":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:43435:229":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:8304:9505":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:42085:4932":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:51369:8057":{"crate_id":2,"path":["core","core_arch","simd","u32x32"],"kind":"struct"},"2:51638:8069":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:5458:36158":{"crate_id":2,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"2:4738:29893":{"crate_id":2,"path":["core","cell","lazy","force_mut","really_init_mut","PoisonOnPanic"],"kind":"struct"},"6:4972:8789":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:15:3044":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:12414:5899":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:6779:9277":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:38168:4927":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:3671:4683":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:51704:8072":{"crate_id":2,"path":["core","core_arch","x86","__m512h"],"kind":"struct"},"5:4344:7455":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:5296:8907":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:45559:10921":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:5115:8847":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:7904:7252":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:14550:6211":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:50626:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:4656:17810":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"6:7434:9388":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:51018:8044":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:4904:8757":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:6438:25250":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:50977:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:2994:214":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:2424:151":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:7518:7178":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"15:338:10025":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"5:7390:282":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:37504:4918":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"18:608:5581":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"11:1878:7436":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"11:1599:7459":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"6:5490:8998":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:640:9956":{"crate_id":1,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"2:44348:7881":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:14735:6236":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"10:44:7470":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"13:0:4503":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:50410:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:13964:6090":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:8789:7962":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:2906:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:2606:10875":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:26554:10879":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"6:8241:9490":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"14:189:24331":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:1531:8560":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:8721:8240":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:12437:8180":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:10436:25320":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:45587:9585":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:15329:6334":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:7104:37224":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:13890:17932":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"6:5232:8874":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:44400:10846":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"5:2202:7550":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:6191:8148":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:12626:5939":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:10954:4672":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:43415:227":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:579:8534":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:3972:10922":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:11350:8284":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"17:14864:6276":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:2596:10870":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:4824:8704":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:3413:4658":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:8463:152":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:1181:7181":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:44360:5618":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"6:6400:9107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:6062:6882":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:14048:123":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:10137:25310":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"6:1712:8676":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:26013:17882":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"2:51342:8056":{"crate_id":2,"path":["core","core_arch","simd","i32x32"],"kind":"struct"},"2:50842:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:2433:10861":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:11166:38992":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:4965:8786":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:5024:4654":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:8536:5078":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:50721:8033":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:8562:7332":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:49897:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:6766:9270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"5:1589:4957":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:12108:5862":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:16355:6705":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:6888:9312":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:3146:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:44333:17996":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"11:0:4508":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:6901:7077":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"5:325:4141":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:46847:4663":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:2903:8105":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:13309:25326":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:35992:253":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:10705:5615":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:14683:6231":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:11253:152":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"1:9024:7930":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"6:5147:8850":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:4:1335":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:9118:5076":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"11:1062:24319":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:25089:36934":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:11318:8138":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"17:12050:5702":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:12835:504":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:7785:223":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:6335:6973":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:12422:7784":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:9157:36703":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:44125:7867":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:894:6838":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"16:5058:6920":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:48830:7997":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:11274:25339":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:8259:8185":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"11:1723:168":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:48039:7964":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:4898:8755":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"4:0:4504":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:8295:7287":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"18:548:165":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:5125:8848":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:7786:38980":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"5:756:7539":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"16:7987:7266":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:4978:8791":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:6399:8139":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:48369:17939":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:16026:6593":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:8711:4684":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:4724:4661":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"6:8282:9499":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:11309:8323":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"6:5485:8996":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:44770:5054":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:15983:6583":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"5:4067:7546":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:12390:5897":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"5:2309:7552":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:1353:5631":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:7876:3768":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:2188:7548":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:50950:9599":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:16000:6587":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:7204:9671":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"6:7294:9330":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:11621:5813":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:13026:25455":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:5194:8854":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:12883:5962":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"16:7956:7264":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:7982:5040":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"9:346:24255":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:8656:134":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"18:718:5603":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:10316:25316":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:12452:25429":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:45809:4957":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:14183:6140":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"5:8100:7592":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"0:239:3016":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter","NoHyphenation"],"kind":"variant"},"1:8512:7548":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:8477:131":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:6894:5063":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:7505:7175":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:51434:8059":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:13558:25328":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"}},"external_crates":{"20":{"name":"smawk","html_root_url":"https://docs.rs/smawk/0.3.2/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"unicode_linebreak","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"unicode_width","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":34}