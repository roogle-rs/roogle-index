{"root":"0:0:2606","crate_version":"0.16.1","includes_private":false,"index":{"a:2:36220:250-0:248:3063":{"id":"a:2:36220:250-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:36220:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:238:2604":{"id":"0:238:2604","crate_id":0,"name":"WordSplitter","span":{"filename":"src/word_splitters.rs","begin":[37,0],"end":[99,1]},"visibility":"public","docs":"The `WordSplitter` enum describes where words can be split.\n\nIf the textwrap crate has been compiled with the `hyphenation`\nCargo feature enabled, you will find a\n[`WordSplitter::Hyphenation`] variant. Use this struct for\nlanguage-aware hyphenation:\n\n```\n#[cfg(feature = \"hyphenation\")] {\n    use hyphenation::{Language, Load, Standard};\n    use textwrap::{wrap, Options, WordSplitter};\n\n    let text = \"Oxidation is the loss of electrons.\";\n    let dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();\n    let options = Options::new(8).word_splitter(WordSplitter::Hyphenation(dictionary));\n    assert_eq!(wrap(text, &options), vec![\"Oxida-\",\n                                          \"tion is\",\n                                          \"the loss\",\n                                          \"of elec-\",\n                                          \"trons.\"]);\n}\n```\n\nPlease see the documentation for the [hyphenation] crate for more\ndetails.\n\n[hyphenation]: https://docs.rs/hyphenation/","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:239:2960","0:241:2970","0:243:2979"],"impls":["0:40","a:2:36220:250-0:238:2604","a:2:3420:262-0:238:2604","a:2:3455:4786-0:238:2604","a:2:36279:4630-0:238:2604","a:2:46106:10740-0:238:2604","a:2:46107:10942-0:238:2604","b:2:2872-0:238:2604","b:2:2875-0:238:2604","b:2:2930-0:238:2604","b:2:3187-0:238:2604","b:2:3191-0:238:2604","b:2:3197-0:238:2604","b:2:3202-0:238:2604","b:2:4067-0:238:2604","b:5:822-0:238:2604","0:246","0:36","0:38"]}}},"b:2:4067-0:216:2867":{"id":"b:2:4067-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4065:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4069:1888"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:822-0:238:2604":{"id":"b:5:822-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:818:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:824:4299","5:825:4300","5:826:4948"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:57:60":{"id":"0:57:60","crate_id":0,"name":"default","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[153,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3193:868":{"id":"2:3193:868","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:2049":{"id":"0:278:2049","crate_id":0,"name":"0","span":{"filename":"src/wrap_algorithms.rs","begin":[57,15],"end":[57,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:36279:4630-0:238:2604":{"id":"a:2:36279:4630-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36279:4630","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3187-0:248:3063":{"id":"b:2:3187-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3190:3494"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:36279:4630-0:264:3062":{"id":"a:2:36279:4630-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36279:4630","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2930-0:273:2605":{"id":"b:2:2930-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2928:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:29482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2875-0:238:2604":{"id":"b:2:2875-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2869:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2877:3350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:239:2960":{"id":"0:239:2960","crate_id":0,"name":"NoHyphenation","span":{"filename":"src/word_splitters.rs","begin":[50,4],"end":[50,17]},"visibility":"default","docs":"Use this as a [`Options.word_splitter`] to avoid any kind of\nhyphenation:\n\n```\nuse textwrap::{wrap, Options, WordSplitter};\n\nlet options = Options::new(8).word_splitter(WordSplitter::NoHyphenation);\nassert_eq!(wrap(\"foo bar-baz\", &options),\n           vec![\"foo\", \"bar-baz\"]);\n```\n\n[`Options.word_splitter`]: super::Options::word_splitter","links":{"super::Options::word_splitter":"0:149:3021"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:822-0:216:2867":{"id":"b:5:822-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:818:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:824:4299","5:825:4300","5:826:4948"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3455:4786-0:332:2603":{"id":"a:2:3455:4786-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3455:4786","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:167:837":{"id":"0:167:837","crate_id":0,"name":"fmt","span":{"filename":"src/word_separators.rs","begin":[160,4],"end":[167,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:11091:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:11072:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332:2603":{"id":"0:332:2603","crate_id":0,"name":"WordSeparator","span":{"filename":"src/word_separators.rs","begin":[42,0],"end":[123,1]},"visibility":"public","docs":"Describes where words occur in a line of text.\n\nThe simplest approach is say that words are separated by one or\nmore ASCII spaces (`' '`). This works for Western languages\nwithout emojis. A more complex approach is to use the Unicode line\nbreaking algorithm, which finds break points in non-ASCII text.\n\nThe line breaks occur between words, please see\n[`WordSplitter`](crate::WordSplitter) for options of how to handle\nhyphenation of individual words.\n\n# Examples\n\n```\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::AsciiSpace;\n\nlet words = AsciiSpace.find_words(\"Hello World!\").collect::<Vec<_>>();\nassert_eq!(words, vec![Word::from(\"Hello \"), Word::from(\"World!\")]);\n```","links":{"crate::WordSplitter":"0:238:2604"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:333:3604","0:335:4083","0:337:2979"],"impls":["0:168","a:2:36220:250-0:332:2603","a:2:3420:262-0:332:2603","a:2:3455:4786-0:332:2603","a:2:36279:4630-0:332:2603","a:2:46106:10740-0:332:2603","a:2:46107:10942-0:332:2603","b:2:2872-0:332:2603","b:2:2875-0:332:2603","b:2:2930-0:332:2603","b:2:3187-0:332:2603","b:2:3191-0:332:2603","b:2:3197-0:332:2603","b:2:3202-0:332:2603","b:2:4067-0:332:2603","b:5:822-0:332:2603","0:340","0:342","0:164","0:166"]}}},"0:208-0:316:2601":{"id":"0:208-0:316:2601","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[228,0],"end":[228,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"options::Options","name":"Options","id":"0:316:2601","glob":false}}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[35,0],"end":[48,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:135:868"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3187-0:264:3062":{"id":"b:2:3187-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3190:3494"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:214-0:192:2595":{"id":"0:214-0:192:2595","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[234,0],"end":[234,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"wrap::wrap","name":"wrap","id":"0:192:2595","glob":false}}},"b:2:2872-0:332:2603":{"id":"b:2:2872-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2866:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:3352"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,22],"end":[238,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:229:501"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3187-0:238:2604":{"id":"b:2:3187-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3190:3494"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:3:591":{"id":"0:3:591","crate_id":0,"name":"core","span":{"filename":"src/core.rs","begin":[1,0],"end":[461,1]},"visibility":"public","docs":"Building blocks for advanced wrapping functionality.\n\nThe functions and structs in this module can be used to implement\nadvanced wrapping functionality when [`wrap()`](crate::wrap())\n[`fill()`](crate::fill()) don't do what you want.\n\nIn general, you want to follow these steps when wrapping\nsomething:\n\n1. Split your input into [`Fragment`]s. These are abstract blocks\n   of text or content which can be wrapped into lines. See\n   [`WordSeparator`](crate::word_separators::WordSeparator) for\n   how to do this for text.\n\n2. Potentially split your fragments into smaller pieces. This\n   allows you to implement things like hyphenation. If you use the\n   `Word` type, you can use [`WordSplitter`](crate::WordSplitter)\n   enum for this.\n\n3. Potentially break apart fragments that are still too large to\n   fit on a single line. This is implemented in [`break_words`].\n\n4. Finally take your fragments and put them into lines. There are\n   two algorithms for this in the\n   [`wrap_algorithms`](crate::wrap_algorithms) module:\n   [`wrap_optimal_fit`](crate::wrap_algorithms::wrap_optimal_fit)\n   and [`wrap_first_fit`](crate::wrap_algorithms::wrap_first_fit).\n   The former produces better line breaks, the latter is faster.\n\n5. Iterate through the slices returned by the wrapping functions\n   and construct your lines of output.\n\nPlease [open an issue](https://github.com/mgeisler/textwrap/) if\nthe functionality here is not sufficient or if you have ideas for\nimproving it. We would love to hear from you!","links":{"crate::word_separators::WordSeparator":"0:332:2603","crate::wrap_algorithms::wrap_first_fit":"0:92:3129","`Fragment`":"0:10:2856","`break_words`":"0:29:2899","crate::wrap()":"0:192:2595","crate::fill()":"0:109:2589","crate::WordSplitter":"0:238:2604","crate::wrap_algorithms":"0:50:2587","crate::wrap_algorithms::wrap_optimal_fit":"0:67:3061"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:9:2846","0:10:2856","0:216:2867","0:29:2899"],"is_stripped":false}}},"b:2:3187-0:289:2600":{"id":"b:2:3187-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3190:3494"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211-0:157:2602":{"id":"0:211-0:157:2602","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[229,25],"end":[229,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"refill::unfill","name":"unfill","id":"0:157:2602","glob":false}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,40],"end":[7,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2969:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:267:837":{"id":"0:267:837","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,9],"end":[185,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:11091:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:11072:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295:501":{"id":"0:295:501","crate_id":0,"name":"clone","span":{"filename":"src/line_ending.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2930-0:238:2604":{"id":"b:2:2930-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2928:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:29482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:255:501":{"id":"0:255:501","crate_id":0,"name":"clone","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,9],"end":[22,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:46106:10740-0:238:2604":{"id":"a:2:46106:10740-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:46106:10740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:281:2049":{"id":"0:281:2049","crate_id":0,"name":"0","span":{"filename":"src/wrap_algorithms.rs","begin":[89,11],"end":[89,97]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"function_pointer":{"decl":{"inputs":[["words",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"resolved_path":{"name":"crate::core::Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}],["line_widths",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"usize"}}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7417:281","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"resolved_path":{"name":"crate::core::Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}},"a:2:36220:250-0:273:2605":{"id":"a:2:36220:250-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:36220:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3187-0:273:2605":{"id":"b:2:3187-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3190:3494"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3202-0:316:2601":{"id":"b:2:3202-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3205:150","2:3206:1873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:46106:10740-0:332:2603":{"id":"a:2:46106:10740-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:46106:10740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:324:3807":{"id":"0:324:3807","crate_id":0,"name":"word_separator","span":{"filename":"src/options.rs","begin":[28,4],"end":[28,37]},"visibility":"public","docs":"The line breaking algorithm to use, see the [`WordSeparator`]\ntrait for an overview and possible implementations.","links":{"`WordSeparator`":"0:332:2603"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,40],"end":[238,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2969:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:210-0:158:2592":{"id":"0:210-0:158:2592","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[229,17],"end":[229,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"refill::refill","name":"refill","id":"0:158:2592","glob":false}}},"b:2:2872-0:216:2867":{"id":"b:2:2872-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2866:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:3352"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:337:2979":{"id":"0:337:2979","crate_id":0,"name":"Custom","span":{"filename":"src/word_separators.rs","begin":[122,4],"end":[122,69]},"visibility":"default","docs":"Find words using a custom word separator","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:339:2049"]},"discriminant":null}}},"a:2:3420:262-0:216:2867":{"id":"a:2:3420:262-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3420:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:36279:4630-0:216:2867":{"id":"a:2:36279:4630-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36279:4630","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:73-0:67:3061":{"id":"0:73-0:67:3061","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[23,22],"end":[23,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"import":{"source":"optimal_fit::wrap_optimal_fit","name":"wrap_optimal_fit","id":"0:67:3061","glob":false}}},"0:232":{"id":"0:232","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,29],"end":[238,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2964:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:234:732"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3202-0:289:2600":{"id":"b:2:3202-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3205:150","2:3206:1873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2875-0:332:2603":{"id":"b:2:2875-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2869:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2877:3350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[127,0],"end":[173,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:3001"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:320:3557":{"id":"0:320:3557","crate_id":0,"name":"initial_indent","span":{"filename":"src/options.rs","begin":[15,4],"end":[15,31]},"visibility":"public","docs":"Indentation used for the first line of output. See the\n[`Options::initial_indent`] method.","links":{"`Options::initial_indent`":"0:144:3557"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[258,0],"end":[326,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:19:868","0:20:2889"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:27:2860":{"id":"0:27:2860","crate_id":0,"name":"whitespace_width","span":{"filename":"src/core.rs","begin":[337,4],"end":[339,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[122,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:82:837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:822-0:332:2603":{"id":"b:5:822-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:818:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:824:4299","5:825:4300","5:826:4948"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:339:2049":{"id":"0:339:2049","crate_id":0,"name":"0","span":{"filename":"src/word_separators.rs","begin":[122,11],"end":[122,68]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"function_pointer":{"decl":{"inputs":[["line",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Box","id":"5:328:4085","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Iterator","id":"2:8881:190","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"crate::core::Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'_"}}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}},"b:2:2930-0:248:3063":{"id":"b:2:2930-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2928:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:29482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:279:2979":{"id":"0:279:2979","crate_id":0,"name":"Custom","span":{"filename":"src/wrap_algorithms.rs","begin":[89,4],"end":[89,98]},"visibility":"default","docs":"Custom wrapping function.\n\nUse this if you want to implement your own wrapping algorithm.\nThe function can freely decide how to turn a slice of\n[`Word`]s into lines.\n\n# Example\n\n```\nuse textwrap::core::Word;\nuse textwrap::{wrap, Options, WrapAlgorithm};\n\nfn stair<'a, 'b>(words: &'b [Word<'a>], _: &'b [usize]) -> Vec<&'b [Word<'a>]> {\n    let mut lines = Vec::new();\n    let mut step = 1;\n    let mut start_idx = 0;\n    while start_idx + step <= words.len() {\n      lines.push(&words[start_idx .. start_idx+step]);\n      start_idx += step;\n      step += 1;\n    }\n    lines\n}\n\nlet options = Options::new(10).wrap_algorithm(WrapAlgorithm::Custom(stair));\nassert_eq!(wrap(\"First, second, third, fourth, fifth, sixth\", options),\n           vec![\"First,\",\n                \"second, third,\",\n                \"fourth, fifth, sixth\"]);\n```","links":{"`Word`":"0:216:2867"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:281:2049"]},"discriminant":null}}},"0:285:501":{"id":"0:285:501","crate_id":0,"name":"clone","span":{"filename":"src/wrap_algorithms.rs","begin":[35,9],"end":[35,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:2598":{"id":"0:117:2598","crate_id":0,"name":"dedent","span":{"filename":"src/indentation.rs","begin":[95,0],"end":[150,1]},"visibility":"public","docs":"Removes common leading whitespace from each line.\n\nThis function will look at each non-empty line and determine the\nmaximum amount of whitespace that can be removed from all lines:\n\n```\nuse textwrap::dedent;\n\nassert_eq!(dedent(\"\n    1st line\n      2nd line\n    3rd line\n\"), \"\n1st line\n  2nd line\n3rd line\n\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:8016:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2930-0:289:2600":{"id":"b:2:2930-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2928:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:29482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2875-0:248:3063":{"id":"b:2:2875-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2869:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2877:3350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[193,0],"end":[197,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3239:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:318:2782":{"id":"0:318:2782","crate_id":0,"name":"width","span":{"filename":"src/options.rs","begin":[10,4],"end":[10,20]},"visibility":"public","docs":"The width in columns at which the text will be wrapped.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"2:3205:150":{"id":"2:3205:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:36144:8396","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[101,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:65:837":{"id":"0:65:837","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[189,4],"end":[191,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:11091:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:11072:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[36,9],"end":[36,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:247:501"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:46106:10740-0:216:2867":{"id":"a:2:46106:10740-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:46106:10740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:4069:1888":{"id":"2:4069:1888","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:43724:7546","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84:1222":{"id":"0:84:1222","crate_id":0,"name":"new","span":{"filename":"src/wrap_algorithms.rs","begin":[139,4],"end":[149,5]},"visibility":"public","docs":"Create new wrap algorithm.\n\nThe best wrapping algorithm is used by default, i.e.,\n[`WrapAlgorithm::OptimalFit`] if available, otherwise\n[`WrapAlgorithm::FirstFit`].","links":{"`WrapAlgorithm::OptimalFit`":"0:276:3084","`WrapAlgorithm::FirstFit`":"0:274:3075"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3420:262-0:332:2603":{"id":"a:2:3420:262-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3420:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:247:501":{"id":"0:247:501","crate_id":0,"name":"clone","span":{"filename":"src/word_splitters.rs","begin":[36,9],"end":[36,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[18,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:122:357"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:157:2602":{"id":"0:157:2602","crate_id":0,"name":"unfill","span":{"filename":"src/refill.rs","begin":[62,0],"end":[114,1]},"visibility":"public","docs":"Unpack a paragraph of already-wrapped text.\n\nThis function attempts to recover the original text from a single\nparagraph of wrapped text, such as what [`fill()`] would produce.\nThis means that it turns\n\n```text\ntextwrap: a small\nlibrary for\nwrapping text.\n```\n\nback into\n\n```text\ntextwrap: a small library for wrapping text.\n```\n\nIn addition, it will recognize a common prefix and a common line\nending among the lines.\n\nThe prefix of the first line is returned in\n[`Options::initial_indent`] and the prefix (if any) of the the\nother lines is returned in [`Options::subsequent_indent`].\n\nLine ending is returned in [`Options::line_ending`]. If line ending\ncan not be confidently detected (mixed or no line endings in the\ninput), [`LineEnding::LF`] will be returned.\n\nIn addition to `' '`, the prefixes can consist of characters used\nfor unordered lists (`'-'`, `'+'`, and `'*'`) and block quotes\n(`'>'`) in Markdown as well as characters often used for inline\ncomments (`'#'` and `'/'`).\n\nThe text must come from a single wrapped paragraph. This means\nthat there can be no empty lines (`\"\\n\\n\"` or `\"\\r\\n\\r\\n\"`) within\nthe text. It is unspecified what happens if `unfill` is called on\nmore than one paragraph of text.\n\n# Examples\n\n```\nuse textwrap::{LineEnding, unfill};\n\nlet (text, options) = unfill(\"\\\n* This is an\n  example of\n  a list item.\n\");\n\nassert_eq!(text, \"This is an example of a list item.\\n\");\nassert_eq!(options.initial_indent, \"* \");\nassert_eq!(options.subsequent_indent, \"  \");\nassert_eq!(options.line_ending, LineEnding::LF);\n```","links":{"`Options::line_ending`":"0:142:2591","`Options::subsequent_indent`":"0:145:3799","`LineEnding::LF`":"0:292:3773","`Options::initial_indent`":"0:144:3557","`fill()`":"0:109:2589"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"tuple":[{"resolved_path":{"name":"String","id":"5:8016:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"resolved_path":{"name":"crate::Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:6153-0:264:3062":{"id":"b:5:6153-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:11132:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6151:266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6155:1848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2875-0:216:2867":{"id":"b:2:2875-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2869:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2877:3350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:319:2591":{"id":"0:319:2591","crate_id":0,"name":"line_ending","span":{"filename":"src/options.rs","begin":[12,4],"end":[12,31]},"visibility":"public","docs":"Line ending used for breaking lines.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:4067-0:264:3062":{"id":"b:2:4067-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4065:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4069:1888"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:141:1222":{"id":"0:141:1222","crate_id":0,"name":"new","span":{"filename":"src/options.rs","begin":[86,4],"end":[97,5]},"visibility":"public","docs":"Creates a new [`Options`] with the specified width.\n\nThe other fields are given default values as follows:\n\n```\n# use textwrap::{LineEnding, Options, WordSplitter, WordSeparator, WrapAlgorithm};\n# let width = 80;\nlet options = Options::new(width);\nassert_eq!(options.line_ending, LineEnding::LF);\nassert_eq!(options.initial_indent, \"\");\nassert_eq!(options.subsequent_indent, \"\");\nassert_eq!(options.break_words, true);\n\n#[cfg(feature = \"unicode-linebreak\")]\nassert_eq!(options.word_separator, WordSeparator::UnicodeBreakProperties);\n#[cfg(not(feature = \"unicode-linebreak\"))]\nassert_eq!(options.word_separator, WordSeparator::AsciiSpace);\n\n#[cfg(feature = \"smawk\")]\nassert_eq!(options.wrap_algorithm, WrapAlgorithm::new_optimal_fit());\n#[cfg(not(feature = \"smawk\"))]\nassert_eq!(options.wrap_algorithm, WrapAlgorithm::FirstFit);\n\nassert_eq!(options.word_splitter, WordSplitter::HyphenSplitter);\n```\n\nNote that the default word separator and wrap algorithms\nchanges based on the available Cargo features. The best\navailable algorithms are used by default.","links":{"`Options`":"0:316:2601"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["width",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:342":{"id":"0:342","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[41,16],"end":[41,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3415:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:19:868":{"id":"0:19:868","crate_id":0,"name":"from","span":{"filename":"src/core.rs","begin":[263,4],"end":[271,5]},"visibility":"public","docs":"Construct a `Word` from a string.\n\nA trailing stretch of `' '` is automatically taken to be the\nwhitespace part of the word.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["word",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15:264":{"id":"0:15:264","crate_id":0,"name":"Target","span":{"filename":"src/core.rs","begin":[251,4],"end":[251,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,29],"end":[22,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:36222:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2875-0:289:2600":{"id":"b:2:2875-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2869:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2877:3350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:206-0:116:2599":{"id":"0:206-0:116:2599","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[226,30],"end":[226,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"indentation::indent","name":"indent","id":"0:116:2599","glob":false}}},"b:2:2872-0:273:2605":{"id":"b:2:2872-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2866:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:3352"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:264:3062":{"id":"0:264:3062","crate_id":0,"name":"OverflowError","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[186,0],"end":[186,25]},"visibility":"public","docs":"Overflow error during the [`wrap_optimal_fit`] computation.","links":{"`wrap_optimal_fit`":"0:67:3061"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:2:36220:250-0:264:3062","a:2:3420:262-0:264:3062","a:2:3455:4786-0:264:3062","a:2:36279:4630-0:264:3062","a:2:46106:10740-0:264:3062","a:2:46107:10942-0:264:3062","b:2:2872-0:264:3062","b:2:2875-0:264:3062","b:2:3187-0:264:3062","b:2:3191-0:264:3062","b:2:3197-0:264:3062","b:2:3202-0:264:3062","b:2:4067-0:264:3062","b:5:6153-0:264:3062","0:266","0:268","0:269","0:271","0:64","0:66"]}}},"0:28:2863":{"id":"0:28:2863","crate_id":0,"name":"penalty_width","span":{"filename":"src/core.rs","begin":[344,4],"end":[346,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:3634":{"id":"0:148:3634","crate_id":0,"name":"wrap_algorithm","span":{"filename":"src/options.rs","begin":[236,4],"end":[241,5]},"visibility":"public","docs":"Change [`self.wrap_algorithm`].\n\nSee the [`WrapAlgorithm`] trait for details on the choices.\n\n[`self.wrap_algorithm`]: #structfield.wrap_algorithm","links":{"`WrapAlgorithm`":"0:273:2605"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["wrap_algorithm",{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:46107:10942-0:216:2867":{"id":"a:2:46107:10942-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:46107:10942","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:67:3061":{"id":"0:67:3061","crate_id":0,"name":"wrap_optimal_fit","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[302,0],"end":[389,1]},"visibility":"public","docs":"Wrap abstract fragments into lines with an optimal-fit algorithm.\n\nThe `line_widths` slice gives the target line width for each line\n(the last slice element is repeated as necessary). This can be\nused to implement hanging indentation.\n\nThe fragments must already have been split into the desired\nwidths, this function will not (and cannot) attempt to split them\nfurther when arranging them into lines.\n\n# Optimal-Fit Algorithm\n\nThe algorithm considers all possible break points and picks the\nbreaks which minimizes the gaps at the end of each line. More\nprecisely, the algorithm assigns a cost or penalty to each break\npoint, determined by `cost = gap * gap` where `gap = target_width -\nline_width`. Shorter lines are thus penalized more heavily since\nthey leave behind a larger gap.\n\nWe can illustrate this with the text “To be, or not to be: that is\nthe question”. We will be wrapping it in a narrow column with room\nfor only 10 characters. The [greedy\nalgorithm](super::wrap_first_fit) will produce these lines, each\nannotated with the corresponding penalty:\n\n```text\n\"To be, or\"   1² =  1\n\"not to be:\"  0² =  0\n\"that is\"     3² =  9\n\"the\"         7² = 49\n\"question\"    2² =  4\n```\n\nWe see that line four with “the” leaves a gap of 7 columns, which\ngives it a penalty of 49. The sum of the penalties is 63.\n\nThere are 10 words, which means that there are `2_u32.pow(9)` or\n512 different ways to typeset it. We can compute\nthe sum of the penalties for each possible line break and search\nfor the one with the lowest sum:\n\n```text\n\"To be,\"     4² = 16\n\"or not to\"  1² =  1\n\"be: that\"   2² =  4\n\"is the\"     4² = 16\n\"question\"   2² =  4\n```\n\nThe sum of the penalties is 41, which is better than what the\ngreedy algorithm produced.\n\nSearching through all possible combinations would normally be\nprohibitively slow. However, it turns out that the problem can be\nformulated as the task of finding column minima in a cost matrix.\nThis matrix has a special form (totally monotone) which lets us\nuse a [linear-time algorithm called\nSMAWK](https://lib.rs/crates/smawk) to find the optimal break\npoints.\n\nThis means that the time complexity remains O(_n_) where _n_ is\nthe number of words. Compared to\n[`wrap_first_fit()`](super::wrap_first_fit), this function is\nabout 4 times slower.\n\nThe optimization of per-line costs over the entire paragraph is\ninspired by the line breaking algorithm used in TeX, as described\nin the 1981 article [_Breaking Paragraphs into\nLines_](http://www.eprg.org/G53DOC/pdfs/knuth-plass-breaking.pdf)\nby Knuth and Plass. The implementation here is based on [Python\ncode by David\nEppstein](https://github.com/jfinkels/PADS/blob/master/pads/wrap.py).\n\n# Errors\n\nIn case of an overflow during the cost computation, an `Err` is\nreturned. Overflows happens when fragments or lines have infinite\nwidths (`f64::INFINITY`) or if the widths are so large that the\ngaps at the end of lines have sizes larger than `f64::MAX.sqrt()`\n(approximately 1e154):\n\n```\nuse textwrap::core::Fragment;\nuse textwrap::wrap_algorithms::{wrap_optimal_fit, OverflowError, Penalties};\n\n#[derive(Debug, PartialEq)]\nstruct Word(f64);\n\nimpl Fragment for Word {\n    fn width(&self) -> f64 { self.0 }\n    fn whitespace_width(&self) -> f64 { 1.0 }\n    fn penalty_width(&self) -> f64 { 0.0 }\n}\n\n// Wrapping overflows because 1e155 * 1e155 = 1e310, which is\n// larger than f64::MAX:\nassert_eq!(wrap_optimal_fit(&[Word(0.0), Word(0.0)], &[1e155], &Penalties::default()),\n           Err(OverflowError));\n```\n\nWhen using fragment widths and line widths which fit inside an\n`u64`, overflows cannot happen. This means that fragments derived\nfrom a `&str` cannot cause overflows.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"super::wrap_first_fit":"0:92:3129"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fragments",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"generic":"T"}}}}],["line_widths",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"f64"}}}}],["penalties",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:46278:239","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:7417:281","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"generic":"T"}}}}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fragment","id":"0:10:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:2899":{"id":"0:29:2899","crate_id":0,"name":"break_words","span":{"filename":"src/core.rs","begin":[354,0],"end":[367,1]},"visibility":"public","docs":"Forcibly break words wider than `line_width` into smaller words.\n\nThis simply calls [`Word::break_apart`] on words that are too\nwide. This means that no extra `'-'` is inserted, the word is\nsimply broken into smaller pieces.","links":{"`Word::break_apart`":"0:20:2889"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["words",{"generic":"I"}],["line_width",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Vec","id":"5:7417:281","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8699:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[35,9],"end":[35,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:285:501"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,29],"end":[22,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2964:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:732"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:36220:250-0:238:2604":{"id":"a:2:36220:250-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:36220:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:46106:10740-0:289:2600":{"id":"a:2:46106:10740-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:46106:10740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:341:501":{"id":"0:341:501","crate_id":0,"name":"clone","span":{"filename":"src/word_separators.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:2597":{"id":"0:113:2597","crate_id":0,"name":"fill_inplace","span":{"filename":"src/fill.rs","begin":[120,0],"end":[153,1]},"visibility":"public","docs":"Fill `text` in-place without reallocating the input string.\n\nThis function works by modifying the input string: some `' '`\ncharacters will be replaced by `'\\n'` characters. The rest of the\ntext remains untouched.\n\nSince we can only replace existing whitespace in the input with\n`'\\n'` (there is no space for `\"\\r\\n\"`), we cannot do hyphenation\nnor can we split words longer than the line width. We also need to\nuse `AsciiSpace` as the word separator since we need `' '`\ncharacters between words in order to replace some of them with a\n`'\\n'`. Indentation is also ruled out. In other words,\n`fill_inplace(width)` behaves as if you had called [`fill()`] with\nthese options:\n\n```\n# use textwrap::{core, LineEnding, Options, WordSplitter, WordSeparator, WrapAlgorithm};\n# let width = 80;\nOptions::new(width)\n    .break_words(false)\n    .line_ending(LineEnding::LF)\n    .word_separator(WordSeparator::AsciiSpace)\n    .wrap_algorithm(WrapAlgorithm::FirstFit)\n    .word_splitter(WordSplitter::NoHyphenation);\n```\n\nThe wrap algorithm is\n[`WrapAlgorithm::FirstFit`](crate::WrapAlgorithm::FirstFit) since\nthis is the fastest algorithm — and the main reason to use\n`fill_inplace` is to get the string broken into newlines as fast\nas possible.\n\nA last difference is that (unlike [`fill()`]) `fill_inplace` can\nleave trailing whitespace on lines. This is because we wrap by\ninserting a `'\\n'` at the final whitespace in the input string:\n\n```\nlet mut text = String::from(\"Hello   World!\");\ntextwrap::fill_inplace(&mut text, 10);\nassert_eq!(text, \"Hello  \\nWorld!\");\n```\n\nIf we didn't do this, the word `World!` would end up being\nindented. You can avoid this if you make sure that your input text\nhas no double spaces.\n\n# Performance\n\nIn benchmarks, `fill_inplace` is about twice as fast as\n[`fill()`]. Please see the [`linear`\nbenchmark](https://github.com/mgeisler/textwrap/blob/master/benchmarks/linear.rs)\nfor details.","links":{"crate::WrapAlgorithm::FirstFit":"0:274:3075","`fill()`":"0:109:2589"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:8016:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["width",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340":{"id":"0:340","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[41,9],"end":[41,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:341:501"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:26:2782":{"id":"0:26:2782","crate_id":0,"name":"width","span":{"filename":"src/core.rs","begin":[330,4],"end":[332,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3206:1873":{"id":"2:3206:1873","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:46278:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,22],"end":[22,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:258:837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:4067-0:273:2605":{"id":"b:2:4067-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4065:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4069:1888"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:323:3634":{"id":"0:323:3634","crate_id":0,"name":"wrap_algorithm","span":{"filename":"src/options.rs","begin":[25,4],"end":[25,37]},"visibility":"public","docs":"Wrapping algorithm to use, see the implementations of the\n[`WrapAlgorithm`] trait for details.","links":{"`WrapAlgorithm`":"0:273:2605"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3191-0:248:3063":{"id":"b:2:3191-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:868"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:145:3799":{"id":"0:145:3799","crate_id":0,"name":"subsequent_indent","span":{"filename":"src/options.rs","begin":[182,4],"end":[187,5]},"visibility":"public","docs":"Change [`self.subsequent_indent`]. The subsequent indentation\nis used on lines following the first line of output.\n\n# Examples\n\nCombining initial and subsequent indentation lets you format a\nsingle paragraph as a bullet list:\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(12)\n    .initial_indent(\"* \")\n    .subsequent_indent(\"  \");\n#[cfg(feature = \"smawk\")]\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"* This is\",\n                \"  a little\",\n                \"  example.\"]);\n\n// Without the `smawk` feature, the wrapping is a little different:\n#[cfg(not(feature = \"smawk\"))]\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"* This is a\",\n                \"  little\",\n                \"  example.\"]);\n```\n\n[`self.subsequent_indent`]: #structfield.subsequent_indent","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["subsequent_indent",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:837":{"id":"0:82:837","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms.rs","begin":[123,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:11091:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:11072:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3420:262-0:264:3062":{"id":"a:2:3420:262-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3420:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[134,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:55:1222"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,40],"end":[22,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2969:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:143:2782":{"id":"0:143:2782","crate_id":0,"name":"width","span":{"filename":"src/options.rs","begin":[124,4],"end":[126,5]},"visibility":"public","docs":"Set [`self.width`] to the given value.\n\n[`self.width`]: #structfield.width","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["width",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:732":{"id":"0:261:732","crate_id":0,"name":"eq","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,29],"end":[22,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273:2605":{"id":"0:273:2605","crate_id":0,"name":"WrapAlgorithm","span":{"filename":"src/wrap_algorithms.rs","begin":[36,0],"end":[90,1]},"visibility":"public","docs":"Describes how to wrap words into lines.\n\nThe simplest approach is to wrap words one word at a time and\naccept the first way of wrapping which fit\n([`WrapAlgorithm::FirstFit`]). If the `smawk` Cargo feature is\nenabled, a more complex algorithm is available which will look at\nan entire paragraph at a time in order to find optimal line breaks\n([`WrapAlgorithm::OptimalFit`]).","links":{"`WrapAlgorithm::OptimalFit`":"0:276:3084","`WrapAlgorithm::FirstFit`":"0:274:3075"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:274:3075","0:276:3084","0:279:2979"],"impls":["0:83","a:2:36220:250-0:273:2605","a:2:3420:262-0:273:2605","a:2:3455:4786-0:273:2605","a:2:36279:4630-0:273:2605","a:2:46106:10740-0:273:2605","a:2:46107:10942-0:273:2605","b:2:2872-0:273:2605","b:2:2875-0:273:2605","b:2:2930-0:273:2605","b:2:3187-0:273:2605","b:2:3191-0:273:2605","b:2:3197-0:273:2605","b:2:3202-0:273:2605","b:2:4067-0:273:2605","b:5:822-0:273:2605","0:284","0:288","0:79","0:81","0:90"]}}},"b:5:822-0:273:2605":{"id":"b:5:822-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:818:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:824:4299","5:825:4300","5:826:4948"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:144:3557":{"id":"0:144:3557","crate_id":0,"name":"initial_indent","span":{"filename":"src/options.rs","begin":[146,4],"end":[151,5]},"visibility":"public","docs":"Change [`self.initial_indent`]. The initial indentation is\nused on the very first line of output.\n\n# Examples\n\nClassic paragraph indentation can be achieved by specifying an\ninitial indentation and wrapping each paragraph by itself:\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(16).initial_indent(\"    \");\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"    This is a\",\n                \"little example.\"]);\n```\n\n[`self.initial_indent`]: #structfield.initial_indent","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["initial_indent",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2930-0:316:2601":{"id":"b:2:2930-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2928:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2932:29482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250:3298":{"id":"0:250:3298","crate_id":0,"name":"overflow_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[70,4],"end":[70,31]},"visibility":"public","docs":"Per-character cost for lines that overflow the target line width.\n\nWith a default value of 50², every single character costs as\nmuch as leaving a gap of 50 characters behind. This is because\nwe assign as cost of `gap * gap` to a short line. When\nwrapping monospace text, we can overflow the line by 1\ncharacter in extreme cases:\n\n```\nuse textwrap::core::Word;\nuse textwrap::wrap_algorithms::{wrap_optimal_fit, Penalties};\n\nlet short = \"foo \";\nlet long = \"x\".repeat(50);\nlet length = (short.len() + long.len()) as f64;\nlet fragments = vec![Word::from(short), Word::from(&long)];\nlet penalties = Penalties::new();\n\n// Perfect fit, both words are on a single line with no overflow.\nlet wrapped = wrap_optimal_fit(&fragments, &[length], &penalties).unwrap();\nassert_eq!(wrapped, vec![&[Word::from(short), Word::from(&long)]]);\n\n// The words no longer fit, yet we get a single line back. While\n// the cost of overflow (`1 * 2500`) is the same as the cost of the\n// gap (`50 * 50 = 2500`), the tie is broken by `nline_penalty`\n// which makes it cheaper to overflow than to use two lines.\nlet wrapped = wrap_optimal_fit(&fragments, &[length - 1.0], &penalties).unwrap();\nassert_eq!(wrapped, vec![&[Word::from(short), Word::from(&long)]]);\n\n// The cost of overflow would be 2 * 2500, whereas the cost of\n// the gap is only `49 * 49 + nline_penalty = 2401 + 1000 =\n// 3401`. We therefore get two lines.\nlet wrapped = wrap_optimal_fit(&fragments, &[length - 2.0], &penalties).unwrap();\nassert_eq!(wrapped, vec![&[Word::from(short)],\n                         &[Word::from(&long)]]);\n```\n\nThis only happens if the overflowing word is 50 characters\nlong _and_ if the word overflows the line by exactly one\ncharacter. If it overflows by more than one character, the\noverflow penalty will quickly outgrow the cost of the gap, as\nseen above.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:299":{"id":"0:299","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,29],"end":[7,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:36222:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:80:732":{"id":"0:80:732","crate_id":0,"name":"eq","span":{"filename":"src/wrap_algorithms.rs","begin":[112,4],"end":[119,5]},"visibility":"default","docs":"Compare two wrap algorithms.\n\n```\nuse textwrap::WrapAlgorithm;\n\nassert_eq!(WrapAlgorithm::FirstFit, WrapAlgorithm::FirstFit);\n#[cfg(feature = \"smawk\")] {\n    assert_eq!(WrapAlgorithm::new_optimal_fit(), WrapAlgorithm::new_optimal_fit());\n}\n```\n\nNote that `WrapAlgorithm::Custom` values never compare equal:\n\n```\nuse textwrap::WrapAlgorithm;\n\nassert_ne!(WrapAlgorithm::Custom(|words, line_widths| vec![words]),\n           WrapAlgorithm::Custom(|words, line_widths| vec![words]));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:12:2860":{"id":"0:12:2860","crate_id":0,"name":"whitespace_width","span":{"filename":"src/core.rs","begin":[227,4],"end":[227,38]},"visibility":"default","docs":"Displayed width of the whitespace that must follow the word\nwhen the word is not at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3202-0:216:2867":{"id":"b:2:3202-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3205:150","2:3206:1873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:271":{"id":"0:271","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,27],"end":[185,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2969:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:229:501":{"id":"0:229:501","crate_id":0,"name":"clone","span":{"filename":"src/core.rs","begin":[238,22],"end":[238,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2877:3350":{"id":"2:2877:3350","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3455:4786-0:238:2604":{"id":"a:2:3455:4786-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3455:4786","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:147:3807":{"id":"0:147:3807","crate_id":0,"name":"word_separator","span":{"filename":"src/options.rs","begin":[224,4],"end":[229,5]},"visibility":"public","docs":"Change [`self.word_separator`].\n\nSee the [`WordSeparator`] trait for details on the choices.\n\n[`self.word_separator`]: #structfield.word_separator","links":{"`WordSeparator`":"0:332:2603"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["word_separator",{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3197-0:264:3062":{"id":"b:2:3197-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3167:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:150","2:3201:1875"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3197-0:273:2605":{"id":"b:2:3197-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3167:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:150","2:3201:1875"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[133,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:84:1222","0:85:3121","0:86:2595"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:10:2856":{"id":"0:10:2856","crate_id":0,"name":"Fragment","span":{"filename":"src/core.rs","begin":[221,0],"end":[232,1]},"visibility":"public","docs":"A (text) fragment denotes the unit which we wrap into lines.\n\nFragments represent an abstract _word_ plus the _whitespace_\nfollowing the word. In case the word falls at the end of the line,\nthe whitespace is dropped and a so-called _penalty_ is inserted\ninstead (typically `\"-\"` if the word was hyphenated).\n\nFor wrapping purposes, the precise content of the word, the\nwhitespace, and the penalty is irrelevant. All we need to know is\nthe displayed width of each part, which this trait provides.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:11:2782","0:12:2860","0:13:2863"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"std::fmt::Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:25"]}}},"a:2:46106:10740-0:316:2601":{"id":"a:2:46106:10740-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:46106:10740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:335:4083":{"id":"0:335:4083","crate_id":0,"name":"UnicodeBreakProperties","span":{"filename":"src/word_separators.rs","begin":[119,4],"end":[119,26]},"visibility":"default","docs":"Split `line` into words using Unicode break properties.\n\nThis word separator uses the Unicode line breaking algorithm\ndescribed in [Unicode Standard Annex\n#14](https://www.unicode.org/reports/tr14/) to find legal places\nto break lines. There is a small difference in that the U+002D\n(Hyphen-Minus) and U+00AD (Soft Hyphen) don’t create a line break:\nto allow a line break at a hyphen, use\n[`WordSplitter::HyphenSplitter`](crate::WordSplitter::HyphenSplitter).\nSoft hyphens are not currently supported.\n\n# Examples\n\nUnlike [`WordSeparator::AsciiSpace`], the Unicode line\nbreaking algorithm will find line break opportunities between\nsome characters with no intervening whitespace:\n\n```\n#[cfg(feature = \"unicode-linebreak\")] {\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::UnicodeBreakProperties;\n\nassert_eq!(UnicodeBreakProperties.find_words(\"Emojis: 😂😍\").collect::<Vec<_>>(),\n           vec![Word::from(\"Emojis: \"),\n                Word::from(\"😂\"),\n                Word::from(\"😍\")]);\n\nassert_eq!(UnicodeBreakProperties.find_words(\"CJK: 你好\").collect::<Vec<_>>(),\n           vec![Word::from(\"CJK: \"),\n                Word::from(\"你\"),\n                Word::from(\"好\")]);\n}\n```\n\nA U+2060 (Word Joiner) character can be inserted if you want to\nmanually override the defaults and keep the characters together:\n\n```\n#[cfg(feature = \"unicode-linebreak\")] {\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::UnicodeBreakProperties;\n\nassert_eq!(UnicodeBreakProperties.find_words(\"Emojis: 😂\\u{2060}😍\").collect::<Vec<_>>(),\n           vec![Word::from(\"Emojis: \"),\n                Word::from(\"😂\\u{2060}😍\")]);\n}\n```\n\nThe Unicode line breaking algorithm will also automatically\nsuppress break breaks around certain punctuation characters::\n\n```\n#[cfg(feature = \"unicode-linebreak\")] {\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::UnicodeBreakProperties;\n\nassert_eq!(UnicodeBreakProperties.find_words(\"[ foo ] bar !\").collect::<Vec<_>>(),\n           vec![Word::from(\"[ foo ] \"),\n                Word::from(\"bar !\")]);\n}\n```","links":{"`WordSeparator::AsciiSpace`":"0:333:3604","crate::WordSplitter::HyphenSplitter":"0:241:2970"},"attrs":["#[cfg(feature = \"unicode-linebreak\")]"],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:213-0:238:2604":{"id":"0:213-0:238:2604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[233,0],"end":[233,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"word_splitters::WordSplitter","name":"WordSplitter","id":"0:238:2604","glob":false}}},"b:2:3197-0:216:2867":{"id":"b:2:3197-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3167:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3200:150","2:3201:1875"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:234:732":{"id":"0:234:732","crate_id":0,"name":"eq","span":{"filename":"src/core.rs","begin":[238,29],"end":[238,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,29],"end":[7,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2964:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:301:732"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3420:262-0:273:2605":{"id":"a:2:3420:262-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3420:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3455:4786-0:289:2600":{"id":"a:2:3455:4786-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3455:4786","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3420:262-0:316:2601":{"id":"a:2:3420:262-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3420:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/word_splitters.rs","begin":[113,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2964:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:732"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,22],"end":[7,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:298:837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:86:2595":{"id":"0:86:2595","crate_id":0,"name":"wrap","span":{"filename":"src/wrap_algorithms.rs","begin":[167,4],"end":[190,5]},"visibility":"public","docs":"Wrap words according to line widths.\n\nThe `line_widths` slice gives the target line width for each\nline (the last slice element is repeated as necessary). This\ncan be used to implement hanging indentation.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["words",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}],["line_widths",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"usize"}}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7417:281","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:2595":{"id":"0:192:2595","crate_id":0,"name":"wrap","span":{"filename":"src/wrap.rs","begin":[180,0],"end":[193,1]},"visibility":"public","docs":"Wrap a line of text at a given width.\n\nThe result is a vector of lines, each line is of type [`Cow<'_,\nstr>`](Cow), which means that the line will borrow from the input\n`&str` if possible. The lines do not have trailing whitespace,\nincluding a final `'\\n'`. Please use [`fill()`](crate::fill()) if\nyou need a [`String`] instead.\n\nThe easiest way to use this function is to pass an integer for\n`width_or_options`:\n\n```\nuse textwrap::wrap;\n\nlet lines = wrap(\"Memory safety without garbage collection.\", 15);\nassert_eq!(lines, &[\n    \"Memory safety\",\n    \"without garbage\",\n    \"collection.\",\n]);\n```\n\nIf you need to customize the wrapping, you can pass an [`Options`]\ninstead of an `usize`:\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(15)\n    .initial_indent(\"- \")\n    .subsequent_indent(\"  \");\nlet lines = wrap(\"Memory safety without garbage collection.\", &options);\nassert_eq!(lines, &[\n    \"- Memory safety\",\n    \"  without\",\n    \"  garbage\",\n    \"  collection.\",\n]);\n```\n\n# Optimal-Fit Wrapping\n\nBy default, `wrap` will try to ensure an even right margin by\nfinding breaks which avoid short lines. We call this an\n“optimal-fit algorithm” since the line breaks are computed by\nconsidering all possible line breaks. The alternative is a\n“first-fit algorithm” which simply accumulates words until they no\nlonger fit on the line.\n\nAs an example, using the first-fit algorithm to wrap the famous\nHamlet quote “To be, or not to be: that is the question” in a\nnarrow column with room for only 10 characters looks like this:\n\n```\n# use textwrap::{WrapAlgorithm::FirstFit, Options, wrap};\n#\n# let lines = wrap(\"To be, or not to be: that is the question\",\n#                  Options::new(10).wrap_algorithm(FirstFit));\n# assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\\nTo be, or\nnot to be:\nthat is\nthe\nquestion\n# \");\n```\n\nNotice how the second to last line is quite narrow because\n“question” was too large to fit? The greedy first-fit algorithm\ndoesn’t look ahead, so it has no other option than to put\n“question” onto its own line.\n\nWith the optimal-fit wrapping algorithm, the previous lines are\nshortened slightly in order to make the word “is” go into the\nsecond last line:\n\n```\n# #[cfg(feature = \"smawk\")] {\n# use textwrap::{Options, WrapAlgorithm, wrap};\n#\n# let lines = wrap(\n#     \"To be, or not to be: that is the question\",\n#     Options::new(10).wrap_algorithm(WrapAlgorithm::new_optimal_fit())\n# );\n# assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\\nTo be,\nor not to\nbe: that\nis the\nquestion\n# \"); }\n```\n\nPlease see [`WrapAlgorithm`](crate::WrapAlgorithm) for details on\nthe choices.\n\n# Examples\n\nThe returned iterator yields lines of type `Cow<'_, str>`. If\npossible, the wrapped lines will borrow from the input string. As\nan example, a hanging indentation, the first line can borrow from\nthe input, but the subsequent lines become owned strings:\n\n```\nuse std::borrow::Cow::{Borrowed, Owned};\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(15).subsequent_indent(\"....\");\nlet lines = wrap(\"Wrapping text all day long.\", &options);\nlet annotated = lines\n    .iter()\n    .map(|line| match line {\n        Borrowed(text) => format!(\"[Borrowed] {}\", text),\n        Owned(text) => format!(\"[Owned]    {}\", text),\n    })\n    .collect::<Vec<_>>();\nassert_eq!(\n    annotated,\n    &[\n        \"[Borrowed] Wrapping text\",\n        \"[Owned]    ....all day\",\n        \"[Owned]    ....long.\",\n    ]\n);\n```\n\n## Leading and Trailing Whitespace\n\nAs a rule, leading whitespace (indentation) is preserved and\ntrailing whitespace is discarded.\n\nIn more details, when wrapping words into lines, words are found\nby splitting the input text on space characters. One or more\nspaces (shown here as “␣”) are attached to the end of each word:\n\n```text\n\"Foo␣␣␣bar␣baz\" -> [\"Foo␣␣␣\", \"bar␣\", \"baz\"]\n```\n\nThese words are then put into lines. The interword whitespace is\npreserved, unless the lines are wrapped so that the `\"Foo␣␣␣\"`\nword falls at the end of a line:\n\n```\nuse textwrap::wrap;\n\nassert_eq!(wrap(\"Foo   bar baz\", 10), vec![\"Foo   bar\", \"baz\"]);\nassert_eq!(wrap(\"Foo   bar baz\", 8), vec![\"Foo\", \"bar baz\"]);\n```\n\nNotice how the trailing whitespace is removed in both case: in the\nfirst example, `\"bar␣\"` becomes `\"bar\"` and in the second case\n`\"Foo␣␣␣\"` becomes `\"Foo\"`.\n\nLeading whitespace is preserved when the following word fits on\nthe first line. To understand this, consider how words are found\nin a text with leading spaces:\n\n```text\n\"␣␣foo␣bar\" -> [\"␣␣\", \"foo␣\", \"bar\"]\n```\n\nWhen put into lines, the indentation is preserved if `\"foo\"` fits\non the first line, otherwise you end up with an empty line:\n\n```\nuse textwrap::wrap;\n\nassert_eq!(wrap(\"  foo bar\", 8), vec![\"  foo\", \"bar\"]);\nassert_eq!(wrap(\"  foo bar\", 4), vec![\"\", \"foo\", \"bar\"]);\n```","links":{"`Options`":"0:316:2601","Cow":"5:827:122","crate::WrapAlgorithm":"0:273:2605","crate::fill()":"0:109:2589","`String`":"5:8016:258"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["width_or_options",{"generic":"Opt"}]],"output":{"resolved_path":{"name":"Vec","id":"5:7417:281","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::borrow::Cow","id":"5:827:122","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[92,0],"end":[120,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2964:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:732"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:205-0:117:2598":{"id":"0:205-0:117:2598","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[226,22],"end":[226,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"indentation::dedent","name":"dedent","id":"0:117:2598","glob":false}}},"0:241:2970":{"id":"0:241:2970","crate_id":0,"name":"HyphenSplitter","span":{"filename":"src/word_splitters.rs","begin":[68,4],"end":[68,18]},"visibility":"default","docs":"`HyphenSplitter` is the default `WordSplitter` used by\n[`Options::new`](super::Options::new). It will split words on\nexisting hyphens in the word.\n\nIt will only use hyphens that are surrounded by alphanumeric\ncharacters, which prevents a word like `\"--foo-bar\"` from\nbeing split into `\"--\"` and `\"foo-bar\"`.\n\n# Examples\n\n```\nuse textwrap::WordSplitter;\n\nassert_eq!(WordSplitter::HyphenSplitter.split_points(\"--foo-bar\"),\n           vec![6]);\n```","links":{"super::Options::new":"0:141:1222"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:46107:10942-0:238:2604":{"id":"a:2:46107:10942-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:46107:10942","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3455:4786-0:273:2605":{"id":"a:2:3455:4786-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3455:4786","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3197-0:316:2601":{"id":"b:2:3197-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3167:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3200:150","2:3201:1875"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:135:868":{"id":"0:135:868","crate_id":0,"name":"from","span":{"filename":"src/options.rs","begin":[36,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["options",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:36279:4630-0:332:2603":{"id":"a:2:36279:4630-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36279:4630","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:85:3121":{"id":"0:85:3121","crate_id":0,"name":"new_optimal_fit","span":{"filename":"src/wrap_algorithms.rs","begin":[157,4],"end":[159,5]},"visibility":"public","docs":"New [`WrapAlgorithm::OptimalFit`] with default penalties. This\nworks well for monospace text.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"`WrapAlgorithm::OptimalFit`":"0:276:3084"},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:328:837":{"id":"0:328:837","crate_id":0,"name":"fmt","span":{"filename":"src/options.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:11091:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:11072:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:826:4948":{"id":"5:826:4948","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220:2874":{"id":"0:220:2874","crate_id":0,"name":"penalty","span":{"filename":"src/core.rs","begin":[245,4],"end":[245,24]},"visibility":"public","docs":"Penalty string to insert if the word falls at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"0:321:3799":{"id":"0:321:3799","crate_id":0,"name":"subsequent_indent","span":{"filename":"src/options.rs","begin":[18,4],"end":[18,34]},"visibility":"public","docs":"Indentation used for subsequent lines of output. See the\n[`Options::subsequent_indent`] method.","links":{"`Options::subsequent_indent`":"0:145:3799"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"a:2:36220:250-0:264:3062":{"id":"a:2:36220:250-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:36220:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2872-0:316:2601":{"id":"b:2:2872-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2866:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:3352"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,29],"end":[238,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:36222:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:41:3001":{"id":"0:41:3001","crate_id":0,"name":"split_points","span":{"filename":"src/word_splitters.rs","begin":[143,4],"end":[172,5]},"visibility":"public","docs":"Return all possible indices where `word` can be split.\n\nThe indices are in the range `0..word.len()`. They point to\nthe index _after_ the split point, i.e., after `-` if\nsplitting on hyphens. This way, `word.split_at(idx)` will\nbreak the word into two well-formed pieces.\n\n# Examples\n\n```\nuse textwrap::WordSplitter;\nassert_eq!(WordSplitter::NoHyphenation.split_points(\"cannot-be-split\"), vec![]);\nassert_eq!(WordSplitter::HyphenSplitter.split_points(\"can-be-split\"), vec![4, 7]);\nassert_eq!(WordSplitter::Custom(|word| vec![word.len()/2]).split_points(\"middle\"), vec![3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["word",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7417:281","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3202-0:248:3063":{"id":"b:2:3202-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3205:150","2:3206:1873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:36279:4630-0:273:2605":{"id":"a:2:36279:4630-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36279:4630","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:109:2589":{"id":"0:109:2589","crate_id":0,"name":"fill","span":{"filename":"src/fill.rs","begin":[36,0],"end":[47,1]},"visibility":"public","docs":"Fill a line of text at a given width.\n\nThe result is a [`String`], complete with newlines between each\nline. Use [`wrap()`] if you need access to the individual lines.\n\nThe easiest way to use this function is to pass an integer for\n`width_or_options`:\n\n```\nuse textwrap::fill;\n\nassert_eq!(\n    fill(\"Memory safety without garbage collection.\", 15),\n    \"Memory safety\\nwithout garbage\\ncollection.\"\n);\n```\n\nIf you need to customize the wrapping, you can pass an [`Options`]\ninstead of an `usize`:\n\n```\nuse textwrap::{fill, Options};\n\nlet options = Options::new(15)\n    .initial_indent(\"- \")\n    .subsequent_indent(\"  \");\nassert_eq!(\n    fill(\"Memory safety without garbage collection.\", &options),\n    \"- Memory safety\\n  without\\n  garbage\\n  collection.\"\n);\n```","links":{"`wrap()`":"0:192:2595","`Options`":"0:316:2601","`String`":"5:8016:258"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["width_or_options",{"generic":"Opt"}]],"output":{"resolved_path":{"name":"String","id":"5:8016:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:36279:4630-0:289:2600":{"id":"a:2:36279:4630-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36279:4630","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:170:3605":{"id":"0:170:3605","crate_id":0,"name":"find_words","span":{"filename":"src/word_separators.rs","begin":[192,4],"end":[199,5]},"visibility":"public","docs":"Find all words in `line`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["line",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Box","id":"5:328:4085","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Iterator","id":"2:8881:190","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]}}},"generic_params":[]}],"lifetime":"'a"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:837":{"id":"0:298:837","crate_id":0,"name":"fmt","span":{"filename":"src/line_ending.rs","begin":[7,22],"end":[7,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:11091:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:11072:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2872-0:248:3063":{"id":"b:2:2872-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2866:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:3352"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:202-0:109:2589":{"id":"0:202-0:109:2589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[225,15],"end":[225,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"fill::fill","name":"fill","id":"0:109:2589","glob":false}}},"b:2:3197-0:238:2604":{"id":"b:2:3197-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3167:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:150","2:3201:1875"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:36220:250-0:216:2867":{"id":"a:2:36220:250-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:36220:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:253:3335":{"id":"0:253:3335","crate_id":0,"name":"hyphen_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[131,4],"end":[131,29]},"visibility":"public","docs":"Penalty for lines ending with a hyphen.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:91:60":{"id":"0:91:60","crate_id":0,"name":"default","span":{"filename":"src/wrap_algorithms.rs","begin":[194,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3420:262-0:289:2600":{"id":"a:2:3420:262-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3420:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3197-0:289:2600":{"id":"b:2:3197-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3167:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:150","2:3201:1875"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3187-0:332:2603":{"id":"b:2:3187-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3190:3494"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:212-0:332:2603":{"id":"0:212-0:332:2603","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[232,0],"end":[232,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"word_separators::WordSeparator","name":"WordSeparator","id":"0:332:2603","glob":false}}},"5:824:4299":{"id":"5:824:4299","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:270:732":{"id":"0:270:732","crate_id":0,"name":"eq","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,16],"end":[185,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:6155:1848":{"id":"5:6155:1848","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:8016:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215-0:273:2605":{"id":"0:215-0:273:2605","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[235,0],"end":[235,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"wrap_algorithms::WrapAlgorithm","name":"WrapAlgorithm","id":"0:273:2605","glob":false}}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[328,0],"end":[347,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Fragment","id":"0:10:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:26:2782","0:27:2860","0:28:2863"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:39:732":{"id":"0:39:732","crate_id":0,"name":"eq","span":{"filename":"src/word_splitters.rs","begin":[114,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[152,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3239:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:57:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2872-0:289:2600":{"id":"b:2:2872-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2866:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:3352"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:251:3330":{"id":"0:251:3330","crate_id":0,"name":"short_last_line_fraction","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[123,4],"end":[123,39]},"visibility":"public","docs":"When should the a single word on the last line be considered\n\"too short\"?\n\nIf the last line of the text consist of a single word and if\nthis word is shorter than `1 / short_last_line_fraction` of\nthe line width, then the final line will be considered \"short\"\nand `short_last_line_penalty` is added as an extra penalty.\n\nThe effect of this is to avoid a final line consisting of a\nsingle small word. For example, with a\n`short_last_line_penalty` of 25 (the default), a gap of up to\n5 columns will be seen as more desirable than having a final\nshort line.\n\n## Examples\n\n```\nuse textwrap::{wrap, wrap_algorithms, Options, WrapAlgorithm};\n\nlet text = \"This is a demo of the short last line penalty.\";\n\n// The first-fit algorithm leaves a single short word on the last line:\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::FirstFit)),\n           vec![\"This is a demo of the short last line\",\n                \"penalty.\"]);\n\n#[cfg(feature = \"smawk\")] {\nlet mut penalties = wrap_algorithms::Penalties::new();\n\n// Since \"penalty.\" is shorter than 25% of the line width, the\n// optimal-fit algorithm adds a penalty of 25. This is enough\n// to move \"line \" down:\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::OptimalFit(penalties))),\n           vec![\"This is a demo of the short last\",\n                \"line penalty.\"]);\n\n// We can change the meaning of \"short\" lines. Here, only words\n// shorter than 1/10th of the line width will be considered short:\npenalties.short_last_line_fraction = 10;\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::OptimalFit(penalties))),\n           vec![\"This is a demo of the short last line\",\n                \"penalty.\"]);\n\n// If desired, the penalty can also be disabled:\npenalties.short_last_line_fraction = 4;\npenalties.short_last_line_penalty = 0;\nassert_eq!(wrap(text, Options::new(37).wrap_algorithm(WrapAlgorithm::OptimalFit(penalties))),\n           vec![\"This is a demo of the short last line\",\n                \"penalty.\"]);\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:36279:4630-0:248:3063":{"id":"a:2:36279:4630-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36279:4630","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:224:837":{"id":"0:224:837","crate_id":0,"name":"fmt","span":{"filename":"src/core.rs","begin":[238,9],"end":[238,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:11091:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:11072:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:46106:10740-0:264:3062":{"id":"a:2:46106:10740-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:46106:10740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2875-0:316:2601":{"id":"b:2:2875-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2869:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2877:3350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:74-0:264:3062":{"id":"0:74-0:264:3062","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[23,40],"end":[23,53]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"import":{"source":"optimal_fit::OverflowError","name":"OverflowError","id":"0:264:3062","glob":false}}},"a:2:46107:10942-0:264:3062":{"id":"a:2:46107:10942-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:46107:10942","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:258:837":{"id":"0:258:837","crate_id":0,"name":"fmt","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,22],"end":[22,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:11091:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:11072:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3187-0:316:2601":{"id":"b:2:3187-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3190:3494"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3191-0:316:2601":{"id":"b:2:3191-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3193:868"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:100:2596":{"id":"0:100:2596","crate_id":0,"name":"wrap_columns","span":{"filename":"src/columns.rs","begin":[63,0],"end":[114,1]},"visibility":"public","docs":"Wrap text into columns with a given total width.\n\nThe `left_gap`, `middle_gap` and `right_gap` arguments specify the\nstrings to insert before, between, and after the columns. The\ntotal width of all columns and all gaps is specified using the\n`total_width_or_options` argument. This argument can simply be an\ninteger if you want to use default settings when wrapping, or it\ncan be a [`Options`] value if you want to customize the wrapping.\n\nIf the columns are narrow, it is recommended to set\n[`Options::break_words`] to `true` to prevent words from\nprotruding into the margins.\n\nThe per-column width is computed like this:\n\n```\n# let (left_gap, middle_gap, right_gap) = (\"\", \"\", \"\");\n# let columns = 2;\n# let options = textwrap::Options::new(80);\nlet inner_width = options.width\n    - textwrap::core::display_width(left_gap)\n    - textwrap::core::display_width(right_gap)\n    - textwrap::core::display_width(middle_gap) * (columns - 1);\nlet column_width = inner_width / columns;\n```\n\nThe `text` is wrapped using [`wrap()`] and the given `options`\nargument, but the width is overwritten to the computed\n`column_width`.\n\n# Panics\n\nPanics if `columns` is zero.\n\n# Examples\n\n```\nuse textwrap::wrap_columns;\n\nlet text = \"\\\nThis is an example text, which is wrapped into three columns. \\\nNotice how the final column can be shorter than the others.\";\n\n#[cfg(feature = \"smawk\")]\nassert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),\n           vec![\"| This is       | into three    | column can be  |\",\n                \"| an example    | columns.      | shorter than   |\",\n                \"| text, which   | Notice how    | the others.    |\",\n                \"| is wrapped    | the final     |                |\"]);\n\n// Without the `smawk` feature, the middle column is a little more uneven:\n#[cfg(not(feature = \"smawk\"))]\nassert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),\n           vec![\"| This is an    | three         | column can be  |\",\n                \"| example text, | columns.      | shorter than   |\",\n                \"| which is      | Notice how    | the others.    |\",\n                \"| wrapped into  | the final     |                |\"]);","links":{"`Options::break_words`":"0:146:2899","`wrap()`":"0:192:2595","`Options`":"0:316:2601"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["columns",{"primitive":"usize"}],["total_width_or_options",{"generic":"Opt"}],["left_gap",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["middle_gap",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["right_gap",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7417:281","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:8016:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:9:2846":{"id":"0:9:2846","crate_id":0,"name":"display_width","span":{"filename":"src/core.rs","begin":[199,0],"end":[209,1]},"visibility":"public","docs":"Compute the display width of `text` while skipping over ANSI\nescape sequences.\n\n# Examples\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(display_width(\"Café Plain\"), 10);\nassert_eq!(display_width(\"\\u{1b}[31mCafé Rouge\\u{1b}[0m\"), 10);\nassert_eq!(display_width(\"\\x1b]8;;http://example.com\\x1b\\\\This is a link\\x1b]8;;\\x1b\\\\\"), 14);\n```\n\n**Note:** When the `unicode-width` Cargo feature is disabled, the\nwidth of a `char` is determined by a crude approximation which\nsimply counts chars below U+1100 as 1 column wide, and all other\ncharacters as 2 columns wide. With the feature enabled, function\nwill correctly deal with [combining characters] in their\ndecomposed form (see [Unicode equivalence]).\n\nAn example of a decomposed character is “é”, which can be\ndecomposed into: “e” followed by a combining acute accent: “◌́”.\nWithout the `unicode-width` Cargo feature, every `char` below\nU+1100 has a width of 1. This includes the combining accent:\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(display_width(\"Cafe Plain\"), 10);\n#[cfg(feature = \"unicode-width\")]\nassert_eq!(display_width(\"Cafe\\u{301} Plain\"), 10);\n#[cfg(not(feature = \"unicode-width\"))]\nassert_eq!(display_width(\"Cafe\\u{301} Plain\"), 11);\n```\n\n## Emojis and CJK Characters\n\nCharacters such as emojis and [CJK characters] used in the\nChinese, Japanese, and Korean languages are seen as double-width,\neven if the `unicode-width` feature is disabled:\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(display_width(\"😂😭🥺🤣✨😍🙏🥰😊🔥\"), 20);\nassert_eq!(display_width(\"你好\"), 4);  // “Nǐ hǎo” or “Hello” in Chinese\n```\n\n# Limitations\n\nThe displayed width of a string cannot always be computed from the\nstring alone. This is because the width depends on the rendering\nengine used. This is particularly visible with [emoji modifier\nsequences] where a base emoji is modified with, e.g., skin tone or\nhair color modifiers. It is up to the rendering engine to detect\nthis and to produce a suitable emoji.\n\nA simple example is “❤️”, which consists of “❤” (U+2764: Black\nHeart Symbol) followed by U+FE0F (Variation Selector-16). By\nitself, “❤” is a black heart, but if you follow it with the\nvariant selector, you may get a wider red heart.\n\nA more complex example would be “👨‍🦰” which should depict a man\nwith red hair. Here the computed width is too large — and the\nwidth differs depending on the use of the `unicode-width` feature:\n\n```\nuse textwrap::core::display_width;\n\nassert_eq!(\"👨‍🦰\".chars().collect::<Vec<char>>(), ['\\u{1f468}', '\\u{200d}', '\\u{1f9b0}']);\n#[cfg(feature = \"unicode-width\")]\nassert_eq!(display_width(\"👨‍🦰\"), 4);\n#[cfg(not(feature = \"unicode-width\"))]\nassert_eq!(display_width(\"👨‍🦰\"), 6);\n```\n\nThis happens because the grapheme consists of three code points:\n“👨” (U+1F468: Man), Zero Width Joiner (U+200D), and “🦰”\n(U+1F9B0: Red Hair). You can see them above in the test. With\n`unicode-width` enabled, the ZWJ is correctly seen as having zero\nwidth, without it is counted as a double-width character.\n\n## Terminal Support\n\nModern browsers typically do a great job at combining characters\nas shown above, but terminals often struggle more. As an example,\nGnome Terminal version 3.38.1, shows “❤️” as a big red heart, but\nshows \"👨‍🦰\" as “👨🦰”.\n\n[combining characters]: https://en.wikipedia.org/wiki/Combining_character\n[Unicode equivalence]: https://en.wikipedia.org/wiki/Unicode_equivalence\n[CJK characters]: https://en.wikipedia.org/wiki/CJK_characters\n[emoji modifier sequences]: https://unicode.org/emoji/charts/full-emoji-modifiers.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3200:150":{"id":"2:3200:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:14":{"id":"0:14","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[250,0],"end":[256,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3654:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"items":["0:15:264","0:16:661"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:122:357":{"id":"0:122:357","crate_id":0,"name":"as_str","span":{"filename":"src/line_ending.rs","begin":[21,4],"end":[26,5]},"visibility":"public","docs":"Turns this [`LineEnding`] value into its ASCII representation.","links":{"`LineEnding`":"0:289:2600"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3191-0:216:2867":{"id":"b:2:3191-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3193:868"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3202-0:332:2603":{"id":"b:2:3202-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3205:150","2:3206:1873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3455:4786-0:248:3063":{"id":"a:2:3455:4786-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3455:4786","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:46107:10942-0:316:2601":{"id":"a:2:46107:10942-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:46107:10942","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:290:3770":{"id":"0:290:3770","crate_id":0,"name":"CRLF","span":{"filename":"src/line_ending.rs","begin":[12,4],"end":[12,8]},"visibility":"default","docs":"_Carriage return and line feed_ – a line ending sequence\nhistorically used in Windows. Corresponds to the sequence\nof ASCII control characters `0x0D 0x0A` or `\\r\\n`","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3191-0:332:2603":{"id":"b:2:3191-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:868"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3187-0:216:2867":{"id":"b:2:3187-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3190:3494"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:245:2049":{"id":"0:245:2049","crate_id":0,"name":"0","span":{"filename":"src/word_splitters.rs","begin":[88,11],"end":[88,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"function_pointer":{"decl":{"inputs":[["word",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7417:281","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}}}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[56,0],"end":[280,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:141:1222","0:142:2591","0:143:2782","0:144:3557","0:145:3799","0:146:2899","0:147:3807","0:148:3634","0:149:3021"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:92:3129":{"id":"0:92:3129","crate_id":0,"name":"wrap_first_fit","span":{"filename":"src/wrap_algorithms.rs","begin":[347,0],"end":[371,1]},"visibility":"public","docs":"Wrap abstract fragments into lines with a first-fit algorithm.\n\nThe `line_widths` slice gives the target line width for each line\n(the last slice element is repeated as necessary). This can be\nused to implement hanging indentation.\n\nThe fragments must already have been split into the desired\nwidths, this function will not (and cannot) attempt to split them\nfurther when arranging them into lines.\n\n# First-Fit Algorithm\n\nThis implements a simple “greedy” algorithm: accumulate fragments\none by one and when a fragment no longer fits, start a new line.\nThere is no look-ahead, we simply take first fit of the fragments\nwe find.\n\nWhile fast and predictable, this algorithm can produce poor line\nbreaks when a long fragment is moved to a new line, leaving behind\na large gap:\n\n```\nuse textwrap::core::Word;\nuse textwrap::wrap_algorithms::wrap_first_fit;\nuse textwrap::WordSeparator;\n\n// Helper to convert wrapped lines to a Vec<String>.\nfn lines_to_strings(lines: Vec<&[Word<'_>]>) -> Vec<String> {\n    lines.iter().map(|line| {\n        line.iter().map(|word| &**word).collect::<Vec<_>>().join(\" \")\n    }).collect::<Vec<_>>()\n}\n\nlet text = \"These few words will unfortunately not wrap nicely.\";\nlet words = WordSeparator::AsciiSpace.find_words(text).collect::<Vec<_>>();\nassert_eq!(lines_to_strings(wrap_first_fit(&words, &[15.0])),\n           vec![\"These few words\",\n                \"will\",  // <-- short line\n                \"unfortunately\",\n                \"not wrap\",\n                \"nicely.\"]);\n\n// We can avoid the short line if we look ahead:\n#[cfg(feature = \"smawk\")]\nuse textwrap::wrap_algorithms::{wrap_optimal_fit, Penalties};\n#[cfg(feature = \"smawk\")]\nassert_eq!(lines_to_strings(wrap_optimal_fit(&words, &[15.0], &Penalties::new()).unwrap()),\n           vec![\"These few\",\n                \"words will\",\n                \"unfortunately\",\n                \"not wrap\",\n                \"nicely.\"]);\n```\n\nThe [`wrap_optimal_fit()`] function was used above to get better\nline breaks. It uses an advanced algorithm which tries to avoid\nshort lines. This function is about 4 times faster than\n[`wrap_optimal_fit()`].\n\n# Examples\n\nImagine you're building a house site and you have a number of\ntasks you need to execute. Things like pour foundation, complete\nframing, install plumbing, electric cabling, install insulation.\n\nThe construction workers can only work during daytime, so they\nneed to pack up everything at night. Because they need to secure\ntheir tools and move machines back to the garage, this process\ntakes much more time than the time it would take them to simply\nswitch to another task.\n\nYou would like to make a list of tasks to execute every day based\non your estimates. You can model this with a program like this:\n\n```\nuse textwrap::core::{Fragment, Word};\nuse textwrap::wrap_algorithms::wrap_first_fit;\n\n#[derive(Debug)]\nstruct Task<'a> {\n    name: &'a str,\n    hours: f64,   // Time needed to complete task.\n    sweep: f64,   // Time needed for a quick sweep after task during the day.\n    cleanup: f64, // Time needed for full cleanup if day ends with this task.\n}\n\nimpl Fragment for Task<'_> {\n    fn width(&self) -> f64 { self.hours }\n    fn whitespace_width(&self) -> f64 { self.sweep }\n    fn penalty_width(&self) -> f64 { self.cleanup }\n}\n\n// The morning tasks\nlet tasks = vec![\n    Task { name: \"Foundation\",  hours: 4.0, sweep: 2.0, cleanup: 3.0 },\n    Task { name: \"Framing\",     hours: 3.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Plumbing\",    hours: 2.0, sweep: 2.0, cleanup: 2.0 },\n    Task { name: \"Electrical\",  hours: 2.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Insulation\",  hours: 2.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Drywall\",     hours: 3.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Floors\",      hours: 3.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Countertops\", hours: 1.0, sweep: 1.0, cleanup: 2.0 },\n    Task { name: \"Bathrooms\",   hours: 2.0, sweep: 1.0, cleanup: 2.0 },\n];\n\n// Fill tasks into days, taking `day_length` into account. The\n// output shows the hours worked per day along with the names of\n// the tasks for that day.\nfn assign_days<'a>(tasks: &[Task<'a>], day_length: f64) -> Vec<(f64, Vec<&'a str>)> {\n    let mut days = Vec::new();\n    // Assign tasks to days. The assignment is a vector of slices,\n    // with a slice per day.\n    let assigned_days: Vec<&[Task<'a>]> = wrap_first_fit(&tasks, &[day_length]);\n    for day in assigned_days.iter() {\n        let last = day.last().unwrap();\n        let work_hours: f64 = day.iter().map(|t| t.hours + t.sweep).sum();\n        let names = day.iter().map(|t| t.name).collect::<Vec<_>>();\n        days.push((work_hours - last.sweep + last.cleanup, names));\n    }\n    days\n}\n\n// With a single crew working 8 hours a day:\nassert_eq!(\n    assign_days(&tasks, 8.0),\n    [\n        (7.0, vec![\"Foundation\"]),\n        (8.0, vec![\"Framing\", \"Plumbing\"]),\n        (7.0, vec![\"Electrical\", \"Insulation\"]),\n        (5.0, vec![\"Drywall\"]),\n        (7.0, vec![\"Floors\", \"Countertops\"]),\n        (4.0, vec![\"Bathrooms\"]),\n    ]\n);\n\n// With two crews working in shifts, 16 hours a day:\nassert_eq!(\n    assign_days(&tasks, 16.0),\n    [\n        (14.0, vec![\"Foundation\", \"Framing\", \"Plumbing\"]),\n        (15.0, vec![\"Electrical\", \"Insulation\", \"Drywall\", \"Floors\"]),\n        (6.0, vec![\"Countertops\", \"Bathrooms\"]),\n    ]\n);\n```\n\nApologies to anyone who actually knows how to build a house and\nknows how long each step takes :-)","links":{"`wrap_optimal_fit()`":"0:67:3061"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fragments",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"generic":"T"}}}}],["line_widths",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"f64"}}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:7417:281","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"generic":"T"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fragment","id":"0:10:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[188,0],"end":[192,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:11132:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:36220:250-0:289:2600":{"id":"a:2:36220:250-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:36220:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:46107:10942-0:289:2600":{"id":"a:2:46107:10942-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:46107:10942","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3191-0:289:2600":{"id":"b:2:3191-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:868"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:13:2863":{"id":"0:13:2863","crate_id":0,"name":"penalty_width","span":{"filename":"src/core.rs","begin":[231,4],"end":[231,35]},"visibility":"default","docs":"Displayed width of the penalty that must be inserted if the\nword falls at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:0:2606":{"id":"0:0:2606","crate_id":0,"name":"textwrap","span":{"filename":"src/lib.rs","begin":[1,0],"end":[235,39]},"visibility":"public","docs":"The textwrap library provides functions for word wrapping and\nindenting text.\n\n# Wrapping Text\n\nWrapping text can be very useful in command-line programs where\nyou want to format dynamic output nicely so it looks good in a\nterminal. A quick example:\n\n```\n# #[cfg(feature = \"smawk\")] {\nlet text = \"textwrap: a small library for wrapping text.\";\nassert_eq!(textwrap::wrap(text, 18),\n           vec![\"textwrap: a\",\n                \"small library for\",\n                \"wrapping text.\"]);\n# }\n```\n\nThe [`wrap()`] function returns the individual lines, use\n[`fill()`] is you want the lines joined with `'\\n'` to form a\n`String`.\n\nIf you enable the `hyphenation` Cargo feature, you can get\nautomatic hyphenation for a number of languages:\n\n```\n#[cfg(feature = \"hyphenation\")] {\nuse hyphenation::{Language, Load, Standard};\nuse textwrap::{wrap, Options, WordSplitter};\n\nlet text = \"textwrap: a small library for wrapping text.\";\nlet dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();\nlet options = Options::new(18).word_splitter(WordSplitter::Hyphenation(dictionary));\nassert_eq!(wrap(text, &options),\n           vec![\"textwrap: a small\",\n                \"library for wrap-\",\n                \"ping text.\"]);\n}\n```\n\nSee also the [`unfill()`] and [`refill()`] functions which allow\nyou to manipulate already wrapped text.\n\n## Wrapping Strings at Compile Time\n\nIf your strings are known at compile time, please take a look at\nthe procedural macros from the [textwrap-macros] crate.\n\n## Displayed Width vs Byte Size\n\nTo word wrap text, one must know the width of each word so one can\nknow when to break lines. This library will by default measure the\nwidth of text using the _displayed width_, not the size in bytes.\nThe `unicode-width` Cargo feature controls this.\n\nThis is important for non-ASCII text. ASCII characters such as `a`\nand `!` are simple and take up one column each. This means that\nthe displayed width is equal to the string length in bytes.\nHowever, non-ASCII characters and symbols take up more than one\nbyte when UTF-8 encoded: `é` is `0xc3 0xa9` (two bytes) and `⚙` is\n`0xe2 0x9a 0x99` (three bytes) in UTF-8, respectively.\n\nThis is why we take care to use the displayed width instead of the\nbyte count when computing line lengths. All functions in this\nlibrary handle Unicode characters like this when the\n`unicode-width` Cargo feature is enabled (it is enabled by\ndefault).\n\n# Indentation and Dedentation\n\nThe textwrap library also offers functions for adding a prefix to\nevery line of a string and to remove leading whitespace. As an\nexample, [`indent()`] allows you to turn lines of text into a\nbullet list:\n\n```\nlet before = \"\\\nfoo\nbar\nbaz\n\";\nlet after = \"\\\n* foo\n* bar\n* baz\n\";\nassert_eq!(textwrap::indent(before, \"* \"), after);\n```\n\nRemoving leading whitespace is done with [`dedent()`]:\n\n```\nlet before = \"\n    Some\n      indented\n        text\n\";\nlet after = \"\nSome\n  indented\n    text\n\";\nassert_eq!(textwrap::dedent(before), after);\n```\n\n# Cargo Features\n\nThe textwrap library can be slimmed down as needed via a number of\nCargo features. This means you only pay for the features you\nactually use.\n\nThe full dependency graph, where dashed lines indicate optional\ndependencies, is shown below:\n\n<img src=\"https://raw.githubusercontent.com/mgeisler/textwrap/master/images/textwrap-0.16.1.svg\">\n\n## Default Features\n\nThese features are enabled by default:\n\n* `unicode-linebreak`: enables finding words using the\n  [unicode-linebreak] crate, which implements the line breaking\n  algorithm described in [Unicode Standard Annex\n  #14](https://www.unicode.org/reports/tr14/).\n\n  This feature can be disabled if you are happy to find words\n  separated by ASCII space characters only. People wrapping text\n  with emojis or East-Asian characters will want most likely want\n  to enable this feature. See [`WordSeparator`] for details.\n\n* `unicode-width`: enables correct width computation of non-ASCII\n  characters via the [unicode-width] crate. Without this feature,\n  every [`char`] is 1 column wide, except for emojis which are 2\n  columns wide. See [`core::display_width()`] for details.\n\n  This feature can be disabled if you only need to wrap ASCII\n  text, or if the functions in [`core`] are used directly with\n  [`core::Fragment`]s for which the widths have been computed in\n  other ways.\n\n* `smawk`: enables linear-time wrapping of the whole paragraph via\n  the [smawk] crate. See [`wrap_algorithms::wrap_optimal_fit()`]\n  for details on the optimal-fit algorithm.\n\n  This feature can be disabled if you only ever intend to use\n  [`wrap_algorithms::wrap_first_fit()`].\n\n<!-- begin binary-sizes -->\n\nWith Rust 1.64.0, the size impact of the above features on your\nbinary is as follows:\n\n| Configuration                            |  Binary Size |    Delta |\n| :---                                     |         ---: |     ---: |\n| quick-and-dirty implementation           |       289 KB |     — KB |\n| textwrap without default features        |       305 KB |    16 KB |\n| textwrap with smawk                      |       317 KB |    28 KB |\n| textwrap with unicode-width              |       309 KB |    20 KB |\n| textwrap with unicode-linebreak          |       342 KB |    53 KB |\n\n<!-- end binary-sizes -->\n\nThe above sizes are the stripped sizes and the binary is compiled\nin release mode with this profile:\n\n```toml\n[profile.release]\nlto = true\ncodegen-units = 1\n```\n\nSee the [binary-sizes demo] if you want to reproduce these\nresults.\n\n## Optional Features\n\nThese Cargo features enable new functionality:\n\n* `terminal_size`: enables automatic detection of the terminal\n  width via the [terminal_size] crate. See\n  [`Options::with_termwidth()`] for details.\n\n* `hyphenation`: enables language-sensitive hyphenation via the\n  [hyphenation] crate. See the [`word_splitters::WordSplitter`]\n  trait for details.\n\n[unicode-linebreak]: https://docs.rs/unicode-linebreak/\n[unicode-width]: https://docs.rs/unicode-width/\n[smawk]: https://docs.rs/smawk/\n[binary-sizes demo]: https://github.com/mgeisler/textwrap/tree/master/examples/binary-sizes\n[textwrap-macros]: https://docs.rs/textwrap-macros/\n[terminal_size]: https://docs.rs/terminal_size/\n[hyphenation]: https://docs.rs/hyphenation/","links":{"`dedent()`":"0:117:2598","`refill()`":"0:158:2592","`char`":"1:12811:497","`word_splitters::WordSplitter`":"0:238:2604","`wrap_algorithms::wrap_optimal_fit()`":"0:67:3061","`WordSeparator`":"0:332:2603","`wrap_algorithms::wrap_first_fit()`":"0:92:3129","`wrap()`":"0:192:2595","`core::Fragment`":"0:10:2856","`core::display_width()`":"0:9:2846","`unfill()`":"0:157:2602","`core`":"0:3:591","`indent()`":"0:116:2599","`fill()`":"0:109:2589"},"attrs":["#![doc(html_root_url = \"https://docs.rs/textwrap/0.16.1\")]","#![forbid(unsafe_code)]","#![deny(missing_docs)]","#![deny(missing_debug_implementations)]","#![allow(clippy::redundant_field_names)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3:591","0:32:2586","0:50:2587","0:200-0:100:2596","0:202-0:109:2589","0:203-0:113:2597","0:205-0:117:2598","0:206-0:116:2599","0:207-0:289:2600","0:208-0:316:2601","0:210-0:158:2592","0:211-0:157:2602","0:212-0:332:2603","0:213-0:238:2604","0:214-0:192:2595","0:215-0:273:2605"],"is_stripped":false}}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,16],"end":[185,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2964:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:270:732"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3201:1875":{"id":"2:3201:1875","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:46278:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3191-0:273:2605":{"id":"b:2:3191-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:868"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:136":{"id":"0:136","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[50,0],"end":[54,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:138:868"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:2899":{"id":"0:146:2899","crate_id":0,"name":"break_words","span":{"filename":"src/options.rs","begin":[212,4],"end":[217,5]},"visibility":"public","docs":"Change [`self.break_words`]. This controls if words longer\nthan `self.width` can be broken, or if they will be left\nsticking out into the right margin.\n\nSee [`Options::word_splitter`] instead if you want to control\nhyphenation.\n\n# Examples\n\n```\nuse textwrap::{wrap, Options};\n\nlet options = Options::new(4).break_words(true);\nassert_eq!(wrap(\"This is a little example.\", options),\n           vec![\"This\",\n                \"is a\",\n                \"litt\",\n                \"le\",\n                \"exam\",\n                \"ple.\"]);\n```\n\n[`self.break_words`]: #structfield.break_words","links":{"`Options::word_splitter`":"0:149:3021"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["break_words",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:46107:10942-0:248:3063":{"id":"a:2:46107:10942-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:46107:10942","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:44:3020":{"id":"0:44:3020","crate_id":0,"name":"split_words","span":{"filename":"src/word_splitters.rs","begin":[181,0],"end":[218,1]},"visibility":"public","docs":"Split words into smaller words according to the split points given\nby `word_splitter`.\n\nNote that we split all words, regardless of their length. This is\nto more cleanly separate the business of splitting (including\nautomatic hyphenation) from the business of word wrapping.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["words",{"generic":"I"}],["word_splitter",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8881:190","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8699:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"crate::core::Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3190:3494":{"id":"2:3190:3494","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3164:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75-0:248:3063":{"id":"0:75-0:248:3063","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[23,55],"end":[23,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"import":{"source":"optimal_fit::Penalties","name":"Penalties","id":"0:248:3063","glob":false}}},"0:158:2592":{"id":"0:158:2592","crate_id":0,"name":"refill","span":{"filename":"src/refill.rs","begin":[169,0],"end":[188,1]},"visibility":"public","docs":"Refill a paragraph of wrapped text with a new width.\n\nThis function will first use [`unfill()`] to remove newlines from\nthe text. Afterwards the text is filled again using [`fill()`].\n\nThe `new_width_or_options` argument specify the new width and can\nspecify other options as well — except for\n[`Options::initial_indent`] and [`Options::subsequent_indent`],\nwhich are deduced from `filled_text`.\n\n# Examples\n\n```\nuse textwrap::refill;\n\n// Some loosely wrapped text. The \"> \" prefix is recognized automatically.\nlet text = \"\\\n> Memory\n> safety without garbage\n> collection.\n\";\n\nassert_eq!(refill(text, 20), \"\\\n> Memory safety\n> without garbage\n> collection.\n\");\n\nassert_eq!(refill(text, 40), \"\\\n> Memory safety without garbage\n> collection.\n\");\n\nassert_eq!(refill(text, 60), \"\\\n> Memory safety without garbage collection.\n\");\n```\n\nYou can also reshape bullet points:\n\n```\nuse textwrap::refill;\n\nlet text = \"\\\n- This is my\n  list item.\n\";\n\nassert_eq!(refill(text, 20), \"\\\n- This is my list\n  item.\n\");\n```","links":{"`unfill()`":"0:157:2602","`Options::subsequent_indent`":"0:145:3799","`Options::initial_indent`":"0:144:3557","`fill()`":"0:109:2589"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["filled_text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["new_width_or_options",{"generic":"Opt"}]],"output":{"resolved_path":{"name":"String","id":"5:8016:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opt","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opt"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:4067-0:238:2604":{"id":"b:2:4067-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4065:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4069:1888"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2930-0:216:2867":{"id":"b:2:2930-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2928:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2932:29482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:276:3084":{"id":"0:276:3084","crate_id":0,"name":"OptimalFit","span":{"filename":"src/wrap_algorithms.rs","begin":[57,4],"end":[57,25]},"visibility":"default","docs":"Wrap words using an advanced algorithm with look-ahead.\n\nThis wrapping algorithm considers the entire paragraph to find\noptimal line breaks. When wrapping text, \"penalties\" are\nassigned to line breaks based on the gaps left at the end of\nlines. See [`Penalties`] for details.\n\nThe underlying wrapping algorithm is implemented by\n[`wrap_optimal_fit()`], please see that function for examples.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"`Penalties`":"0:248:3063","`wrap_optimal_fit()`":"0:67:3061"},"attrs":["#[cfg(feature = \"smawk\")]"],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:278:2049"]},"discriminant":null}}},"0:331:501":{"id":"0:331:501","crate_id":0,"name":"clone","span":{"filename":"src/options.rs","begin":[7,16],"end":[7,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:36220:250-0:316:2601":{"id":"a:2:36220:250-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:36220:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3455:4786-0:264:3062":{"id":"a:2:3455:4786-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3455:4786","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:825:4300":{"id":"5:825:4300","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216:2867":{"id":"0:216:2867","crate_id":0,"name":"Word","span":{"filename":"src/core.rs","begin":[239,0],"end":[248,1]},"visibility":"public","docs":"A piece of wrappable text, including any trailing whitespace.\n\nA `Word` is an example of a [`Fragment`], so it has a width,\ntrailing whitespace, and potentially a penalty item.","links":{"`Fragment`":"0:10:2856"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:218:2870","0:219:2872","0:220:2874"],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:17","a:2:36220:250-0:216:2867","a:2:3420:262-0:216:2867","a:2:3455:4786-0:216:2867","a:2:36279:4630-0:216:2867","a:2:46106:10740-0:216:2867","a:2:46107:10942-0:216:2867","b:2:2872-0:216:2867","b:2:2875-0:216:2867","b:2:2930-0:216:2867","b:2:3187-0:216:2867","b:2:3191-0:216:2867","b:2:3197-0:216:2867","b:2:3202-0:216:2867","b:2:4067-0:216:2867","b:5:822-0:216:2867","0:222","0:225","0:227","0:230","0:232","0:235","0:14","0:25"]}}},"b:2:4067-0:332:2603":{"id":"b:2:4067-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4065:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4069:1888"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3455:4786-0:316:2601":{"id":"a:2:3455:4786-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3455:4786","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:138:868":{"id":"0:138:868","crate_id":0,"name":"from","span":{"filename":"src/options.rs","begin":[51,4],"end":[53,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["width",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:37:837":{"id":"0:37:837","crate_id":0,"name":"fmt","span":{"filename":"src/word_splitters.rs","begin":[102,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:11091:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:11072:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2874:3352":{"id":"2:2874:3352","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:822-0:316:2601":{"id":"b:5:822-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:818:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:824:4299","5:825:4300","5:826:4948"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:333:3604":{"id":"0:333:3604","crate_id":0,"name":"AsciiSpace","span":{"filename":"src/word_separators.rs","begin":[55,4],"end":[55,14]},"visibility":"default","docs":"Find words by splitting on runs of `' '` characters.\n\n# Examples\n\n```\nuse textwrap::core::Word;\nuse textwrap::WordSeparator::AsciiSpace;\n\nlet words = AsciiSpace.find_words(\"Hello   World!\").collect::<Vec<_>>();\nassert_eq!(words, vec![Word::from(\"Hello   \"),\n                       Word::from(\"World!\")]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:4067-0:248:3063":{"id":"b:2:4067-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4065:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4069:1888"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,9],"end":[22,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:255:501"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:46107:10942-0:273:2605":{"id":"a:2:46107:10942-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:46107:10942","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:149:3021":{"id":"0:149:3021","crate_id":0,"name":"word_splitter","span":{"filename":"src/options.rs","begin":[274,4],"end":[279,5]},"visibility":"public","docs":"Change [`self.word_splitter`]. The [`WordSplitter`] is used to\nfit part of a word into the current line when wrapping text.\n\nSee [`Options::break_words`] instead if you want to control the\nhandling of words longer than the line width.\n\n# Examples\n\n```\nuse textwrap::{wrap, Options, WordSplitter};\n\n// The default is WordSplitter::HyphenSplitter.\nlet options = Options::new(5);\nassert_eq!(wrap(\"foo-bar-baz\", &options),\n           vec![\"foo-\", \"bar-\", \"baz\"]);\n\n// The word is now so long that break_words kick in:\nlet options = Options::new(5)\n    .word_splitter(WordSplitter::NoHyphenation);\nassert_eq!(wrap(\"foo-bar-baz\", &options),\n           vec![\"foo-b\", \"ar-ba\", \"z\"]);\n\n// If you want to breaks at all, disable both:\nlet options = Options::new(5)\n    .break_words(false)\n    .word_splitter(WordSplitter::NoHyphenation);\nassert_eq!(wrap(\"foo-bar-baz\", &options),\n           vec![\"foo-bar-baz\"]);\n```\n\n[`self.word_splitter`]: #structfield.word_splitter","links":{"`WordSplitter`":"0:238:2604","`Options::break_words`":"0:146:2899"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["word_splitter",{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:46107:10942-0:332:2603":{"id":"a:2:46107:10942-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:46107:10942","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,9],"end":[185,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:116:2599":{"id":"0:116:2599","crate_id":0,"name":"indent","span":{"filename":"src/indentation.rs","begin":[52,0],"end":[75,1]},"visibility":"public","docs":"Indent each line by the given prefix.\n\n# Examples\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\"First line.\\nSecond line.\\n\", \"  \"),\n           \"  First line.\\n  Second line.\\n\");\n```\n\nWhen indenting, trailing whitespace is stripped from the prefix.\nThis means that empty lines remain empty afterwards:\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\"First line.\\n\\n\\nSecond line.\\n\", \"  \"),\n           \"  First line.\\n\\n\\n  Second line.\\n\");\n```\n\nNotice how `\"\\n\\n\\n\"` remained as `\"\\n\\n\\n\"`.\n\nThis feature is useful when you want to indent text and have a\nspace between your prefix and the text. In this case, you _don't_\nwant a trailing space on empty lines:\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\"foo = 123\\n\\nprint(foo)\\n\", \"# \"),\n           \"# foo = 123\\n#\\n# print(foo)\\n\");\n```\n\nNotice how `\"\\n\\n\"` became `\"\\n#\\n\"` instead of `\"\\n# \\n\"` which\nwould have trailing whitespace.\n\nLeading and trailing whitespace coming from the text itself is\nkept unchanged:\n\n```\nuse textwrap::indent;\n\nassert_eq!(indent(\" \\t  Foo   \", \"->\"), \"-> \\t  Foo   \");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["prefix",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:8016:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200-0:100:2596":{"id":"0:200-0:100:2596","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[224,0],"end":[224,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"columns::wrap_columns","name":"wrap_columns","id":"0:100:2596","glob":false}}},"0:322:2899":{"id":"0:322:2899","crate_id":0,"name":"break_words","span":{"filename":"src/options.rs","begin":[22,4],"end":[22,25]},"visibility":"public","docs":"Allow long words to be broken if they cannot fit on a line.\nWhen set to `false`, some lines may be longer than\n`self.width`. See the [`Options::break_words`] method.","links":{"`Options::break_words`":"0:146:2899"},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"b:2:2872-0:264:3062":{"id":"b:2:2872-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2866:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:3352"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:243:2979":{"id":"0:243:2979","crate_id":0,"name":"Custom","span":{"filename":"src/word_splitters.rs","begin":[88,4],"end":[88,40]},"visibility":"default","docs":"Use a custom function as the word splitter.\n\nThis variant lets you implement a custom word splitter using\nyour own function.\n\n# Examples\n\n```\nuse textwrap::WordSplitter;\n\nfn split_at_underscore(word: &str) -> Vec<usize> {\n    word.match_indices('_').map(|(idx, _)| idx + 1).collect()\n}\n\nlet word_splitter = WordSplitter::Custom(split_at_underscore);\nassert_eq!(word_splitter.split_points(\"a_long_identifier\"),\n           vec![2, 7]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:245:2049"]},"discriminant":null}}},"b:2:3191-0:238:2604":{"id":"b:2:3191-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:868"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:55:1222":{"id":"0:55:1222","crate_id":0,"name":"new","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[141,4],"end":[149,5]},"visibility":"public","docs":"Default penalties for monospace text.\n\nThe penalties here work well for monospace text. This is\nbecause they expect the gaps at the end of lines to be roughly\nin the range `0..100`. If the gaps are larger, the\n`overflow_penalty` and `hyphen_penalty` become insignificant.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:11:2782":{"id":"0:11:2782","crate_id":0,"name":"width","span":{"filename":"src/core.rs","begin":[223,4],"end":[223,27]},"visibility":"default","docs":"Displayed width of word represented by this fragment.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3202-0:273:2605":{"id":"b:2:3202-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3205:150","2:3206:1873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219:2872":{"id":"0:219:2872","crate_id":0,"name":"whitespace","span":{"filename":"src/core.rs","begin":[243,4],"end":[243,27]},"visibility":"public","docs":"Whitespace to insert if the word does not fall at the end of a line.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"a:2:3420:262-0:248:3063":{"id":"a:2:3420:262-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3420:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2875-0:264:3062":{"id":"b:2:2875-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2869:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2877:3350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[125,0],"end":[157,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2964:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:165:732"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[170,0],"end":[200,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:169:1222","0:170:3605"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms.rs","begin":[35,16],"end":[35,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3415:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[185,16],"end":[185,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:36222:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:169:1222":{"id":"0:169:1222","crate_id":0,"name":"new","span":{"filename":"src/word_separators.rs","begin":[176,4],"end":[186,5]},"visibility":"public","docs":"Create a new word separator.\n\nThe best available algorithm is used by default, i.e.,\n[`WordSeparator::UnicodeBreakProperties`] if available,\notherwise [`WordSeparator::AsciiSpace`].","links":{"`WordSeparator::UnicodeBreakProperties`":"0:335:4083","`WordSeparator::AsciiSpace`":"0:333:3604"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[22,16],"end":[22,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3415:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3455:4786-0:216:2867":{"id":"a:2:3455:4786-0:216:2867","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3455:4786","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:252:3333":{"id":"0:252:3333","crate_id":0,"name":"short_last_line_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[128,4],"end":[128,38]},"visibility":"public","docs":"Penalty for a last line with a single short word.\n\nSet this to zero if you do not want to penalize short last lines.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:50:2587":{"id":"0:50:2587","crate_id":0,"name":"wrap_algorithms","span":{"filename":"src/wrap_algorithms.rs","begin":[1,0],"end":[413,1]},"visibility":"public","docs":"Word wrapping algorithms.\n\nAfter a text has been broken into words (or [`Fragment`]s), one\nnow has to decide how to break the fragments into lines. The\nsimplest algorithm for this is implemented by\n[`wrap_first_fit()`]: it uses no look-ahead and simply adds\nfragments to the line as long as they fit. However, this can lead\nto poor line breaks if a large fragment almost-but-not-quite fits\non a line. When that happens, the fragment is moved to the next\nline and it will leave behind a large gap.\n\nA more advanced algorithm, implemented by [`wrap_optimal_fit()`],\nwill take this into account. The optimal-fit algorithm considers\nall possible line breaks and will attempt to minimize the gaps\nleft behind by overly short lines.\n\nWhile both algorithms run in linear time, the first-fit algorithm\nis about 4 times faster than the optimal-fit algorithm.","links":{"`Fragment`":"0:10:2856","`wrap_optimal_fit()`":"0:67:3061","`wrap_first_fit()`":"0:92:3129"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:73-0:67:3061","0:74-0:264:3062","0:75-0:248:3063","0:273:2605","0:92:3129"],"is_stripped":false}}},"0:249:3267":{"id":"0:249:3267","crate_id":0,"name":"nline_penalty","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[26,4],"end":[26,28]},"visibility":"public","docs":"Per-line penalty. This is added for every line, which makes it\nexpensive to output more lines than the minimum required.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:4067-0:289:2600":{"id":"b:2:4067-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4065:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4069:1888"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:203-0:113:2597":{"id":"0:203-0:113:2597","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[225,21],"end":[225,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"fill::fill_inplace","name":"fill_inplace","id":"0:113:2597","glob":false}}},"0:274:3075":{"id":"0:274:3075","crate_id":0,"name":"FirstFit","span":{"filename":"src/wrap_algorithms.rs","begin":[42,4],"end":[42,12]},"visibility":"default","docs":"Wrap words using a fast and simple algorithm.\n\nThis algorithm uses no look-ahead when finding line breaks.\nImplemented by [`wrap_first_fit()`], please see that function\nfor details and examples.","links":{"`wrap_first_fit()`":"0:92:3129"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:218:2870":{"id":"0:218:2870","crate_id":0,"name":"word","span":{"filename":"src/core.rs","begin":[241,4],"end":[241,21]},"visibility":"public","docs":"Word content.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"b:2:2872-0:238:2604":{"id":"b:2:2872-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2866:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:3352"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3197-0:248:3063":{"id":"b:2:3197-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3167:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:150","2:3201:1875"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3420:262-0:238:2604":{"id":"a:2:3420:262-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3420:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2930-0:332:2603":{"id":"b:2:2930-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2928:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:29482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:292:3773":{"id":"0:292:3773","crate_id":0,"name":"LF","span":{"filename":"src/line_ending.rs","begin":[15,4],"end":[15,6]},"visibility":"default","docs":"_Line feed_ – a line ending historically used in Unix.\n Corresponds to the ASCII control character `0x0A` or `\\n`","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:166":{"id":"0:166","crate_id":0,"name":null,"span":{"filename":"src/word_separators.rs","begin":[159,0],"end":[168,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:167:837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:501"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:16:661":{"id":"0:16:661","crate_id":0,"name":"deref","span":{"filename":"src/core.rs","begin":[253,4],"end":[255,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3654:128","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3202-0:238:2604":{"id":"b:2:3202-0:238:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3205:150","2:3206:1873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[194,0],"end":[194,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","provide","cause"],"trait":{"name":"Error","id":"2:3250:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[7,16],"end":[7,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:331:501"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3202-0:264:3062":{"id":"b:2:3202-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3205:150","2:3206:1873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2932:29482":{"id":"2:2932:29482","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:732":{"id":"0:165:732","crate_id":0,"name":"eq","span":{"filename":"src/word_separators.rs","begin":[149,4],"end":[156,5]},"visibility":"default","docs":"Compare two word separators.\n\n```\nuse textwrap::WordSeparator;\n\nassert_eq!(WordSeparator::AsciiSpace, WordSeparator::AsciiSpace);\n#[cfg(feature = \"unicode-linebreak\")] {\n    assert_eq!(WordSeparator::UnicodeBreakProperties,\n               WordSeparator::UnicodeBreakProperties);\n}\n```\n\nNote that `WordSeparator::Custom` values never compare equal:\n\n```\nuse textwrap::WordSeparator;\nuse textwrap::core::Word;\nfn word_separator(line: &str) -> Box<dyn Iterator<Item = Word<'_>> + '_> {\n    Box::new(line.split_inclusive(' ').map(Word::from))\n}\nassert_ne!(WordSeparator::Custom(word_separator),\n           WordSeparator::Custom(word_separator));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:822-0:248:3063":{"id":"b:5:822-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:818:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:824:4299","5:825:4300","5:826:4948"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3191-0:264:3062":{"id":"b:2:3191-0:264:3062","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OverflowError","id":"0:264:3062","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:868"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:289:2600":{"id":"0:289:2600","crate_id":0,"name":"LineEnding","span":{"filename":"src/line_ending.rs","begin":[8,0],"end":[16,1]},"visibility":"public","docs":"Supported line endings. Like in the Rust standard library, two line\nendings are supported: `\\r\\n` and `\\n`","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:290:3770","0:292:3773"],"impls":["0:121","a:2:36220:250-0:289:2600","a:2:3420:262-0:289:2600","a:2:3455:4786-0:289:2600","a:2:36279:4630-0:289:2600","a:2:46106:10740-0:289:2600","a:2:46107:10942-0:289:2600","b:2:2872-0:289:2600","b:2:2875-0:289:2600","b:2:2930-0:289:2600","b:2:3187-0:289:2600","b:2:3191-0:289:2600","b:2:3197-0:289:2600","b:2:3202-0:289:2600","b:2:4067-0:289:2600","b:5:822-0:289:2600","0:294","0:296","0:297","0:299","0:300","0:302"]}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/options.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:328:837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:822-0:289:2600":{"id":"b:5:822-0:289:2600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:818:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:824:4299","5:825:4300","5:826:4948"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:46106:10740-0:273:2605":{"id":"a:2:46106:10740-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:46106:10740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:4067-0:316:2601":{"id":"b:2:4067-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4065:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4069:1888"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,9],"end":[238,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:224:837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:301:732":{"id":"0:301:732","crate_id":0,"name":"eq","span":{"filename":"src/line_ending.rs","begin":[7,29],"end":[7,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248:3063":{"id":"0:248:3063","crate_id":0,"name":"Penalties","span":{"filename":"src/wrap_algorithms/optimal_fit.rs","begin":[23,0],"end":[132,1]},"visibility":"public","docs":"Penalties for\n[`WrapAlgorithm::OptimalFit`](crate::WrapAlgorithm::OptimalFit)\nand [`wrap_optimal_fit`].\n\nThis wrapping algorithm in [`wrap_optimal_fit`] considers the\nentire paragraph to find optimal line breaks. When wrapping text,\n\"penalties\" are assigned to line breaks based on the gaps left at\nthe end of lines. The penalties are given by this struct, with\n[`Penalties::default`] assigning penalties that work well for\nmonospace text.\n\nIf you are wrapping proportional text, you are advised to assign\nyour own penalties according to your font size. See the individual\npenalties below for details.\n\n**Note:** Only available when the `smawk` Cargo feature is\nenabled.","links":{"crate::WrapAlgorithm::OptimalFit":"0:276:3084","`wrap_optimal_fit`":"0:67:3061","`Penalties::default`":"0:57:60"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:249:3267","0:250:3298","0:251:3330","0:252:3333","0:253:3335"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:54","a:2:36220:250-0:248:3063","a:2:3420:262-0:248:3063","a:2:3455:4786-0:248:3063","a:2:36279:4630-0:248:3063","a:2:46106:10740-0:248:3063","a:2:46107:10942-0:248:3063","b:2:2872-0:248:3063","b:2:2875-0:248:3063","b:2:2930-0:248:3063","b:2:3187-0:248:3063","b:2:3191-0:248:3063","b:2:3197-0:248:3063","b:2:3202-0:248:3063","b:2:4067-0:248:3063","b:5:822-0:248:3063","0:254","0:256","0:257","0:259","0:260","0:262","0:56"]}}},"a:2:46106:10740-0:248:3063":{"id":"a:2:46106:10740-0:248:3063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:46106:10740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Penalties","id":"0:248:3063","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:325:3021":{"id":"0:325:3021","crate_id":0,"name":"word_splitter","span":{"filename":"src/options.rs","begin":[32,4],"end":[32,35]},"visibility":"public","docs":"The method for splitting words. This can be used to prohibit\nsplitting words on hyphens, or it can be used to implement\nlanguage-aware machine hyphenation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::WordSplitter","id":"0:238:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:32:2586":{"id":"0:32:2586","crate_id":0,"name":"word_splitters","span":{"filename":"src/word_splitters.rs","begin":[1,0],"end":[314,1]},"visibility":"public","docs":"Word splitting functionality.\n\nTo wrap text into lines, long words sometimes need to be split\nacross lines. The [`WordSplitter`] enum defines this\nfunctionality.","links":{"`WordSplitter`":"0:238:2604"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:238:2604","0:44:3020"],"is_stripped":false}}},"0:142:2591":{"id":"0:142:2591","crate_id":0,"name":"line_ending","span":{"filename":"src/options.rs","begin":[114,4],"end":[119,5]},"visibility":"public","docs":"Change [`self.line_ending`]. This specifies which of the\nsupported line endings should be used to break the lines of the\ninput text.\n\n# Examples\n\n```\nuse textwrap::{refill, LineEnding, Options};\n\nlet options = Options::new(15).line_ending(LineEnding::CRLF);\nassert_eq!(refill(\"This is a little example.\", options),\n           \"This is a\\r\\nlittle example.\");\n```\n\n[`self.line_ending`]: #structfield.line_ending","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["line_ending",{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316:2601":{"id":"0:316:2601","crate_id":0,"name":"Options","span":{"filename":"src/options.rs","begin":[8,0],"end":[33,1]},"visibility":"public","docs":"Holds configuration options for wrapping and filling text.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:318:2782","0:319:2591","0:320:3557","0:321:3799","0:322:2899","0:323:3634","0:324:3807","0:325:3021"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:139","a:2:36220:250-0:316:2601","a:2:3420:262-0:316:2601","a:2:3455:4786-0:316:2601","a:2:36279:4630-0:316:2601","a:2:46106:10740-0:316:2601","a:2:46107:10942-0:316:2601","b:2:2872-0:316:2601","b:2:2875-0:316:2601","b:2:2930-0:316:2601","b:2:3187-0:316:2601","b:2:3191-0:316:2601","b:2:3197-0:316:2601","b:2:3202-0:316:2601","b:2:4067-0:316:2601","b:5:822-0:316:2601","0:326","0:329","0:133","0:136"]}}},"0:207-0:289:2600":{"id":"0:207-0:289:2600","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[227,0],"end":[227,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"line_ending::LineEnding","name":"LineEnding","id":"0:289:2600","glob":false}}},"0:20:2889":{"id":"0:20:2889","crate_id":0,"name":"break_apart","span":{"filename":"src/core.rs","begin":[286,4],"end":[325,5]},"visibility":"public","docs":"Break this word into smaller words with a width of at most\n`line_width`. The whitespace and penalty from this `Word` is\nadded to the last piece.\n\n# Examples\n\n```\nuse textwrap::core::Word;\nassert_eq!(\n    Word::from(\"Hello!  \").break_apart(3).collect::<Vec<_>>(),\n    vec![Word::from(\"Hel\"), Word::from(\"lo!  \")]\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Self"}}}],["line_width",{"primitive":"usize"}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8881:190","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'b"}]},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2875-0:273:2605":{"id":"b:2:2875-0:273:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2869:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WrapAlgorithm","id":"0:273:2605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2877:3350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/core.rs","begin":[238,16],"end":[238,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3415:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Word","id":"0:216:2867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/line_ending.rs","begin":[7,16],"end":[7,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3415:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LineEnding","id":"0:289:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:36279:4630-0:316:2601":{"id":"a:2:36279:4630-0:316:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36279:4630","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Options","id":"0:316:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:36220:250-0:332:2603":{"id":"a:2:36220:250-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:36220:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3197-0:332:2603":{"id":"b:2:3197-0:332:2603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3167:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WordSeparator","id":"0:332:2603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:150","2:3201:1875"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}}},"paths":{"2:3000:207":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:1598:8547":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:6718:9195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"2:46348:208":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:48994:240":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:777:8029":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:46097:5114":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:6462:25204":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:13085:5931":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"2:51232:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:1490:8485":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:37736:4862":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:5458:8921":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:5651:1016":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:16025:6535":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:10577:5706":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:14903:6224":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:7777:7522":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:16406:6654":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:26594:7771":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"7:79:24186":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:51135:7982":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:0:4456":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:8161:29865":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:3171:272":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:486:8422":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:25521:10823":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"9:176:9981":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:9088:8071":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:3155:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:9575:8243":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:51527:7996":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:3441:6845":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:3878:4884":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:12811:497":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:7130:37178":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:4043:8061":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"5:7797:37266":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:12562:7728":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"9:501:7467":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:12835:1005":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:51946:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"16:5085:6865":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"5:6342:7517":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:44368:35384":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:25831:7759":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:12830:1919":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:6891:8102":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:15873:6495":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"22:79:5314":{"crate_id":22,"path":["unicode_linebreak","BreakClass"],"kind":"enum"},"2:50252:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:3167:273":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:51247:7986":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"17:11216:38945":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:9277:36656":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"6:1522:8498":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:42896:4877":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:5479:8936":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:14601:7747":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:50295:7952":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"11:2530:24268":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:11734:5763":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"6:7424:9325":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:48338:7817":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"22:0:2607":{"crate_id":22,"path":["unicode_linebreak"],"kind":"module"},"2:47836:7885":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:12126:5808":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:12403:5842":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:11230:8140":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:51079:7980":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:1626:8572":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:8936:8205":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"16:2772:6809":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:48972:9541":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"16:8503:7268":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:43475:4878":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"16:6123:6825":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:5131:8070":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:35007:4804":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:5279:8839":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:48796:9628":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:36186:7801":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:44516:7821":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"5:3393:7404":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:9726:8247":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:8018:9419":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"5:2348:9609":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:6852:7015":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:11146:4618":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:7855:4901":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:43559:4883":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:11721:5762":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:3203:150":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:6640:6969":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"2:3415:121":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:10626:8038":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:2834:8048":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:3164:157":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:1084:7388":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:13934:6030":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:7342:9290":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:10156:25264":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:827:122":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:5318:6873":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:51639:8000":{"crate_id":2,"path":["core","core_arch","simd","u16x64"],"kind":"struct"},"2:50868:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:26162:10823":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"5:7952:7526":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:4955:8726":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:44544:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"11:893:7390":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:4452:9632":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"16:8612:6841":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"5:7980:7529":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"5:8039:7534":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:8277:9435":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:2435:5710":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:46670:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:46185:7862":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"1:4480:10908":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:5590:458":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:12829:923":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:4810:6857":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:466:8411":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:4464:10433":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:14794:6206":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:1531:8503":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:6574:9130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:36309:4789":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:11688:36124":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"14:190:24284":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"11:728:7381":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:44602:7826":{"crate_id":2,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"1:5808:8080":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:50155:7947":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:12286:7718":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:11069:38942":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:8179:7217":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:697:8028":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:11390:10827":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"5:2211:7494":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"18:608:5525":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:43908:17772":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:11738:9551":{"crate_id":1,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"5:8004:7532":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:5248:10930":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"11:2415:7380":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:46054:4901":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:5844:8082":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:2294:17839":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"6:5374:8873":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:12793:5896":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:2506:6797":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:48304:7910":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:11132:133":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:7378:9306":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:3788:4616":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"5:3998:7492":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:11609:5755":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"6:5309:8855":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:11334:38946":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:12964:5915":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:6044:233":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:14016:17868":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:12548:7727":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:8493:7492":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:10208:25266":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:7495:7115":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:43555:4881":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:9672:248":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:8464:8045":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:12950:5914":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:12816:1753":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:12599:9901":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:44612:7832":{"crate_id":2,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"17:15931:6509":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:11355:169":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:8903:8068":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:36190:7177":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"2:50211:7949":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:47948:7894":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:12399:29705":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"6:7558:9390":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:25322:36896":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"18:651:5508":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:13126:5730":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"1:9388:8228":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:761:5067":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:7919:7197":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:16203:6600":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"5:5163:230":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:1063:7382":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:14158:6079":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:8267:7227":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"11:874:7388":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:51888:8010":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:48800:9629":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:9033:8217":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:8829:4628":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:14643:6169":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:8745:4985":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:11555:36122":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"2:5370:17762":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:43647:227":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:25804:10823":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"16:6876:7018":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:8444:152":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:14460:6141":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"11:2384:7394":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"17:16686:6724":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:47614:7716":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:47404:7879":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:46010:206":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:8485:8146":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:51036:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"11:2586:38922":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:25352:10823":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"6:4965:8729":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:5273:8836":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:5160:5593":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"6:7318:9273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:4751:17752":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:728:10732":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"11:1927:7405":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:8477:8144":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:44592:5562":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"11:345:9607":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:9596:29690":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:48784:9625":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:4834:10911":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:3158:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:4356:10890":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:48472:7920":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:36222:259":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"5:2869:9461":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:6669:9177":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:44443:17767":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"16:6098:6887":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:5113:6866":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:12220:5816":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"5:1442:7392":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:6544:9107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"0:32:2586":{"crate_id":0,"path":["textwrap","word_splitters"],"kind":"module"},"2:25305:36893":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:15880:6496":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"1:7011:10973":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"11:760:7382":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:12087:5801":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:45938:7855":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:1970:8036":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:4493:10435":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:5578:8970":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"0:238:2604":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter"],"kind":"enum"},"16:6042:6824":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:3528:5584":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:3167:8051":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:16080:6550":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:5611:8982":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:12755:5893":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"0:239:2960":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter","NoHyphenation"],"kind":"variant"},"2:44565:17939":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"18:113:10404":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:2904:36119":{"crate_id":2,"path":["core","clone","uninit","InitializingSlice"],"kind":"struct"},"6:8271:9434":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:7629:9900":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:11524:8228":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:8528:7271":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:8041:9430":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:36312:279":{"crate_id":2,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"1:12834:1895":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:16728:6735":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"18:0:4458":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:45950:8064":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"16:7058:7037":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:9115:8223":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:10607:5556":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:5689:6879":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:50491:7959":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:9375:8227":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:12167:8122":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:51907:8011":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:3695:155":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:5126:4598":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:46334:4901":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:1747:7406":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:1585:8540":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"11:829:7490":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:51838:8008":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:12406:8125":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:47197:4609":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:47928:7892":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:51624:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:51120:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:12391:5841":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:51808:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:44799:4992":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"6:6517:9100":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:4294:10885":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:2570:6800":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:51148:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:3575:8056":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:10836:5713":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"2:46278:239":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"5:3323:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:15040:10756":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:4873:6859":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:3577:8057":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:5052:8775":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:5436:8905":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:14011:17869":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:5327:8862":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:11907:5782":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:15733:6457":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:16341:6636":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:6718:233":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:7282:7088":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:994:7399":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"5:8016:258":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:14876:6221":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:2185:210":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:45804:10865":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:7549:9387":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:3413:278":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:14817:6215":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:1495:8487":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:3692:154":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"21:27:4950":{"crate_id":21,"path":["unicode_width","UnicodeWidthStr"],"kind":"trait"},"15:405:24304":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:6904:7021":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:1633:8576":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"11:2435:7399":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:11134:4611":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:4929:6861":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"5:328:4085":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"16:6680:6989":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"16:2880:6814":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:3455:4786":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:50855:7972":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:48826:135":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:7838:25211":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:8654:5022":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"11:1084:24272":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:7716:38931":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:9232:5019":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:15204:6276":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:15584:6431":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:4243:10883":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:45215:7692":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"17:13249:5939":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:6670:8084":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:16308:6629":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:16657:6018":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"6:5541:8951":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"5:928:7484":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:7921:10747":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:3419:7407":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"3:766:7540":{"crate_id":3,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"2:46066:5113":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:9799:8039":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"17:15665:6443":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:2640:6803":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:52034:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"17:11118:38943":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:25809:11012":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"16:8066:25212":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:9524:8234":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:11660:5730":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:14437:6138":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"18:698:5541":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:4732:37188":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:9708:8116":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:6408:6930":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:5727:5706":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"9:237:7875":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:45253:5012":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:13965:6034":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:1067:7385":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:2083:5062":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:12247:10438":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:11136:4610":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:46446:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:12430:29863":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"1:8787:8195":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"9:356:24208":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:6205:25202":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:903:5564":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"1:11247:8254":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"1:10517:7852":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:46849:4611":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:49056:35517":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"6:6800:9220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:8699:177":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:5794:8076":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:6641:9164":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:44531:7823":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:14184:6084":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:11558:5749":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:6567:7757":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:5453:8075":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:36204:4596":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:8049:10036":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"18:680:5538":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:9010:7875":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:14591:6163":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:12767:5894":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"5:1580:7399":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:12235:5819":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"16:8105:7215":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:15975:6523":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:47610:9621":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:4065:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:8300:10738":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:15540:6426":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:50715:7967":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:10640:5557":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:14482:6148":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:14916:6225":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:2432:8044":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:14116:6064":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"18:726:5550":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:47382:169":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:4178:7401":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:11138:4619":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:6615:8096":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"11:1904:4901":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:44880:4982":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:49035:7936":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"18:754:5555":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:3689:153":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:26645:35363":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:15888:6497":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"5:7992:7531":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:26692:7784":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:8151:6839":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:2584:10807":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:12520:7725":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:8363:9455":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:50392:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:10565:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:9921:7707":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:8225:8027":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"11:413:10421":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:36772:4856":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:5005:8748":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"5:3146:37387":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:3522:4865":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:11017:8054":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"2:50967:7976":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:26908:7796":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"2:7326:9614":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:15134:6263":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:11603:174":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:37881:4867":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:15462:6384":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:4700:8067":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:12028:5791":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"0:216:2867":{"crate_id":0,"path":["textwrap","core","Word"],"kind":"struct"},"17:15940:6512":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:12842:25406":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:10559:25277":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:25354:11010":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"16:7401:38930":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:14740:217":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:12413:8125":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:48534:7921":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:13310:25279":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:9448:8232":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"18:531:5512":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:50463:7958":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:26538:7764":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:14840:6216":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:16830:6759":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:4472:10434":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:50435:7957":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:3294:5066":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"6:7473:9336":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:15019:6243":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:3893:159":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:15949:6513":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:13213:5936":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"2:45972:7700":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:8410:8138":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"0:243:2979":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter","Custom"],"kind":"variant"},"6:6741:9200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"17:12627:5883":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:3534:8055":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:50911:7974":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:12207:5815":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:44657:4974":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:48667:7931":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:42262:4875":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:2119:820":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:1199:7392":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:9639:199":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"16:7416:7100":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:2750:704":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:50883:7973":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"5:2421:9612":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:8008:3712":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:12837:1471":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:13139:5932":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"7:32:24179":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:13774:7720":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:51789:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:48776:9623":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:6583:29849":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:1590:8542":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:2430:151":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:43572:226":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:44717:4986":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:8165:6829":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:3398:37384":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:6028:6821":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:51583:7998":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:50756:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:12061:5793":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:44778:4991":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:520:5571":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:45271:5016":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"18:623:38952":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:43735:7809":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:11763:5767":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:1735:7404":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:981:7380":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:5074:10900":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:3006:214":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:15804:6478":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:7372:6831":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"18:706:5543":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:5204:8804":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:5060:4595":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:9048:10955":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:34606:5141":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:3420:262":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:46707:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:51484:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:317:5564":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:11874:5753":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:15519:6421":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:26241:17825":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"2:50980:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:6887:5007":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:546:8459":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:3987:5611":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"2:51275:7987":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"2:48441:7917":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:12822:773":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:3478:8052":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:1726:7401":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:16367:6645":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:5656:9008":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:554:8464":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:11491:5743":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:15180:5917":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:13598:5964":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"1:8945:10941":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"11:1160:7397":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:6837:7013":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:15997:6528":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:565:8469":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:47159:4607":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"16:8000:6836":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:2530:6798":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:47412:7880":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:5757:6880":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:51976:8014":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:5687:133":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:6625:6967":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:43687:4885":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:5570:8968":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:50659:7965":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"5:5750:17857":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:13477:17954":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:12904:5911":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:6738:38929":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:16876:6040":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"2:26056:11089":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:36311:118":{"crate_id":2,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"2:51555:7997":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:52026:8016":{"crate_id":2,"path":["core","core_arch","x86","__m256h"],"kind":"struct"},"16:3110:6842":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:12731:5891":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:15041:6254":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:7371:9302":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:52072:8018":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:38400:4871":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:46038:7380":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:52053:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:1954:729":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:12192:9636":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:6942:7024":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:8792:10864":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:37669:4860":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:6866:25206":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:6750:9202":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:6051:8084":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:44357:7811":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"3:751:7539":{"crate_id":3,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"1:12147:8275":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:8877:8204":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:14897:119":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:597:5572":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:13706:5977":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:50532:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:12860:5588":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"18:598:38950":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:16856:6763":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"6:5213:8809":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:7596:9409":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:2295:10807":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"1:11259:8060":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"16:3695:6847":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:46203:7863":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"17:12568:5878":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:11673:5759":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"5:1930:7490":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"5:2401:37269":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:4080:7490":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:13736:5981":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:5630:8996":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:8035:10035":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"2:47137:35453":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"2:46107:10942":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:4812:10910":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:49002:220":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:1354:5575":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:25320:36894":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"11:2168:7394":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"11:0:4452":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"6:4945:8720":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:5684:9018":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:9644:8099":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"11:818:7401":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:15054:6255":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:7331:9613":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:25407:11006":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:5828:8081":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:5413:8895":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:16231:6607":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:7497:9347":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:11511:8227":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:51896:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:47082:9529":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:16052:6542":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:4728:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:12293:5828":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:12996:5919":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:8137:6838":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:10289:25268":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"5:7936:7516":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:3434:34036":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:50700:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:49117:7943":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:5496:8942":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"6:6775:9211":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"2:50924:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"16:5224:6870":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:4241:6852":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:50728:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:26561:7769":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:43724:7546":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"6:5096:8789":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"5:5312:9632":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:7521:7122":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:51260:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:11268:29735":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:13697:7737":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:1059:7381":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:9417:8231":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"11:2475:7401":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:16712:6730":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"17:11508:5746":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"1:10806:32055":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"1:4545:8065":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:8321:8137":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:9409:7380":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:6768:9210":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"1:10645:8256":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:2869:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:13334:5666":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:13842:6008":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:6337:6917":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:43511:4880":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"14:40:6005":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"5:3867:7399":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"5:6222:7401":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:12534:7726":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:46237:227":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"5:1657:7382":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:2224:1408":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:25533:7760":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"5:3139:4299":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:44436:7818":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:15758:6466":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:52045:8017":{"crate_id":2,"path":["core","core_arch","x86","__m512h"],"kind":"struct"},"17:14449:6140":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:3135:17771":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"13:125:38925":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:498:8427":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:42152:4873":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"16:2660:6804":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:3425:4602":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:16676:6723":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"1:12828:942":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:16007:6531":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"6:1508:8493":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:1235:5573":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:46557:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:2990:6819":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:11140:4620":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"5:1272:37386":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:26397:7761":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:2486:6796":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:12278:5824":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:25531:11007":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:14063:6051":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:14371:6127":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:5502:8944":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:26897:7795":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:51316:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:50687:7966":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:5015:8755":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:5255:6871":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:34568:5139":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:2766:17826":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"2:13080:7730":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1:1217:7398":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:44396:7815":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"11:1584:24273":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:15775:6471":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:15395:6329":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:1456:7398":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:12198:9637":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:8121:223":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:50280:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:45005:4998":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:2435:24340":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"1:8422:8140":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"16:8711:7290":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:3462:4788":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"5:1292:10430":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:8318:9444":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:46372:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:50183:7948":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:26703:10867":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"5:7738:5402":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:5678:9016":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:1565:7380":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:5144:6867":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:2764:17825":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"11:2568:8392":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:10898:8226":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"18:635:5530":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:40276:4872":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"19:0:1338":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:43609:225":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:11582:5753":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:5194:8797":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:15983:6526":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:12453:25382":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:322:5565":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"16:4902:6860":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:12831:1901":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:8058:7213":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:48980:176":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:51667:8001":{"crate_id":2,"path":["core","core_arch","simd","i32x32"],"kind":"struct"},"17:13654:5970":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:13119:17836":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:15685:6451":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:14087:6055":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:2600:10812":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:457:8023":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:11475:25291":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:12270:8061":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:1552:8518":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:7787:7523":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"17:12099:5805":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:5331:10937":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"11:862:10753":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:12479:7724":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:10886:5714":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:9431:8086":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:8565:7276":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:50071:7944":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"16:7016:7033":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"16:2748:6808":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:5379:6875":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"6:579:8477":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"5:4013:7494":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:7959:7208":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:50743:7968":{"crate_id":2,"path":["core","core_arch","simd","f16x8"],"kind":"struct"},"1:5982:9227":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:10411:25272":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:492:8424":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:15617:6434":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"11:855:7385":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:14851:6218":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:0:4457":{"crate_id":17,"path":["object"],"kind":"module"},"17:11206:5729":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:3888:269":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:12826:930":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:3532:8054":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:37196:4858":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:45263:5014":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:2969:147":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:11337:8229":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"16:6084:6882":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:51400:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:14343:6123":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"2:14765:7752":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:7528:9373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"18:481:5506":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:8283:9436":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:45029:5000":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:1165:37178":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:8258:5849":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:11276:29737":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:4917:4586":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"6:4800:8630":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:7471:7114":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:3747:5586":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:36280:4790":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:5263:10931":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:7424:25209":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:6823:9226":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:14865:6220":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:8708:4629":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:3981:10866":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:13225:5937":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"16:6421:6775":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:45229:5007":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"5:2222:7495":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"17:13495:5956":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:6058:8085":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:6199:8093":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:50336:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"5:7819:223":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:5914:8083":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"18:521:29475":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:51984:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:12764:8279":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:3239:127":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:7401:9324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:15829:6483":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:4956:6862":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:313:37178":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:11749:5765":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:6111:6892":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:6165:8088":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"15:0:4455":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:5135:8792":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:8723:150":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:16041:6538":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:12594:5881":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"6:5403:8889":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:7259:7087":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:6429:9052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:10647:8255":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"12:0:4453":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:12833:1913":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:25964:11008":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:8669:7177":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:3715:7494":{"crate_id":5,"path":["alloc","collections","btree","set","CursorMut"],"kind":"struct"},"2:45791:7699":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:1004:4901":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:25334:36897":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:38227:4869":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:34633:35371":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1:4249:10882":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:7969:7209":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:2006:8038":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:1501:8490":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:13405:5950":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:48405:17881":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:7326:9278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:10827:5709":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"16:6781:7006":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:1041:7380":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"0:279:2979":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm","Custom"],"kind":"variant"},"2:8230:5003":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"6:5470:8930":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:6302:6914":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"6:4850:8667":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:13266:25278":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:12649:5729":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:5637:8999":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:5077:8788":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:45238:5009":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:26930:7798":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"11:691:7380":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:8567:8147":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:11542:29738":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:2398:25337":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"11:850:7400":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:3854:7380":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:45916:35389":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:47109:9538":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"17:15150:6265":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:4961:9321":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"1:11305:8083":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"17:12071:5795":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"1:1741:7405":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:11157:5728":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"0:29:2899":{"crate_id":0,"path":["textwrap","core","break_words"],"kind":"function"},"16:7223:7075":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"5:4719:9632":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"6:6676:9178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:539:8456":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:14617:6166":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:8329:9448":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:47827:7883":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"11:1600:7402":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:8220:10823":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:14604:6164":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:13006:25407":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"16:2920:6816":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:12181:8124":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:50112:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:914:10868":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"17:14716:6179":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:26630:35362":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:3731:8196":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:7587:9406":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:11064:5849":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"17:14402:6134":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:14099:6056":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:11108:5727":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:4:1303":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:11352:5732":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"0:273:2605":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm"],"kind":"enum"},"16:2590:6801":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:50448:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:47846:7886":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:26679:7783":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:6701:9186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"17:15896:6498":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:47967:7895":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"16:6573:6961":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:8403:5006":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:50616:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:44420:7817":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"9:0:4450":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:8775:7907":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:2029:8039":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"16:2900:6815":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:12237:7380":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:12820:5898":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:2870:8047":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:47893:4974":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:25288:36888":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"6:5594:8975":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:10261:25267":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"11:2601:7525":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:6808:6820":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"9:446:24193":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"9:391:24194":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"5:4524:7380":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:47597:9539":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"2:47176:150":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:4957:9317":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"17:14390:6132":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"5:7325:17901":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"2:36144:8396":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:50099:7945":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:12415:5843":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:10317:25269":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:6531:9101":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:48285:7908":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"13:272:8391":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:26227:11095":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:44808:4979":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:2840:6812":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:51372:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:7066:8108":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"2:11127:123":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:50308:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:48455:7919":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:51800:8006":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:13509:3614":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"15:338:9968":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:524:8447":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:3654:128":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:14889:6223":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:14920:7757":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"5:968:10754":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"5:5477:7517":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:51743:8003":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:15068:6256":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:7835:7524":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:3668:5010":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:16376:6649":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:6173:6896":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:2186:703":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:48243:7906":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:14196:6087":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:50995:7977":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:14977:6235":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:5422:8075":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:13515:5588":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:2638:9457":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"16:4267:6853":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:48320:7818":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:16355:6643":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:15646:6442":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:12941:5913":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:51163:7983":{"crate_id":2,"path":["core","core_arch","simd","f16x16"],"kind":"struct"},"2:51008:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:1012:7383":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:50840:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:6172:8092":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:50224:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"5:7965:17939":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:7441:9326":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:48619:7922":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"0:0:2606":{"crate_id":0,"path":["textwrap"],"kind":"module"},"6:6733:9199":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"2:51499:7995":{"crate_id":2,"path":["core","core_arch","simd","f16x32"],"kind":"struct"},"6:5666:9009":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"1:9364:211":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:8306:10779":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:11546:5748":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"16:5348:6874":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:5985:10961":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:15963:6520":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:12717:5887":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:12832:1907":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:26831:7789":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"17:16262:6615":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:486:5567":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:474:8416":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:14946:6230":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:11130:123":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:12975:5917":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:3527:4866":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"21:0:2608":{"crate_id":21,"path":["unicode_width"],"kind":"module"},"17:13027:25408":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:13050:5926":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"11:2501:7490":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"6:5649:9005":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:8626:7283":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:8469:8143":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"6:6780:9212":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"1:1208:7394":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:14328:6118":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:2497:7545":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:12884:5906":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:46856:4619":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:7573:9397":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"11:1043:7392":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:2586:10808":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:12913:5956":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"21:21:2781":{"crate_id":21,"path":["unicode_width","UnicodeWidthChar"],"kind":"trait"},"17:14630:6167":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:5303:8852":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:51611:7999":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:45756:182":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:34600:5140":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:12836:1983":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:47394:7875":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:50239:7950":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:6892:9241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:2426:5580":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"6:1515:8495":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:12831:5899":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"16:8598:7281":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"14:7:7368":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:11695:36126":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"17:12269:5823":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"16:2684:6805":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"11:451:10424":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:8432:8141":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:3816:10843":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:50812:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:11596:5754":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:25276:36888":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:5860:116":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:1668:8601":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:10904:151":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:50196:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:14045:6050":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:9682:8115":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"16:5060:6864":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:3250:150":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:26864:7792":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"2:51877:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"3:0:532":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:5428:8900":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"16:896:6782":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"1:2848:29818":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:8781:8193":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:11362:38947":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:13253:150":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:1627:7384":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:26672:9618":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:25425:7760":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:13393:5949":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:48275:7907":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:8852:8193":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"5:1668:223":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:7212:7074":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"0:3:591":{"crate_id":0,"path":["textwrap","core"],"kind":"module"},"11:1125:7396":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:2796:6810":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:16772:6746":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"11:447:10423":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:4148:8063":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"16:7949:6834":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"18:563:5517":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:3480:8053":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:9884:7706":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"14:31:7368":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:14643:4990":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"1:1719:7380":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:12824:768":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"2:46128:5112":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"9:481:24192":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:7807:38933":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:3519:7490":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:16176:6588":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:5559:8962":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:7996:9418":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:50784:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:5147:8793":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"5:7747:4901":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:4987:234":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:46318:7380":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:9401:8229":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:47767:7881":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:9959:151":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:25303:36891":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:2724:6807":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"11:1920:7404":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:8320:25214":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:10138:25263":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:15990:6527":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"11:2358:7392":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:16421:6655":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:16063:6543":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:4120:6849":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"5:3385:7406":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:15108:6261":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:13099:5753":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:26190:17825":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"6:7464:9333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:13559:25281":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:51303:7988":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"16:6368:6768":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"11:1745:168":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:47980:7898":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:1073:10753":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"5:1024:10755":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:48171:7903":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"6:0:1041":{"crate_id":6,"path":["libc"],"kind":"module"},"1:9511:8233":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:46145:7861":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"2:44727:146":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:11969:5787":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:7386:7097":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:1427:7394":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:5257:8828":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:3359:7405":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:12141:8117":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:48225:7905":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:15813:6479":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:3881:5587":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:44321:7674":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:5643:9002":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:8716:8060":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:3440:34181":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:4883:8691":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:8725:10822":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:49067:7941":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:50799:7970":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:8265:9433":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:11831:5775":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:44428:7674":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:6749:6780":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:1048:7490":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:44831:4994":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:14982:164":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:16564:6679":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"6:480:8419":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:587:8481":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:48007:5562":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:10592:5707":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:51869:8009":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:14227:123":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"5:7315:17900":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:47867:7888":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:6927:9266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"11:805:7384":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:7135:246":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:46409:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:4824:8647":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"0:10:2856":{"crate_id":0,"path":["textwrap","core","Fragment"],"kind":"trait"},"2:50267:7951":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:13862:6018":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:3749:8059":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:10151:218":{"crate_id":2,"path":["core","pin","PinCoerceUnsized"],"kind":"trait"},"2:50560:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:10821:5708":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"17:14171:6083":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:13591:5963":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"6:4929:8716":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:12337:5833":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:4922:8712":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:11585:9546":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2:26312:11086":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:2193:5136":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:6397:9632":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:50896:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"0:241:2970":{"crate_id":0,"path":["textwrap","word_splitters","WordSplitter","HyphenSplitter"],"kind":"variant"},"1:11403:29853":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:51092:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:11921:5729":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:3587:6846":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"2:44632:10789":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"22:188:5300":{"crate_id":22,"path":["unicode_linebreak","BreakOpportunity"],"kind":"enum"},"1:9475:10977":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:26820:7788":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"2:51471:7994":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:47357:7868":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:5198:6869":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:4308:10887":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:14618:7750":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"2:25413:11009":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:50603:7963":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:44755:7836":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:12895:5910":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"6:5420:1290":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:7305:7089":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:4904:8700":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:11395:7715":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:2928:4793":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"17:16223:6606":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:6391:8084":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:12368:7721":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:13736:7739":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:8259:9432":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"18:573:5508":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:14713:36706":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:44686:4985":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:51596:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:4992:8742":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:12387:8276":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:16128:6587":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:6364:18218":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:6310:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:26176:11094":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"16:4152:6850":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"16:5172:6868":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:52007:8015":{"crate_id":2,"path":["core","core_arch","x86","__m128h"],"kind":"struct"},"6:6483:9078":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:10068:25262":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:44870:4997":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:5034:10910":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:5173:8795":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"11:123:9603":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:12930:5912":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"16:5282:6872":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:1540:8509":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:4442:10432":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:14577:5851":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:8585:7278":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:26100:11090":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:3672:4604":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"2:13493:7731":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:11444:5739":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"5:2318:7496":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"11:2157:7392":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:25962:10823":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"5:1528:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:8881:190":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:16866:6035":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"17:13350:5947":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:11464:5742":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:4898:8698":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:26452:7762":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:11570:5752":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:3308:6787":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:48850:7933":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:14002:6040":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:51288:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:51965:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"5:3724:7495":{"crate_id":5,"path":["alloc","collections","btree","set","CursorMutKey"],"kind":"struct"},"2:46863:4620":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"5:41:10763":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:7465:37237":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:6794:7007":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"14:205:17883":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:12985:5918":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"7:0:1973":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:4877:8690":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:1054:7400":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:5154:10897":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:8881:9306":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:13953:6031":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:5709:25200":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:7554:25210":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:5615:215":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:11550:9540":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"16:7508:7119":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:9460:10978":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:780:8031":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:15709:6455":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"16:155:6766":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:45222:4608":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:9563:8241":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"16:7980:6835":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:11429:25290":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:2602:10813":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:46137:7709":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:13036:5923":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"11:1105:38923":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:6151:266":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"5:7490:37241":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"8:0:4449":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:12331:8063":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:8209:9431":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"18:80:10400":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:45778:7697":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:13801:6004":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"14:168:24277":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:9490:10979":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:12818:1878":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:11382:4179":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:11397:29852":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:42207:4874":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:44699:4976":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:6064:6826":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"11:2248:5798":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2:10747:36657":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:6421:9050":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:14264:6089":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:11320:29701":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:5319:8858":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"0:274:3075":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm","FirstFit"],"kind":"variant"},"18:643:5508":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:15821:6481":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:6502:24312":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:10772:5561":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:14128:6067":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"16:7907:7196":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:6159:6893":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"9:329:8400":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"5:4484:9632":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:37535:4863":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"14:163:7368":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:50504:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"5:6911:7401":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:11568:8116":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:5117:4597":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:7614:9412":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:51957:8013":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:14782:6204":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:14027:6042":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"14:223:7376":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:7731:5113":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:14656:6171":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:12379:5840":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"13:0:4447":{"crate_id":13,"path":["std_detect"],"kind":"module"},"6:1644:8584":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:7168:7062":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:51064:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:571:8472":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:6912:9255":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:4959:9319":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"11:381:10419":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:36279:4630":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:9667:247":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:8415:8139":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:11916:29856":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"1:11240:152":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"1:7697:10436":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:49105:7412":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:3636:4879":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:44708:4977":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:43667:229":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:16253:6613":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:1618:7383":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:10530:25276":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"2:48808:9540":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:8223:7219":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:47938:7893":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"5:1677:7489":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:6244:8094":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"11:705:7399":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:14419:6137":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:12041:5792":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:586:29816":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:11221:8248":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"11:316:9604":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:8826:8064":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:11020:38941":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:14752:6185":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:14961:6234":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:16385:6651":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:785:10735":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:12350:5835":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"2:50407:7956":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:4996:4588":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:13636:5967":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:26919:7797":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"2:12049:10823":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:51387:7991":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:11635:5690":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:4912:10928":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:0:327":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:3161:175":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:51344:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:5239:10929":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:51051:7979":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:8306:9442":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:14942:7758":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"17:15080:6257":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:25405:10823":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:51428:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:0:1779":{"crate_id":1,"path":["std"],"kind":"module"},"17:14014:6041":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:5449:6877":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:12179:5813":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:3141:5598":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:13763:5989":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:38054:4868":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"5:1596:4901":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:8340:9449":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"16:8636:25215":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:6536:9102":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:51331:7989":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:34621:4607":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:14504:6149":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:2625:10820":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"1:3797:33693":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:11820:5773":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"17:13163:5933":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:45015:4999":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:9988:131":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"2:26783:10823":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"17:13058:5928":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"6:4972:8732":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"11:1621:7403":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:11894:5781":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:8029:7533":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:52064:2158":{"crate_id":2,"path":["core","core_arch","x86","bf16"],"kind":"struct"},"17:10971:5725":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"6:6648:9165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:9616:9544":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:681:5489":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:13825:6005":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:15165:6269":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:13535:5958":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:51708:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:8844:8200":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:13201:5935":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"6:6662:9176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:4653:37188":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:48804:9630":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:50084:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:868:166":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:48329:7674":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:6609:9151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:3889:5603":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:8762:5562":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:14551:6155":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:3698:9632":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:50631:7964":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:7008:8104":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:5609:7679":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:47121:7246":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:48644:7923":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:11945:5786":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:51204:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:47151:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:4770:17753":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"20:15:5078":{"crate_id":20,"path":["smawk","Matrix"],"kind":"trait"},"9:53:9971":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:4626:8066":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"16:7990:7210":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:6787:9213":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"1:3806:10821":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"16:5742:5707":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:8024:9421":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:13047:7729":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"17:11500:5745":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"1:6407:233":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:15856:6487":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:9583:8245":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:10339:25270":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:15908:6504":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:2550:6799":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:14696:6176":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:7192:25208":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:16189:6594":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:9238:5020":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:8577:10856":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:43717:4887":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:5044:8770":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:2457:5583":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:12310:8062":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:48125:7725":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:15797:6477":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:5070:4596":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:12014:5790":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:7337:7093":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:9229:162":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"18:491:5507":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:12329:7720":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:50476:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:46213:223":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"6:5515:8949":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"5:6777:11097":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"2:43587:223":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:6256:6906":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:14991:6237":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:12109:5806":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:11649:5729":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:4910:8703":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:6914:7022":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"11:1908:7401":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:11776:25311":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"17:15920:6505":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:46842:4610":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"0:92:3129":{"crate_id":0,"path":["textwrap","wrap_algorithms","wrap_first_fit"],"kind":"function"},"17:15601:6433":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:15745:6460":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:11800:25312":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:10981:38940":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:49077:192":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:51176:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"18:735:29473":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:50672:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"16:2860:6813":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"0:44:3020":{"crate_id":0,"path":["textwrap","word_splitters","split_words"],"kind":"function"},"17:11059:5726":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"16:7350:7095":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:51695:8002":{"crate_id":2,"path":["core","core_arch","simd","u32x32"],"kind":"struct"},"2:48021:7718":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"16:8096:7214":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:26610:35361":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:51023:7978":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:13429:5951":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:6843:7014":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:2704:6806":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:3014:24341":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:1712:8619":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:6503:9089":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"5:1256:10429":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:8774:134":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:5342:8866":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"17:12260:5822":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:11205:9635":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:7598:29860":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"5:1636:7400":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:15630:6439":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"18:689:5540":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:8688:158":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:1752:7407":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:6886:9240":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:917:202":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:10789:116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"1:1025:7384":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:14564:6158":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:8546:7273":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:44554:7824":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:4991:4587":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:4352:10889":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:12077:7875":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"11:2594:8397":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:47997:7899":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:51191:7984":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:6710:9192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"2:2918:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:4869:4606":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:6269:6907":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:1185:7125":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"11:1178:7398":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:4998:8745":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:9535:8237":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:16285:6628":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:4302:10886":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:10182:25265":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:5690:9021":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:11265:5730":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:2620:6802":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:6589:4978":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:3625:10851":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:14075:6054":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:16327:6634":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:2950:6817":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:12614:5882":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:11142:219":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:8405:5647":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:6475:4989":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:48633:17882":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:51751:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:3905:4889":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:48654:7927":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:11014:8052":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:52015:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"17:12304:25381":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"6:5232:8817":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:13777:5990":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:533:8453":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:5499:216":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:51938:8012":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"5:1646:7381":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:27495:249":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"6:5290:8847":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:26853:7791":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"6:7458:9331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:5490:8941":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:8312:9443":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:5334:5595":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:11275:25292":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:13915:6025":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:12838:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:4947:10887":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:42317:4876":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"11:102:9602":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:6188:6897":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:2966:6818":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:12827:936":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:22:853":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:3497:4859":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:12001:5789":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:11072:239":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:12152:5811":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:9348:8224":{"crate_id":1,"path":["std","pipe","PipeReader"],"kind":"struct"},"2:12441:7723":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:7075:25207":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:5383:8879":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:13977:6035":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:50547:7961":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:6929:8103":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:1723:4901":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:10375:25271":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:13189:5934":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"6:6453:9068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:10752:9989":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:4716:7676":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:5485:8939":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:11296:8268":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"5:1826:37178":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:16017:6534":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:45244:5010":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:13679:5971":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:44482:7820":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"3:355:239":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:44580:7825":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:14527:6154":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:560:8467":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:50379:7955":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:48143:7726":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:15:2988":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:2188:209":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:51568:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:2112:5063":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:48772:9622":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:16758:6743":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"5:3142:9460":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:1570:8528":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:11073:4616":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"6:7360:9297":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:26886:7794":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"17:15723:6456":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:11622:5757":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:3437:34180":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:26586:7770":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:11020:8056":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"18:589:5518":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:3724:4882":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:3519:4864":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"2:46483:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:12870:5901":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:26188:37120":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"2:47991:7733":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"5:1411:7125":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"5:4359:7399":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"11:2580:8394":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:2308:10715":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:16783:6751":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2:8113:4983":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"6:1691:8611":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:51680:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:12669:5884":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:26284:11085":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:36220:250":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:13237:5938":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:51827:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:2866:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:11827:7464":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:2303:7541":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:4704:7675":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"5:3947:37178":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:47365:7870":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:3577:4870":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:7320:4980":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:2247:5576":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:7578:8245":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:5238:8820":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:1564:8526":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:4837:8657":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:6781:198":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:2292:17838":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:46106:10740":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:44327:7810":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:11696:5760":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:14066:17875":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:11210:8139":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"17:14379:6129":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:4813:8639":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:8298:7231":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:0:591":{"crate_id":2,"path":["core"],"kind":"module"},"2:4620:9632":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"6:5601:8977":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:11833:36127":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"16:8233:25213":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:8463:4585":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:8106:5489":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:47373:7871":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:14930:6228":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:46594:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:16599:6709":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:16805:6753":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"16:6984:6840":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:8043:38936":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:51540:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:8353:9453":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:4280:10884":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:46046:7399":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:48313:7740":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:3922:36333":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:13020:5921":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"16:6890:6822":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:9358:8226":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"16:5417:6876":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:46258:225":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"5:7755:7521":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:7363:11004":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"9:423:24195":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"18:613:38951":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:6957:37178":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:4694:6855":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:48189:7904":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:44821:4993":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:7765:7156":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:48792:9627":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"5:6012:17899":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:6822:25205":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"16:6658:6983":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"11:2401:7410":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"11:2334:7125":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"1:2659:4464":{"crate_id":1,"path":["std","io"],"kind":"module"},"6:5549:8956":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:4837:4605":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:1038:7401":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:2349:133":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"1:12823:789":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:11284:8204":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"1:9353:8225":{"crate_id":1,"path":["std","pipe","PipeWriter"],"kind":"struct"},"1:7953:32103":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:1972:8037":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:11144:4617":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:16242:6612":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:16538:5990":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:14143:6073":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:49043:7938":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:9652:9632":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"1:4364:10892":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:10560:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"16:6239:6901":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:2612:10818":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"20:0:2060":{"crate_id":20,"path":["smawk"],"kind":"module"},"17:14356:6125":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"1:8768:7718":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:16215:6603":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:50127:7946":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:2450:6788":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:7938:7205":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:463:8025":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:6490:9080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:11200:9633":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:3937:115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:12153:8121":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:7767:7401":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:6389:6923":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:14005:5543":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:2372:201":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:8458:131":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"11:505:166":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:6633:9163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:8838:10909":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"0:9:2846":{"crate_id":0,"path":["textwrap","core","display_width"],"kind":"function"},"17:15007:6241":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"6:5027:8761":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:12806:5897":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:34333:10869":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"18:718:5547":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:13989:6038":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"6:6472:9070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"5:4638:282":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:13471:5954":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"2:5148:4599":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:48977:163":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:6953:7025":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:5076:10901":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:8650:5023":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:13614:25249":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:51770:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"17:16700:6728":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"5:7039:4901":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"5:6475:9632":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:8707:8185":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:51415:7992":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:26522:9615":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:1676:8602":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:50588:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:50168:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:13114:5729":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"17:16070:6545":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"5:243:7481":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:12825:948":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:640:9899":{"crate_id":1,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"16:6608:219":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:2909:8050":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:5395:8884":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"11:1913:7490":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:26842:7790":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"16:6440:25203":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:8116:8126":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:48568:7742":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:12814:1363":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:11091:156":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:9690:174":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:47906:7890":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:5649:6878":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"14:0:4454":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:615:10715":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:16429:6658":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"6:6391:9025":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:2820:6811":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:6491:29845":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:15094:6258":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:26572:35359":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:10461:25274":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:37468:4622":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:7417:281":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"14:217:7374":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:51359:7990":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:48426:7912":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:9104:8222":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"11:368:10416":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"17:16443:6661":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:3201:239":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:5031:10932":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:4284:7401":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:1704:8615":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"6:1658:8595":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:9966:8138":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"6:6726:9198":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"1:8755:4998":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:48861:17981":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"6:6690:9183":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:16842:6762":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"5:3352:7380":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:6696:6992":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:44383:7814":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:12139:5810":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:12581:5879":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"10:36:8399":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:3815:224":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:25843:36899":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:15454:6381":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:5249:8824":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"4:0:4448":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"11:1069:7394":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"5:5705:37178":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:4311:4901":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:8209:6827":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:5557:36111":{"crate_id":2,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"2:51512:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:12796:29734":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:5072:10898":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:518:8444":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:9542:29689":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:48295:7909":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:10485:25275":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"5:3364:37383":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:46326:7399":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"11:1025:7125":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:546:6773":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:8858:8202":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"2:48984:232":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"18:515:5505":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:12324:5831":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:4889:8693":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:11167:38944":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:2467:6790":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:44746:4988":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"11:901:7391":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"18:538:5515":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:5059:8777":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:26317:11084":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:46631:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:45990:7703":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:8698:5006":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:48089:7902":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:6682:9181":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:51915:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:51819:8007":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"18:659:5531":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:12743:5892":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:15121:6262":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:15699:6454":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:12248:5820":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:13882:6019":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:51846:9542":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"5:7827:7492":{"crate_id":5,"path":["alloc","collections","btree","set","Cursor"],"kind":"struct"},"17:13072:5930":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"11:1934:7406":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:2415:24313":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:8023:10034":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"2:44650:7833":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"16:8014:6837":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:3048:24342":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"5:4686:9632":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:8240:8130":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:8294:9440":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:6144:25201":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:7479:9337":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:26138:11091":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:26507:7763":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:44856:4996":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:6970:6823":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:15783:6474":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:47092:4607":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:25266:4804":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"18:507:5508":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:5179:4600":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:13720:7738":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:47856:7887":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:5263:8830":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:16033:6537":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:13898:6023":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:15575:6427":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:6554:9114":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"18:765:29474":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:5754:17858":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:48788:9626":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:9677:8114":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"2:13994:7708":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:12406:7722":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:50364:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:4937:8718":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:51107:7981":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:11848:5778":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:2439:10804":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:4983:6863":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"5:7863:4901":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:8028:7211":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"11:2455:4901":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:51762:8004":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:26270:10823":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:8179:10431":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:50952:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:4342:10888":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:15475:6391":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:13945:10802":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"5:7291:17899":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:11995:5788":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:12812:1941":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"5:761:7483":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"5:3150:37388":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"18:581:4804":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:3841:194":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:12780:9991":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:16551:6004":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"1:1096:7391":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:12051:5646":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:5225:8816":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"11:792:7383":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:51443:7993":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:12363:5838":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:44406:7816":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:7542:7124":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:45832:9528":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"6:1685:8608":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:10866:5566":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:5187:8796":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:16745:6737":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"16:4766:6856":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:5159:8794":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:4978:8734":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:7030:7035":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:6833:9229":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:1697:8612":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:26875:7793":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:7080:8112":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"1:1090:7390":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:10938:29854":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:50323:7953":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:8962:5488":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:2758:8046":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:36211:7803":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:50939:7975":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:46520:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:12193:5814":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"11:2141:7125":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:4984:8737":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:14313:6114":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:1730:7490":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:12436:5845":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"6:7351:9296":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"16:4184:6851":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:50644:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"16:6998:7026":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:2100:9632":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"5:6724:18226":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"17:15330:6278":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"11:718:4901":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"6:6447:9065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"11:1694:9897":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:10739:5560":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:3134:10823":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:34980:208":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:516:197":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:11401:25289":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:8286:10737":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:3899:4886":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"5:3140:37389":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:36221:252":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"5:8124:7490":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"16:7044:6828":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:44737:4987":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:13660:7734":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:3126:24343":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:12809:440":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:7789:38932":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:44787:5001":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:37602:4861":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:12815:354":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"5:924:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:14736:6180":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"11:2574:8393":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:11759:8274":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:50827:7971":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:4046:8062":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:7126:5002":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:50140:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:3507:4857":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:11292:8137":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:46744:7713":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:8235:8128":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"10:0:4451":{"crate_id":10,"path":["adler"],"kind":"module"},"2:10902:4608":{"crate_id":2,"path":["core","fmt","builders","FromFn"],"kind":"struct"},"1:11646:9547":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:44677:4975":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:9529:119":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:36197:7802":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"6:5333:8863":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:1728:8624":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"11:1900:7380":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:12810:1218":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:12261:7399":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:10034:7708":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:10846:5562":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:12780:5895":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:15593:6432":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:43627:228":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:8114:4984":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:15359:6298":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:13442:5953":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:15483:6392":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:16819:6757":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"16:3834:6848":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:5449:8915":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"16:4844:6858":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:47919:7891":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:12078:5798":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:12817:1787":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:673:10721":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:2031:8040":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:2964:213":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"10:44:7414":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:36984:4855":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:51219:7985":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:5296:8850":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:5065:8779":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:6713:6993":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:50420:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:10706:5559":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"5:7811:4901":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:44840:4995":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:8300:9441":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:14684:6175":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:6588:6964":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"2:48039:7723":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:16639:6008":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"16:8483:7267":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:9425:4901":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:12785:10739":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:5528:8950":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"17:10437:25273":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:7520:10032":{"crate_id":1,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"16:6731:7003":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:5365:8869":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"1:1591:168":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"16:7883:6934":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:9570:8242":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:5349:8867":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:11861:5779":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:4314:37178":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:11518:25292":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"15:299:10408":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:7159:7061":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:11347:165":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"6:5033:8764":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:5115:8790":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"0:276:3084":{"crate_id":0,"path":["textwrap","wrap_algorithms","WrapAlgorithm","OptimalFit"],"kind":"variant"},"2:50771:7969":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:51456:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:51781:8005":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"5:818:265":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:46029:185":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:9971:29850":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"16:7462:7111":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:26941:7799":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"16:7358:6830":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:3974:132":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"5:6758:11096":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:13987:17867":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"18:96:10401":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:13366:25280":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:44769:4990":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:6758:9203":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"2:50519:7960":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:48685:7743":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:16794:6752":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"16:908:5565":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"5:5604:17855":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"18:548:165":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:12821:770":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"17:15192:6272":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:5389:8881":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:3492:4621":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:12166:5812":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"5:7910:7525":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:13581:5917":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"11:1940:7407":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:6621:9156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:6459:9069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:49094:7942":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:9098:7380":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:8833:9631":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:3683:4627":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"0:50:2587":{"crate_id":0,"path":["textwrap","wrap_algorithms"],"kind":"module"},"17:14671:6174":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:51652:9542":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:12062:253":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:10673:5558":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"5:8140:7536":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:8011:10033":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"15:317:10412":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:5357:8868":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"17:11324:5731":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:44523:7822":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:8572:2979":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"18:670:5537":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:48780:9624":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:50351:7954":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:5125:8791":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"5:2197:7492":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:50575:7962":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:3667:4603":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:11181:8265":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"2:1966:5273":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"2:48071:7901":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:47818:7882":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:4404:6854":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:12692:5885":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:29895:284":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"}},"external_crates":{"20":{"name":"smawk","html_root_url":"https://docs.rs/smawk/0.3.2/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"unicode_linebreak","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"unicode_width","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":33}