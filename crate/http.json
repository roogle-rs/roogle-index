{"root":"0:0:1700","crate_version":"0.2.8","includes_private":false,"index":{"2:13781:150":{"id":"2:13781:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13782:181","2:13783:150","2:13784:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1518:1802":{"id":"0:1518:1802","crate_id":0,"name":"body","span":{"filename":"src/response.rs","begin":[409,4],"end":[411,5]},"visibility":"public","docs":"Returns a reference to the associated HTTP body.\n\n# Examples\n\n```\n# use http::*;\nlet response: Response<String> = Response::default();\nassert!(response.body().is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1585:4145":{"id":"0:1585:4145","crate_id":0,"name":"as_u16","span":{"filename":"src/status.rs","begin":[119,4],"end":[121,5]},"visibility":"public","docs":"Returns the `u16` corresponding to this `StatusCode`.\n\n# Note\n\nThis is the same as the `From<StatusCode>` implementation, but\nincluded as an inherent method because that implementation doesn't\nappear in rustdocs, as well as a way to force the type instead of\nrelying on inference.\n\n# Example\n\n```\nlet status = http::StatusCode::OK;\nassert_eq!(status.as_u16(), 200);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3292":{"id":"0:3292","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[25,32],"end":[25,36]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3278:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13416":{"id":"2:13416","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12513:1338","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13417:793","2:13418:2160","2:13419:13413","2:13420:63232","2:13422:63233","2:13425:2580","2:13426:63234","2:13427:304","2:13428:59379","2:13429:2200","2:13431:2211","2:13433:4151","2:13435:59378","2:13437:6494","2:13438:63235","2:13439:59398","2:13440:59399","2:13441:5380","2:13442:6811","2:13443:1697","2:13444:13624","2:13445:13622","2:13446:7457","2:13447:63236","2:13448:13364","2:13449:3369","2:13452:59413","2:13455:59414","2:13458:2203","2:13462:4731","2:13466:4760","2:13469:13623","2:13472:59408","2:13475:63237","2:13478:63238","2:13481:59410","2:13484:4757","2:13487:63239","2:13490:63240","2:13493:5163","2:13496:63241","2:13499:63242","2:13502:63243","2:13505:63244","2:13507:63245","2:13509:63246","2:13511:63247","2:13512:63248","2:13513:63249","2:13516:63250","2:13519:13020","2:13522:59415","2:13525:63251","2:13528:63252","2:13531:63253","2:13534:3611","2:13536:7170","2:13537:3435","2:13538:57187","2:13539:57188","2:13540:63254","2:13542:6471","2:13543:63255"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3309:5286":{"id":"2:3309:5286","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3098:3795":{"id":"0:3098:3795","crate_id":0,"name":"Builder","span":{"filename":"src/response.rs","begin":[209,0],"end":[211,1]},"visibility":"public","docs":"An HTTP response builder\n\nThis type can be used to construct an instance of `Response` through a\nbuilder-like pattern.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1535","a:2:3268:211-0:3098:3795","a:2:3280:220-0:3098:3795","a:2:3309:5286-0:3098:3795","a:2:9258:5489-0:3098:3795","a:2:9259:5488-0:3098:3795","b:2:3197-0:3098:3795","b:2:2868-0:3098:3795","b:2:3201-0:3098:3795","b:2:4001-0:3098:3795","b:2:3207-0:3098:3795","b:2:2871-0:3098:3795","b:2:3212-0:3098:3795","0:3100","0:1562"]}},"0:1513:3862":{"id":"0:1513:3862","crate_id":0,"name":"version_mut","span":{"filename":"src/response.rs","begin":[335,4],"end":[337,5]},"visibility":"public","docs":"Returns a mutable reference to the associated version.\n\n# Examples\n\n```\n# use http::*;\nlet mut response: Response<()> = Response::default();\n*response.version_mut() = Version::HTTP_2;\nassert_eq!(response.version(), Version::HTTP_2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13493:5163":{"id":"2:13493:5163","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:16005:5087","`DoubleEndedIterator`":"2:8447:120","str::matches":"1:16011:5092","self::pattern":"2:13053:5351"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49663:5369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1259:3698":{"id":"0:1259:3698","crate_id":0,"name":"is_idempotent","span":{"filename":"src/method.rs","begin":[162,4],"end":[167,5]},"visibility":"public","docs":"Whether a method is considered \"idempotent\", meaning the request has\nthe same result if executed multiple times.\n\nSee [the spec](https://tools.ietf.org/html/rfc7231#section-4.2.2) for\nmore words.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2382":{"id":"0:2382","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[194,0],"end":[194,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::version::Version","name":"Version","id":"0:3283:1688","glob":false}},"2:2887:104":{"id":"2:2887:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2888:408","2:2889:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2772:1927":{"id":"0:2772:1927","crate_id":0,"name":"ORIGIN","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates where a fetch originates from.\n\nIt doesn't include any path information, but only the server name. It is\nsent with CORS requests, as well as with POST requests. It is similar to\nthe Referer header, but, unlike this header, it doesn't disclose the\nwhole path.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2296:1679":{"id":"0:2296:1679","crate_id":0,"name":"extensions","span":{"filename":"src/extensions.rs","begin":[1,0],"end":[250,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3357:1680"],"is_stripped":true}},"0:1253:3681":{"id":"0:1253:3681","crate_id":0,"name":"CONNECT","span":{"filename":"src/method.rs","begin":[91,4],"end":[91,48]},"visibility":"public","docs":"CONNECT","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:13528:63252":{"id":"2:13528:63252","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:16005:5087","self::pattern":"2:13053:5351"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:3102:1686":{"id":"b:2:3201-0:3102:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:951":{"id":"0:951","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[79,55],"end":[79,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::ValueIterMut","name":"ValueIterMut","id":"0:2521:1874","glob":false}},"0:2744:1899":{"id":"0:2744:1899","crate_id":0,"name":"CONNECTION","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Controls whether or not the network connection stays open after the\ncurrent transaction finishes.\n\nIf the value sent is keep-alive, the connection is persistent and not\nclosed, allowing for subsequent requests to the same server to be done.\n\nExcept for the standard hop-by-hop headers (Keep-Alive,\nTransfer-Encoding, TE, Connection, Trailer, Upgrade, Proxy-Authorization\nand Proxy-Authenticate), any hop-by-hop headers used by the message must\nbe listed in the Connection header, so that the first proxy knows he has\nto consume them and not to forward them further. Standard hop-by-hop\nheaders can be listed too (it is often the case of Keep-Alive, but this\nis not mandatory.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1269":{"id":"0:1269","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[209,0],"end":[214,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1270:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3346:6129":{"id":"2:3346:6129","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3348:181","2:3349:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6084:63877":{"id":"5:6084:63877","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1992","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:5850","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1992","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:5850","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2160:604":{"id":"0:2160:604","crate_id":0,"name":"eq","span":{"filename":"src/uri/mod.rs","begin":[1000,4],"end":[1002,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13422:63233":{"id":"2:13422:63233","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:16011:5092"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1445:3868":{"id":"0:1445:3868","crate_id":0,"name":"headers_mut","span":{"filename":"src/request.rs","begin":[969,4],"end":[971,5]},"visibility":"public","docs":"Get headers on this request builder.\n\nWhen builder has error returns None.\n\n# Example\n\n```\n# use http::{header::HeaderValue, Request};\nlet mut req = Request::builder();\n{\n  let headers = req.headers_mut().unwrap();\n  headers.insert(\"Accept\", HeaderValue::from_static(\"text/html\"));\n  headers.insert(\"X-Custom-Foo\", HeaderValue::from_static(\"bar\"));\n}\nlet headers = req.headers_ref().unwrap();\nassert_eq!( headers[\"Accept\"], \"text/html\" );\nassert_eq!( headers[\"X-Custom-Foo\"], \"bar\" );\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"0:2392:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1017":{"id":"0:1017","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[99,4],"end":[99,7]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::AGE","name":"AGE","id":"0:2739:1894","glob":false}},"0:1270:604":{"id":"0:1270:604","crate_id":0,"name":"eq","span":{"filename":"src/method.rs","begin":[211,4],"end":[213,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2104:1002":{"id":"0:2104:1002","crate_id":0,"name":"path","span":{"filename":"src/uri/mod.rs","begin":[439,4],"end":[445,5]},"visibility":"public","docs":"Get the path of this `Uri`.\n\nBoth relative and absolute URIs contain a path component, though it\nmight be the empty string. The path component is **case sensitive**.\n\n```notrust\nabc://username:password@example.com:123/path/data?key=value&key2=value2#fragid1\n                                       |--------|\n                                            |\n                                          path\n```\n\nIf the URI is `*` then the path component is equal to `*`.\n\n# Examples\n\nA relative URI\n\n```\n# use http::Uri;\n\nlet uri: Uri = \"/hello/world\".parse().unwrap();\n\nassert_eq!(uri.path(), \"/hello/world\");\n```\n\nAn absolute URI\n\n```\n# use http::Uri;\nlet uri: Uri = \"http://example.org/hello/world\".parse().unwrap();\n\nassert_eq!(uri.path(), \"/hello/world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1421":{"id":"0:1421","crate_id":0,"name":null,"span":{"filename":"src/request.rs","begin":[731,0],"end":[742,1]},"visibility":{"restricted":{"parent":"0:1324:1673","path":"::request"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1422:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10312:5391":{"id":"2:10312:5391","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10313:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3212-0:3098:3795":{"id":"b:2:3212-0:3098:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2802:1957":{"id":"0:2802:1957","crate_id":0,"name":"X_DNS_PREFETCH_CONTROL","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Controls DNS prefetching.\n\nThe `x-dns-prefetch-control` HTTP response header controls DNS\nprefetching, a feature by which browsers proactively perform domain name\nresolution on both links that the user may choose to follow as well as\nURLs for items referenced by the document, including images, CSS,\nJavaScript, and so forth.\n\nThis prefetching is performed in the background, so that the DNS is\nlikely to have been resolved by the time the referenced items are\nneeded. This reduces latency when the user clicks a link.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1447:3647":{"id":"0:1447:3647","crate_id":0,"name":"extension","span":{"filename":"src/request.rs","begin":[988,4],"end":[996,5]},"visibility":"public","docs":"Adds an extension to this builder\n\n# Examples\n\n```\n# use http::*;\n\nlet req = Request::builder()\n    .extension(\"My Extension\")\n    .body(())\n    .unwrap();\n\nassert_eq!(req.extensions().get::<&'static str>(),\n           Some(&\"My Extension\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["extension",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1404:1679":{"id":"0:1404:1679","crate_id":0,"name":"extensions","span":{"filename":"src/request.rs","begin":[593,4],"end":[595,5]},"visibility":"public","docs":"Returns a reference to the associated extensions.\n\n# Examples\n\n```\n# use http::*;\nlet request: Request<()> = Request::default();\nassert!(request.extensions().get::<i32>().is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Extensions","id":"0:3357:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1246":{"id":"0:1246","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[71,0],"end":[186,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1247:3669","0:1248:3671","0:1249:3673","0:1250:3675","0:1251:3677","0:1252:3679","0:1253:3681","0:1254:3683","0:1255:3685","0:1256:2579","0:1258:3693","0:1259:3698","0:1260:306"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3177:228":{"id":"2:3177:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3179:127","2:3180:1415"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:3098:3795":{"id":"b:2:3207-0:3098:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1562":{"id":"0:1562","crate_id":0,"name":null,"span":{"filename":"src/response.rs","begin":[777,0],"end":[784,1]},"visibility":{"restricted":{"parent":"0:1461:1674","path":"::response"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3246:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1563:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2738:1893":{"id":"0:2738:1893","crate_id":0,"name":"ACCESS_CONTROL_REQUEST_METHOD","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Informs the server know which HTTP method will be used when the actual\nrequest is made.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"b:2:3212-0:3094:3795":{"id":"b:2:3212-0:3094:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5723:6374":{"id":"1:5723:6374","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5724:61404","1:5725:61406","1:5726:61405","1:5727:61407"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3181:227":{"id":"2:3181:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3183:127","2:3184:1414"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1614:1414":{"id":"0:1614:1414","crate_id":0,"name":"try_from","span":{"filename":"src/status.rs","begin":[274,4],"end":[276,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3309:5286-0:3098:3795":{"id":"a:2:3309:5286-0:3098:3795","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3148:4306":{"id":"0:3148:4306","crate_id":0,"name":"NOT_FOUND","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1627":{"id":"0:1627","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[533,0],"end":[537,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1628:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3156:4346":{"id":"0:3156:4346","crate_id":0,"name":"PRECONDITION_FAILED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:13449:3369":{"id":"2:13449:3369","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:16005:5087","self::pattern":"2:13053:5351"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3147:4301":{"id":"0:3147:4301","crate_id":0,"name":"FORBIDDEN","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2779:1934":{"id":"0:2779:1934","crate_id":0,"name":"REFERER","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Contains the address of the previous web page from which a link to the\ncurrently requested page was followed.\n\nThe Referer header allows servers to identify where people are visiting\nthem from and may use that data for analytics, logging, or optimized\ncaching, for example.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:3144:4286":{"id":"0:3144:4286","crate_id":0,"name":"BAD_REQUEST","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"b:2:2871-0:3233:3782":{"id":"b:2:2871-0:3233:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13537:3435":{"id":"2:13537:3435","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13542:6471":{"id":"2:13542:6471","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:16005:5087"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49767:5362","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3171:149":{"id":"2:3171:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3173:2297"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1038":{"id":"0:1038","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[106,4],"end":[106,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::CONTENT_ENCODING","name":"CONTENT_ENCODING","id":"0:2746:1901","glob":false}},"2:9258:5489":{"id":"2:9258:5489","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2483:1540":{"id":"0:2483:1540","crate_id":0,"name":"0","span":{"filename":"src/header/map.rs","begin":[162,11],"end":[162,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:2488:1871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}},"0:1080":{"id":"0:1080","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[120,4],"end":[120,13]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::FORWARDED","name":"FORWARDED","id":"0:2760:1915","glob":false}},"0:1619":{"id":"0:1619","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[288,0],"end":[295,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u16"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1620:127","0:1621:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13441:5380":{"id":"2:13441:5380","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:16005:5087"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49429:5358","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2769:1924":{"id":"0:2769:1924","crate_id":0,"name":"LINK","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Allows the server to point an interested client to another resource\ncontaining metadata about the requested resource.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2521:1874":{"id":"0:2521:1874","crate_id":0,"name":"ValueIterMut","span":{"filename":"src/header/map.rs","begin":[198,0],"end":[204,1]},"visibility":"public","docs":"A mutable iterator of all values associated with a single header name.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1686:4487":{"id":"0:1686:4487","crate_id":0,"name":"authority","span":{"filename":"src/uri/authority.rs","begin":[1,0],"end":[671,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3184:4488"],"is_stripped":true}},"0:1273":{"id":"0:1273","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[223,0],"end":[228,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1275:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2742:1897":{"id":"0:2742:1897","crate_id":0,"name":"AUTHORIZATION","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Contains the credentials to authenticate a user agent with a server.\n\nUsually this header is included after the server has responded with a\n401 Unauthorized status and the WWW-Authenticate header.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2794:1951":{"id":"0:2794:1951","crate_id":0,"name":"USER_AGENT","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Contains a string that allows identifying the requesting client's\nsoftware.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1194":{"id":"0:1194","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[158,4],"end":[158,7]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::VIA","name":"VIA","id":"0:2798:1953","glob":false}},"0:3022:715":{"id":"0:3022:715","crate_id":0,"name":"hash","span":{"filename":"src/method.rs","begin":[45,31],"end":[45,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10539:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3576:2442":{"id":"2:3576:2442","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3578:181","2:3579:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:12500:7166":{"id":"2:12500:7166","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12501:2386","2:12502:62248"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3122":{"id":"0:3122","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3123:4187","0:3124:4191","0:3125:4196","0:3126:4182","0:3127:4203","0:3128:4208","0:3129:4213","0:3130:4218","0:3131:4223","0:3132:4228","0:3133:4233","0:3134:4238","0:3135:4243","0:3136:4247","0:3137:4252","0:3138:4257","0:3139:4262","0:3140:4267","0:3141:4272","0:3142:4277","0:3143:4282","0:3144:4286","0:3145:4291","0:3146:4296","0:3147:4301","0:3148:4306","0:3149:4311","0:3150:4316","0:3151:4321","0:3152:4326","0:3153:4331","0:3154:4336","0:3155:4341","0:3156:4346","0:3157:4351","0:3158:4356","0:3159:4361","0:3160:4366","0:3161:4371","0:3162:4376","0:3163:4381","0:3164:4385","0:3165:4389","0:3166:4393","0:3167:4398","0:3168:4403","0:3169:4407","0:3170:4411","0:3171:4416","0:3172:4420","0:3173:4425","0:3174:4430","0:3175:4435","0:3176:4440","0:3177:4445","0:3178:4450","0:3179:4454","0:3180:4458","0:3181:4463","0:3182:4467"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1598:59":{"id":"0:1598:59","crate_id":0,"name":"default","span":{"filename":"src/status.rs","begin":[229,4],"end":[231,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1626:660":{"id":"0:1626:660","crate_id":0,"name":"fmt","span":{"filename":"src/status.rs","begin":[526,4],"end":[530,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1161":{"id":"0:1161","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[147,4],"end":[147,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::SEC_WEBSOCKET_VERSION","name":"SEC_WEBSOCKET_VERSION","id":"0:2787:1942","glob":false}},"0:2154":{"id":"0:2154","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[914,0],"end":[991,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2155:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13443:1697":{"id":"2:13443:1697","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49445:2587","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1338","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:63877","5:6085:2319","5:6088:63878","5:6091:63879","5:6103:2624","5:6104:63880","5:6105:5225","5:6106:57186","5:6107:4744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1014":{"id":"0:1014","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[98,4],"end":[98,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCESS_CONTROL_REQUEST_METHOD","name":"ACCESS_CONTROL_REQUEST_METHOD","id":"0:2738:1893","glob":false}},"0:1514:3790":{"id":"0:1514:3790","crate_id":0,"name":"headers","span":{"filename":"src/response.rs","begin":[349,4],"end":[351,5]},"visibility":"public","docs":"Returns a reference to the associated header field map.\n\n# Examples\n\n```\n# use http::*;\nlet response: Response<()> = Response::default();\nassert!(response.headers().is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"0:2392:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3242:4523":{"id":"b:2:2868-0:3242:4523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3251:660":{"id":"0:3251:660","crate_id":0,"name":"fmt","span":{"filename":"src/uri/mod.rs","begin":[125,9],"end":[125,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8886:5233":{"id":"2:8886:5233","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7927:5218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2868-0:1498:3782":{"id":"b:2:2868-0:1498:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3179:4454":{"id":"0:3179:4454","crate_id":0,"name":"INSUFFICIENT_STORAGE","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1537:1675":{"id":"0:1537:1675","crate_id":0,"name":"status","span":{"filename":"src/response.rs","begin":[564,4],"end":[573,5]},"visibility":"public","docs":"Set the HTTP status for this response.\n\nThis function will configure the HTTP status code of the `Response` that\nwill be returned from `Builder::build`.\n\nBy default this is `200`.\n\n# Examples\n\n```\n# use http::*;\n\nlet response = Response::builder()\n    .status(200)\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["status",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2248:127":{"id":"0:2248:127","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[16,0],"end":[18,1]},"visibility":"public","docs":"A generic \"error\" for HTTP connections\n\nThis error type is less specific than the error returned from other\nfunctions in this crate, but all other errors can be converted to this\nerror. Consumers of this crate can typically consume and work with this form\nof error for conversions with the `?` operator.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1020":{"id":"0:1020","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[100,4],"end":[100,9]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ALLOW","name":"ALLOW","id":"0:2740:1895","glob":false}},"0:3017:907":{"id":"0:3017:907","crate_id":0,"name":"ne","span":{"filename":"src/method.rs","begin":[45,16],"end":[45,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3146:4296":{"id":"0:3146:4296","crate_id":0,"name":"PAYMENT_REQUIRED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:964":{"id":"0:964","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[81,33],"end":[81,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::InvalidHeaderName","name":"InvalidHeaderName","id":"0:630:1878","glob":false}},"0:2129:127":{"id":"0:2129:127","crate_id":0,"name":"Error","span":{"filename":"src/uri/mod.rs","begin":[737,4],"end":[737,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"a:2:3268:211-0:3009:1683":{"id":"a:2:3268:211-0:3009:1683","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1250:3675":{"id":"0:1250:3675","crate_id":0,"name":"DELETE","span":{"filename":"src/method.rs","begin":[82,4],"end":[82,46]},"visibility":"public","docs":"DELETE","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:22937:6447":{"id":"2:22937:6447","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22927:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3201-0:3283:1688":{"id":"b:2:3201-0:3283:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3246:660":{"id":"0:3246:660","crate_id":0,"name":"fmt","span":{"filename":"src/uri/mod.rs","begin":[121,9],"end":[121,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:3227:1687":{"id":"b:2:3201-0:3227:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1276":{"id":"0:1276","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[230,0],"end":[235,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:1278:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13490:63240":{"id":"2:13490:63240","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:3009:1683":{"id":"b:2:3201-0:3009:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2871-0:3247:4525":{"id":"b:2:2871-0:3247:4525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2925:124":{"id":"2:2925:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2868-0:1244:3657":{"id":"b:2:2868-0:1244:3657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3518:130":{"id":"2:3518:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3520:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3521:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2137:1414":{"id":"0:2137:1414","crate_id":0,"name":"try_from","span":{"filename":"src/uri/mod.rs","begin":[758,4],"end":[760,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13458:2203":{"id":"2:13458:2203","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:47492:176","self::pattern":"2:13053:5351","prim@char":"1:16005:5087"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1410:841":{"id":"0:1410:841","crate_id":0,"name":"map","span":{"filename":"src/request.rs","begin":[687,4],"end":[695,5]},"visibility":"public","docs":"Consumes the request returning a new request with body mapped to the\nreturn type of the passed in function.\n\n# Examples\n\n```\n# use http::*;\nlet request = Request::builder().body(\"some string\").unwrap();\nlet mapped_request: Request<&[u8]> = request.map(|b| {\n  assert_eq!(b, \"some string\");\n  b.as_bytes()\n});\nassert_eq!(mapped_request.body(), &\"some string\".as_bytes());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3524:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"U"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3108":{"id":"0:3108","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[44,22],"end":[44,31]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3276:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1396:1672":{"id":"0:1396:1672","crate_id":0,"name":"method","span":{"filename":"src/request.rs","begin":[476,4],"end":[478,5]},"visibility":"public","docs":"Returns a reference to the associated HTTP method.\n\n# Examples\n\n```\n# use http::*;\nlet request: Request<()> = Request::default();\nassert_eq!(*request.method(), Method::GET);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3309:5286-0:3242:4523":{"id":"a:2:3309:5286-0:3242:4523","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:1580:4125":{"id":"b:2:3207-0:1580:4125","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:1365:3782":{"id":"b:2:2868-0:1365:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8362:5235":{"id":"2:8362:5235","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8364:5793"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2141:1414":{"id":"0:2141:1414","crate_id":0,"name":"try_from","span":{"filename":"src/uri/mod.rs","begin":[767,4],"end":[769,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1077":{"id":"0:1077","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[119,4],"end":[119,11]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::EXPIRES","name":"EXPIRES","id":"0:2759:1914","glob":false}},"0:1110":{"id":"0:1110","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[130,4],"end":[130,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::LOCATION","name":"LOCATION","id":"0:2770:1925","glob":false}},"0:1137":{"id":"0:1137","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[139,4],"end":[139,11]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::REFERER","name":"REFERER","id":"0:2779:1934","glob":false}},"0:0:1700":{"id":"0:0:1700","crate_id":0,"name":"http","span":{"filename":"src/lib.rs","begin":[1,0],"end":[211,1]},"visibility":"public","docs":"A general purpose library of common HTTP types\n\nThis crate is a general purpose library for common types found when working\nwith the HTTP protocol. You'll find `Request` and `Response` types for\nworking as either a client or a server as well as all of their components.\nNotably you'll find `Uri` for what a `Request` is requesting, a `Method`\nfor how it's being requested, a `StatusCode` for what sort of response came\nback, a `Version` for how this was communicated, and\n`HeaderName`/`HeaderValue` definitions to get grouped in a `HeaderMap` to\nwork with request/response headers.\n\nYou will notably *not* find an implementation of sending requests or\nspinning up a server in this crate. It's intended that this crate is the\n\"standard library\" for HTTP clients and servers without dictating any\nparticular implementation. Note that this crate is still early on in its\nlifecycle so the support libraries that integrate with the `http` crate are\na work in progress! Stay tuned and we'll be sure to highlight crates here\nin the future.\n\n## Requests and Responses\n\nPerhaps the main two types in this crate are the `Request` and `Response`\ntypes. A `Request` could either be constructed to get sent off as a client\nor it can also be received to generate a `Response` for a server. Similarly\nas a client a `Response` is what you get after sending a `Request`, whereas\non a server you'll be manufacturing a `Response` to send back to the client.\n\nEach type has a number of accessors for the component fields. For as a\nserver you might want to inspect a requests URI to dispatch it:\n\n```\nuse http::{Request, Response};\n\nfn response(req: Request<()>) -> http::Result<Response<()>> {\n    match req.uri().path() {\n        \"/\" => index(req),\n        \"/foo\" => foo(req),\n        \"/bar\" => bar(req),\n        _ => not_found(req),\n    }\n}\n# fn index(_req: Request<()>) -> http::Result<Response<()>> { panic!() }\n# fn foo(_req: Request<()>) -> http::Result<Response<()>> { panic!() }\n# fn bar(_req: Request<()>) -> http::Result<Response<()>> { panic!() }\n# fn not_found(_req: Request<()>) -> http::Result<Response<()>> { panic!() }\n```\n\nOn a `Request` you'll also find accessors like `method` to return a\n`Method` and `headers` to inspect the various headers. A `Response`\nhas similar methods for headers, the status code, etc.\n\nIn addition to getters, request/response types also have mutable accessors\nto edit the request/response:\n\n```\nuse http::{HeaderValue, Response, StatusCode};\nuse http::header::CONTENT_TYPE;\n\nfn add_server_headers<T>(response: &mut Response<T>) {\n    response.headers_mut()\n        .insert(CONTENT_TYPE, HeaderValue::from_static(\"text/html\"));\n    *response.status_mut() = StatusCode::OK;\n}\n```\n\nAnd finally, one of the most important aspects of requests/responses, the\nbody! The `Request` and `Response` types in this crate are *generic* in\nwhat their body is. This allows downstream libraries to use different\nrepresentations such as `Request<Vec<u8>>`, `Response<impl Read>`,\n`Request<impl Stream<Item = Vec<u8>, Error = _>>`, or even\n`Response<MyCustomType>` where the custom type was deserialized from JSON.\n\nThe body representation is intentionally flexible to give downstream\nlibraries maximal flexibility in implementing the body as appropriate.\n\n## HTTP Headers\n\nAnother major piece of functionality in this library is HTTP header\ninterpretation and generation. The `HeaderName` type serves as a way to\ndefine header *names*, or what's to the left of the colon. A `HeaderValue`\nconversely is the header *value*, or what's to the right of a colon.\n\nFor example, if you have an HTTP request that looks like:\n\n```http\nGET /foo HTTP/1.1\nAccept: text/html\n```\n\nThen `\"Accept\"` is a `HeaderName` while `\"text/html\"` is a `HeaderValue`.\nEach of these is a dedicated type to allow for a number of interesting\noptimizations and to also encode the static guarantees of each type. For\nexample a `HeaderName` is always a valid `&str`, but a `HeaderValue` may\nnot be valid UTF-8.\n\nThe most common header names are already defined for you as constant values\nin the `header` module of this crate. For example:\n\n```\nuse http::header::{self, HeaderName};\n\nlet name: HeaderName = header::ACCEPT;\nassert_eq!(name.as_str(), \"accept\");\n```\n\nYou can, however, also parse header names from strings:\n\n```\nuse http::header::{self, HeaderName};\n\nlet name = \"Accept\".parse::<HeaderName>().unwrap();\nassert_eq!(name, header::ACCEPT);\n```\n\nHeader values can be created from string literals through the `from_static`\nfunction:\n\n```\nuse http::HeaderValue;\n\nlet value = HeaderValue::from_static(\"text/html\");\nassert_eq!(value.as_bytes(), b\"text/html\");\n```\n\nAnd header values can also be parsed like names:\n\n```\nuse http::HeaderValue;\n\nlet value = \"text/html\";\nlet value = value.parse::<HeaderValue>().unwrap();\n```\n\nMost HTTP requests and responses tend to come with more than one header, so\nit's not too useful to just work with names and values only! This crate also\nprovides a `HeaderMap` type which is a specialized hash map for keys as\n`HeaderName` and generic values. This type, like header names, is optimized\nfor common usage but should continue to scale with your needs over time.\n\n# URIs\n\nEach HTTP `Request` has an associated URI with it. This may just be a path\nlike `/index.html` but it could also be an absolute URL such as\n`https://www.rust-lang.org/index.html`. A `URI` has a number of accessors to\ninterpret it:\n\n```\nuse http::Uri;\nuse http::uri::Scheme;\n\nlet uri = \"https://www.rust-lang.org/index.html\".parse::<Uri>().unwrap();\n\nassert_eq!(uri.scheme(), Some(&Scheme::HTTPS));\nassert_eq!(uri.host(), Some(\"www.rust-lang.org\"));\nassert_eq!(uri.path(), \"/index.html\");\nassert_eq!(uri.query(), None);\n```","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/http/0.2.8\")]","#![deny(warnings, missing_docs, missing_debug_implementations)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:5:1671","0:1216:1672","0:1324:1673","0:1461:1674","0:1564:1675","0:1631:1676","0:2186:1502","0:2351","0:2354","0:2357","0:2361","0:2364","0:2367","0:2370","0:2373","0:2376","0:2379","0:2382"],"is_stripped":false}},"0:1542:1671":{"id":"0:1542:1671","crate_id":0,"name":"header","span":{"filename":"src/response.rs","begin":[618,4],"end":[631,5]},"visibility":"public","docs":"Appends a header to this response builder.\n\nThis function will append the provided key/value as a header to the\ninternal `HeaderMap` being constructed. Essentially this is equivalent\nto calling `HeaderMap::append`.\n\n# Examples\n\n```\n# use http::*;\n# use http::header::HeaderValue;\n\nlet response = Response::builder()\n    .header(\"Content-Type\", \"text/html\")\n    .header(\"X-Custom-Foo\", \"bar\")\n    .header(\"content-length\", 0)\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["key",{"kind":"generic","inner":"K"}],["value",{"kind":"generic","inner":"V"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1268:604":{"id":"0:1268:604","crate_id":0,"name":"eq","span":{"filename":"src/method.rs","begin":[204,4],"end":[206,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1101":{"id":"0:1101","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[127,4],"end":[127,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::IF_UNMODIFIED_SINCE","name":"IF_UNMODIFIED_SINCE","id":"0:2767:1922","glob":false}},"0:1212":{"id":"0:1212","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[164,4],"end":[164,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::X_XSS_PROTECTION","name":"X_XSS_PROTECTION","id":"0:2804:1959","glob":false}},"0:2133:127":{"id":"0:2133:127","crate_id":0,"name":"Error","span":{"filename":"src/uri/mod.rs","begin":[746,4],"end":[746,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:13466:4760":{"id":"2:13466:4760","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13053:5351","`DoubleEndedIterator`":"2:8447:120","str::rsplit":"1:16011:5092","str::split_whitespace":"1:16011:5092","prim@char":"1:16005:5087"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49459:5372","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2730:1885":{"id":"0:2730:1885","crate_id":0,"name":"ACCEPT_RANGES","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Marker used by the server to advertise partial request support.\n\nThe Accept-Ranges response HTTP header is a marker used by the server to\nadvertise its support of partial requests. The value of this field\nindicates the unit that can be used to define a range.\n\nIn presence of an Accept-Ranges header, the browser may try to resume an\ninterrupted download, rather than to start it from the start again.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:3203:681":{"id":"2:3203:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13534:3611":{"id":"2:13534:3611","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12992:2591","FromStr::Err":"2:12992:2591"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12992:2591","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12992:2591","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1179":{"id":"0:1179","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[153,4],"end":[153,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::TRANSFER_ENCODING","name":"TRANSFER_ENCODING","id":"0:2793:1948","glob":false}},"b:2:2871-0:1494:1685":{"id":"b:2:2871-0:1494:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3163:4381":{"id":"0:3163:4381","crate_id":0,"name":"MISDIRECTED_REQUEST","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"421 Misdirected Request\n[RFC7540, Section 9.1.2](http://tools.ietf.org/html/rfc7540#section-9.1.2)","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1281":{"id":"0:1281","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[243,0],"end":[247,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1282:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5833:5349":{"id":"5:5833:5349","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:3134:4238":{"id":"0:3134:4238","crate_id":0,"name":"ALREADY_REPORTED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1509:3842":{"id":"0:1509:3842","crate_id":0,"name":"from_parts","span":{"filename":"src/response.rs","begin":[274,4],"end":[279,5]},"visibility":"public","docs":"Creates a new `Response` with the given head and body\n\n# Examples\n\n```\n# use http::*;\nlet response = Response::new(\"hello world\");\nlet (mut parts, body) = response.into_parts();\n\nparts.status = StatusCode::BAD_REQUEST;\nlet response = Response::from_parts(parts, body);\n\nassert_eq!(response.status(), StatusCode::BAD_REQUEST);\nassert_eq!(*response.body(), \"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["parts",{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13452:59413":{"id":"2:13452:59413","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13053:5351","prim@char":"1:16005:5087"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5012:6450":{"id":"1:5012:6450","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5013:1867","1:5014:57539"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2134:1414":{"id":"0:2134:1414","crate_id":0,"name":"try_from","span":{"filename":"src/uri/mod.rs","begin":[749,4],"end":[751,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["vec",{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1502:1679":{"id":"0:1502:1679","crate_id":0,"name":"extensions","span":{"filename":"src/response.rs","begin":[199,4],"end":[199,30]},"visibility":"public","docs":"The response's extensions","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Extensions","id":"0:3357:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:1597":{"id":"0:1597","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[227,0],"end":[232,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3246:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1598:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4670:6389":{"id":"1:4670:6389","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4671:2451","1:4672:57306","1:4674:57307","1:4675:57308","1:4676:6408","1:4677:12977","1:4678:12976","1:4680:57309","1:4681:2497","1:4682:1697","1:4683:5761","1:4685:1806"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3178:4450":{"id":"0:3178:4450","crate_id":0,"name":"VARIANT_ALSO_NEGOTIATES","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:968":{"id":"0:968","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[82,22],"end":[82,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::value::HeaderValue","name":"HeaderValue","id":"0:2981:1682","glob":false}},"0:2733:1888":{"id":"0:2733:1888","crate_id":0,"name":"ACCESS_CONTROL_ALLOW_METHODS","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Preflight header response indicating permitted access methods.\n\nThe Access-Control-Allow-Methods response header specifies the method or\nmethods allowed when accessing the resource in response to a preflight\nrequest.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"a:2:3309:5286-0:3283:1688":{"id":"a:2:3309:5286-0:3283:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1548:3868":{"id":"0:1548:3868","crate_id":0,"name":"headers_mut","span":{"filename":"src/response.rs","begin":[672,4],"end":[674,5]},"visibility":"public","docs":"Get header on this response builder.\nwhen builder has error returns None\n\n# Example\n\n```\n# use http::*;\n# use http::header::HeaderValue;\n# use http::response::Builder;\nlet mut res = Response::builder();\n{\n  let headers = res.headers_mut().unwrap();\n  headers.insert(\"Accept\", HeaderValue::from_static(\"text/html\"));\n  headers.insert(\"X-Custom-Foo\", HeaderValue::from_static(\"bar\"));\n}\nlet headers = res.headers_ref().unwrap();\nassert_eq!( headers[\"Accept\"], \"text/html\" );\nassert_eq!( headers[\"X-Custom-Foo\"], \"bar\" );\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"0:2392:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3309:5286-0:3009:1683":{"id":"a:2:3309:5286-0:3009:1683","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5731:6375":{"id":"1:5731:6375","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5732:8454","1:5733:57519","1:5734:57520"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:789:5304":{"id":"5:789:5304","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:757:1860":{"id":"0:757:1860","crate_id":0,"name":"value","span":{"filename":"src/header/value.rs","begin":[1,0],"end":[795,1]},"visibility":{"restricted":{"parent":"0:5:1671","path":"::header"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2981:1682","0:793:1879","0:2989:1880"],"is_stripped":true}},"0:2152":{"id":"0:2152","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[892,0],"end":[912,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2153:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22874:6922":{"id":"2:22874:6922","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22875:6834","2:22876:1245","2:22877:1270"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3150:4316":{"id":"0:3150:4316","crate_id":0,"name":"NOT_ACCEPTABLE","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1298:3428":{"id":"0:1298:3428","crate_id":0,"name":"from_str","span":{"filename":"src/method.rs","begin":[285,4],"end":[287,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:12992:2591","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1265:604":{"id":"0:1265:604","crate_id":0,"name":"eq","span":{"filename":"src/method.rs","begin":[197,4],"end":[199,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2871-0:3094:3795":{"id":"b:2:2871-0:3094:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1388:3828":{"id":"0:1388:3828","crate_id":0,"name":"patch","span":{"filename":"src/request.rs","begin":[392,4],"end":[398,5]},"visibility":"public","docs":"Creates a new `Builder` initialized with a PATCH method and the given URI.\n\nThis method returns an instance of `Builder` which can be used to\ncreate a `Request`.\n\n# Example\n\n```\n# use http::*;\n\nlet request = Request::patch(\"https://www.rust-lang.org/\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["uri",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2795:1949":{"id":"0:2795:1949","crate_id":0,"name":"UPGRADE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Used as part of the exchange to upgrade the protocol.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2165":{"id":"0:2165","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[1014,0],"end":[1023,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":"Returns a `Uri` representing `/`","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3246:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2166:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3247:4525":{"id":"0:3247:4525","crate_id":0,"name":"InvalidUriParts","span":{"filename":"src/uri/mod.rs","begin":[126,0],"end":[126,39]},"visibility":"public","docs":"An error resulting from a failed attempt to construct a URI.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3268:211-0:3247:4525","a:2:3280:220-0:3247:4525","a:2:3309:5286-0:3247:4525","a:2:9258:5489-0:3247:4525","a:2:9259:5488-0:3247:4525","b:2:3197-0:3247:4525","b:2:2868-0:3247:4525","b:2:3201-0:3247:4525","b:2:4001-0:3247:4525","b:2:3207-0:3247:4525","b:2:2871-0:3247:4525","b:2:3212-0:3247:4525","b:5:6413-0:3247:4525","0:3250","0:2180","0:2182"]}},"b:2:2868-0:3233:3782":{"id":"b:2:2868-0:3233:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3160:4366":{"id":"0:3160:4366","crate_id":0,"name":"RANGE_NOT_SATISFIABLE","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1203":{"id":"0:1203","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[161,4],"end":[161,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::X_CONTENT_TYPE_OPTIONS","name":"X_CONTENT_TYPE_OPTIONS","id":"0:2801:1956","glob":false}},"2:13428:59379":{"id":"2:13428:59379","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16022:5101"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9259:5488-0:1244:3657":{"id":"a:2:9259:5488-0:1244:3657","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13540:63254":{"id":"2:13540:63254","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:16005:5087"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49758:5361","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2768:1923":{"id":"0:2768:1923","crate_id":0,"name":"LAST_MODIFIED","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Content-Types that are acceptable for the response.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2510:1873":{"id":"0:2510:1873","crate_id":0,"name":"ValueIter","span":{"filename":"src/header/map.rs","begin":[189,0],"end":[194,1]},"visibility":"public","docs":"An iterator of all values associated with a single header name.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:2804:1959":{"id":"0:2804:1959","crate_id":0,"name":"X_XSS_PROTECTION","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Stop pages from loading when an XSS attack is detected.\n\nThe HTTP X-XSS-Protection response header is a feature of Internet\nExplorer, Chrome and Safari that stops pages from loading when they\ndetect reflected cross-site scripting (XSS) attacks. Although these\nprotections are largely unnecessary in modern browsers when sites\nimplement a strong Content-Security-Policy that disables the use of\ninline JavaScript ('unsafe-inline'), they can still provide protections\nfor users of older web browsers that don't yet support CSP.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"b:5:6413-0:3009:1683":{"id":"b:5:6413-0:3009:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3192:4489":{"id":"0:3192:4489","crate_id":0,"name":"PathAndQuery","span":{"filename":"src/uri/path.rs","begin":[12,0],"end":[15,1]},"visibility":"public","docs":"Represents the path component of a URI","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"b:2:2868-0:3102:1686":{"id":"b:2:2868-0:3102:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6088:63878":{"id":"5:6088:63878","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2437:1875":{"id":"0:2437:1875","crate_id":0,"name":"Values","span":{"filename":"src/header/map.rs","begin":[124,0],"end":[126,1]},"visibility":"public","docs":"`HeaderMap` value iterator.\n\nEach value contained in the `HeaderMap` will be yielded.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:13455:59414":{"id":"2:13455:59414","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:16005:5087","self::pattern":"2:13053:5351"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1248:3671":{"id":"0:1248:3671","crate_id":0,"name":"POST","span":{"filename":"src/method.rs","begin":[76,4],"end":[76,42]},"visibility":"public","docs":"POST","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1511:4051":{"id":"0:1511:4051","crate_id":0,"name":"status_mut","span":{"filename":"src/response.rs","begin":[306,4],"end":[308,5]},"visibility":"public","docs":"Returns a mutable reference to the associated `StatusCode`.\n\n# Examples\n\n```\n# use http::*;\nlet mut response: Response<()> = Response::default();\n*response.status_mut() = StatusCode::CREATED;\nassert_eq!(response.status(), StatusCode::CREATED);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13469:13623":{"id":"2:13469:13623","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13053:5351","prim@char":"1:16005:5087"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12845:5354","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3774:6155":{"id":"2:3774:6155","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:22837:6935":{"id":"2:22837:6935","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22838:61572","2:22839:1225","2:22840:1226","2:22841:61589","2:22842:61590","2:22843:61591","2:22844:61592","2:22845:62699","2:22846:62700","2:22847:62701"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3278:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22850:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2868-0:3283:1688":{"id":"b:2:2868-0:3283:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9258:5489-0:3233:3782":{"id":"a:2:9258:5489-0:3233:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1247:3669":{"id":"0:1247:3669","crate_id":0,"name":"GET","span":{"filename":"src/method.rs","begin":[73,4],"end":[73,40]},"visibility":"public","docs":"GET","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:13445:13622":{"id":"2:13445:13622","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:16011:5092"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49742:5353","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2966:184":{"id":"2:2966:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2968:997","2:2969:826","2:2970:792","2:2971:713","2:2972:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1620:127":{"id":"0:1620:127","crate_id":0,"name":"Error","span":{"filename":"src/status.rs","begin":[289,4],"end":[289,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:2466:1864":{"id":"0:2466:1864","crate_id":0,"name":"GetAll","span":{"filename":"src/header/map.rs","begin":[150,0],"end":[153,1]},"visibility":"public","docs":"A view to all values stored in a single entry.\n\nThis struct is returned by `HeaderMap::get_all`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1454:1802":{"id":"0:1454:1802","crate_id":0,"name":"body","span":{"filename":"src/request.rs","begin":[1053,4],"end":[1060,5]},"visibility":"public","docs":"\"Consumes\" this builder, using the provided `body` to return a\nconstructed `Request`.\n\n# Errors\n\nThis function may return an error if any previously configured argument\nfailed to parse or get converted to the internal representation. For\nexample if an invalid `head` was specified via `header(\"Foo\",\n\"Bar\\r\\n\")` the error will be returned when this function is called\nrather than when `header` was called.\n\n# Examples\n\n```\n# use http::*;\n\nlet request = Request::builder()\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:2250:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1530:660":{"id":"0:1530:660","crate_id":0,"name":"fmt","span":{"filename":"src/response.rs","begin":[492,4],"end":[500,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3293":{"id":"0:3293","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[25,38],"end":[25,43]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3294:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3100":{"id":"0:3100","crate_id":0,"name":null,"span":{"filename":"src/response.rs","begin":[208,9],"end":[208,14]},"visibility":{"restricted":{"parent":"0:1461:1674","path":"::response"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3101:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2767:1922":{"id":"0:2767:1922","crate_id":0,"name":"IF_UNMODIFIED_SINCE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Makes the request conditional based on the last modification date.\n\nThe If-Unmodified-Since request HTTP header makes the request\nconditional: the server will send back the requested resource, or accept\nit in the case of a POST or another non-safe method, only if it has not\nbeen last modified after the given date. If the request has been\nmodified after the given date, the response will be a 412 (Precondition\nFailed) error.\n\nThere are two common use cases:\n\n* In conjunction non-safe methods, like POST, it can be used to\nimplement an optimistic concurrency control, like done by some wikis:\neditions are rejected if the stored document has been modified since the\noriginal has been retrieved.\n\n* In conjunction with a range request with a If-Range header, it can be\nused to ensure that the new fragment requested comes from an unmodified\ndocument.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"b:2:3197-0:3242:4523":{"id":"b:2:3197-0:3242:4523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:1365:3782":{"id":"b:2:3207-0:1365:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9258:5489-0:1494:1685":{"id":"a:2:9258:5489-0:1494:1685","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3367:5301":{"id":"2:3367:5301","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3369:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1092":{"id":"0:1092","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[124,4],"end":[124,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::IF_MODIFIED_SINCE","name":"IF_MODIFIED_SINCE","id":"0:2764:1919","glob":false}},"a:2:3309:5286-0:1498:3782":{"id":"a:2:3309:5286-0:1498:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3395:6137":{"id":"2:3395:6137","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3397:181","2:3398:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2102:3893":{"id":"0:2102:3893","crate_id":0,"name":"into_parts","span":{"filename":"src/uri/mod.rs","begin":[390,4],"end":[392,5]},"visibility":"public","docs":"Convert a `Uri` into `Parts`.\n\n# Note\n\nThis is just an inherent method providing the same functionality as\n`let parts: Parts = uri.into()`\n\n# Examples\n\n```\n# use http::uri::*;\nlet uri: Uri = \"/foo\".parse().unwrap();\n\nlet parts = uri.into_parts();\n\nassert_eq!(parts.path_and_query.unwrap(), \"/foo\");\n\nassert!(parts.scheme.is_none());\nassert!(parts.authority.is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2193:4961":{"id":"0:2193:4961","crate_id":0,"name":"HTTP_11","span":{"filename":"src/version.rs","begin":[36,4],"end":[36,55]},"visibility":"public","docs":"`HTTP/1.1`","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1586:306":{"id":"0:1586:306","crate_id":0,"name":"as_str","span":{"filename":"src/status.rs","begin":[135,4],"end":[147,5]},"visibility":"public","docs":"Returns a &str representation of the `StatusCode`\n\nThe return value only includes a numerical representation of the\nstatus code. The canonical reason is not included.\n\n# Example\n\n```\nlet status = http::StatusCode::OK;\nassert_eq!(status.as_str(), \"200\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13484:4757":{"id":"2:13484:4757","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:16005:5087","self::pattern":"2:13053:5351","str::splitn":"1:16011:5092"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49581:5373","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2798:1953":{"id":"0:2798:1953","crate_id":0,"name":"VIA","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Added by proxies to track routing.\n\nThe `via` general header is added by proxies, both forward and reverse\nproxies, and can appear in the request headers and the response headers.\nIt is used for tracking message forwards, avoiding request loops, and\nidentifying the protocol capabilities of senders along the\nrequest/response chain.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"5:790:5802":{"id":"5:790:5802","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1433:3926":{"id":"0:1433:3926","crate_id":0,"name":"uri_ref","span":{"filename":"src/request.rs","begin":[853,4],"end":[855,5]},"visibility":"public","docs":"Get the URI for this request\n\nBy default this is `/`.\n\n# Examples\n\n```\n# use http::*;\n\nlet mut req = Request::builder();\nassert_eq!(req.uri_ref().unwrap(), \"/\" );\n\nreq = req.uri(\"https://www.rust-lang.org/\");\nassert_eq!(req.uri_ref().unwrap(), \"https://www.rust-lang.org/\" );\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1498:3782":{"id":"0:1498:3782","crate_id":0,"name":"Parts","span":{"filename":"src/response.rs","begin":[188,0],"end":[202,1]},"visibility":"public","docs":"Component parts of an HTTP `Response`\n\nThe HTTP response head consists of a status, version, and a set of\nheader fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":["0:1499:1675","0:1500:1502","0:1501:3790","0:1502:1679"],"impls":["a:2:3268:211-0:1498:3782","a:2:3280:220-0:1498:3782","a:2:3309:5286-0:1498:3782","a:2:9258:5489-0:1498:3782","a:2:9259:5488-0:1498:3782","b:2:3197-0:1498:3782","b:2:2868-0:1498:3782","b:2:3201-0:1498:3782","b:2:4001-0:1498:3782","b:2:3207-0:1498:3782","b:2:2871-0:1498:3782","b:2:3212-0:1498:3782","0:1533"]}},"2:3103:5210":{"id":"2:3103:5210","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3102:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3197-0:3094:3795":{"id":"b:2:3197-0:3094:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5657:6466":{"id":"1:5657:6466","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5658:2579","1:5659:2580"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13078:5346":{"id":"2:13078:5346","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13080:2495","2:13081:62623","2:13082:62624"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13072:5347","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2186:1502":{"id":"0:2186:1502","crate_id":0,"name":"version","span":{"filename":"src/version.rs","begin":[1,0],"end":[75,1]},"visibility":"public","docs":"HTTP version\n\nThis module contains a definition of the `Version` type. The `Version`\ntype is intended to be accessed through the root of the crate\n(`http::Version`) rather than this module.\n\nThe `Version` type contains constants that represent the various versions\nof the HTTP protocol.\n\n# Examples\n\n```\nuse http::Version;\n\nlet http11 = Version::HTTP_11;\nlet http2 = Version::HTTP_2;\nassert!(http11 != http2);\n\nprintln!(\"{:?}\", http2);\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3283:1688"],"is_stripped":false}},"a:2:3280:220-0:3009:1683":{"id":"a:2:3280:220-0:3009:1683","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1280:660":{"id":"0:1280:660","crate_id":0,"name":"fmt","span":{"filename":"src/method.rs","begin":[238,4],"end":[240,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2182":{"id":"0:2182","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[1095,0],"end":[1095,33]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","provide","source","cause","type_id"],"trait":{"kind":"resolved_path","inner":{"name":"Error","id":"1:2576:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:6:841":{"id":"0:6:841","crate_id":0,"name":"map","span":{"filename":"src/header/map.rs","begin":[1,0],"end":[3496,1]},"visibility":{"restricted":{"parent":"0:5:1671","path":"::header"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2392:1681","0:2402:1867","0:2410:1868","0:2421:1866","0:2429:1869","0:2437:1875","0:2445:1876","0:2453:1862","0:2466:1864","0:2475:1863","0:2488:1871","0:2500:1870","0:2510:1873","0:2521:1874","0:2533:1872","0:68","0:71"],"is_stripped":true}},"0:2164":{"id":"0:2164","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[1011,0],"end":[1011,18]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2925:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13531:63253":{"id":"2:13531:63253","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13053:5351","prim@char":"1:16005:5087"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1592:4175":{"id":"0:1592:4175","crate_id":0,"name":"is_server_error","span":{"filename":"src/status.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Check if status is within 500-599.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2163:604":{"id":"0:2163:604","crate_id":0,"name":"eq","span":{"filename":"src/uri/mod.rs","begin":[1006,4],"end":[1008,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["uri",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6413-0:3242:4523":{"id":"b:5:6413-0:3242:4523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3171:4416":{"id":"0:3171:4416","crate_id":0,"name":"UNAVAILABLE_FOR_LEGAL_REASONS","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"451 Unavailable For Legal Reasons\n[[RFC7725](http://tools.ietf.org/html/rfc7725)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:13425:2580":{"id":"2:13425:2580","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12524:2622"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3136:4247":{"id":"0:3136:4247","crate_id":0,"name":"MULTIPLE_CHOICES","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1304:660":{"id":"0:1304:660","crate_id":0,"name":"fmt","span":{"filename":"src/method.rs","begin":[305,4],"end":[307,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3012":{"id":"0:3012","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[45,9],"end":[45,14]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3013:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1113":{"id":"0:1113","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[131,4],"end":[131,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::MAX_FORWARDS","name":"MAX_FORWARDS","id":"0:2771:1926","glob":false}},"b:2:3197-0:3102:1686":{"id":"b:2:3197-0:3102:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13448:13364":{"id":"2:13448:13364","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49751:5352","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2453:1862":{"id":"0:2453:1862","crate_id":0,"name":"Drain","span":{"filename":"src/header/map.rs","begin":[136,0],"end":[144,1]},"visibility":"public","docs":"A drain iterator for `HeaderMap`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1116":{"id":"0:1116","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[132,4],"end":[132,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ORIGIN","name":"ORIGIN","id":"0:2772:1927","glob":false}},"b:2:2871-0:3102:1686":{"id":"b:2:2871-0:3102:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3363:6130":{"id":"2:3363:6130","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3364:181","2:3365:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2792:1947":{"id":"0:2792:1947","crate_id":0,"name":"TRAILER","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Allows the sender to include additional fields at the end of chunked\nmessages.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1288":{"id":"0:1288","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[263,0],"end":[270,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1290:127","0:1291:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3162:4376":{"id":"0:3162:4376","crate_id":0,"name":"IM_A_TEAPOT","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"418 I'm a teapot\n[curiously not registered by IANA but [RFC2324](https://tools.ietf.org/html/rfc2324)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"1:5651:6468":{"id":"1:5651:6468","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5652:57257","1:5653:5556"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3211:1415":{"id":"2:3211:1415","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1595":{"id":"0:1595","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[216,0],"end":[225,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":"Formats the status code, *including* the canonical reason.\n\n# Example\n\n```\n# use http::StatusCode;\nassert_eq!(format!(\"{}\", StatusCode::OK), \"200 OK\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1596:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:3227:1687":{"id":"b:5:787-0:3227:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:5304","5:790:5802","5:791:5803"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2786:1941":{"id":"0:2786:1941","crate_id":0,"name":"SEC_WEBSOCKET_PROTOCOL","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"The |Sec-WebSocket-Protocol| header field is used in the WebSocket\nopening handshake. It is sent from the client to the server and back\nfrom the server to the client to confirm the subprotocol of the\nconnection.  This enables scripts to both select a subprotocol and be\nsure that the server agreed to serve that subprotocol.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:3379:6133":{"id":"2:3379:6133","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3381:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3155:4341":{"id":"0:3155:4341","crate_id":0,"name":"LENGTH_REQUIRED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"a:2:3268:211-0:3227:1687":{"id":"a:2:3268:211-0:3227:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3309:5286-0:3247:4525":{"id":"a:2:3309:5286-0:3247:4525","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:14165:141":{"id":"2:14165:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14166:277","2:14167:518","2:14168:280","2:14169:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3280:220-0:1494:1685":{"id":"a:2:3280:220-0:1494:1685","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3268:211":{"id":"2:3268:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6413-0:1244:3657":{"id":"b:5:6413-0:1244:3657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3166:4393":{"id":"0:3166:4393","crate_id":0,"name":"FAILED_DEPENDENCY","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1677":{"id":"0:1677","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[39,0],"end":[39,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::path::PathAndQuery","name":"PathAndQuery","id":"0:3192:4489","glob":false}},"0:2101:2576":{"id":"0:2101:2576","crate_id":0,"name":"from_static","span":{"filename":"src/uri/mod.rs","begin":[361,4],"end":[367,5]},"visibility":"public","docs":"Convert a `Uri` from a static string.\n\nThis function will not perform any copying, however the string is\nchecked to ensure that it is valid.\n\n# Panics\n\nThis function panics if the argument is an invalid URI.\n\n# Examples\n\n```\n# use http::uri::Uri;\nlet uri = Uri::from_static(\"http://example.com/foo\");\n\nassert_eq!(uri.host().unwrap(), \"example.com\");\nassert_eq!(uri.path(), \"/foo\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3141:4272":{"id":"0:3141:4272","crate_id":0,"name":"USE_PROXY","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1282:660":{"id":"0:1282:660","crate_id":0,"name":"fmt","span":{"filename":"src/method.rs","begin":[244,4],"end":[246,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2736:1891":{"id":"0:2736:1891","crate_id":0,"name":"ACCESS_CONTROL_MAX_AGE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates how long the results of a preflight request can be cached.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:3118:415":{"id":"0:3118:415","crate_id":0,"name":"cmp","span":{"filename":"src/status.rs","begin":[44,49],"end":[44,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37624:178","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1602:604":{"id":"0:1602:604","crate_id":0,"name":"eq","span":{"filename":"src/status.rs","begin":[243,4],"end":[245,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2726:1881":{"id":"0:2726:1881","crate_id":0,"name":"ACCEPT","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Advertises which content types the client is able to understand.\n\nThe Accept request HTTP header advertises which content types, expressed\nas MIME types, the client is able to understand. Using content\nnegotiation, the server then selects one of the proposals, uses it and\ninforms the client of its choice with the Content-Type response header.\nBrowsers set adequate values for this header depending of the context\nwhere the request is done: when fetching a CSS stylesheet a different\nvalue is set for the request than when fetching an image, video or a\nscript.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"a:2:3280:220-0:3094:3795":{"id":"a:2:3280:220-0:3094:3795","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8403:151":{"id":"2:8403:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8404:2386","2:8405:1866","2:8406:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2870:2589":{"id":"2:2870:2589","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1500:1502":{"id":"0:1500:1502","crate_id":0,"name":"version","span":{"filename":"src/response.rs","begin":[193,4],"end":[193,24]},"visibility":"public","docs":"The response's version","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"2:3215:127":{"id":"2:3215:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38805:4994","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:3422:6143":{"id":"2:3422:6143","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3424:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3524:132":{"id":"2:3524:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3526:181","2:3527:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3152:4326":{"id":"0:3152:4326","crate_id":0,"name":"REQUEST_TIMEOUT","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:3288:604":{"id":"0:3288:604","crate_id":0,"name":"eq","span":{"filename":"src/version.rs","begin":[25,9],"end":[25,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3101:660":{"id":"0:3101:660","crate_id":0,"name":"fmt","span":{"filename":"src/response.rs","begin":[208,9],"end":[208,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13472:59408":{"id":"2:13472:59408","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13053:5351","str::split":"1:16011:5092","`DoubleEndedIterator`":"2:8447:120","prim@char":"1:16005:5087"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49477:5371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1631:1676":{"id":"0:1631:1676","crate_id":0,"name":"uri","span":{"filename":"src/uri/mod.rs","begin":[1,0],"end":[1118,1]},"visibility":"public","docs":"URI component of request and response lines\n\nThis module primarily contains the `Uri` type which is a component of all\nHTTP requests and also reexports this type at the root of the crate. A URI\nis not always a \"full URL\" in the sense of something you'd type into a web\nbrowser, but HTTP requests may only have paths on servers but may have full\nschemes and hostnames on clients.\n\n# Examples\n\n```\nuse http::Uri;\n\nlet uri = \"/foo/bar?baz\".parse::<Uri>().unwrap();\nassert_eq!(uri.path(), \"/foo/bar\");\nassert_eq!(uri.query(), Some(\"baz\"));\nassert_eq!(uri.host(), None);\n\nlet uri = \"https://www.rust-lang.org/install.html\".parse::<Uri>().unwrap();\nassert_eq!(uri.scheme_str(), Some(\"https\"));\nassert_eq!(uri.host(), Some(\"www.rust-lang.org\"));\nassert_eq!(uri.path(), \"/install.html\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3227:1687","0:3233:3782","0:3242:4523","0:3247:4525","0:1671","0:1674","0:1677","0:1680","0:1683"],"is_stripped":false}},"21:42:5296":{"id":"21:42:5296","crate_id":21,"name":"Buf","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["21:43:64180","21:44:64198","21:45:64199","21:47:64200","21:48:64201","21:49:64202","21:50:64203","21:51:64204","21:52:64205","21:53:64206","21:54:64207","21:55:64208","21:56:64209","21:57:64210","21:58:64211","21:59:64212","21:60:64213","21:61:64214","21:62:64215","21:63:64216","21:64:64222","21:65:64223","21:66:64224","21:67:64225","21:68:64217","21:69:64218","21:70:64219","21:71:64220","21:72:64226","21:73:64227","21:74:64228","21:75:64229","21:76:64221","21:80:1806","21:81:5761","21:83:7479"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2167":{"id":"0:2167","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[1025,0],"end":[1043,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2168:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3184:4488":{"id":"0:3184:4488","crate_id":0,"name":"Authority","span":{"filename":"src/uri/authority.rs","begin":[13,0],"end":[15,1]},"visibility":"public","docs":"Represents the authority component of a URI.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:2766:1921":{"id":"0:2766:1921","crate_id":0,"name":"IF_RANGE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Makes a request conditional based on range.\n\nThe If-Range HTTP request header makes a range request conditional: if\nthe condition is fulfilled, the range request will be issued and the\nserver sends back a 206 Partial Content answer with the appropriate\nbody. If the condition is not fulfilled, the full resource is sent back,\nwith a 200 OK status.\n\nThis header can be used either with a Last-Modified validator, or with\nan ETag, but not with both.\n\nThe most common use case is to resume a download, to guarantee that the\nstored resource has not been modified since the last fragment has been\nreceived.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:490:1696":{"id":"0:490:1696","crate_id":0,"name":"Sealed","span":{"filename":"src/header/map.rs","begin":[3282,4],"end":[3291,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:3009:1683":{"id":"b:5:787-0:3009:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:5304","5:790:5802","5:791:5803"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13419:13413":{"id":"2:13419:13413","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13442:6811":{"id":"2:13442:6811","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:16005:5087"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49435:5357","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3999:68":{"id":"2:3999:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4000:1427"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:10306:5393":{"id":"2:10306:5393","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10307:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2752:1907":{"id":"0:2752:1907","crate_id":0,"name":"CONTENT_SECURITY_POLICY_REPORT_ONLY","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Allows experimenting with policies by monitoring their effects.\n\nThe HTTP Content-Security-Policy-Report-Only response header allows web\ndevelopers to experiment with policies by monitoring (but not enforcing)\ntheir effects. These violation reports consist of JSON documents sent\nvia an HTTP POST request to the specified URI.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1521:3893":{"id":"0:1521:3893","crate_id":0,"name":"into_parts","span":{"filename":"src/response.rs","begin":[454,4],"end":[456,5]},"visibility":"public","docs":"Consumes the response returning the head and body parts.\n\n# Examples\n\n```\n# use http::*;\nlet response: Response<()> = Response::default();\nlet (parts, body) = response.into_parts();\nassert_eq!(parts.status, StatusCode::OK);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},{"kind":"generic","inner":"T"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1182":{"id":"0:1182","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[154,4],"end":[154,11]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::UPGRADE","name":"UPGRADE","id":"0:2795:1949","glob":false}},"0:3357:1680":{"id":"0:3357:1680","crate_id":0,"name":"Extensions","span":{"filename":"src/extensions.rs","begin":[35,0],"end":[39,1]},"visibility":"public","docs":"A type map of protocol extensions.\n\n`Extensions` can be used by `Request` and `Response` to store\nextra data derived from the underlying protocol.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1822:3805":{"id":"0:1822:3805","crate_id":0,"name":"builder","span":{"filename":"src/uri/builder.rs","begin":[1,0],"end":[197,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3188:3795"],"is_stripped":true}},"a:2:3280:220-0:3283:1688":{"id":"a:2:3280:220-0:3283:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3197:4492":{"id":"0:3197:4492","crate_id":0,"name":"Scheme","span":{"filename":"src/uri/scheme.rs","begin":[13,0],"end":[15,1]},"visibility":"public","docs":"Represents the scheme component of a URI","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"b:2:3201-0:3247:4525":{"id":"b:2:3201-0:3247:4525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8879:1969":{"id":"2:8879:1969","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8601:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1008":{"id":"0:1008","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[96,4],"end":[96,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCESS_CONTROL_MAX_AGE","name":"ACCESS_CONTROL_MAX_AGE","id":"0:2736:1891","glob":false}},"1:5801:6381":{"id":"1:5801:6381","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5802:8454"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1197":{"id":"0:1197","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[159,4],"end":[159,11]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::WARNING","name":"WARNING","id":"0:2799:1954","glob":false}},"0:2445:1876":{"id":"0:2445:1876","crate_id":0,"name":"ValuesMut","span":{"filename":"src/header/map.rs","begin":[130,0],"end":[132,1]},"visibility":"public","docs":"`HeaderMap` mutable value iterator","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"a:2:3268:211-0:1361:1684":{"id":"a:2:3268:211-0:1361:1684","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3135:4243":{"id":"0:3135:4243","crate_id":0,"name":"IM_USED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1604:681":{"id":"0:1604:681","crate_id":0,"name":"from","span":{"filename":"src/status.rs","begin":[250,4],"end":[252,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["status",{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2727:1882":{"id":"0:2727:1882","crate_id":0,"name":"ACCEPT_CHARSET","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Advertises which character set the client is able to understand.\n\nThe Accept-Charset request HTTP header advertises which character set\nthe client is able to understand. Using content negotiation, the server\nthen selects one of the proposals, uses it and informs the client of its\nchoice within the Content-Type response header. Browsers usually don't\nset this header as the default value for each content type is usually\ncorrect and transmitting it would allow easier fingerprinting.\n\nIf the server cannot serve any matching character set, it can\ntheoretically send back a 406 (Not Acceptable) error code. But, for a\nbetter user experience, this is rarely done and the more common way is\nto ignore the Accept-Charset header in this case.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1369:3790":{"id":"0:1369:3790","crate_id":0,"name":"headers","span":{"filename":"src/request.rs","begin":[177,4],"end":[177,39]},"visibility":"public","docs":"The request's headers","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"0:2392:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},"1:5739:6376":{"id":"1:5739:6376","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5740:8454","1:5741:10719"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:1244:3657":{"id":"b:2:3207-0:1244:3657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3123:4187":{"id":"0:3123:4187","crate_id":0,"name":"CONTINUE","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:3430:6145":{"id":"2:3430:6145","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3432:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3268:211-0:3247:4525":{"id":"a:2:3268:211-0:3247:4525","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3125:4196":{"id":"0:3125:4196","crate_id":0,"name":"PROCESSING","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"b:2:2868-0:3094:3795":{"id":"b:2:2868-0:3094:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2770:1925":{"id":"0:2770:1925","crate_id":0,"name":"LOCATION","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates the URL to redirect a page to.\n\nThe Location response header indicates the URL to redirect a page to. It\nonly provides a meaning when served with a 3xx status response.\n\nThe HTTP method used to make the new request to fetch the page pointed\nto by Location depends of the original method and of the kind of\nredirection:\n\n* If 303 (See Also) responses always lead to the use of a GET method,\n307 (Temporary Redirect) and 308 (Permanent Redirect) don't change the\nmethod used in the original request;\n\n* 301 (Permanent Redirect) and 302 (Found) doesn't change the method\nmost of the time, though older user-agents may (so you basically don't\nknow).\n\nAll responses with one of these status codes send a Location header.\n\nBeside redirect response, messages with 201 (Created) status also\ninclude the Location header. It indicates the URL to the newly created\nresource.\n\nLocation and Content-Location are different: Location indicates the\ntarget of a redirection (or the URL of a newly created resource), while\nContent-Location indicates the direct URL to use to access the resource\nwhen content negotiation happened, without the need of further content\nnegotiation. Location is a header associated with the response, while\nContent-Location is associated with the entity returned.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2197:59":{"id":"0:2197:59","crate_id":0,"name":"default","span":{"filename":"src/version.rs","begin":[57,4],"end":[59,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3176:4440":{"id":"0:3176:4440","crate_id":0,"name":"GATEWAY_TIMEOUT","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:13446:7457":{"id":"2:13446:7457","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49713:5365","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:954":{"id":"0:954","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[79,69],"end":[79,75]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::Values","name":"Values","id":"0:2437:1875","glob":false}},"0:1382:971":{"id":"0:1382:971","crate_id":0,"name":"options","span":{"filename":"src/request.rs","begin":[323,4],"end":[330,5]},"visibility":"public","docs":"Creates a new `Builder` initialized with an OPTIONS method and the given URI.\n\nThis method returns an instance of `Builder` which can be used to\ncreate a `Request`.\n\n# Example\n\n```\n# use http::*;\n\nlet request = Request::options(\"https://www.rust-lang.org/\")\n    .body(())\n    .unwrap();\n# assert_eq!(*request.method(), Method::OPTIONS);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["uri",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1152":{"id":"0:1152","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[144,4],"end":[144,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::SEC_WEBSOCKET_EXTENSIONS","name":"SEC_WEBSOCKET_EXTENSIONS","id":"0:2784:1939","glob":false}},"0:2199:660":{"id":"0:2199:660","crate_id":0,"name":"fmt","span":{"filename":"src/version.rs","begin":[63,4],"end":[74,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2140:127":{"id":"0:2140:127","crate_id":0,"name":"Error","span":{"filename":"src/uri/mod.rs","begin":[764,4],"end":[764,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:13439:59398":{"id":"2:13439:59398","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:16011:5092"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2357":{"id":"0:2357","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[186,0],"end":[186,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::extensions::Extensions","name":"Extensions","id":"0:3357:1680","glob":false}},"0:981":{"id":"0:981","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[87,4],"end":[87,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCEPT_CHARSET","name":"ACCEPT_CHARSET","id":"0:2727:1882","glob":false}},"0:2370":{"id":"0:2370","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[190,0],"end":[190,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::request::Request","name":"Request","id":"0:1361:1684","glob":false}},"0:1400:1502":{"id":"0:1400:1502","crate_id":0,"name":"version","span":{"filename":"src/request.rs","begin":[534,4],"end":[536,5]},"visibility":"public","docs":"Returns the associated version.\n\n# Examples\n\n```\n# use http::*;\nlet request: Request<()> = Request::default();\nassert_eq!(request.version(), Version::HTTP_11);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4001-0:3227:1687":{"id":"b:2:4001-0:3227:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2762:1917":{"id":"0:2762:1917","crate_id":0,"name":"HOST","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Specifies the domain name of the server and (optionally) the TCP port\nnumber on which the server is listening.\n\nIf no port is given, the default port for the service requested (e.g.,\n\"80\" for an HTTP URL) is implied.\n\nA Host header field must be sent in all HTTP/1.1 request messages. A 400\n(Bad Request) status code will be sent to any HTTP/1.1 request message\nthat lacks a Host header field or contains more than one.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"1:6963:6359":{"id":"1:6963:6359","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6964:57608"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1284:59":{"id":"0:1284:59","crate_id":0,"name":"default","span":{"filename":"src/method.rs","begin":[251,4],"end":[253,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23467:20564":{"id":"2:23467:20564","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23468:61587","2:23469:61586","2:23470:61588"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialOrd","id":"2:23462:6836","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3197-0:1361:1684":{"id":"b:2:3197-0:1361:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4001-0:3098:3795":{"id":"b:2:4001-0:3098:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:933":{"id":"0:933","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[78,83],"end":[78,90]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::IterMut","name":"IterMut","id":"0:2410:1868","glob":false}},"5:6103:2624":{"id":"5:6103:2624","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2755:1910":{"id":"0:2755:1910","crate_id":0,"name":"DNT","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates the client's tracking preference.\n\nThis header lets users indicate whether they would prefer privacy rather\nthan personalized content.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1290:127":{"id":"0:1290:127","crate_id":0,"name":"Error","span":{"filename":"src/method.rs","begin":[264,4],"end":[264,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:3716:6148":{"id":"2:3716:6148","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3647:5847","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2737:1892":{"id":"0:2737:1892","crate_id":0,"name":"ACCESS_CONTROL_REQUEST_HEADERS","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Informs the server which HTTP headers will be used when an actual\nrequest is made.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2402:1867":{"id":"0:2402:1867","crate_id":0,"name":"Iter","span":{"filename":"src/header/map.rs","begin":[84,0],"end":[86,1]},"visibility":"public","docs":"`HeaderMap` entry iterator.\n\nYields `(&HeaderName, &value)` tuples. The same header name may be yielded\nmore than once if it has more than one associated value.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1601":{"id":"0:1601","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[241,0],"end":[246,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"u16"},"items":["0:1602:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4001-0:1361:1684":{"id":"b:2:4001-0:1361:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13072:5347":{"id":"2:13072:5347","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13074:6804","2:13075:922","2:13076:61866","2:13077:61867"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6091:63879":{"id":"5:6091:63879","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1089":{"id":"0:1089","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[123,4],"end":[123,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::IF_MATCH","name":"IF_MATCH","id":"0:2763:1918","glob":false}},"b:2:3207-0:3227:1687":{"id":"b:2:3207-0:3227:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13438:63235":{"id":"2:13438:63235","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3580:2565","str::slice_unchecked":"1:16011:5092","`str`":"1:16011:5092"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:1498:3782":{"id":"b:2:3212-0:1498:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2118:127":{"id":"0:2118:127","crate_id":0,"name":"Error","span":{"filename":"src/uri/mod.rs","begin":[710,4],"end":[710,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:14239:5849":{"id":"2:14239:5849","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14240:61097","2:14241:61098","2:14242:61099","2:14243:2190","2:14244:61100","2:14245:61101","2:14246:2497"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1149":{"id":"0:1149","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[143,4],"end":[143,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::SEC_WEBSOCKET_ACCEPT","name":"SEC_WEBSOCKET_ACCEPT","id":"0:2783:1938","glob":false}},"0:2373":{"id":"0:2373","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,0],"end":[191,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::response::Response","name":"Response","id":"0:1494:1685","glob":false}},"0:1452:3874":{"id":"0:1452:3874","crate_id":0,"name":"extensions_mut","span":{"filename":"src/request.rs","begin":[1029,4],"end":[1031,5]},"visibility":"public","docs":"Get a mutable reference to the extensions for this request builder.\n\nIf the builder has an error, this returns `None`.\n\n# Example\n\n```\n# use http::Request;\nlet mut req = Request::builder().extension(\"My Extension\");\nlet mut extensions = req.extensions_mut().unwrap();\nassert_eq!(extensions.get::<&'static str>(), Some(&\"My Extension\"));\nextensions.insert(5u32);\nassert_eq!(extensions.get::<u32>(), Some(&5u32));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Extensions","id":"0:3357:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:930":{"id":"0:930","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[78,77],"end":[78,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::Iter","name":"Iter","id":"0:2402:1867","glob":false}},"0:1398:1676":{"id":"0:1398:1676","crate_id":0,"name":"uri","span":{"filename":"src/request.rs","begin":[505,4],"end":[507,5]},"visibility":"public","docs":"Returns a reference to the associated URI.\n\n# Examples\n\n```\n# use http::*;\nlet request: Request<()> = Request::default();\nassert_eq!(*request.uri(), *\"/\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:3283:1688":{"id":"b:2:3212-0:3283:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1278:604":{"id":"0:1278:604","crate_id":0,"name":"eq","span":{"filename":"src/method.rs","begin":[232,4],"end":[234,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2745:1900":{"id":"0:2745:1900","crate_id":0,"name":"CONTENT_DISPOSITION","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates if the content is expected to be displayed inline.\n\nIn a regular HTTP response, the Content-Disposition response header is a\nheader indicating if the content is expected to be displayed inline in\nthe browser, that is, as a Web page or as part of a Web page, or as an\nattachment, that is downloaded and saved locally.\n\nIn a multipart/form-data body, the HTTP Content-Disposition general\nheader is a header that can be used on the subpart of a multipart body\nto give information about the field it applies to. The subpart is\ndelimited by the boundary defined in the Content-Type header. Used on\nthe body itself, Content-Disposition has no effect.\n\nThe Content-Disposition header is defined in the larger context of MIME\nmessages for e-mail, but only a subset of the possible parameters apply\nto HTTP forms and POST requests. Only the value form-data, as well as\nthe optional directive name and filename, can be used in the HTTP\ncontext.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1534:660":{"id":"0:1534:660","crate_id":0,"name":"fmt","span":{"filename":"src/response.rs","begin":[517,4],"end":[525,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13435:59378":{"id":"2:13435:59378","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:5745:6377":{"id":"1:5745:6377","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5746:9943","1:5747:60832","1:5748:8454","1:5749:60833","1:5750:6693","1:5751:6694","1:5752:60834","1:5753:1302","1:5754:60835","1:5755:60836","1:5756:60837","1:5757:60838","1:5758:60839","1:5759:60840","1:5760:60841","1:5761:60842"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1680":{"id":"0:1680","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[40,0],"end":[40,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::port::Port","name":"Port","id":"0:1973:4491","glob":false}},"0:2181:660":{"id":"0:2181:660","crate_id":0,"name":"fmt","span":{"filename":"src/uri/mod.rs","begin":[1090,4],"end":[1092,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3009:1683":{"id":"0:3009:1683","crate_id":0,"name":"Method","span":{"filename":"src/method.rs","begin":[46,0],"end":[46,25]},"visibility":"public","docs":"The Request Method (VERB)\n\nThis type also contains constants for a number of common HTTP methods such\nas GET, POST, etc.\n\nCurrently includes 8 variants representing the 8 methods defined in\n[RFC 7230](https://tools.ietf.org/html/rfc7231#section-4.1), plus PATCH,\nand an Extension variant for all extensions.\n\n# Examples\n\n```\nuse http::Method;\n\nassert_eq!(Method::GET, Method::from_bytes(b\"GET\").unwrap());\nassert!(Method::GET.is_idempotent());\nassert_eq!(Method::POST.as_str(), \"POST\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1246","a:2:3268:211-0:3009:1683","a:2:3280:220-0:3009:1683","a:2:3309:5286-0:3009:1683","a:2:9258:5489-0:3009:1683","a:2:9259:5488-0:3009:1683","b:2:3197-0:3009:1683","b:2:2868-0:3009:1683","b:2:3201-0:3009:1683","b:2:4001-0:3009:1683","b:2:3207-0:3009:1683","b:2:2871-0:3009:1683","b:2:3212-0:3009:1683","b:5:6413-0:3009:1683","b:5:787-0:3009:1683","0:3012","0:3014","0:3015","0:3018","0:3019","0:3021","0:1261","0:1263","0:1266","0:1269","0:1271","0:1273","0:1276","0:1279","0:1281","0:1283","0:1285","0:1288","0:1292","0:1296"]}},"b:2:3197-0:3009:1683":{"id":"b:2:3197-0:3009:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1405:3874":{"id":"0:1405:3874","crate_id":0,"name":"extensions_mut","span":{"filename":"src/request.rs","begin":[609,4],"end":[611,5]},"visibility":"public","docs":"Returns a mutable reference to the associated extensions.\n\n# Examples\n\n```\n# use http::*;\n# use http::header::*;\nlet mut request: Request<()> = Request::default();\nrequest.extensions_mut().insert(\"hello\");\nassert_eq!(request.extensions().get(), Some(&\"hello\"));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Extensions","id":"0:3357:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2120":{"id":"0:2120","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[718,0],"end":[725,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2122:127","0:2123:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9259:5488-0:3242:4523":{"id":"a:2:9259:5488-0:3242:4523","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3019":{"id":"0:3019","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[45,27],"end":[45,29]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2925:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9258:5489-0:3247:4525":{"id":"a:2:9258:5489-0:3247:4525","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1258:3693":{"id":"0:1258:3693","crate_id":0,"name":"is_safe","span":{"filename":"src/method.rs","begin":[150,4],"end":[155,5]},"visibility":"public","docs":"Whether a method is considered \"safe\", meaning the request is\nessentially read-only.\n\nSee [the spec](https://tools.ietf.org/html/rfc7231#section-4.2.1)\nfor more words.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2123:1414":{"id":"0:2123:1414","crate_id":0,"name":"try_from","span":{"filename":"src/uri/mod.rs","begin":[722,4],"end":[724,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"22:37:6307":{"id":"22:37:6307","crate_id":22,"name":"Integer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"22:39:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3294:408":{"id":"0:3294:408","crate_id":0,"name":"clone","span":{"filename":"src/version.rs","begin":[25,38],"end":[25,43]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6104:63880":{"id":"5:6104:63880","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:1992","`String`":"5:8368:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1992","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:5850","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2873:57179":{"id":"2:2873:57179","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:1365:3782":{"id":"b:2:3201-0:1365:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1104":{"id":"0:1104","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[128,4],"end":[128,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::LAST_MODIFIED","name":"LAST_MODIFIED","id":"0:2768:1923","glob":false}},"b:2:3212-0:1365:3782":{"id":"b:2:3212-0:1365:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4001-0:1365:3782":{"id":"b:2:4001-0:1365:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1520:3888":{"id":"0:1520:3888","crate_id":0,"name":"into_body","span":{"filename":"src/response.rs","begin":[439,4],"end":[441,5]},"visibility":"public","docs":"Consumes the response, returning just the body.\n\n# Examples\n\n```\n# use http::Response;\nlet response = Response::new(10);\nlet body = response.into_body();\nassert_eq!(body, 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:1361:1684":{"id":"b:2:3207-0:1361:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2106:4619":{"id":"0:2106:4619","crate_id":0,"name":"scheme_str","span":{"filename":"src/uri/mod.rs","begin":[502,4],"end":[508,5]},"visibility":"public","docs":"Get the scheme of this `Uri` as a `&str`.\n\n# Example\n\n```\n# use http::Uri;\nlet uri: Uri = \"http://example.org/hello/world\".parse().unwrap();\n\nassert_eq!(uri.scheme_str(), Some(\"http\"));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2112:4657":{"id":"0:2112:4657","crate_id":0,"name":"port_u16","span":{"filename":"src/uri/mod.rs","begin":[652,4],"end":[654,5]},"visibility":"public","docs":"Get the port of this `Uri` as a `u16`.\n\n\n# Example\n\n```\n# use http::{Uri, uri::Port};\nlet uri: Uri = \"http://example.org:80/hello/world\".parse().unwrap();\n\nassert_eq!(uri.port_u16(), Some(80));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u16"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:3283:1688":{"id":"b:2:3207-0:3283:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:1244:3657":{"id":"b:2:3197-0:1244:3657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:1580:4125":{"id":"b:2:3197-0:1580:4125","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2421:1866":{"id":"0:2421:1866","crate_id":0,"name":"IntoIter","span":{"filename":"src/header/map.rs","begin":[104,0],"end":[109,1]},"visibility":"public","docs":"An owning iterator over the entries of a `HeaderMap`.\n\nThis struct is created by the `into_iter` method on `HeaderMap`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"a:2:9259:5488-0:1580:4125":{"id":"a:2:9259:5488-0:1580:4125","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2789:1944":{"id":"0:2789:1944","crate_id":0,"name":"SET_COOKIE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Used to send cookies from the server to the user agent.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1506":{"id":"0:1506","crate_id":0,"name":null,"span":{"filename":"src/response.rs","begin":[235,0],"end":[482,1]},"visibility":{"restricted":{"parent":"0:1461:1674","path":"::response"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1508:920","0:1509:3842","0:1510:1675","0:1511:4051","0:1512:1502","0:1513:3862","0:1514:3790","0:1515:3868","0:1516:1679","0:1517:3874","0:1518:1802","0:1519:3882","0:1520:3888","0:1521:3893","0:1522:841"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1062":{"id":"0:1062","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[114,4],"end":[114,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::COOKIE","name":"COOKIE","id":"0:2754:1909","glob":false}},"b:2:3212-0:1494:1685":{"id":"b:2:3212-0:1494:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2776:1931":{"id":"0:2776:1931","crate_id":0,"name":"PUBLIC_KEY_PINS","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Associates a specific cryptographic public key with a certain server.\n\nThis decreases the risk of MITM attacks with forged certificates. If one\nor several keys are pinned and none of them are used by the server, the\nbrowser will not accept the response as legitimate, and will not display\nit.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:3102:1686":{"id":"0:3102:1686","crate_id":0,"name":"StatusCode","span":{"filename":"src/status.rs","begin":[45,0],"end":[45,34]},"visibility":"public","docs":"An HTTP status code (`status-code` in RFC 7230 et al.).\n\nConstants are provided for known status codes, including those in the IANA\n[HTTP Status Code Registry](\nhttps://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml).\n\nStatus code values in the range 100-999 (inclusive) are supported by this\ntype. Values in the range 100-599 are semantically classified by the most\nsignificant digit. See [`StatusCode::is_success`], etc. Values above 599\nare unclassified but allowed for legacy compatibility, though their use is\ndiscouraged. Applications may interpret such values as protocol errors.\n\n# Examples\n\n```\nuse http::StatusCode;\n\nassert_eq!(StatusCode::from_u16(200).unwrap(), StatusCode::OK);\nassert_eq!(StatusCode::NOT_FOUND.as_u16(), 404);\nassert!(StatusCode::OK.is_success());\n```","links":{"`StatusCode::is_success`":"0:3102:1686"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1582","0:3122","a:2:3268:211-0:3102:1686","a:2:3280:220-0:3102:1686","a:2:3309:5286-0:3102:1686","a:2:9258:5489-0:3102:1686","a:2:9259:5488-0:3102:1686","b:2:3197-0:3102:1686","b:2:2868-0:3102:1686","b:2:3201-0:3102:1686","b:2:4001-0:3102:1686","b:2:3207-0:3102:1686","b:2:2871-0:3102:1686","b:2:3212-0:3102:1686","b:5:6413-0:3102:1686","b:5:787-0:3102:1686","0:3105","0:3107","0:3108","0:3109","0:3112","0:3113","0:3115","0:3117","0:3119","0:1593","0:1595","0:1597","0:1599","0:1601","0:1603","0:1605","0:1608","0:1611","0:1615","0:1619"]}},"0:3153:4331":{"id":"0:3153:4331","crate_id":0,"name":"CONFLICT","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:23086:20545":{"id":"2:23086:20545","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23087:9447","2:23088:62618","2:23089:62619"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23079:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4001-0:3102:1686":{"id":"b:2:4001-0:3102:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3117":{"id":"0:3117","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[44,49],"end":[44,52]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2956:177","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3118:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2775:1930":{"id":"0:2775:1930","crate_id":0,"name":"PROXY_AUTHORIZATION","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Contains the credentials to authenticate a user agent to a proxy server.\n\nThis header is usually included after the server has responded with a\n407 Proxy Authentication Required status and the Proxy-Authenticate\nheader.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"a:2:9258:5489-0:3242:4523":{"id":"a:2:9258:5489-0:3242:4523","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3120:715":{"id":"0:3120:715","crate_id":0,"name":"hash","span":{"filename":"src/status.rs","begin":[44,54],"end":[44,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10539:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1395"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3197-0:3283:1688":{"id":"b:2:3197-0:3283:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2741:1896":{"id":"0:2741:1896","crate_id":0,"name":"ALT_SVC","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Advertises the availability of alternate services to clients.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"1:6791:6473":{"id":"1:6791:6473","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6792:57284","1:6793:57285"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1029":{"id":"0:1029","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[103,4],"end":[103,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::CACHE_CONTROL","name":"CACHE_CONTROL","id":"0:2743:1898","glob":false}},"a:2:9258:5489-0:1498:3782":{"id":"a:2:9258:5489-0:1498:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1413":{"id":"0:1413","crate_id":0,"name":null,"span":{"filename":"src/request.rs","begin":[698,0],"end":[702,1]},"visibility":{"restricted":{"parent":"0:1324:1673","path":"::request"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3246:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3246:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1415:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1128":{"id":"0:1128","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[136,4],"end":[136,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::PUBLIC_KEY_PINS","name":"PUBLIC_KEY_PINS","id":"0:2776:1931","glob":false}},"b:2:3207-0:3247:4525":{"id":"b:2:3207-0:3247:4525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13478:63238":{"id":"2:13478:63238","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:16005:5087","self::pattern":"2:13053:5351","str::split_terminator":"1:16011:5092","str::split":"1:16011:5092"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49527:5375","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1439:1671":{"id":"0:1439:1671","crate_id":0,"name":"header","span":{"filename":"src/request.rs","begin":[918,4],"end":[931,5]},"visibility":"public","docs":"Appends a header to this request builder.\n\nThis function will append the provided key/value as a header to the\ninternal `HeaderMap` being constructed. Essentially this is equivalent\nto calling `HeaderMap::append`.\n\n# Examples\n\n```\n# use http::*;\n# use http::header::HeaderValue;\n\nlet req = Request::builder()\n    .header(\"Accept\", \"text/html\")\n    .header(\"X-Custom-Foo\", \"bar\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["key",{"kind":"generic","inner":"K"}],["value",{"kind":"generic","inner":"V"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2731:1886":{"id":"0:2731:1886","crate_id":0,"name":"ACCESS_CONTROL_ALLOW_CREDENTIALS","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Preflight response indicating if the response to the request can be\nexposed to the page.\n\nThe Access-Control-Allow-Credentials response header indicates whether\nor not the response to the request can be exposed to the page. It can be\nexposed when the true value is returned; it can't in other cases.\n\nCredentials are cookies, authorization headers or TLS client\ncertificates.\n\nWhen used as part of a response to a preflight request, this indicates\nwhether or not the actual request can be made using credentials. Note\nthat simple GET requests are not preflighted, and so if a request is\nmade for a resource with credentials, if this header is not returned\nwith the resource, the response is ignored by the browser and not\nreturned to web content.\n\nThe Access-Control-Allow-Credentials header works in conjunction with\nthe XMLHttpRequest.withCredentials property or with the credentials\noption in the Request() constructor of the Fetch API. Credentials must\nbe set on both sides (the Access-Control-Allow-Credentials header and in\nthe XHR or Fetch request) in order for the CORS request with credentials\nto succeed.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2135":{"id":"0:2135","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[754,0],"end":[761,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2136:127","0:2137:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1297:126":{"id":"0:1297:126","crate_id":0,"name":"Err","span":{"filename":"src/method.rs","begin":[282,4],"end":[282,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:2739:1894":{"id":"0:2739:1894","crate_id":0,"name":"AGE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates the time in seconds the object has been in a proxy cache.\n\nThe Age header is usually close to zero. If it is Age: 0, it was\nprobably just fetched from the origin server; otherwise It is usually\ncalculated as a difference between the proxy's current date and the Date\ngeneral header included in the HTTP response.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"1:7799:6547":{"id":"1:7799:6547","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7800:60829"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2392:1681":{"id":"0:2392:1681","crate_id":0,"name":"HeaderMap","span":{"filename":"src/header/map.rs","begin":[45,0],"end":[52,1]},"visibility":"public","docs":"A set of HTTP headers\n\n`HeaderMap` is an multimap of [`HeaderName`] to values.\n\n[`HeaderName`]: struct.HeaderName.html\n\n# Examples\n\nBasic usage\n\n```\n# use http::HeaderMap;\n# use http::header::{CONTENT_LENGTH, HOST, LOCATION};\nlet mut headers = HeaderMap::new();\n\nheaders.insert(HOST, \"example.com\".parse().unwrap());\nheaders.insert(CONTENT_LENGTH, \"123\".parse().unwrap());\n\nassert!(headers.contains_key(HOST));\nassert!(!headers.contains_key(LOCATION));\n\nassert_eq!(headers[HOST], \"example.com\");\n\nheaders.remove(HOST);\n\nassert!(!headers.contains_key(HOST));\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:10539:146":{"id":"2:10539:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10540:652","2:10541:3441","2:10542:4700","2:10543:5738","2:10544:5739","2:10545:5004","2:10546:5740","2:10547:5741","2:10548:5742","2:10549:5743","2:10550:5744","2:10551:5745","2:10552:5746","2:10553:5747","2:10554:5748","2:10555:1531"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:9347:6444":{"id":"1:9347:6444","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9348:59189","1:9349:59190","1:9350:59191","1:9351:59192","1:9352:59193","1:9353:42791","1:9354:59188"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2758:1913":{"id":"0:2758:1913","crate_id":0,"name":"EXPECT","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates expectations that need to be fulfilled by the server in order\nto properly handle the request.\n\nThe only expectation defined in the specification is Expect:\n100-continue, to which the server shall respond with:\n\n* 100 if the information contained in the header is sufficient to cause\nan immediate success,\n\n* 417 (Expectation Failed) if it cannot meet the expectation; or any\nother 4xx status otherwise.\n\nFor example, the server may reject a request if its Content-Length is\ntoo large.\n\nNo common browsers send the Expect header, but some other clients such\nas cURL do so by default.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1583:3599":{"id":"0:1583:3599","crate_id":0,"name":"from_u16","span":{"filename":"src/status.rs","begin":[73,4],"end":[81,5]},"visibility":"public","docs":"Converts a u16 to a status code.\n\nThe function validates the correctness of the supplied u16. It must be\ngreater or equal to 100 and less than 1000.\n\n# Example\n\n```\nuse http::StatusCode;\n\nlet ok = StatusCode::from_u16(200).unwrap();\nassert_eq!(ok, StatusCode::OK);\n\nlet err = StatusCode::from_u16(99);\nassert!(err.is_err());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1550:3647":{"id":"0:1550:3647","crate_id":0,"name":"extension","span":{"filename":"src/response.rs","begin":[691,4],"end":[699,5]},"visibility":"public","docs":"Adds an extension to this builder\n\n# Examples\n\n```\n# use http::*;\n\nlet response = Response::builder()\n    .extension(\"My Extension\")\n    .body(())\n    .unwrap();\n\nassert_eq!(response.extensions().get::<&'static str>(),\n           Some(&\"My Extension\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["extension",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1366:1672":{"id":"0:1366:1672","crate_id":0,"name":"method","span":{"filename":"src/request.rs","begin":[168,4],"end":[168,22]},"visibility":"public","docs":"The request's method","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"2:10310:5390":{"id":"2:10310:5390","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10311:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1301":{"id":"0:1301","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[296,0],"end":[302,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1302:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3268:211-0:1365:3782":{"id":"a:2:3268:211-0:1365:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8366:5234":{"id":"2:8366:5234","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8368:5794"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3233:3782":{"id":"0:3233:3782","crate_id":0,"name":"Parts","span":{"filename":"src/uri/mod.rs","begin":[106,0],"end":[118,1]},"visibility":"public","docs":"The various parts of a URI.\n\nThis struct is used to provide to and retrieve from a URI.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":["0:3234:4485","0:3235:4487","0:3236:4515"],"impls":["a:2:3268:211-0:3233:3782","a:2:3280:220-0:3233:3782","a:2:3309:5286-0:3233:3782","a:2:9258:5489-0:3233:3782","a:2:9259:5488-0:3233:3782","b:2:3197-0:3233:3782","b:2:2868-0:3233:3782","b:2:3201-0:3233:3782","b:2:4001-0:3233:3782","b:2:3207-0:3233:3782","b:2:2871-0:3233:3782","b:2:3212-0:3233:3782","0:3238","0:3240","0:2135","0:2146"]}},"0:3139:4262":{"id":"0:3139:4262","crate_id":0,"name":"SEE_OTHER","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2161":{"id":"0:2161","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[1005,0],"end":[1009,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:2163:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:918":{"id":"0:918","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[78,32],"end":[78,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::GetAll","name":"GetAll","id":"0:2466:1864","glob":false}},"0:1580:4125":{"id":"0:1580:4125","crate_id":0,"name":"InvalidStatusCode","span":{"filename":"src/status.rs","begin":[51,0],"end":[53,1]},"visibility":"public","docs":"A possible error value when converting a `StatusCode` from a `u16` or `&str`\n\nThis error indicates that the supplied input was not a valid number, was less\nthan 100, or was greater than 999.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3268:211-0:1580:4125","a:2:3280:220-0:1580:4125","a:2:3309:5286-0:1580:4125","a:2:9258:5489-0:1580:4125","a:2:9259:5488-0:1580:4125","b:2:3197-0:1580:4125","b:2:2868-0:1580:4125","b:2:3201-0:1580:4125","b:2:4001-0:1580:4125","b:2:3207-0:1580:4125","b:2:2871-0:1580:4125","b:2:3212-0:1580:4125","b:5:6413-0:1580:4125","0:1625","0:1627","0:1629"]}},"2:13481:59410":{"id":"2:13481:59410","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"1:16011:5092","self::pattern":"2:13053:5351","prim@char":"1:16005:5087"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49563:5374","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10241:3484":{"id":"2:10241:3484","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10242:1531","2:10243:6305","2:10245:5681"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3201-0:3242:4523":{"id":"b:2:3201-0:3242:4523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2146":{"id":"0:2146","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[795,0],"end":[821,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":"Convert a `Uri` into `Parts`","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2147:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13522:59415":{"id":"2:13522:59415","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13053:5351","prim@char":"1:16005:5087"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3268:211-0:3242:4523":{"id":"a:2:3268:211-0:3242:4523","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1285":{"id":"0:1285","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[256,0],"end":[261,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1287:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5837:5350":{"id":"5:5837:5350","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:37279"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1625":{"id":"0:1625","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[525,0],"end":[531,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1626:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1370:1679":{"id":"0:1370:1679","crate_id":0,"name":"extensions","span":{"filename":"src/request.rs","begin":[180,4],"end":[180,30]},"visibility":"public","docs":"The request's extensions","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Extensions","id":"0:3357:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"2:3728:224":{"id":"2:3728:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3729:181","2:3730:6150","2:3731:686","2:3732:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3733:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3728:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:5304","5:785:5802","5:786:5803"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1418:660":{"id":"0:1418:660","crate_id":0,"name":"fmt","span":{"filename":"src/request.rs","begin":[705,4],"end":[714,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:1494:1685":{"id":"b:2:3197-0:1494:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9259:5488-0:3227:1687":{"id":"a:2:9259:5488-0:3227:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13543:63255":{"id":"2:13543:63255","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:16005:5087"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49776:5363","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1380:3817":{"id":"0:1380:3817","crate_id":0,"name":"delete","span":{"filename":"src/request.rs","begin":[299,4],"end":[306,5]},"visibility":"public","docs":"Creates a new `Builder` initialized with a DELETE method and the given URI.\n\nThis method returns an instance of `Builder` which can be used to\ncreate a `Request`.\n\n# Example\n\n```\n# use http::*;\n\nlet request = Request::delete(\"https://www.rust-lang.org/\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["uri",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2119:1414":{"id":"0:2119:1414","crate_id":0,"name":"try_from","span":{"filename":"src/uri/mod.rs","begin":[713,4],"end":[715,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3309:5286-0:1365:3782":{"id":"a:2:3309:5286-0:1365:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4001-0:1244:3657":{"id":"b:2:4001-0:1244:3657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1671":{"id":"0:1671","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[37,0],"end":[37,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::authority::Authority","name":"Authority","id":"0:3184:4488","glob":false}},"b:5:6413-0:3102:1686":{"id":"b:5:6413-0:3102:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2790:1945":{"id":"0:2790:1945","crate_id":0,"name":"STRICT_TRANSPORT_SECURITY","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Tells the client to communicate with HTTPS instead of using HTTP.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:3299:415":{"id":"0:3299:415","crate_id":0,"name":"cmp","span":{"filename":"src/version.rs","begin":[25,49],"end":[25,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37624:178","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1501:3790":{"id":"0:1501:3790","crate_id":0,"name":"headers","span":{"filename":"src/response.rs","begin":[196,4],"end":[196,39]},"visibility":"public","docs":"The response's headers","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"0:2392:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},"0:2096:3842":{"id":"0:2096:3842","crate_id":0,"name":"from_parts","span":{"filename":"src/uri/mod.rs","begin":[238,4],"end":[275,5]},"visibility":"public","docs":"Attempt to convert a `Parts` into a `Uri`.\n\n# Examples\n\nRelative URI\n\n```\n# use http::uri::*;\nlet mut parts = Parts::default();\nparts.path_and_query = Some(\"/foo\".parse().unwrap());\n\nlet uri = Uri::from_parts(parts).unwrap();\n\nassert_eq!(uri.path(), \"/foo\");\n\nassert!(uri.scheme().is_none());\nassert!(uri.authority().is_none());\n```\n\nAbsolute URI\n\n```\n# use http::uri::*;\nlet mut parts = Parts::default();\nparts.scheme = Some(\"http\".parse().unwrap());\nparts.authority = Some(\"foo.com\".parse().unwrap());\nparts.path_and_query = Some(\"/foo\".parse().unwrap());\n\nlet uri = Uri::from_parts(parts).unwrap();\n\nassert_eq!(uri.scheme().unwrap().as_str(), \"http\");\nassert_eq!(uri.authority().unwrap(), \"foo.com\");\nassert_eq!(uri.path(), \"/foo\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1617:127":{"id":"0:1617:127","crate_id":0,"name":"Error","span":{"filename":"src/status.rs","begin":[280,4],"end":[280,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:1134":{"id":"0:1134","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[138,4],"end":[138,9]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::RANGE","name":"RANGE","id":"0:2778:1933","glob":false}},"0:2429:1869":{"id":"0:2429:1869","crate_id":0,"name":"Keys","span":{"filename":"src/header/map.rs","begin":[116,0],"end":[118,1]},"visibility":"public","docs":"An iterator over `HeaderMap` keys.\n\nEach header name is yielded only once, even if it has more than one\nassociated value.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1032":{"id":"0:1032","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[104,4],"end":[104,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::CONNECTION","name":"CONNECTION","id":"0:2744:1899","glob":false}},"0:3129:4213":{"id":"0:3129:4213","crate_id":0,"name":"NON_AUTHORITATIVE_INFORMATION","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2732:1887":{"id":"0:2732:1887","crate_id":0,"name":"ACCESS_CONTROL_ALLOW_HEADERS","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Preflight response indicating permitted HTTP headers.\n\nThe Access-Control-Allow-Headers response header is used in response to\na preflight request to indicate which HTTP headers will be available via\nAccess-Control-Expose-Headers when making the actual request.\n\nThe simple headers, Accept, Accept-Language, Content-Language,\nContent-Type (but only with a MIME type of its parsed value (ignoring\nparameters) of either application/x-www-form-urlencoded,\nmultipart/form-data, or text/plain), are always available and don't need\nto be listed by this header.\n\nThis header is required if the request has an\nAccess-Control-Request-Headers header.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2367":{"id":"0:2367","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[189,0],"end":[189,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::method::Method","name":"Method","id":"0:3009:1683","glob":false}},"0:1508:920":{"id":"0:1508:920","crate_id":0,"name":"new","span":{"filename":"src/response.rs","begin":[251,4],"end":[256,5]},"visibility":"public","docs":"Creates a new blank `Response` with the body\n\nThe component ports of this response will be set to their default, e.g.\nthe ok status, no headers, etc.\n\n# Examples\n\n```\n# use http::*;\nlet response = Response::new(\"hello world\");\n\nassert_eq!(response.status(), StatusCode::OK);\nassert_eq!(*response.body(), \"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1378:3814":{"id":"0:1378:3814","crate_id":0,"name":"post","span":{"filename":"src/request.rs","begin":[276,4],"end":[283,5]},"visibility":"public","docs":"Creates a new `Builder` initialized with a POST method and the given URI.\n\nThis method returns an instance of `Builder` which can be used to\ncreate a `Request`.\n\n# Example\n\n```\n# use http::*;\n\nlet request = Request::post(\"https://www.rust-lang.org/\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["uri",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2094":{"id":"0:2094","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[182,0],"end":[707,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2095:3805","0:2096:3842","0:2097:3548","0:2101:2576","0:2102:3893","0:2103:4515","0:2104:1002","0:2105:4485","0:2106:4619","0:2107:4487","0:2108:2958","0:2110:4490","0:2112:4657","0:2114:4674"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1516:1679":{"id":"0:1516:1679","crate_id":0,"name":"extensions","span":{"filename":"src/response.rs","begin":[379,4],"end":[381,5]},"visibility":"public","docs":"Returns a reference to the associated extensions.\n\n# Examples\n\n```\n# use http::*;\nlet response: Response<()> = Response::default();\nassert!(response.extensions().get::<i32>().is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Extensions","id":"0:3357:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:3098:3795":{"id":"b:2:3201-0:3098:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3119":{"id":"0:3119","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[44,54],"end":[44,58]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10529:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3120:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2151:3428":{"id":"0:2151:3428","crate_id":0,"name":"from_str","span":{"filename":"src/uri/mod.rs","begin":[887,4],"end":[889,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1546:3950":{"id":"0:1546:3950","crate_id":0,"name":"headers_ref","span":{"filename":"src/response.rs","begin":[649,4],"end":[651,5]},"visibility":"public","docs":"Get header on this response builder.\n\nWhen builder has error returns None.\n\n# Example\n\n```\n# use http::Response;\n# use http::header::HeaderValue;\nlet res = Response::builder()\n    .header(\"Accept\", \"text/html\")\n    .header(\"X-Custom-Foo\", \"bar\");\nlet headers = res.headers_ref().unwrap();\nassert_eq!( headers[\"Accept\"], \"text/html\" );\nassert_eq!( headers[\"X-Custom-Foo\"], \"bar\" );\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"0:2392:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3107":{"id":"0:3107","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[44,16],"end":[44,20]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3278:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3280:220-0:3102:1686":{"id":"a:2:3280:220-0:3102:1686","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13429:2200":{"id":"2:13429:2200","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47492:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3309:5286-0:1494:1685":{"id":"a:2:3309:5286-0:1494:1685","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2871-0:1580:4125":{"id":"b:2:2871-0:1580:4125","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1170":{"id":"0:1170","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[150,4],"end":[150,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::STRICT_TRANSPORT_SECURITY","name":"STRICT_TRANSPORT_SECURITY","id":"0:2790:1945","glob":false}},"0:2773:1928":{"id":"0:2773:1928","crate_id":0,"name":"PRAGMA","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"HTTP/1.0 header usually used for backwards compatibility.\n\nThe Pragma HTTP/1.0 general header is an implementation-specific header\nthat may have various effects along the request-response chain. It is\nused for backwards compatibility with HTTP/1.0 caches where the\nCache-Control HTTP/1.1 header is not yet present.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:3143:4282":{"id":"0:3143:4282","crate_id":0,"name":"PERMANENT_REDIRECT","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2753:1908":{"id":"0:2753:1908","crate_id":0,"name":"CONTENT_TYPE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Used to indicate the media type of the resource.\n\nIn responses, a Content-Type header tells the client what the content\ntype of the returned content actually is. Browsers will do MIME sniffing\nin some cases and will not necessarily follow the value of this header;\nto prevent this behavior, the header X-Content-Type-Options can be set\nto nosniff.\n\nIn requests, (such as POST or PUT), the client tells the server what\ntype of data is actually sent.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2097:3548":{"id":"0:2097:3548","crate_id":0,"name":"from_maybe_shared","span":{"filename":"src/uri/mod.rs","begin":[281,4],"end":[290,5]},"visibility":"public","docs":"Attempt to convert a `Bytes` buffer to a `Uri`.\n\nThis will try to prevent a copy if the type passed is the type used\ninternally, and will copy the data if it is not.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3168:74":{"id":"2:3168:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3170:2380"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1324:1673":{"id":"0:1324:1673","crate_id":0,"name":"request","span":{"filename":"src/request.rs","begin":[1,0],"end":[1096,1]},"visibility":"public","docs":"HTTP request types.\n\nThis module contains structs related to HTTP requests, notably the\n`Request` type itself as well as a builder to create requests. Typically\nyou'll import the `http::Request` type rather than reaching into this\nmodule itself.\n\n# Examples\n\nCreating a `Request` to send\n\n```no_run\nuse http::{Request, Response};\n\nlet mut request = Request::builder()\n    .uri(\"https://www.rust-lang.org/\")\n    .header(\"User-Agent\", \"my-awesome-agent/1.0\");\n\nif needs_awesome_header() {\n    request = request.header(\"Awesome\", \"yes\");\n}\n\nlet response = send(request.body(()).unwrap());\n\n# fn needs_awesome_header() -> bool {\n#     true\n# }\n#\nfn send(req: Request<()>) -> Response<()> {\n    // ...\n# panic!()\n}\n```\n\nInspecting a request to see what was sent.\n\n```\nuse http::{Request, Response, StatusCode};\n\nfn respond_to(req: Request<()>) -> http::Result<Response<()>> {\n    if req.uri() != \"/awesome-url\" {\n        return Response::builder()\n            .status(StatusCode::NOT_FOUND)\n            .body(())\n    }\n\n    let has_awesome_header = req.headers().contains_key(\"Awesome\");\n    let body = req.body();\n\n    // ...\n# panic!()\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1361:1684","0:1365:3782","0:3094:3795"],"is_stripped":false}},"0:2981:1682":{"id":"0:2981:1682","crate_id":0,"name":"HeaderValue","span":{"filename":"src/header/value.rs","begin":[21,0],"end":[24,1]},"visibility":"public","docs":"Represents an HTTP header field value.\n\nIn practice, HTTP header field values are usually valid ASCII. However, the\nHTTP spec allows for a header value to contain opaque bytes as well. In this\ncase, the header field value is not able to be represented as a string.\n\nTo handle this, the `HeaderValue` is useable as a type and can be compared\nwith strings and implements `Debug`. A `to_str` fn is provided that returns\nan `Err` if the header value contains non visible ascii characters.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1606:126":{"id":"0:1606:126","crate_id":0,"name":"Err","span":{"filename":"src/status.rs","begin":[256,4],"end":[256,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:13507:63245":{"id":"2:13507:63245","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1515:3868":{"id":"0:1515:3868","crate_id":0,"name":"headers_mut","span":{"filename":"src/response.rs","begin":[365,4],"end":[367,5]},"visibility":"public","docs":"Returns a mutable reference to the associated header field map.\n\n# Examples\n\n```\n# use http::*;\n# use http::header::*;\nlet mut response: Response<()> = Response::default();\nresponse.headers_mut().insert(HOST, HeaderValue::from_static(\"world\"));\nassert!(!response.headers().is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"0:2392:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1555:3874":{"id":"0:1555:3874","crate_id":0,"name":"extensions_mut","span":{"filename":"src/response.rs","begin":[732,4],"end":[734,5]},"visibility":"public","docs":"Get a mutable reference to the extensions for this response builder.\n\nIf the builder has an error, this returns `None`.\n\n# Example\n\n```\n# use http::Response;\nlet mut res = Response::builder().extension(\"My Extension\");\nlet mut extensions = res.extensions_mut().unwrap();\nassert_eq!(extensions.get::<&'static str>(), Some(&\"My Extension\"));\nextensions.insert(5u32);\nassert_eq!(extensions.get::<u32>(), Some(&5u32));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Extensions","id":"0:3357:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2576:127":{"id":"1:2576:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2577:4993","1:2579:6256","1:2580:6257","1:2581:6258"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2663:1972":{"id":"0:2663:1972","crate_id":0,"name":"HdrName","span":{"filename":"src/header/name.rs","begin":[39,0],"end":[41,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1261":{"id":"0:1261","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[188,0],"end":[193,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1262:305"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1499:1675":{"id":"0:1499:1675","crate_id":0,"name":"status","span":{"filename":"src/response.rs","begin":[190,4],"end":[190,26]},"visibility":"public","docs":"The response's status","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:1026":{"id":"0:1026","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[102,4],"end":[102,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::AUTHORIZATION","name":"AUTHORIZATION","id":"0:2742:1897","glob":false}},"a:2:3280:220-0:1498:3782":{"id":"a:2:3280:220-0:1498:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3280:220-0:1365:3782":{"id":"a:2:3280:220-0:1365:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1428:3917":{"id":"0:1428:3917","crate_id":0,"name":"method_ref","span":{"filename":"src/request.rs","begin":[806,4],"end":[808,5]},"visibility":"public","docs":"Get the HTTP Method for this request.\n\nBy default this is `GET`. If builder has error, returns None.\n\n# Examples\n\n```\n# use http::*;\n\nlet mut req = Request::builder();\nassert_eq!(req.method_ref(),Some(&Method::GET));\n\nreq = req.method(\"POST\");\nassert_eq!(req.method_ref(),Some(&Method::POST));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:978":{"id":"0:978","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[86,4],"end":[86,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCEPT","name":"ACCEPT","id":"0:2726:1881","glob":false}},"0:2777:1932":{"id":"0:2777:1932","crate_id":0,"name":"PUBLIC_KEY_PINS_REPORT_ONLY","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Sends reports of pinning violation to the report-uri specified in the\nheader.\n\nUnlike `Public-Key-Pins`, this header still allows browsers to connect\nto the server if the pinning is violated.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"b:2:3197-0:1498:3782":{"id":"b:2:3197-0:1498:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1406:1802":{"id":"0:1406:1802","crate_id":0,"name":"body","span":{"filename":"src/request.rs","begin":[623,4],"end":[625,5]},"visibility":"public","docs":"Returns a reference to the associated HTTP body.\n\n# Examples\n\n```\n# use http::*;\nlet request: Request<String> = Request::default();\nassert!(request.body().is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2195:4967":{"id":"0:2195:4967","crate_id":0,"name":"HTTP_3","span":{"filename":"src/version.rs","begin":[42,4],"end":[42,50]},"visibility":"public","docs":"`HTTP/3.0`","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:8412:2422":{"id":"2:8412:2422","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8414:2408","2:8416:5754","2:8417:5755"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1119":{"id":"0:1119","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[133,4],"end":[133,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::PRAGMA","name":"PRAGMA","id":"0:2773:1928","glob":false}},"b:2:3207-0:3009:1683":{"id":"b:2:3207-0:3009:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1188":{"id":"0:1188","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[156,4],"end":[156,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::USER_AGENT","name":"USER_AGENT","id":"0:2794:1951","glob":false}},"0:3170:4411":{"id":"0:3170:4411","crate_id":0,"name":"REQUEST_HEADER_FIELDS_TOO_LARGE","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:8472:2450":{"id":"2:8472:2450","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8473:793","2:8474:2160"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8601:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2763:1918":{"id":"0:2763:1918","crate_id":0,"name":"IF_MATCH","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Makes a request conditional based on the E-Tag.\n\nFor GET and HEAD methods, the server will send back the requested\nresource only if it matches one of the listed ETags. For PUT and other\nnon-safe methods, it will only upload the resource in this case.\n\nThe comparison with the stored ETag uses the strong comparison\nalgorithm, meaning two files are considered identical byte to byte only.\nThis is weakened when the  W/ prefix is used in front of the ETag.\n\nThere are two common use cases:\n\n* For GET and HEAD methods, used in combination with an Range header, it\ncan guarantee that the new ranges requested comes from the same resource\nthan the previous one. If it doesn't match, then a 416 (Range Not\nSatisfiable) response is returned.\n\n* For other methods, and in particular for PUT, If-Match can be used to\nprevent the lost update problem. It can check if the modification of a\nresource that the user wants to upload will not override another change\nthat has been done since the original resource was fetched. If the\nrequest cannot be fulfilled, the 412 (Precondition Failed) response is\nreturned.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:13539:57188":{"id":"2:13539:57188","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2746:1901":{"id":"0:2746:1901","crate_id":0,"name":"CONTENT_ENCODING","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Used to compress the media-type.\n\nWhen present, its value indicates what additional content encoding has\nbeen applied to the entity-body. It lets the client know, how to decode\nin order to obtain the media-type referenced by the Content-Type header.\n\nIt is recommended to compress data as much as possible and therefore to\nuse this field, but some types of resources, like jpeg images, are\nalready compressed.  Sometimes using additional compression doesn't\nreduce payload size and can even make the payload longer.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1176":{"id":"0:1176","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[152,4],"end":[152,11]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::TRAILER","name":"TRAILER","id":"0:2792:1947","glob":false}},"0:1291:1414":{"id":"0:1291:1414","crate_id":0,"name":"try_from","span":{"filename":"src/method.rs","begin":[267,4],"end":[269,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10300:5386":{"id":"2:10300:5386","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10301:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:984":{"id":"0:984","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[88,4],"end":[88,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCEPT_ENCODING","name":"ACCEPT_ENCODING","id":"0:2728:1883","glob":false}},"1:5789:6379":{"id":"1:5789:6379","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5790:60832"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13525:63251":{"id":"2:13525:63251","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:16005:5087","self::pattern":"2:13053:5351"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2778:1933":{"id":"0:2778:1933","crate_id":0,"name":"RANGE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates the part of a document that the server should return.\n\nSeveral parts can be requested with one Range header at once, and the\nserver may send back these ranges in a multipart document. If the server\nsends back ranges, it uses the 206 Partial Content for the response. If\nthe ranges are invalid, the server returns the 416 Range Not Satisfiable\nerror. The server can also ignore the Range header and return the whole\ndocument with a 200 status code.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"1:5793:6373":{"id":"1:5793:6373","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5794:58818"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3504:6123":{"id":"2:3504:6123","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3505:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3491:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6794:6390":{"id":"1:6794:6390","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6795:10907"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3207-0:3102:1686":{"id":"b:2:3207-0:3102:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6105:5225":{"id":"5:6105:5225","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1035":{"id":"0:1035","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[105,4],"end":[105,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::CONTENT_DISPOSITION","name":"CONTENT_DISPOSITION","id":"0:2745:1900","glob":false}},"0:3172:4420":{"id":"0:3172:4420","crate_id":0,"name":"INTERNAL_SERVER_ERROR","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:3165:75":{"id":"2:3165:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3167:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2147:681":{"id":"0:2147:681","crate_id":0,"name":"from","span":{"filename":"src/uri/mod.rs","begin":[796,4],"end":[820,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1083":{"id":"0:1083","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[121,4],"end":[121,8]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::FROM","name":"FROM","id":"0:2761:1916","glob":false}},"b:2:2868-0:3227:1687":{"id":"b:2:2868-0:3227:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1528":{"id":"0:1528","crate_id":0,"name":null,"span":{"filename":"src/response.rs","begin":[491,0],"end":[501,1]},"visibility":{"restricted":{"parent":"0:1461:1674","path":"::response"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1530:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1461:1674":{"id":"0:1461:1674","crate_id":0,"name":"response","span":{"filename":"src/response.rs","begin":[1,0],"end":[799,1]},"visibility":"public","docs":"HTTP response types.\n\nThis module contains structs related to HTTP responses, notably the\n`Response` type itself as well as a builder to create responses. Typically\nyou'll import the `http::Response` type rather than reaching into this\nmodule itself.\n\n# Examples\n\nCreating a `Response` to return\n\n```\nuse http::{Request, Response, StatusCode};\n\nfn respond_to(req: Request<()>) -> http::Result<Response<()>> {\n    let mut builder = Response::builder()\n        .header(\"Foo\", \"Bar\")\n        .status(StatusCode::OK);\n\n    if req.headers().contains_key(\"Another-Header\") {\n        builder = builder.header(\"Another-Header\", \"Ack\");\n    }\n\n    builder.body(())\n}\n```\n\nA simple 404 handler\n\n```\nuse http::{Request, Response, StatusCode};\n\nfn not_found(_req: Request<()>) -> http::Result<Response<()>> {\n    Response::builder()\n        .status(StatusCode::NOT_FOUND)\n        .body(())\n}\n```\n\nOr otherwise inspecting the result of a request:\n\n```no_run\nuse http::{Request, Response};\n\nfn get(url: &str) -> http::Result<Response<()>> {\n    // ...\n# panic!()\n}\n\nlet response = get(\"https://www.rust-lang.org/\").unwrap();\n\nif !response.status().is_success() {\n    panic!(\"failed to get a successful response status!\");\n}\n\nif let Some(date) = response.headers().get(\"Date\") {\n    // we've got a `Date` header!\n}\n\nlet body = response.body();\n// ...\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1494:1685","0:1498:3782","0:3098:3795"],"is_stripped":false}},"0:1536:920":{"id":"0:1536:920","crate_id":0,"name":"new","span":{"filename":"src/response.rs","begin":[543,4],"end":[545,5]},"visibility":"public","docs":"Creates a new default instance of `Builder` to construct either a\n`Head` or a `Response`.\n\n# Examples\n\n```\n# use http::*;\n\nlet response = response::Builder::new()\n    .status(200)\n    .body(())\n    .unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:1494:1685":{"id":"b:2:2868-0:1494:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5:1671":{"id":"0:5:1671","crate_id":0,"name":"header","span":{"filename":"src/header/mod.rs","begin":[1,0],"end":[172,49]},"visibility":"public","docs":"HTTP header types\n\nThe module provides [`HeaderName`], [`HeaderMap`], and a number of types\nused for interacting with `HeaderMap`. These types allow representing both\nHTTP/1 and HTTP/2 headers.\n\n# `HeaderName`\n\nThe `HeaderName` type represents both standard header names as well as\ncustom header names. The type handles the case insensitive nature of header\nnames and is used as the key portion of `HeaderMap`. Header names are\nnormalized to lower case. In other words, when creating a `HeaderName` with\na string, even if upper case characters are included, when getting a string\nrepresentation of the `HeaderName`, it will be all lower case. This allows\nfor faster `HeaderMap` comparison operations.\n\nThe internal representation is optimized to efficiently handle the cases\nmost commonly encountered when working with HTTP. Standard header names are\nspecial cased and are represented internally as an enum. Short custom\nheaders will be stored directly in the `HeaderName` struct and will not\nincur any allocation overhead, however longer strings will require an\nallocation for storage.\n\n## Limitations\n\n`HeaderName` has a max length of 32,768 for header names. Attempting to\nparse longer names will result in a panic.\n\n# `HeaderMap`\n\n`HeaderMap` is a map structure of header names highly optimized for use\ncases common with HTTP. It is a [multimap] structure, where each header name\nmay have multiple associated header values. Given this, some of the APIs\ndiverge from [`HashMap`].\n\n## Overview\n\nJust like `HashMap` in Rust's stdlib, `HeaderMap` is based on [Robin Hood\nhashing]. This algorithm tends to reduce the worst case search times in the\ntable and enables high load factors without seriously affecting performance.\nInternally, keys and values are stored in vectors. As such, each insertion\nwill not incur allocation overhead. However, once the underlying vector\nstorage is full, a larger vector must be allocated and all values copied.\n\n## Deterministic ordering\n\nUnlike Rust's `HashMap`, values in `HeaderMap` are deterministically\nordered. Roughly, values are ordered by insertion. This means that a\nfunction that deterministically operates on a header map can rely on the\niteration order to remain consistent across processes and platforms.\n\n## Adaptive hashing\n\n`HeaderMap` uses an adaptive hashing strategy in order to efficiently handle\nmost common cases. All standard headers have statically computed hash values\nwhich removes the need to perform any hashing of these headers at runtime.\nThe default hash function emphasizes performance over robustness. However,\n`HeaderMap` detects high collision rates and switches to a secure hash\nfunction in those events. The threshold is set such that only denial of\nservice attacks should trigger it.\n\n## Limitations\n\n`HeaderMap` can store a maximum of 32,768 headers (header name / value\npairs). Attempting to insert more will result in a panic.\n\n[`HeaderName`]: struct.HeaderName.html\n[`HeaderMap`]: struct.HeaderMap.html\n[multimap]: https://en.wikipedia.org/wiki/Multimap\n[`HashMap`]: https://doc.rust-lang.org/std/collections/struct.HashMap.html\n[Robin Hood hashing]: https://en.wikipedia.org/wiki/Hash_table#Robin_Hood_hashing","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:909","0:912","0:915","0:918","0:921","0:924","0:927","0:930","0:933","0:936","0:939","0:942","0:945","0:948","0:951","0:954","0:957","0:961","0:964","0:968","0:971","0:974","0:978","0:981","0:984","0:987","0:990","0:993","0:996","0:999","0:1002","0:1005","0:1008","0:1011","0:1014","0:1017","0:1020","0:1023","0:1026","0:1029","0:1032","0:1035","0:1038","0:1041","0:1044","0:1047","0:1050","0:1053","0:1056","0:1059","0:1062","0:1065","0:1068","0:1071","0:1074","0:1077","0:1080","0:1083","0:1086","0:1089","0:1092","0:1095","0:1098","0:1101","0:1104","0:1107","0:1110","0:1113","0:1116","0:1119","0:1122","0:1125","0:1128","0:1131","0:1134","0:1137","0:1140","0:1143","0:1146","0:1149","0:1152","0:1155","0:1158","0:1161","0:1164","0:1167","0:1170","0:1173","0:1176","0:1179","0:1182","0:1185","0:1188","0:1191","0:1194","0:1197","0:1200","0:1203","0:1206","0:1209","0:1212"],"is_stripped":false}},"0:489:1865":{"id":"0:489:1865","crate_id":0,"name":"IntoHeaderName","span":{"filename":"src/header/map.rs","begin":[3272,4],"end":[3272,39]},"visibility":"public","docs":"A marker trait used to identify values that can be used as insert keys\nto a `HeaderMap`.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"0:490:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3232:408":{"id":"0:3232:408","crate_id":0,"name":"clone","span":{"filename":"src/uri/mod.rs","begin":[95,9],"end":[95,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3151:4321":{"id":"0:3151:4321","crate_id":0,"name":"PROXY_AUTHENTICATION_REQUIRED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1590:4169":{"id":"0:1590:4169","crate_id":0,"name":"is_redirection","span":{"filename":"src/status.rs","begin":[185,4],"end":[187,5]},"visibility":"public","docs":"Check if status is within 300-399.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1424:920":{"id":"0:1424:920","crate_id":0,"name":"new","span":{"filename":"src/request.rs","begin":[758,4],"end":[760,5]},"visibility":"public","docs":"Creates a new default instance of `Builder` to construct a `Request`.\n\n# Examples\n\n```\n# use http::*;\n\nlet req = request::Builder::new()\n    .method(\"POST\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2250:205":{"id":"0:2250:205","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[21,0],"end":[21,46]},"visibility":"public","docs":"A `Result` typedef to use with the `http::Error` type","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"result::Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:1629":{"id":"0:1629","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[539,0],"end":[539,35]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","provide","source","cause","type_id"],"trait":{"kind":"resolved_path","inner":{"name":"Error","id":"1:2576:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:3233:3782":{"id":"b:2:3207-0:3233:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10529:142":{"id":"2:10529:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10530:715","2:10532:4702"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3212-0:3009:1683":{"id":"b:2:3212-0:3009:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4001-0:3009:1683":{"id":"b:2:4001-0:3009:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2105:4485":{"id":"0:2105:4485","crate_id":0,"name":"scheme","span":{"filename":"src/uri/mod.rs","begin":[483,4],"end":[489,5]},"visibility":"public","docs":"Get the scheme of this `Uri`.\n\nThe URI scheme refers to a specification for assigning identifiers\nwithin that scheme. Only absolute URIs contain a scheme component, but\nnot all absolute URIs will contain a scheme component.  Although scheme\nnames are case-insensitive, the canonical form is lowercase.\n\n```notrust\nabc://username:password@example.com:123/path/data?key=value&key2=value2#fragid1\n|-|\n |\nscheme\n```\n\n# Examples\n\nAbsolute URI\n\n```\nuse http::uri::{Scheme, Uri};\n\nlet uri: Uri = \"http://example.org/hello/world\".parse().unwrap();\n\nassert_eq!(uri.scheme(), Some(&Scheme::HTTP));\n```\n\n\nRelative URI\n\n```\n# use http::Uri;\nlet uri: Uri = \"/hello/world\".parse().unwrap();\n\nassert!(uri.scheme().is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Scheme","id":"0:3197:4492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9258:5489-0:1580:4125":{"id":"a:2:9258:5489-0:1580:4125","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"21:140:3377":{"id":"21:140:3377","crate_id":21,"name":"BufMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["21:141:6271","21:142:6272","21:143:6273","21:144:6274","21:145:3811","21:147:6275","21:148:6276","21:149:3379","21:150:6277","21:151:6278","21:152:6279","21:153:6280","21:154:6281","21:155:6282","21:156:6283","21:157:6284","21:158:6285","21:159:6286","21:160:6287","21:161:6288","21:162:6289","21:163:6290","21:164:6291","21:165:6292","21:166:6293","21:167:6294","21:168:6295","21:169:6296","21:170:6297","21:171:6298","21:172:6299","21:173:6300","21:174:6301","21:175:6302","21:176:6303","21:177:6304"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1271":{"id":"0:1271","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[216,0],"end":[221,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"str"},"items":["0:1272:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1403:3868":{"id":"0:1403:3868","crate_id":0,"name":"headers_mut","span":{"filename":"src/request.rs","begin":[579,4],"end":[581,5]},"visibility":"public","docs":"Returns a mutable reference to the associated header field map.\n\n# Examples\n\n```\n# use http::*;\n# use http::header::*;\nlet mut request: Request<()> = Request::default();\nrequest.headers_mut().insert(HOST, HeaderValue::from_static(\"world\"));\nassert!(!request.headers().is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"0:2392:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1295:1414":{"id":"0:1295:1414","crate_id":0,"name":"try_from","span":{"filename":"src/method.rs","begin":[276,4],"end":[278,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2177":{"id":"0:2177","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[1081,0],"end":[1085,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2178:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3096":{"id":"0:3096","crate_id":0,"name":null,"span":{"filename":"src/request.rs","begin":[189,9],"end":[189,14]},"visibility":{"restricted":{"parent":"0:1324:1673","path":"::request"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3097:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1584:2579":{"id":"0:1584:2579","crate_id":0,"name":"from_bytes","span":{"filename":"src/status.rs","begin":[84,4],"end":[101,5]},"visibility":"public","docs":"Converts a &[u8] to a status code","links":{"u8":"1:16022:5101"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3154:4336":{"id":"0:3154:4336","crate_id":0,"name":"GONE","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1408:3888":{"id":"0:1408:3888","crate_id":0,"name":"into_body","span":{"filename":"src/request.rs","begin":[653,4],"end":[655,5]},"visibility":"public","docs":"Consumes the request, returning just the body.\n\n# Examples\n\n```\n# use http::Request;\nlet request = Request::new(10);\nlet body = request.into_body();\nassert_eq!(body, 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2184:715":{"id":"0:2184:715","crate_id":0,"name":"hash","span":{"filename":"src/uri/mod.rs","begin":[1098,4],"end":[1117,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Hasher","id":"2:10539:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:912":{"id":"0:912","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[78,18],"end":[78,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::Drain","name":"Drain","id":"0:2453:1862","glob":false}},"0:1591:4172":{"id":"0:1591:4172","crate_id":0,"name":"is_client_error","span":{"filename":"src/status.rs","begin":[191,4],"end":[193,5]},"visibility":"public","docs":"Check if status is within 400-499.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1367:1676":{"id":"0:1367:1676","crate_id":0,"name":"uri","span":{"filename":"src/request.rs","begin":[171,4],"end":[171,16]},"visibility":"public","docs":"The request's URI","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"b:2:3197-0:3233:3782":{"id":"b:2:3197-0:3233:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2759:1914":{"id":"0:2759:1914","crate_id":0,"name":"EXPIRES","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Contains the date/time after which the response is considered stale.\n\nInvalid dates, like the value 0, represent a date in the past and mean\nthat the resource is already expired.\n\nIf there is a Cache-Control header with the \"max-age\" or \"s-max-age\"\ndirective in the response, the Expires header is ignored.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1402:3790":{"id":"0:1402:3790","crate_id":0,"name":"headers","span":{"filename":"src/request.rs","begin":[563,4],"end":[565,5]},"visibility":"public","docs":"Returns a reference to the associated header field map.\n\n# Examples\n\n```\n# use http::*;\nlet request: Request<()> = Request::default();\nassert!(request.headers().is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"0:2392:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3236:4515":{"id":"0:3236:4515","crate_id":0,"name":"path_and_query","span":{"filename":"src/uri/mod.rs","begin":[114,4],"end":[114,44]},"visibility":"public","docs":"The origin-form component of a URI","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PathAndQuery","id":"0:3192:4489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},"b:2:4001-0:1580:4125":{"id":"b:2:4001-0:1580:4125","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:3233:3782":{"id":"b:2:3201-0:3233:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1146":{"id":"0:1146","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[142,4],"end":[142,15]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::RETRY_AFTER","name":"RETRY_AFTER","id":"0:2782:1937","glob":false}},"a:2:9258:5489-0:1244:3657":{"id":"a:2:9258:5489-0:1244:3657","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2179":{"id":"0:2179","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[1087,0],"end":[1087,28]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","provide","source","cause","type_id"],"trait":{"kind":"resolved_path","inner":{"name":"Error","id":"1:2576:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2354":{"id":"0:2354","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[185,30],"end":[185,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Result","name":"Result","id":"0:2250:205","glob":false}},"0:1200":{"id":"0:1200","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[160,4],"end":[160,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::WWW_AUTHENTICATE","name":"WWW_AUTHENTICATE","id":"0:2800:1955","glob":false}},"2:13444:13624":{"id":"2:13444:13624","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:16011:5092"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49733:5355","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3733:137":{"id":"2:3733:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3735:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3728:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3201-0:3094:3795":{"id":"b:2:3201-0:3094:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1041":{"id":"0:1041","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[107,4],"end":[107,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::CONTENT_LANGUAGE","name":"CONTENT_LANGUAGE","id":"0:2747:1902","glob":false}},"0:3115":{"id":"0:3115","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[44,37],"end":[44,47]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2966:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3116:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3137:4252":{"id":"0:3137:4252","crate_id":0,"name":"MOVED_PERMANENTLY","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2781:1936":{"id":"0:2781:1936","crate_id":0,"name":"REFRESH","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Informs the web browser that the current page or frame should be\nrefreshed.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2761:1916":{"id":"0:2761:1916","crate_id":0,"name":"FROM","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Contains an Internet email address for a human user who controls the\nrequesting user agent.\n\nIf you are running a robotic user agent (e.g. a crawler), the From\nheader should be sent, so you can be contacted if problems occur on\nservers, such as if the robot is sending excessive, unwanted, or invalid\nrequests.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1399:3856":{"id":"0:1399:3856","crate_id":0,"name":"uri_mut","span":{"filename":"src/request.rs","begin":[520,4],"end":[522,5]},"visibility":"public","docs":"Returns a mutable reference to the associated URI.\n\n# Examples\n\n```\n# use http::*;\nlet mut request: Request<()> = Request::default();\n*request.uri_mut() = \"/hello\".parse().unwrap();\nassert_eq!(*request.uri(), *\"/hello\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1173":{"id":"0:1173","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[151,4],"end":[151,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::TE","name":"TE","id":"0:2791:1946","glob":false}},"a:2:3280:220-0:1361:1684":{"id":"a:2:3280:220-0:1361:1684","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1164":{"id":"0:1164","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[148,4],"end":[148,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::SERVER","name":"SERVER","id":"0:2788:1943","glob":false}},"0:1519:3882":{"id":"0:1519:3882","crate_id":0,"name":"body_mut","span":{"filename":"src/response.rs","begin":[424,4],"end":[426,5]},"visibility":"public","docs":"Returns a mutable reference to the associated HTTP body.\n\n# Examples\n\n```\n# use http::*;\nlet mut response: Response<String> = Response::default();\nresponse.body_mut().push_str(\"hello world\");\nassert!(!response.body().is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1266":{"id":"0:1266","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[202,0],"end":[207,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"items":["0:1268:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2649:1877":{"id":"0:2649:1877","crate_id":0,"name":"HeaderName","span":{"filename":"src/header/name.rs","begin":[33,0],"end":[35,1]},"visibility":"public","docs":"Represents an HTTP header field name\n\nHeader field names identify the header. Header sets may include multiple\nheaders with the same name. The HTTP specification defines a number of\nstandard headers, but HTTP messages may include non-standard header names as\nwell as long as they adhere to the specification.\n\n`HeaderName` is used as the [`HeaderMap`] key. Constants are available for\nall standard header names in the [`header`] module.\n\n# Representation\n\n`HeaderName` represents standard header names using an `enum`, as such they\nwill not require an allocation for storage. All custom header names are\nlower cased upon conversion to a `HeaderName` value. This avoids the\noverhead of dynamically doing lower case conversion during the hash code\ncomputation and the comparison operation.\n\n[`HeaderMap`]: struct.HeaderMap.html\n[`header`]: index.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:3014":{"id":"0:3014","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[45,16],"end":[45,25]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3276:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2757:1912":{"id":"0:2757:1912","crate_id":0,"name":"ETAG","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Identifier for a specific version of a resource.\n\nThis header allows caches to be more efficient, and saves bandwidth, as\na web server does not need to send a full response if the content has\nnot changed. On the other side, if the content has changed, etags are\nuseful to help prevent simultaneous updates of a resource from\noverwriting each other (\"mid-air collisions\").\n\nIf the resource at a given URL changes, a new Etag value must be\ngenerated. Etags are therefore similar to fingerprints and might also be\nused for tracking purposes by some servers. A comparison of them allows\nto quickly determine whether two representations of a resource are the\nsame, but they might also be set to persist indefinitely by a tracking\nserver.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2196":{"id":"0:2196","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[55,0],"end":[60,1]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3246:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2197:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2796:1950":{"id":"0:2796:1950","crate_id":0,"name":"UPGRADE_INSECURE_REQUESTS","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Sends a signal to the server expressing the client’s preference for an\nencrypted and authenticated response.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"a:2:9258:5489-0:1365:3782":{"id":"a:2:9258:5489-0:1365:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1589:4166":{"id":"0:1589:4166","crate_id":0,"name":"is_success","span":{"filename":"src/status.rs","begin":[179,4],"end":[181,5]},"visibility":"public","docs":"Check if status is within 200-299.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:939":{"id":"0:939","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[79,4],"end":[79,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::OccupiedEntry","name":"OccupiedEntry","id":"0:2500:1870","glob":false}},"0:1143":{"id":"0:1143","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[141,4],"end":[141,11]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::REFRESH","name":"REFRESH","id":"0:2781:1936","glob":false}},"0:544:1696":{"id":"0:544:1696","crate_id":0,"name":"Sealed","span":{"filename":"src/header/map.rs","begin":[3366,4],"end":[3375,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4727:3484":{"id":"1:4727:3484","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4728:3441","1:4729:60715","1:4731:60716","1:4732:7381","1:4733:60714","1:4734:13065","1:4735:5681","1:4744:2497"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3357:6131":{"id":"2:3357:6131","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3359:181","2:3360:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1607:3428":{"id":"0:1607:3428","crate_id":0,"name":"from_str","span":{"filename":"src/status.rs","begin":[258,4],"end":[260,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2192:4958":{"id":"0:2192:4958","crate_id":0,"name":"HTTP_10","span":{"filename":"src/version.rs","begin":[33,4],"end":[33,55]},"visibility":"public","docs":"`HTTP/1.0`","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:3180:4458":{"id":"0:3180:4458","crate_id":0,"name":"LOOP_DETECTED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1504":{"id":"0:1504","crate_id":0,"name":null,"span":{"filename":"src/response.rs","begin":[213,0],"end":[233,1]},"visibility":{"restricted":{"parent":"0:1461:1674","path":"::response"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}},"items":["0:1505:3805"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3246:115":{"id":"2:3246:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3247:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:3094:3795":{"id":"b:2:3207-0:3094:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1098":{"id":"0:1098","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[126,4],"end":[126,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::IF_RANGE","name":"IF_RANGE","id":"0:2766:1921","glob":false}},"0:2780:1935":{"id":"0:2780:1935","crate_id":0,"name":"REFERRER_POLICY","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Governs which referrer information should be included with requests\nmade.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2131":{"id":"0:2131","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[745,0],"end":[752,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:5850","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2133:127","0:2134:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2735:1890":{"id":"0:2735:1890","crate_id":0,"name":"ACCESS_CONTROL_EXPOSE_HEADERS","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates which headers can be exposed as part of the response by\nlisting their names.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2150:126":{"id":"0:2150:126","crate_id":0,"name":"Err","span":{"filename":"src/uri/mod.rs","begin":[884,4],"end":[884,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:1256:2579":{"id":"0:1256:2579","crate_id":0,"name":"from_bytes","span":{"filename":"src/method.rs","begin":[100,4],"end":[137,5]},"visibility":"public","docs":"Converts a slice of bytes to an HTTP method.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3250":{"id":"0:3250","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[125,9],"end":[125,14]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3251:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1460:59":{"id":"0:1460:59","crate_id":0,"name":"default","span":{"filename":"src/request.rs","begin":[1076,4],"end":[1080,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2122:127":{"id":"0:2122:127","crate_id":0,"name":"Error","span":{"filename":"src/uri/mod.rs","begin":[719,4],"end":[719,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:3277:217":{"id":"2:3277:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1390:3831":{"id":"0:1390:3831","crate_id":0,"name":"trace","span":{"filename":"src/request.rs","begin":[414,4],"end":[420,5]},"visibility":"public","docs":"Creates a new `Builder` initialized with a TRACE method and the given URI.\n\nThis method returns an instance of `Builder` which can be used to\ncreate a `Request`.\n\n# Example\n\n```\n# use http::*;\n\nlet request = Request::trace(\"https://www.rust-lang.org/\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["uri",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3132:4228":{"id":"0:3132:4228","crate_id":0,"name":"PARTIAL_CONTENT","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1296":{"id":"0:1296","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[281,0],"end":[288,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12992:2591","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1297:126","0:1298:3428"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9259:5488-0:1494:1685":{"id":"a:2:9259:5488-0:1494:1685","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3131:4223":{"id":"0:3131:4223","crate_id":0,"name":"RESET_CONTENT","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2155:604":{"id":"0:2155:604","crate_id":0,"name":"eq","span":{"filename":"src/uri/mod.rs","begin":[915,4],"end":[990,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:999":{"id":"0:999","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[93,4],"end":[93,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCESS_CONTROL_ALLOW_METHODS","name":"ACCESS_CONTROL_ALLOW_METHODS","id":"0:2733:1888","glob":false}},"2:2862:97":{"id":"2:2862:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2864:2589"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1059":{"id":"0:1059","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[113,4],"end":[113,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::CONTENT_TYPE","name":"CONTENT_TYPE","id":"0:2753:1908","glob":false}},"b:2:3201-0:1494:1685":{"id":"b:2:3201-0:1494:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1122":{"id":"0:1122","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[134,4],"end":[134,22]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::PROXY_AUTHENTICATE","name":"PROXY_AUTHENTICATE","id":"0:2774:1929","glob":false}},"b:2:2871-0:3242:4523":{"id":"b:2:2871-0:3242:4523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:630:1878":{"id":"0:630:1878","crate_id":0,"name":"InvalidHeaderName","span":{"filename":"src/header/name.rs","begin":[61,0],"end":[63,1]},"visibility":"public","docs":"A possible error when converting a `HeaderName` from another type.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"b:2:3207-0:3242:4523":{"id":"b:2:3207-0:3242:4523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1068":{"id":"0:1068","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[116,4],"end":[116,8]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::DATE","name":"DATE","id":"0:2756:1911","glob":false}},"0:1292":{"id":"0:1292","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[272,0],"end":[279,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1294:127","0:1295:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3130:4218":{"id":"0:3130:4218","crate_id":0,"name":"NO_CONTENT","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1361:1684":{"id":"0:1361:1684","crate_id":0,"name":"Request","span":{"filename":"src/request.rs","begin":[157,0],"end":[160,1]},"visibility":"public","docs":"Represents an HTTP request.\n\nAn HTTP request consists of a head and a potentially optional body. The body\ncomponent is generic, enabling arbitrary types to represent the HTTP body.\nFor example, the body could be `Vec<u8>`, a `Stream` of byte chunks, or a\nvalue that has been deserialized.\n\n# Examples\n\nCreating a `Request` to send\n\n```no_run\nuse http::{Request, Response};\n\nlet mut request = Request::builder()\n    .uri(\"https://www.rust-lang.org/\")\n    .header(\"User-Agent\", \"my-awesome-agent/1.0\");\n\nif needs_awesome_header() {\n    request = request.header(\"Awesome\", \"yes\");\n}\n\nlet response = send(request.body(()).unwrap());\n\n# fn needs_awesome_header() -> bool {\n#     true\n# }\n#\nfn send(req: Request<()>) -> Response<()> {\n    // ...\n# panic!()\n}\n```\n\nInspecting a request to see what was sent.\n\n```\nuse http::{Request, Response, StatusCode};\n\nfn respond_to(req: Request<()>) -> http::Result<Response<()>> {\n    if req.uri() != \"/awesome-url\" {\n        return Response::builder()\n            .status(StatusCode::NOT_FOUND)\n            .body(())\n    }\n\n    let has_awesome_header = req.headers().contains_key(\"Awesome\");\n    let body = req.body();\n\n    // ...\n# panic!()\n}\n```\n\nDeserialize a request of bytes via json:\n\n```\n# extern crate serde;\n# extern crate serde_json;\n# extern crate http;\nuse http::Request;\nuse serde::de;\n\nfn deserialize<T>(req: Request<Vec<u8>>) -> serde_json::Result<Request<T>>\n    where for<'de> T: de::Deserialize<'de>,\n{\n    let (parts, body) = req.into_parts();\n    let body = serde_json::from_slice(&body)?;\n    Ok(Request::from_parts(parts, body))\n}\n#\n# fn main() {}\n```\n\nOr alternatively, serialize the body of a request to json\n\n```\n# extern crate serde;\n# extern crate serde_json;\n# extern crate http;\nuse http::Request;\nuse serde::ser;\n\nfn serialize<T>(req: Request<T>) -> serde_json::Result<Request<Vec<u8>>>\n    where T: ser::Serialize,\n{\n    let (parts, body) = req.into_parts();\n    let body = serde_json::to_vec(&body)?;\n    Ok(Request::from_parts(parts, body))\n}\n#\n# fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1372","0:1392","a:2:3268:211-0:1361:1684","a:2:3280:220-0:1361:1684","a:2:3309:5286-0:1361:1684","a:2:9258:5489-0:1361:1684","a:2:9259:5488-0:1361:1684","b:2:3197-0:1361:1684","b:2:2868-0:1361:1684","b:2:3201-0:1361:1684","b:2:4001-0:1361:1684","b:2:3207-0:1361:1684","b:2:2871-0:1361:1684","b:2:3212-0:1361:1684","0:1413","0:1416"]}},"0:1131":{"id":"0:1131","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[137,4],"end":[137,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::PUBLIC_KEY_PINS_REPORT_ONLY","name":"PUBLIC_KEY_PINS_REPORT_ONLY","id":"0:2777:1932","glob":false}},"0:3161:4371":{"id":"0:3161:4371","crate_id":0,"name":"EXPECTATION_FAILED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:3341:6132":{"id":"2:3341:6132","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3343:181","2:3344:1353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1251:3677":{"id":"0:1251:3677","crate_id":0,"name":"HEAD","span":{"filename":"src/method.rs","begin":[85,4],"end":[85,42]},"visibility":"public","docs":"HEAD","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1244:3657":{"id":"0:1244:3657","crate_id":0,"name":"InvalidMethod","span":{"filename":"src/method.rs","begin":[49,0],"end":[51,1]},"visibility":"public","docs":"A possible error value when converting `Method` from bytes.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3268:211-0:1244:3657","a:2:3280:220-0:1244:3657","a:2:3309:5286-0:1244:3657","a:2:9258:5489-0:1244:3657","a:2:9259:5488-0:1244:3657","b:2:3197-0:1244:3657","b:2:2868-0:1244:3657","b:2:3201-0:1244:3657","b:2:4001-0:1244:3657","b:2:3207-0:1244:3657","b:2:2871-0:1244:3657","b:2:3212-0:1244:3657","b:5:6413-0:1244:3657","0:1301","0:1303","0:1305"]}},"0:3124:4191":{"id":"0:3124:4191","crate_id":0,"name":"SWITCHING_PROTOCOLS","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:13511:63247":{"id":"2:13511:63247","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2478:2025":{"id":"0:2478:2025","crate_id":0,"name":"Occupied","span":{"filename":"src/header/map.rs","begin":[159,4],"end":[159,34]},"visibility":"default","docs":"An occupied entry","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:2500:1870","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}]}},"0:1587:4161":{"id":"0:1587:4161","crate_id":0,"name":"canonical_reason","span":{"filename":"src/status.rs","begin":[167,4],"end":[169,5]},"visibility":"public","docs":"Get the standardised `reason-phrase` for this status code.\n\nThis is mostly here for servers writing responses, but could potentially have application\nat other times.\n\nThe reason phrase is defined as being exclusively for human readers. You should avoid\nderiving any meaning from it at all costs.\n\nBear in mind also that in HTTP/2.0 and HTTP/3.0 the reason phrase is abolished from\ntransmission, and so this canonical reason phrase really is the only reason phrase you’ll\nfind.\n\n# Example\n\n```\nlet status = http::StatusCode::OK;\nassert_eq!(status.canonical_reason(), Some(\"OK\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3242:4523":{"id":"0:3242:4523","crate_id":0,"name":"InvalidUri","span":{"filename":"src/uri/mod.rs","begin":[122,0],"end":[122,33]},"visibility":"public","docs":"An error resulting from a failed attempt to construct a URI.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3268:211-0:3242:4523","a:2:3280:220-0:3242:4523","a:2:3309:5286-0:3242:4523","a:2:9258:5489-0:3242:4523","a:2:9259:5488-0:3242:4523","b:2:3197-0:3242:4523","b:2:2868-0:3242:4523","b:2:3201-0:3242:4523","b:2:4001-0:3242:4523","b:2:3207-0:3242:4523","b:2:2871-0:3242:4523","b:2:3212-0:3242:4523","b:5:6413-0:3242:4523","0:3245","0:2177","0:2179"]}},"2:13519:13020":{"id":"2:13519:13020","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13053:5351","prim@char":"1:16005:5087"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3015":{"id":"0:3015","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[45,16],"end":[45,25]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3016:604","0:3017:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1065":{"id":"0:1065","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[115,4],"end":[115,7]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::DNT","name":"DNT","id":"0:2755:1910","glob":false}},"a:2:3268:211-0:1580:4125":{"id":"a:2:3268:211-0:1580:4125","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3110:604":{"id":"0:3110:604","crate_id":0,"name":"eq","span":{"filename":"src/status.rs","begin":[44,22],"end":[44,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9259:5488-0:3247:4525":{"id":"a:2:9259:5488-0:3247:4525","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1384:2360":{"id":"0:1384:2360","crate_id":0,"name":"head","span":{"filename":"src/request.rs","begin":[346,4],"end":[353,5]},"visibility":"public","docs":"Creates a new `Builder` initialized with a HEAD method and the given URI.\n\nThis method returns an instance of `Builder` which can be used to\ncreate a `Request`.\n\n# Example\n\n```\n# use http::*;\n\nlet request = Request::head(\"https://www.rust-lang.org/\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["uri",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1430:1676":{"id":"0:1430:1676","crate_id":0,"name":"uri","span":{"filename":"src/request.rs","begin":[827,4],"end":[836,5]},"visibility":"public","docs":"Set the URI for this request.\n\nThis function will configure the URI of the `Request` that will\nbe returned from `Builder::build`.\n\nBy default this is `/`.\n\n# Examples\n\n```\n# use http::*;\n\nlet req = Request::builder()\n    .uri(\"https://www.rust-lang.org/\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["uri",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3405:6139":{"id":"2:3405:6139","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3407:181","2:3408:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10304:5392":{"id":"2:10304:5392","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10305:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:71":{"id":"0:71","crate_id":0,"name":null,"span":{"filename":"src/header/map.rs","begin":[15,0],"end":[15,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::into_header_name::IntoHeaderName","name":"IntoHeaderName","id":"0:489:1865","glob":false}},"2:2956:177":{"id":"2:2956:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2957:415","2:2958:5731","2:2959:5728","2:2960:5749"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2925:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2966:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5779:6378":{"id":"1:5779:6378","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5780:57239","1:5781:57240","1:5782:57241","1:5783:57242"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2989:1880":{"id":"0:2989:1880","crate_id":0,"name":"ToStrError","span":{"filename":"src/header/value.rs","begin":[37,0],"end":[39,1]},"visibility":"public","docs":"A possible error when converting a `HeaderValue` to a string representation.\n\nHeader field values may contain opaque bytes, in which case it is not\npossible to represent the value as a string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:13536:7170":{"id":"2:13536:7170","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12992:2591":{"id":"2:12992:2591","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12993:126","2:12994:3428"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9259:5488-0:3009:1683":{"id":"a:2:9259:5488-0:3009:1683","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9258:5489-0:3227:1687":{"id":"a:2:9258:5489-0:3227:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3283:1688":{"id":"0:3283:1688","crate_id":0,"name":"Version","span":{"filename":"src/version.rs","begin":[26,0],"end":[26,25]},"visibility":"public","docs":"Represents a version of the HTTP spec.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2190","a:2:3268:211-0:3283:1688","a:2:3280:220-0:3283:1688","a:2:3309:5286-0:3283:1688","a:2:9258:5489-0:3283:1688","a:2:9259:5488-0:3283:1688","b:2:3197-0:3283:1688","b:2:2868-0:3283:1688","b:2:3201-0:3283:1688","b:2:4001-0:3283:1688","b:2:3207-0:3283:1688","b:2:2871-0:3283:1688","b:2:3212-0:3283:1688","b:5:787-0:3283:1688","0:3286","0:3287","0:3290","0:3292","0:3293","0:3295","0:3296","0:3298","0:3300","0:2196","0:2198"]}},"0:793:1879":{"id":"0:793:1879","crate_id":0,"name":"InvalidHeaderValue","span":{"filename":"src/header/value.rs","begin":[28,0],"end":[30,1]},"visibility":"public","docs":"A possible error when converting a `HeaderValue` from a string or byte\nslice.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1107":{"id":"0:1107","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[129,4],"end":[129,8]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::LINK","name":"LINK","id":"0:2769:1924","glob":false}},"a:2:3280:220-0:1244:3657":{"id":"a:2:3280:220-0:1244:3657","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1302:660":{"id":"0:1302:660","crate_id":0,"name":"fmt","span":{"filename":"src/method.rs","begin":[297,4],"end":[301,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1596:660":{"id":"0:1596:660","crate_id":0,"name":"fmt","span":{"filename":"src/status.rs","begin":[217,4],"end":[224,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3278:106":{"id":"2:3278:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1557:1802":{"id":"0:1557:1802","crate_id":0,"name":"body","span":{"filename":"src/response.rs","begin":[756,4],"end":[763,5]},"visibility":"public","docs":"\"Consumes\" this builder, using the provided `body` to return a\nconstructed `Response`.\n\n# Errors\n\nThis function may return an error if any previously configured argument\nfailed to parse or get converted to the internal representation. For\nexample if an invalid `head` was specified via `header(\"Foo\",\n\"Bar\\r\\n\")` the error will be returned when this function is called\nrather than when `header` was called.\n\n# Examples\n\n```\n# use http::*;\n\nlet response = Response::builder()\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:2250:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2110:4490":{"id":"0:2110:4490","crate_id":0,"name":"port","span":{"filename":"src/uri/mod.rs","begin":[637,4],"end":[639,5]},"visibility":"public","docs":"Get the port part of this `Uri`.\n\nThe port subcomponent of authority is designated by an optional port\nnumber following the host and delimited from it by a single colon (\":\")\ncharacter. It can be turned into a decimal port number with the `as_u16`\nmethod or as a `str` with the `as_str` method.\n\n```notrust\nabc://username:password@example.com:123/path/data?key=value&key2=value2#fragid1\n                                    |-|\n                                     |\n                                    port\n```\n\n# Examples\n\nAbsolute URI with port\n\n```\n# use http::Uri;\nlet uri: Uri = \"http://example.org:80/hello/world\".parse().unwrap();\n\nlet port = uri.port().unwrap();\nassert_eq!(port.as_u16(), 80);\n```\n\nAbsolute URI without port\n\n```\n# use http::Uri;\nlet uri: Uri = \"http://example.org/hello/world\".parse().unwrap();\n\nassert!(uri.port().is_none());\n```\n\nRelative URI\n\n```\n# use http::Uri;\nlet uri: Uri = \"/hello/world\".parse().unwrap();\n\nassert!(uri.port().is_none());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Port","id":"0:1973:4491","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2791:1946":{"id":"0:2791:1946","crate_id":0,"name":"TE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Informs the server of transfer encodings willing to be accepted as part\nof the response.\n\nSee also the Transfer-Encoding response header for more details on\ntransfer encodings. Note that chunked is always acceptable for HTTP/1.1\nrecipients and you that don't have to specify \"chunked\" using the TE\nheader. However, it is useful for setting if the client is accepting\ntrailer fields in a chunked transfer coding using the \"trailers\" value.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:3298":{"id":"0:3298","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[25,49],"end":[25,52]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2956:177","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3299:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1086":{"id":"0:1086","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[122,4],"end":[122,8]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::HOST","name":"HOST","id":"0:2762:1917","glob":false}},"2:13440:59399":{"id":"2:13440:59399","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:16011:5092"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2734:1889":{"id":"0:2734:1889","crate_id":0,"name":"ACCESS_CONTROL_ALLOW_ORIGIN","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates whether the response can be shared with resources with the\ngiven origin.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1525":{"id":"0:1525","crate_id":0,"name":null,"span":{"filename":"src/response.rs","begin":[484,0],"end":[489,1]},"visibility":{"restricted":{"parent":"0:1461:1674","path":"::response"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3246:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3246:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1527:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3296":{"id":"0:3296","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[25,45],"end":[25,47]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2925:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3165:4389":{"id":"0:3165:4389","crate_id":0,"name":"LOCKED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"b:2:2868-0:3009:1683":{"id":"b:2:2868-0:3009:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2191:4955":{"id":"0:2191:4955","crate_id":0,"name":"HTTP_09","span":{"filename":"src/version.rs","begin":[30,4],"end":[30,55]},"visibility":"public","docs":"`HTTP/0.9`","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:13475:63237":{"id":"2:13475:63237","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"`DoubleEndedIterator`":"2:8447:120","str::rsplit_terminator":"1:16011:5092","prim@char":"1:16005:5087","str::split":"1:16011:5092","self::pattern":"2:13053:5351"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49509:5376","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3111:907":{"id":"0:3111:907","crate_id":0,"name":"ne","span":{"filename":"src/status.rs","begin":[44,22],"end":[44,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3280:220-0:3242:4523":{"id":"a:2:3280:220-0:3242:4523","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1002":{"id":"0:1002","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[94,4],"end":[94,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCESS_CONTROL_ALLOW_ORIGIN","name":"ACCESS_CONTROL_ALLOW_ORIGIN","id":"0:2734:1889","glob":false}},"2:10298:119":{"id":"2:10298:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10299:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2797:1952":{"id":"0:2797:1952","crate_id":0,"name":"VARY","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Determines how to match future requests with cached responses.\n\nThe `vary` HTTP response header determines how to match future request\nheaders to decide whether a cached response can be used rather than\nrequesting a fresh one from the origin server. It is used by the server\nto indicate which headers it used when selecting a representation of a\nresource in a content negotiation algorithm.\n\nThe `vary` header should be set on a 304 Not Modified response exactly\nlike it would have been set on an equivalent 200 OK response.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2107:4487":{"id":"0:2107:4487","crate_id":0,"name":"authority","span":{"filename":"src/uri/mod.rs","begin":[548,4],"end":[554,5]},"visibility":"public","docs":"Get the authority of this `Uri`.\n\nThe authority is a hierarchical element for naming authority such that\nthe remainder of the URI is delegated to that authority. For HTTP, the\nauthority consists of the host and port. The host portion of the\nauthority is **case-insensitive**.\n\nThe authority also includes a `username:password` component, however\nthe use of this is deprecated and should be avoided.\n\n```notrust\nabc://username:password@example.com:123/path/data?key=value&key2=value2#fragid1\n      |-------------------------------|\n                    |\n                authority\n```\n\n# Examples\n\nAbsolute URI\n\n```\n# use http::Uri;\nlet uri: Uri = \"http://example.org:80/hello/world\".parse().unwrap();\n\nassert_eq!(uri.authority().map(|a| a.as_str()), Some(\"example.org:80\"));\n```\n\n\nRelative URI\n\n```\n# use http::Uri;\nlet uri: Uri = \"/hello/world\".parse().unwrap();\n\nassert!(uri.authority().is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Authority","id":"0:3184:4488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2871-0:1244:3657":{"id":"b:2:2871-0:1244:3657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3174:4430":{"id":"0:3174:4430","crate_id":0,"name":"BAD_GATEWAY","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1605":{"id":"0:1605","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[255,0],"end":[261,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12992:2591","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1606:126","0:1607:3428"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3201-0:1580:4125":{"id":"b:2:3201-0:1580:4125","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2782:1937":{"id":"0:2782:1937","crate_id":0,"name":"RETRY_AFTER","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"The Retry-After response HTTP header indicates how long the user agent\nshould wait before making a follow-up request. There are two main cases\nthis header is used:\n\n* When sent with a 503 (Service Unavailable) response, it indicates how\nlong the service is expected to be unavailable.\n\n* When sent with a redirect response, such as 301 (Moved Permanently),\nit indicates the minimum time that the user agent is asked to wait\nbefore issuing the redirected request.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1522:841":{"id":"0:1522:841","crate_id":0,"name":"map","span":{"filename":"src/response.rs","begin":[473,4],"end":[481,5]},"visibility":"public","docs":"Consumes the response returning a new response with body mapped to the\nreturn type of the passed in function.\n\n# Examples\n\n```\n# use http::*;\nlet response = Response::builder().body(\"some string\").unwrap();\nlet mapped_response: Response<&[u8]> = response.map(|b| {\n  assert_eq!(b, \"some string\");\n  b.as_bytes()\n});\nassert_eq!(mapped_response.body(), &\"some string\".as_bytes());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3524:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"U"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6689:6377":{"id":"1:6689:6377","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6690:58826","1:6691:10285","1:6692:10286","1:6693:10288","1:6694:10287","1:6695:10289","1:6696:10290","1:6697:10292","1:6698:8496","1:6699:10295","1:6700:10296","1:6701:10297","1:6702:10298","1:6703:10299","1:6704:10300","1:6705:10293","1:6706:10294"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3410:6141":{"id":"2:3410:6141","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3412:181","2:3413:1231"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3140:4267":{"id":"0:3140:4267","crate_id":0,"name":"NOT_MODIFIED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1283":{"id":"0:1283","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[249,0],"end":[254,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3246:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1284:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1155":{"id":"0:1155","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[145,4],"end":[145,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::SEC_WEBSOCKET_KEY","name":"SEC_WEBSOCKET_KEY","id":"0:2785:1940","glob":false}},"a:2:9259:5488-0:3102:1686":{"id":"a:2:9259:5488-0:3102:1686","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3105":{"id":"0:3105","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[44,9],"end":[44,14]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3106:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3197-0:3098:3795":{"id":"b:2:3197-0:3098:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23134:6835":{"id":"2:23134:6835","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23771:6830","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23125:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:957":{"id":"0:957","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[79,77],"end":[79,86]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::ValuesMut","name":"ValuesMut","id":"0:2445:1876","glob":false}},"b:2:4001-0:3242:4523":{"id":"b:2:4001-0:3242:4523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1287:681":{"id":"0:1287:681","crate_id":0,"name":"from","span":{"filename":"src/method.rs","begin":[258,4],"end":[260,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3309:5286-0:1361:1684":{"id":"a:2:3309:5286-0:1361:1684","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1047":{"id":"0:1047","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[109,4],"end":[109,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::CONTENT_LOCATION","name":"CONTENT_LOCATION","id":"0:2749:1904","glob":false}},"0:2351":{"id":"0:2351","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[185,23],"end":[185,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Error","name":"Error","id":"0:2248:127","glob":false}},"a:2:9258:5489-0:1361:1684":{"id":"a:2:9258:5489-0:1361:1684","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3416:6142":{"id":"2:3416:6142","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3418:181","2:3419:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1140":{"id":"0:1140","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[140,4],"end":[140,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::REFERRER_POLICY","name":"REFERRER_POLICY","id":"0:2780:1935","glob":false}},"0:2166:59":{"id":"0:2166:59","crate_id":0,"name":"default","span":{"filename":"src/uri/mod.rs","begin":[1016,4],"end":[1022,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3227:1687":{"id":"0:3227:1687","crate_id":0,"name":"Uri","span":{"filename":"src/uri/mod.rs","begin":[96,0],"end":[100,1]},"visibility":"public","docs":"The URI component of a request.\n\nFor HTTP 1, this is included as part of the request line. From Section 5.3,\nRequest Target:\n\n> Once an inbound connection is obtained, the client sends an HTTP\n> request message (Section 3) with a request-target derived from the\n> target URI.  There are four distinct formats for the request-target,\n> depending on both the method being requested and whether the request\n> is to a proxy.\n>\n> ```notrust\n> request-target = origin-form\n>                / absolute-form\n>                / authority-form\n>                / asterisk-form\n> ```\n\nThe URI is structured as follows:\n\n```notrust\nabc://username:password@example.com:123/path/data?key=value&key2=value2#fragid1\n|-|   |-------------------------------||--------| |-------------------| |-----|\n |                  |                       |               |              |\nscheme          authority                 path            query         fragment\n```\n\nFor HTTP 2.0, the URI is encoded using pseudoheaders.\n\n# Examples\n\n```\nuse http::Uri;\n\nlet uri = \"/foo/bar?baz\".parse::<Uri>().unwrap();\nassert_eq!(uri.path(), \"/foo/bar\");\nassert_eq!(uri.query(), Some(\"baz\"));\nassert_eq!(uri.host(), None);\n\nlet uri = \"https://www.rust-lang.org/install.html\".parse::<Uri>().unwrap();\nassert_eq!(uri.scheme_str(), Some(\"https\"));\nassert_eq!(uri.host(), Some(\"www.rust-lang.org\"));\nassert_eq!(uri.path(), \"/install.html\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2094","a:2:3268:211-0:3227:1687","a:2:3280:220-0:3227:1687","a:2:3309:5286-0:3227:1687","a:2:9258:5489-0:3227:1687","a:2:9259:5488-0:3227:1687","b:2:3197-0:3227:1687","b:2:2868-0:3227:1687","b:2:3201-0:3227:1687","b:2:4001-0:3227:1687","b:2:3207-0:3227:1687","b:2:2871-0:3227:1687","b:2:3212-0:3227:1687","b:5:6413-0:3227:1687","b:5:787-0:3227:1687","0:3231","0:2116","0:2120","0:2124","0:2128","0:2131","0:2135","0:2138","0:2146","0:2149","0:2152","0:2154","0:2156","0:2158","0:2161","0:2164","0:2165","0:2167","0:2169","0:2183"]}},"a:2:3309:5286-0:3094:3795":{"id":"a:2:3309:5286-0:3094:3795","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2008:4485":{"id":"0:2008:4485","crate_id":0,"name":"scheme","span":{"filename":"src/uri/scheme.rs","begin":[1,0],"end":[363,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3197:4492"],"is_stripped":true}},"0:1275:604":{"id":"0:1275:604","crate_id":0,"name":"eq","span":{"filename":"src/method.rs","begin":[225,4],"end":[227,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3016:604":{"id":"0:3016:604","crate_id":0,"name":"eq","span":{"filename":"src/method.rs","begin":[45,16],"end":[45,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3309:5286-0:3102:1686":{"id":"a:2:3309:5286-0:3102:1686","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3021":{"id":"0:3021","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[45,31],"end":[45,35]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10529:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3022:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3295":{"id":"0:3295","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[25,45],"end":[25,47]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3277:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3811:6156":{"id":"2:3811:6156","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3290":{"id":"0:3290","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[25,20],"end":[25,30]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2966:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3291:997"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:3102:1686":{"id":"b:2:3212-0:3102:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1395:3842":{"id":"0:1395:3842","crate_id":0,"name":"from_parts","span":{"filename":"src/request.rs","begin":[459,4],"end":[464,5]},"visibility":"public","docs":"Creates a new `Request` with the given components parts and body.\n\n# Examples\n\n```\n# use http::*;\nlet request = Request::new(\"hello world\");\nlet (mut parts, body) = request.into_parts();\nparts.method = Method::POST;\n\nlet request = Request::from_parts(parts, body);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["parts",{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}],["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1416":{"id":"0:1416","crate_id":0,"name":null,"span":{"filename":"src/request.rs","begin":[704,0],"end":[715,1]},"visibility":{"restricted":{"parent":"0:1324:1673","path":"::request"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1418:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8601:157":{"id":"2:8601:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8602:2386","2:8603:922","2:8604:5756","2:8607:2440","2:8608:495","2:8610:5757","2:8613:5758","2:8614:5759","2:8615:5760","2:8616:5761","2:8618:3365","2:8620:5762","2:8621:5763","2:8623:841","2:8626:3366","2:8633:5764","2:8635:5765","2:8638:2366","2:8639:5766","2:8640:5767","2:8642:5768","2:8644:5769","2:8647:1306","2:8648:1806","2:8649:5770","2:8653:5771","2:8656:5772","2:8657:5773","2:8658:5774","2:8660:2497","2:8661:2421","2:8663:5775","2:8666:5776","2:8668:5777","2:8678:5778","2:8693:5779","2:8695:5780","2:8699:5781","2:8708:5782","2:8711:5783","2:8713:5784","2:8716:276","2:8723:294","2:8730:2203","2:8737:5785","2:8746:5786","2:8756:1014","2:8763:5787","2:8770:5731","2:8771:5728","2:8772:5733","2:8784:5732","2:8791:5730","2:8803:5729","2:8810:5788","2:8811:5789","2:8816:5790","2:8819:5791","2:8822:5792","2:8823:5793","2:8825:5794","2:8827:415","2:8830:5795","2:8833:997","2:8836:5796","2:8839:604","2:8842:5797","2:8845:907","2:8847:826","2:8849:792","2:8851:713","2:8853:696","2:8855:5798","2:8856:5799","2:8864:5800"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3168:4403":{"id":"0:3168:4403","crate_id":0,"name":"PRECONDITION_REQUIRED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2190":{"id":"0:2190","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[28,0],"end":[43,1]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2191:4955","0:2192:4958","0:2193:4961","0:2194:4964","0:2195:4967"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3197-0:3247:4525":{"id":"b:2:3197-0:3247:4525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13766:138":{"id":"2:13766:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13767:181","2:13768:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3018":{"id":"0:3018","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[45,27],"end":[45,29]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3277:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2743:1898":{"id":"0:2743:1898","crate_id":0,"name":"CACHE_CONTROL","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Specifies directives for caching mechanisms in both requests and\nresponses.\n\nCaching directives are unidirectional, meaning that a given directive in\na request is not implying that the same directive is to be given in the\nresponse.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:3558:6153":{"id":"2:3558:6153","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3560:237","2:3561:206","2:3562:62721"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2128":{"id":"0:2128","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[736,0],"end":[743,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2129:127","0:2130:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3580:2565":{"id":"2:3580:2565","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3582:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3576:2442","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2748:1903":{"id":"0:2748:1903","crate_id":0,"name":"CONTENT_LENGTH","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates the size of the entity-body.\n\nThe header value must be a decimal indicating the number of octets sent\nto the recipient.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1053":{"id":"0:1053","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[111,4],"end":[111,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::CONTENT_SECURITY_POLICY","name":"CONTENT_SECURITY_POLICY","id":"0:2751:1906","glob":false}},"0:2158":{"id":"0:2158","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[999,0],"end":[1003,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2160:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3309:5286-0:1244:3657":{"id":"a:2:3309:5286-0:1244:3657","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6107:4744":{"id":"5:6107:4744","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:16011:5092"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2379":{"id":"0:2379","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[193,0],"end":[193,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::uri::Uri","name":"Uri","id":"0:3227:1687","glob":false}},"0:2130:1414":{"id":"0:2130:1414","crate_id":0,"name":"try_from","span":{"filename":"src/uri/mod.rs","begin":[740,4],"end":[742,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3231":{"id":"0:3231","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[95,9],"end":[95,14]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3232:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8399:136":{"id":"2:8399:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8401:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13499:63242":{"id":"2:13499:63242","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"1:16005:5087","self::pattern":"2:13053:5351","`DoubleEndedIterator`":"2:8447:120","str::rmatch_indices":"1:16011:5092"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49609:5367","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3351:6128":{"id":"2:3351:6128","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3353:181","2:3354:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2749:1904":{"id":"0:2749:1904","crate_id":0,"name":"CONTENT_LOCATION","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates an alternate location for the returned data.\n\nThe principal use case is to indicate the URL of the resource\ntransmitted as the result of content negotiation.\n\nLocation and Content-Location are different: Location indicates the\ntarget of a redirection (or the URL of a newly created document), while\nContent-Location indicates the direct URL to use to access the resource,\nwithout the need of further content negotiation. Location is a header\nassociated with the response, while Content-Location is associated with\nthe entity returned.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2136:127":{"id":"0:2136:127","crate_id":0,"name":"Error","span":{"filename":"src/uri/mod.rs","begin":[755,4],"end":[755,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"5:6106:57186":{"id":"5:6106:57186","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:16011:5092"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3145:4291":{"id":"0:3145:4291","crate_id":0,"name":"UNAUTHORIZED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1553:3967":{"id":"0:1553:3967","crate_id":0,"name":"extensions_ref","span":{"filename":"src/response.rs","begin":[714,4],"end":[716,5]},"visibility":"public","docs":"Get a reference to the extensions for this response builder.\n\nIf the builder has an error, this returns `None`.\n\n# Example\n\n```\n# use http::Response;\nlet res = Response::builder().extension(\"My Extension\").extension(5u32);\nlet extensions = res.extensions_ref().unwrap();\nassert_eq!(extensions.get::<&'static str>(), Some(&\"My Extension\"));\nassert_eq!(extensions.get::<u32>(), Some(&5u32));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Extensions","id":"0:3357:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13512:63248":{"id":"2:13512:63248","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2156":{"id":"0:2156","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[993,0],"end":[997,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"str"},"items":["0:2157:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4003:1427":{"id":"2:4003:1427","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46028:1803","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1674":{"id":"0:1674","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[38,0],"end":[38,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::builder::Builder","name":"Builder","id":"0:3188:3795","glob":false}},"0:948":{"id":"0:948","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[79,44],"end":[79,53]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::ValueIter","name":"ValueIter","id":"0:2510:1873","glob":false}},"b:2:2871-0:3283:1688":{"id":"b:2:2871-0:3283:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1095":{"id":"0:1095","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[125,4],"end":[125,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::IF_NONE_MATCH","name":"IF_NONE_MATCH","id":"0:2765:1920","glob":false}},"0:1588:4163":{"id":"0:1588:4163","crate_id":0,"name":"is_informational","span":{"filename":"src/status.rs","begin":[173,4],"end":[175,5]},"visibility":"public","docs":"Check if status is within 100-199.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3268:211-0:3102:1686":{"id":"a:2:3268:211-0:3102:1686","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1527:59":{"id":"0:1527:59","crate_id":0,"name":"default","span":{"filename":"src/response.rs","begin":[486,4],"end":[488,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:993":{"id":"0:993","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[91,4],"end":[91,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCESS_CONTROL_ALLOW_CREDENTIALS","name":"ACCESS_CONTROL_ALLOW_CREDENTIALS","id":"0:2731:1886","glob":false}},"0:3240":{"id":"0:3240","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[105,16],"end":[105,23]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3246:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3241:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9259:5488-0:3233:3782":{"id":"a:2:9259:5488-0:3233:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4001-0:1498:3782":{"id":"b:2:4001-0:1498:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3280:220-0:3247:4525":{"id":"a:2:3280:220-0:3247:4525","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:909":{"id":"0:909","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[78,4],"end":[78,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::AsHeaderName","name":"AsHeaderName","id":"0:543:1861","glob":false}},"0:1599":{"id":"0:1599","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[234,0],"end":[239,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u16"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1600:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1249:3673":{"id":"0:1249:3673","crate_id":0,"name":"PUT","span":{"filename":"src/method.rs","begin":[79,4],"end":[79,40]},"visibility":"public","docs":"PUT","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"a:2:3280:220-0:3098:3795":{"id":"a:2:3280:220-0:3098:3795","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9259:5488-0:3094:3795":{"id":"a:2:9259:5488-0:3094:3795","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:13496:63241":{"id":"2:13496:63241","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:8447:120","str::matches":"1:16011:5092","self::pattern":"2:13053:5351","prim@char":"1:16005:5087"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49681:5370","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3268:211-0:1494:1685":{"id":"a:2:3268:211-0:1494:1685","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1425:1672":{"id":"0:1425:1672","crate_id":0,"name":"method","span":{"filename":"src/request.rs","begin":[779,4],"end":[789,5]},"visibility":"public","docs":"Set the HTTP method for this request.\n\nThis function will configure the HTTP method of the `Request` that will\nbe returned from `Builder::build`.\n\nBy default this is `GET`.\n\n# Examples\n\n```\n# use http::*;\n\nlet req = Request::builder()\n    .method(\"POST\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["method",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3268:211-0:3094:3795":{"id":"a:2:3268:211-0:3094:3795","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8882:5232":{"id":"2:8882:5232","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8601:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2533:1872":{"id":"0:2533:1872","crate_id":0,"name":"ValueDrain","span":{"filename":"src/header/map.rs","begin":[208,0],"end":[212,1]},"visibility":"public","docs":"An drain iterator of all values associated with a single header name.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"b:2:2868-0:3247:4525":{"id":"b:2:2868-0:3247:4525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1540:1502":{"id":"0:1540:1502","crate_id":0,"name":"version","span":{"filename":"src/response.rs","begin":[592,4],"end":[597,5]},"visibility":"public","docs":"Set the HTTP version for this response.\n\nThis function will configure the HTTP version of the `Response` that\nwill be returned from `Builder::build`.\n\nBy default this is HTTP/1.1\n\n# Examples\n\n```\n# use http::*;\n\nlet response = Response::builder()\n    .version(Version::HTTP_2)\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["version",{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1621:1414":{"id":"0:1621:1414","crate_id":0,"name":"try_from","span":{"filename":"src/status.rs","begin":[292,4],"end":[294,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"primitive","inner":"u16"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3097:660":{"id":"0:3097:660","crate_id":0,"name":"fmt","span":{"filename":"src/request.rs","begin":[189,9],"end":[189,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3164:4385":{"id":"0:3164:4385","crate_id":0,"name":"UNPROCESSABLE_ENTITY","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1564:1675":{"id":"0:1564:1675","crate_id":0,"name":"status","span":{"filename":"src/status.rs","begin":[1,0],"end":[588,62]},"visibility":"public","docs":"HTTP status codes\n\nThis module contains HTTP-status code related structs an errors. The main\ntype in this module is `StatusCode` which is not intended to be used through\nthis module but rather the `http::StatusCode` type.\n\n# Examples\n\n```\nuse http::StatusCode;\n\nassert_eq!(StatusCode::from_u16(200).unwrap(), StatusCode::OK);\nassert_eq!(StatusCode::NOT_FOUND, 404);\nassert!(StatusCode::OK.is_success());\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3102:1686","0:1580:4125"],"is_stripped":false}},"0:927":{"id":"0:927","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[78,67],"end":[78,75]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::IntoIter","name":"IntoIter","id":"0:2421:1866","glob":false}},"0:2170:660":{"id":"0:2170:660","crate_id":0,"name":"fmt","span":{"filename":"src/uri/mod.rs","begin":[1046,4],"end":[1048,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3181:4463":{"id":"0:3181:4463","crate_id":0,"name":"NOT_EXTENDED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1392":{"id":"0:1392","crate_id":0,"name":null,"span":{"filename":"src/request.rs","begin":[423,0],"end":[696,1]},"visibility":{"restricted":{"parent":"0:1324:1673","path":"::request"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1394:920","0:1395:3842","0:1396:1672","0:1397:3850","0:1398:1676","0:1399:3856","0:1400:1502","0:1401:3862","0:1402:3790","0:1403:3868","0:1404:1679","0:1405:3874","0:1406:1802","0:1407:3882","0:1408:3888","0:1409:3893","0:1410:841"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2480:1540":{"id":"0:2480:1540","crate_id":0,"name":"0","span":{"filename":"src/header/map.rs","begin":[159,13],"end":[159,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"OccupiedEntry","id":"0:2500:1870","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}},"0:2178:660":{"id":"0:2178:660","crate_id":0,"name":"fmt","span":{"filename":"src/uri/mod.rs","begin":[1082,4],"end":[1084,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3301:715":{"id":"0:3301:715","crate_id":0,"name":"hash","span":{"filename":"src/version.rs","begin":[25,54],"end":[25,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10539:146","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3142:4277":{"id":"0:3142:4277","crate_id":0,"name":"TEMPORARY_REDIRECT","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1305":{"id":"0:1305","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[310,0],"end":[310,31]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","provide","source","cause","type_id"],"trait":{"kind":"resolved_path","inner":{"name":"Error","id":"1:2576:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1450:3967":{"id":"0:1450:3967","crate_id":0,"name":"extensions_ref","span":{"filename":"src/request.rs","begin":[1011,4],"end":[1013,5]},"visibility":"public","docs":"Get a reference to the extensions for this request builder.\n\nIf the builder has an error, this returns `None`.\n\n# Example\n\n```\n# use http::Request;\nlet req = Request::builder().extension(\"My Extension\").extension(5u32);\nlet extensions = req.extensions_ref().unwrap();\nassert_eq!(extensions.get::<&'static str>(), Some(&\"My Extension\"));\nassert_eq!(extensions.get::<u32>(), Some(&5u32));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Extensions","id":"0:3357:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3200:2297":{"id":"2:3200:2297","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3174:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:593:899":{"id":"0:593:899","crate_id":0,"name":"name","span":{"filename":"src/header/name.rs","begin":[1,0],"end":[1856,1]},"visibility":{"restricted":{"parent":"0:5:1671","path":"::header"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2649:1877","0:2663:1972","0:630:1878","0:2726:1881","0:2727:1882","0:2728:1883","0:2729:1884","0:2730:1885","0:2731:1886","0:2732:1887","0:2733:1888","0:2734:1889","0:2735:1890","0:2736:1891","0:2737:1892","0:2738:1893","0:2739:1894","0:2740:1895","0:2741:1896","0:2742:1897","0:2743:1898","0:2744:1899","0:2745:1900","0:2746:1901","0:2747:1902","0:2748:1903","0:2749:1904","0:2750:1905","0:2751:1906","0:2752:1907","0:2753:1908","0:2754:1909","0:2755:1910","0:2756:1911","0:2757:1912","0:2758:1913","0:2759:1914","0:2760:1915","0:2761:1916","0:2762:1917","0:2763:1918","0:2764:1919","0:2765:1920","0:2766:1921","0:2767:1922","0:2768:1923","0:2769:1924","0:2770:1925","0:2771:1926","0:2772:1927","0:2773:1928","0:2774:1929","0:2775:1930","0:2776:1931","0:2777:1932","0:2778:1933","0:2779:1934","0:2780:1935","0:2781:1936","0:2782:1937","0:2783:1938","0:2784:1939","0:2785:1940","0:2786:1941","0:2787:1942","0:2788:1943","0:2789:1944","0:2790:1945","0:2791:1946","0:2792:1947","0:2793:1948","0:2794:1951","0:2795:1949","0:2796:1950","0:2797:1952","0:2798:1953","0:2799:1954","0:2800:1955","0:2801:1956","0:2802:1957","0:2803:1958","0:2804:1959"],"is_stripped":true}},"0:3112":{"id":"0:3112","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[44,33],"end":[44,35]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3277:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3235:4487":{"id":"0:3235:4487","crate_id":0,"name":"authority","span":{"filename":"src/uri/mod.rs","begin":[111,4],"end":[111,36]},"visibility":"public","docs":"The authority component of a URI","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Authority","id":"0:3184:4488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},"0:3138:4257":{"id":"0:3138:4257","crate_id":0,"name":"FOUND","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"1:6561:6475":{"id":"1:6561:6475","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6562:58874","1:6563:58875"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:791:5803":{"id":"5:791:5803","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13420:63232":{"id":"2:13420:63232","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2376":{"id":"0:2376","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[192,0],"end":[192,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::status::StatusCode","name":"StatusCode","id":"0:3102:1686","glob":false}},"2:3371:6136":{"id":"2:3371:6136","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3373:1354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3212-0:3242:4523":{"id":"b:2:3212-0:3242:4523","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13516:63250":{"id":"2:13516:63250","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:16005:5087","self::pattern":"2:13053:5351"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1593":{"id":"0:1593","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[202,0],"end":[206,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1594:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13426:63234":{"id":"2:13426:63234","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4001-0:3283:1688":{"id":"b:2:4001-0:3283:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2157:604":{"id":"0:2157:604","crate_id":0,"name":"eq","span":{"filename":"src/uri/mod.rs","begin":[994,4],"end":[996,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["uri",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1260:306":{"id":"0:1260:306","crate_id":0,"name":"as_str","span":{"filename":"src/method.rs","begin":[171,4],"end":[185,5]},"visibility":"public","docs":"Return a &str representation of the HTTP method","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1962:4490":{"id":"0:1962:4490","crate_id":0,"name":"port","span":{"filename":"src/uri/port.rs","begin":[1,0],"end":[151,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1973:4491"],"is_stripped":true}},"0:1611":{"id":"0:1611","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[270,0],"end":[277,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1613:127","0:1614:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1071":{"id":"0:1071","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[117,4],"end":[117,8]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ETAG","name":"ETAG","id":"0:2757:1912","glob":false}},"0:1563:59":{"id":"0:1563:59","crate_id":0,"name":"default","span":{"filename":"src/response.rs","begin":[779,4],"end":[783,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1373:3805":{"id":"0:1373:3805","crate_id":0,"name":"builder","span":{"filename":"src/request.rs","begin":[212,4],"end":[214,5]},"visibility":"public","docs":"Creates a new builder-style object to manufacture a `Request`\n\nThis method returns an instance of `Builder` which can be used to\ncreate a `Request`.\n\n# Examples\n\n```\n# use http::*;\nlet request = Request::builder()\n    .method(\"GET\")\n    .uri(\"https://www.rust-lang.org/\")\n    .header(\"X-Custom-Foo\", \"Bar\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1074":{"id":"0:1074","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[118,4],"end":[118,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::EXPECT","name":"EXPECT","id":"0:2758:1913","glob":false}},"0:2124":{"id":"0:2124","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[727,0],"end":[734,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2126:127","0:2127:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1255:3685":{"id":"0:1255:3685","crate_id":0,"name":"TRACE","span":{"filename":"src/method.rs","begin":[97,4],"end":[97,44]},"visibility":"public","docs":"TRACE","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:3388:6140":{"id":"2:3388:6140","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3389:181","2:3390:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:1498:3782":{"id":"b:2:3207-0:1498:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3241:59":{"id":"0:3241:59","crate_id":0,"name":"default","span":{"filename":"src/uri/mod.rs","begin":[105,16],"end":[105,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:945":{"id":"0:945","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[79,32],"end":[79,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::ValueDrain","name":"ValueDrain","id":"0:2533:1872","glob":false}},"0:1608":{"id":"0:1608","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[263,0],"end":[268,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1610:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1603":{"id":"0:1603","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[248,0],"end":[253,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"u16"},"items":["0:1604:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6867:6366":{"id":"1:6867:6366","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6868:60906"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3127:4203":{"id":"0:3127:4203","crate_id":0,"name":"CREATED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"b:2:2871-0:1365:3782":{"id":"b:2:2871-0:1365:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3521:131":{"id":"2:3521:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3523:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3524:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10308:189":{"id":"2:10308:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10309:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2788:1943":{"id":"0:2788:1943","crate_id":0,"name":"SERVER","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Contains information about the software used by the origin server to\nhandle the request.\n\nOverly long and detailed Server values should be avoided as they\npotentially reveal internal implementation details that might make it\n(slightly) easier for attackers to find and exploit known security\nholes.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:10291:109":{"id":"2:10291:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10292:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9259:5488-0:1361:1684":{"id":"a:2:9259:5488-0:1361:1684","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:2920:183":{"id":"2:2920:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2922:604","2:2923:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:5:6413-0:3247:4525":{"id":"b:5:6413-0:3247:4525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:3102:1686":{"id":"b:5:787-0:3102:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:5304","5:790:5802","5:791:5803"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13513:63249":{"id":"2:13513:63249","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13053:5351","prim@char":"1:16005:5087"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13083:5344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1254:3683":{"id":"0:1254:3683","crate_id":0,"name":"PATCH","span":{"filename":"src/method.rs","begin":[94,4],"end":[94,44]},"visibility":"public","docs":"PATCH","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2500:1870":{"id":"0:2500:1870","crate_id":0,"name":"OccupiedEntry","span":{"filename":"src/header/map.rs","begin":[181,0],"end":[185,1]},"visibility":"public","docs":"A view into a single occupied location in a `HeaderMap`.\n\nThis struct is returned as part of the `Entry` enum.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1401:3862":{"id":"0:1401:3862","crate_id":0,"name":"version_mut","span":{"filename":"src/request.rs","begin":[549,4],"end":[551,5]},"visibility":"public","docs":"Returns a mutable reference to the associated version.\n\n# Examples\n\n```\n# use http::*;\nlet mut request: Request<()> = Request::default();\n*request.version_mut() = Version::HTTP_2;\nassert_eq!(request.version(), Version::HTTP_2);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2787:1942":{"id":"0:2787:1942","crate_id":0,"name":"SEC_WEBSOCKET_VERSION","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"The |Sec-WebSocket-Version| header field is used in the WebSocket\nopening handshake.  It is sent from the client to the server to\nindicate the protocol version of the connection.  This enables\nservers to correctly interpret the opening handshake and subsequent\ndata being sent from the data, and close the connection if the server\ncannot interpret that data in a safe manner.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"b:2:4001-0:3233:3782":{"id":"b:2:4001-0:3233:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3434:6146":{"id":"2:3434:6146","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3436:1232"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3287":{"id":"0:3287","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[25,9],"end":[25,18]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3288:604","0:3289:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13509:63246":{"id":"2:13509:63246","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2169":{"id":"0:2169","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[1045,0],"end":[1049,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2170:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1443:3950":{"id":"0:1443:3950","crate_id":0,"name":"headers_ref","span":{"filename":"src/request.rs","begin":[947,4],"end":[949,5]},"visibility":"public","docs":"Get header on this request builder.\nwhen builder has error returns None\n\n# Example\n\n```\n# use http::Request;\nlet req = Request::builder()\n    .header(\"Accept\", \"text/html\")\n    .header(\"X-Custom-Foo\", \"bar\");\nlet headers = req.headers_ref().unwrap();\nassert_eq!( headers[\"Accept\"], \"text/html\" );\nassert_eq!( headers[\"X-Custom-Foo\"], \"bar\" );\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"0:2392:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HeaderValue","id":"0:2981:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13538:57187":{"id":"2:13538:57187","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3268:211-0:3233:3782":{"id":"a:2:3268:211-0:3233:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:936":{"id":"0:936","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[78,92],"end":[78,96]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::Keys","name":"Keys","id":"0:2429:1869","glob":false}},"b:5:6413-0:3227:1687":{"id":"b:5:6413-0:3227:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2871-0:3098:3795":{"id":"b:2:2871-0:3098:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2364":{"id":"0:2364","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,35],"end":[188,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::header::HeaderValue","name":"HeaderValue","id":"0:2981:1682","glob":false}},"0:1535":{"id":"0:1535","crate_id":0,"name":null,"span":{"filename":"src/response.rs","begin":[528,0],"end":[775,1]},"visibility":{"restricted":{"parent":"0:1461:1674","path":"::response"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1536:920","0:1537:1675","0:1540:1502","0:1542:1671","0:1546:3950","0:1548:3868","0:1550:3647","0:1553:3967","0:1555:3874","0:1557:1802"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3280:220-0:3227:1687":{"id":"a:2:3280:220-0:3227:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3201-0:1361:1684":{"id":"b:2:3201-0:1361:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2153:604":{"id":"0:2153:604","crate_id":0,"name":"eq","span":{"filename":"src/uri/mod.rs","begin":[893,4],"end":[911,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9258:5489-0:3009:1683":{"id":"a:2:9258:5489-0:3009:1683","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3309:5286-0:3227:1687":{"id":"a:2:3309:5286-0:3227:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6863:6364":{"id":"1:6863:6364","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6864:61446"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1216:1672":{"id":"0:1216:1672","crate_id":0,"name":"method","span":{"filename":"src/method.rs","begin":[1,0],"end":[473,1]},"visibility":"public","docs":"The HTTP request method\n\nThis module contains HTTP-method related structs and errors and such. The\nmain type of this module, `Method`, is also reexported at the root of the\ncrate as `http::Method` and is intended for import through that location\nprimarily.\n\n# Examples\n\n```\nuse http::Method;\n\nassert_eq!(Method::GET, Method::from_bytes(b\"GET\").unwrap());\nassert!(Method::GET.is_idempotent());\nassert_eq!(Method::POST.as_str(), \"POST\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3009:1683","0:1244:3657"],"is_stripped":false}},"0:2410:1868":{"id":"0:2410:1868","crate_id":0,"name":"IterMut","span":{"filename":"src/header/map.rs","begin":[93,0],"end":[98,1]},"visibility":"public","docs":"`HeaderMap` mutable entry iterator\n\nYields `(&HeaderName, &mut value)` tuples. The same header name may be\nyielded more than once if it has more than one associated value.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"a:2:9259:5488-0:3283:1688":{"id":"a:2:9259:5488-0:3283:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10574:1968":{"id":"2:10574:1968","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10575:146","2:10576:2573","2:10577:5737"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2871-0:1498:3782":{"id":"b:2:2871-0:1498:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:526:1973":{"id":"0:526:1973","crate_id":0,"name":"as_header_name","span":{"filename":"src/header/map.rs","begin":[3351,0],"end":[3351,18]},"visibility":{"restricted":{"parent":"0:6:841","path":"::header::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:543:1861","0:544:1696"],"is_stripped":true}},"0:996":{"id":"0:996","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[92,4],"end":[92,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCESS_CONTROL_ALLOW_HEADERS","name":"ACCESS_CONTROL_ALLOW_HEADERS","id":"0:2732:1887","glob":false}},"0:2180":{"id":"0:2180","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[1089,0],"end":[1093,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2181:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13417:793":{"id":"2:13417:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:16005:5087"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3276:218":{"id":"2:3276:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3383:6135":{"id":"2:3383:6135","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3385:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1613:127":{"id":"0:1613:127","crate_id":0,"name":"Error","span":{"filename":"src/status.rs","begin":[271,4],"end":[271,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:3216:1414":{"id":"2:3216:1414","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1209":{"id":"0:1209","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[163,4],"end":[163,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::X_FRAME_OPTIONS","name":"X_FRAME_OPTIONS","id":"0:2803:1958","glob":false}},"b:2:2868-0:3098:3795":{"id":"b:2:2868-0:3098:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3106:408":{"id":"0:3106:408","crate_id":0,"name":"clone","span":{"filename":"src/status.rs","begin":[44,9],"end":[44,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3238":{"id":"0:3238","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[105,9],"end":[105,14]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3239:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2149":{"id":"0:2149","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[883,0],"end":[890,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12992:2591","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2150:126","0:2151:3428"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3300":{"id":"0:3300","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[25,54],"end":[25,58]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10529:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3301:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9259:5488-0:1498:3782":{"id":"a:2:9259:5488-0:1498:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1437:3937":{"id":"0:1437:3937","crate_id":0,"name":"version_ref","span":{"filename":"src/request.rs","begin":[896,4],"end":[898,5]},"visibility":"public","docs":"Get the HTTP version for this request\n\nBy default this is HTTP/1.1.\n\n# Examples\n\n```\n# use http::*;\n\nlet mut req = Request::builder();\nassert_eq!(req.version_ref().unwrap(), &Version::HTTP_11 );\n\nreq = req.version(Version::HTTP_2);\nassert_eq!(req.version_ref().unwrap(), &Version::HTTP_2 );\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3273:2337":{"id":"2:3273:2337","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4782:6766":{"id":"2:4782:6766","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4783:2386","2:4784:61798","2:4785:2440"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3113":{"id":"0:3113","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[44,33],"end":[44,35]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2925:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2754:1909":{"id":"0:2754:1909","crate_id":0,"name":"COOKIE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Contains stored HTTP cookies previously sent by the server with the\nSet-Cookie header.\n\nThe Cookie header might be omitted entirely, if the privacy setting of\nthe browser are set to block them, for example.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2116":{"id":"0:2116","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[709,0],"end":[716,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2118:127","0:2119:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3175:4435":{"id":"0:3175:4435","crate_id":0,"name":"SERVICE_UNAVAILABLE","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:9259:5488":{"id":"2:9259:5488","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1422:660":{"id":"0:1422:660","crate_id":0,"name":"fmt","span":{"filename":"src/request.rs","begin":[732,4],"end":[741,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3128:4208":{"id":"0:3128:4208","crate_id":0,"name":"ACCEPTED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1044":{"id":"0:1044","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[108,4],"end":[108,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::CONTENT_LENGTH","name":"CONTENT_LENGTH","id":"0:2748:1903","glob":false}},"0:1303":{"id":"0:1303","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[304,0],"end":[308,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1304:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:1361:1684":{"id":"b:2:3212-0:1361:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1415:59":{"id":"0:1415:59","crate_id":0,"name":"default","span":{"filename":"src/request.rs","begin":[699,4],"end":[701,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1494:1685":{"id":"0:1494:1685","crate_id":0,"name":"Response","span":{"filename":"src/response.rs","begin":[179,0],"end":[182,1]},"visibility":"public","docs":"Represents an HTTP response\n\nAn HTTP response consists of a head and a potentially optional body. The body\ncomponent is generic, enabling arbitrary types to represent the HTTP body.\nFor example, the body could be `Vec<u8>`, a `Stream` of byte chunks, or a\nvalue that has been deserialized.\n\nTypically you'll work with responses on the client side as the result of\nsending a `Request` and on the server you'll be generating a `Response` to\nsend back to the client.\n\n# Examples\n\nCreating a `Response` to return\n\n```\nuse http::{Request, Response, StatusCode};\n\nfn respond_to(req: Request<()>) -> http::Result<Response<()>> {\n    let mut builder = Response::builder()\n        .header(\"Foo\", \"Bar\")\n        .status(StatusCode::OK);\n\n    if req.headers().contains_key(\"Another-Header\") {\n        builder = builder.header(\"Another-Header\", \"Ack\");\n    }\n\n    builder.body(())\n}\n```\n\nA simple 404 handler\n\n```\nuse http::{Request, Response, StatusCode};\n\nfn not_found(_req: Request<()>) -> http::Result<Response<()>> {\n    Response::builder()\n        .status(StatusCode::NOT_FOUND)\n        .body(())\n}\n```\n\nOr otherwise inspecting the result of a request:\n\n```no_run\nuse http::{Request, Response};\n\nfn get(url: &str) -> http::Result<Response<()>> {\n    // ...\n# panic!()\n}\n\nlet response = get(\"https://www.rust-lang.org/\").unwrap();\n\nif !response.status().is_success() {\n    panic!(\"failed to get a successful response status!\");\n}\n\nif let Some(date) = response.headers().get(\"Date\") {\n    // we've got a `Date` header!\n}\n\nlet body = response.body();\n// ...\n```\n\nDeserialize a response of bytes via json:\n\n```\n# extern crate serde;\n# extern crate serde_json;\n# extern crate http;\nuse http::Response;\nuse serde::de;\n\nfn deserialize<T>(res: Response<Vec<u8>>) -> serde_json::Result<Response<T>>\n    where for<'de> T: de::Deserialize<'de>,\n{\n    let (parts, body) = res.into_parts();\n    let body = serde_json::from_slice(&body)?;\n    Ok(Response::from_parts(parts, body))\n}\n#\n# fn main() {}\n```\n\nOr alternatively, serialize the body of a response to json\n\n```\n# extern crate serde;\n# extern crate serde_json;\n# extern crate http;\nuse http::Response;\nuse serde::ser;\n\nfn serialize<T>(res: Response<T>) -> serde_json::Result<Response<Vec<u8>>>\n    where T: ser::Serialize,\n{\n    let (parts, body) = res.into_parts();\n    let body = serde_json::to_vec(&body)?;\n    Ok(Response::from_parts(parts, body))\n}\n#\n# fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1504","0:1506","a:2:3268:211-0:1494:1685","a:2:3280:220-0:1494:1685","a:2:3309:5286-0:1494:1685","a:2:9258:5489-0:1494:1685","a:2:9259:5488-0:1494:1685","b:2:3197-0:1494:1685","b:2:2868-0:1494:1685","b:2:3201-0:1494:1685","b:2:4001-0:1494:1685","b:2:3207-0:1494:1685","b:2:2871-0:1494:1685","b:2:3212-0:1494:1685","0:1525","0:1528"]}},"0:2750:1905":{"id":"0:2750:1905","crate_id":0,"name":"CONTENT_RANGE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates where in a full body message a partial message belongs.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1365:3782":{"id":"0:1365:3782","crate_id":0,"name":"Parts","span":{"filename":"src/request.rs","begin":[166,0],"end":[183,1]},"visibility":"public","docs":"Component parts of an HTTP `Request`\n\nThe HTTP request head consists of a method, uri, version, and a set of\nheader fields.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":["0:1366:1672","0:1367:1676","0:1368:1502","0:1369:3790","0:1370:1679"],"impls":["a:2:3268:211-0:1365:3782","a:2:3280:220-0:1365:3782","a:2:3309:5286-0:1365:3782","a:2:9258:5489-0:1365:3782","a:2:9259:5488-0:1365:3782","b:2:3197-0:1365:3782","b:2:2868-0:1365:3782","b:2:3201-0:1365:3782","b:2:4001-0:1365:3782","b:2:3207-0:1365:3782","b:2:2871-0:1365:3782","b:2:3212-0:1365:3782","0:1421"]}},"2:4050:5312":{"id":"2:4050:5312","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4051:6258"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3291:997":{"id":"0:3291:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/version.rs","begin":[25,20],"end":[25,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37624:178","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2799:1954":{"id":"0:2799:1954","crate_id":0,"name":"WARNING","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"General HTTP header contains information about possible problems with\nthe status of the message.\n\nMore than one `warning` header may appear in a response. Warning header\nfields can in general be applied to any message, however some warn-codes\nare specific to caches and can only be applied to response messages.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1294:127":{"id":"0:1294:127","crate_id":0,"name":"Error","span":{"filename":"src/method.rs","begin":[273,4],"end":[273,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:3239:660":{"id":"0:3239:660","crate_id":0,"name":"fmt","span":{"filename":"src/uri/mod.rs","begin":[105,9],"end":[105,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1262:305":{"id":"0:1262:305","crate_id":0,"name":"as_ref","span":{"filename":"src/method.rs","begin":[190,4],"end":[192,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7927:5218":{"id":"2:7927:5218","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7928:62513","2:7929:62514","2:7930:62511","2:7931:62509","2:7932:62515","2:7933:62512","2:7934:62510"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2966:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2103:4515":{"id":"0:2103:4515","crate_id":0,"name":"path_and_query","span":{"filename":"src/uri/mod.rs","begin":[396,4],"end":[402,5]},"visibility":"public","docs":"Returns the path & query components of the Uri","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"PathAndQuery","id":"0:3192:4489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/header/map.rs","begin":[14,0],"end":[14,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::as_header_name::AsHeaderName","name":"AsHeaderName","id":"0:543:1861","glob":false}},"0:2488:1871":{"id":"0:2488:1871","crate_id":0,"name":"VacantEntry","span":{"filename":"src/header/map.rs","begin":[169,0],"end":[175,1]},"visibility":"public","docs":"A view into a single empty location in a `HeaderMap`.\n\nThis struct is returned as part of the `Entry` enum.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"b:2:4001-0:1494:1685":{"id":"b:2:4001-0:1494:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3400:6138":{"id":"2:3400:6138","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3402:181","2:3403:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3212-0:1580:4125":{"id":"b:2:3212-0:1580:4125","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3212-0:3233:3782":{"id":"b:2:3212-0:3233:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2168:660":{"id":"0:2168:660","crate_id":0,"name":"fmt","span":{"filename":"src/uri/mod.rs","begin":[1026,4],"end":[1042,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3309:5286-0:1580:4125":{"id":"a:2:3309:5286-0:1580:4125","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1011":{"id":"0:1011","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[97,4],"end":[97,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCESS_CONTROL_REQUEST_HEADERS","name":"ACCESS_CONTROL_REQUEST_HEADERS","id":"0:2737:1892","glob":false}},"0:3167:4398":{"id":"0:3167:4398","crate_id":0,"name":"UPGRADE_REQUIRED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2183":{"id":"0:2183","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[1097,0],"end":[1118,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10529:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2184:715"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4001-0:3247:4525":{"id":"b:2:4001-0:3247:4525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2801:1956":{"id":"0:2801:1956","crate_id":0,"name":"X_CONTENT_TYPE_OPTIONS","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Marker used by the server to indicate that the MIME types advertised in\nthe `content-type` headers should not be changed and be followed.\n\nThis allows to opt-out of MIME type sniffing, or, in other words, it is\na way to say that the webmasters knew what they were doing.\n\nThis header was introduced by Microsoft in IE 8 as a way for webmasters\nto block content sniffing that was happening and could transform\nnon-executable MIME types into executable MIME types. Since then, other\nbrowsers have introduced it, even if their MIME sniffing algorithms were\nless aggressive.\n\nSite security testers usually expect this header to be set.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:13505:63244":{"id":"2:13505:63244","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:990":{"id":"0:990","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[90,4],"end":[90,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCEPT_RANGES","name":"ACCEPT_RANGES","id":"0:2730:1885","glob":false}},"0:3182:4467":{"id":"0:3182:4467","crate_id":0,"name":"NETWORK_AUTHENTICATION_REQUIRED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1533":{"id":"0:1533","crate_id":0,"name":null,"span":{"filename":"src/response.rs","begin":[516,0],"end":[526,1]},"visibility":{"restricted":{"parent":"0:1461:1674","path":"::response"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1534:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3149:4311":{"id":"0:3149:4311","crate_id":0,"name":"METHOD_NOT_ALLOWED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:3491:116":{"id":"2:3491:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3492:221","2:3493:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:3283:1688":{"id":"b:5:787-0:3283:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:5304","5:790:5802","5:791:5803"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13083:5344":{"id":"2:13083:5344","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3245":{"id":"0:3245","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[121,9],"end":[121,14]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3246:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1125":{"id":"0:1125","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[135,4],"end":[135,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::PROXY_AUTHORIZATION","name":"PROXY_AUTHORIZATION","id":"0:2775:1930","glob":false}},"0:2127:1414":{"id":"0:2127:1414","crate_id":0,"name":"try_from","span":{"filename":"src/uri/mod.rs","begin":[731,4],"end":[733,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3133:4233":{"id":"0:3133:4233","crate_id":0,"name":"MULTI_STATUS","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"a:2:9258:5489-0:3283:1688":{"id":"a:2:9258:5489-0:3283:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13433:4151":{"id":"2:13433:4151","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:3177:4445":{"id":"0:3177:4445","crate_id":0,"name":"HTTP_VERSION_NOT_SUPPORTED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:974":{"id":"0:974","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[82,55],"end":[82,65]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::value::ToStrError","name":"ToStrError","id":"0:2989:1880","glob":false}},"0:1167":{"id":"0:1167","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[149,4],"end":[149,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::SET_COOKIE","name":"SET_COOKIE","id":"0:2789:1944","glob":false}},"0:1368:1502":{"id":"0:1368:1502","crate_id":0,"name":"version","span":{"filename":"src/request.rs","begin":[174,4],"end":[174,24]},"visibility":"public","docs":"The request's version","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:2729:1884":{"id":"0:2729:1884","crate_id":0,"name":"ACCEPT_LANGUAGE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Advertises which languages the client is able to understand.\n\nThe Accept-Language request HTTP header advertises which languages the\nclient is able to understand, and which locale variant is preferred.\nUsing content negotiation, the server then selects one of the proposals,\nuses it and informs the client of its choice with the Content-Language\nresponse header. Browsers set adequate values for this header according\ntheir user interface language and even if a user can change it, this\nhappens rarely (and is frown upon as it leads to fingerprinting).\n\nThis header is a hint to be used when the server has no way of\ndetermining the language via another way, like a specific URL, that is\ncontrolled by an explicit user decision. It is recommended that the\nserver never overrides an explicit decision. The content of the\nAccept-Language is often out of the control of the user (like when\ntraveling and using an Internet Cafe in a different country); the user\nmay also want to visit a page in another language than the locale of\ntheir user interface.\n\nIf the server cannot serve any matching language, it can theoretically\nsend back a 406 (Not Acceptable) error code. But, for a better user\nexperience, this is rarely done and more common way is to ignore the\nAccept-Language header in this case.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"a:2:3280:220-0:1580:4125":{"id":"a:2:3280:220-0:1580:4125","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3094:3795":{"id":"0:3094:3795","crate_id":0,"name":"Builder","span":{"filename":"src/request.rs","begin":[190,0],"end":[192,1]},"visibility":"public","docs":"An HTTP request builder\n\nThis type can be used to construct an instance or `Request`\nthrough a builder-like pattern.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1423","a:2:3268:211-0:3094:3795","a:2:3280:220-0:3094:3795","a:2:3309:5286-0:3094:3795","a:2:9258:5489-0:3094:3795","a:2:9259:5488-0:3094:3795","b:2:3197-0:3094:3795","b:2:2868-0:3094:3795","b:2:3201-0:3094:3795","b:2:4001-0:3094:3795","b:2:3207-0:3094:3795","b:2:2871-0:3094:3795","b:2:3212-0:3094:3795","0:3096","0:1459"]}},"0:921":{"id":"0:921","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[78,40],"end":[78,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::HeaderMap","name":"HeaderMap","id":"0:2392:1681","glob":false}},"a:2:9259:5488-0:1365:3782":{"id":"a:2:9259:5488-0:1365:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3159:4361":{"id":"0:3159:4361","crate_id":0,"name":"UNSUPPORTED_MEDIA_TYPE","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"5:6085:2319":{"id":"5:6085:2319","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2114:4674":{"id":"0:2114:4674","crate_id":0,"name":"query","span":{"filename":"src/uri/mod.rs","begin":[700,4],"end":[702,5]},"visibility":"public","docs":"Get the query string of this `Uri`, starting after the `?`.\n\nThe query component contains non-hierarchical data that, along with data\nin the path component, serves to identify a resource within the scope of\nthe URI's scheme and naming authority (if any). The query component is\nindicated by the first question mark (\"?\") character and terminated by a\nnumber sign (\"#\") character or by the end of the URI.\n\n```notrust\nabc://username:password@example.com:123/path/data?key=value&key2=value2#fragid1\n                                                  |-------------------|\n                                                            |\n                                                          query\n```\n\n# Examples\n\nAbsolute URI\n\n```\n# use http::Uri;\nlet uri: Uri = \"http://example.org/hello/world?key=value\".parse().unwrap();\n\nassert_eq!(uri.query(), Some(\"key=value\"));\n```\n\nRelative URI with a query string component\n\n```\n# use http::Uri;\nlet uri: Uri = \"/hello/world?key=value&foo=bar\".parse().unwrap();\n\nassert_eq!(uri.query(), Some(\"key=value&foo=bar\"));\n```\n\nRelative URI without a query string component\n\n```\n# use http::Uri;\nlet uri: Uri = \"/hello/world\".parse().unwrap();\n\nassert!(uri.query().is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1206":{"id":"0:1206","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[162,4],"end":[162,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::X_DNS_PREFETCH_CONTROL","name":"X_DNS_PREFETCH_CONTROL","id":"0:2802:1957","glob":false}},"0:2785:1940":{"id":"0:2785:1940","crate_id":0,"name":"SEC_WEBSOCKET_KEY","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"The |Sec-WebSocket-Key| header field is used in the WebSocket opening\nhandshake. It is sent from the client to the server to provide part\nof the information used by the server to prove that it received a\nvalid WebSocket opening handshake. This helps ensure that the server\ndoes not accept connections from non-WebSocket clients (e.g., HTTP\nclients) that are being abused to send data to unsuspecting WebSocket\nservers.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"b:2:3201-0:1498:3782":{"id":"b:2:3201-0:1498:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1056":{"id":"0:1056","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[112,4],"end":[112,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::CONTENT_SECURITY_POLICY_REPORT_ONLY","name":"CONTENT_SECURITY_POLICY_REPORT_ONLY","id":"0:2752:1907","glob":false}},"2:13063:5345":{"id":"2:13063:5345","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13065:5347","2:13066:61674","2:13067:61679","2:13068:61675","2:13069:61677","2:13070:61676","2:13071:61678"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1628:660":{"id":"0:1628:660","crate_id":0,"name":"fmt","span":{"filename":"src/status.rs","begin":[534,4],"end":[536,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3126:4182":{"id":"0:3126:4182","crate_id":0,"name":"OK","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2361":{"id":"0:2361","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,24],"end":[188,33]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::header::HeaderMap","name":"HeaderMap","id":"0:2392:1681","glob":false}},"2:3439:6147":{"id":"2:3439:6147","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3441:1235"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3234:4485":{"id":"0:3234:4485","crate_id":0,"name":"scheme","span":{"filename":"src/uri/mod.rs","begin":[108,4],"end":[108,30]},"visibility":"public","docs":"The scheme component of a URI","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Scheme","id":"0:3197:4492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},"2:3280:220":{"id":"2:3280:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6413-0:1580:4125":{"id":"b:5:6413-0:1580:4125","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:22801:6928":{"id":"2:22801:6928","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22802:6834","2:22803:61572","2:22804:1225","2:22805:1226","2:22806:46150","2:22807:62774","2:22808:13581","2:22809:62775","2:22810:62776","2:22811:61585","2:22812:61589","2:22813:61590","2:22814:61591","2:22815:61592","2:22816:62699","2:22817:62700","2:22818:62701"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3278:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22850:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3375:6134":{"id":"2:3375:6134","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3377:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2784:1939":{"id":"0:2784:1939","crate_id":0,"name":"SEC_WEBSOCKET_EXTENSIONS","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"The |Sec-WebSocket-Extensions| header field is used in the WebSocket\nopening handshake. It is initially sent from the client to the\nserver, and then subsequently sent from the server to the client, to\nagree on a set of protocol-level extensions to use for the duration\nof the connection.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2194:4964":{"id":"0:2194:4964","crate_id":0,"name":"HTTP_2","span":{"filename":"src/version.rs","begin":[39,4],"end":[39,50]},"visibility":"public","docs":"`HTTP/2.0`","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:1397:3850":{"id":"0:1397:3850","crate_id":0,"name":"method_mut","span":{"filename":"src/request.rs","begin":[491,4],"end":[493,5]},"visibility":"public","docs":"Returns a mutable reference to the associated HTTP method.\n\n# Examples\n\n```\n# use http::*;\nlet mut request: Request<()> = Request::default();\n*request.method_mut() = Method::PUT;\nassert_eq!(*request.method(), Method::PUT);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:543:1861":{"id":"0:543:1861","crate_id":0,"name":"AsHeaderName","span":{"filename":"src/header/map.rs","begin":[3356,4],"end":[3356,37]},"visibility":"public","docs":"A marker trait used to identify values that can be used as search keys\nto a `HeaderMap`.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"0:544:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2226:1678":{"id":"0:2226:1678","crate_id":0,"name":"error","span":{"filename":"src/error.rs","begin":[1,0],"end":[149,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2248:127","0:2250:205"],"is_stripped":true}},"b:2:3212-0:1244:3657":{"id":"b:2:3212-0:1244:3657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1374:2200":{"id":"0:1374:2200","crate_id":0,"name":"get","span":{"filename":"src/request.rs","begin":[230,4],"end":[237,5]},"visibility":"public","docs":"Creates a new `Builder` initialized with a GET method and the given URI.\n\nThis method returns an instance of `Builder` which can be used to\ncreate a `Request`.\n\n# Example\n\n```\n# use http::*;\n\nlet request = Request::get(\"https://www.rust-lang.org/\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["uri",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1683":{"id":"0:1683","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[41,0],"end":[41,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::scheme::Scheme","name":"Scheme","id":"0:3197:4492","glob":false}},"0:2475:1863":{"id":"0:2475:1863","crate_id":0,"name":"Entry","span":{"filename":"src/header/map.rs","begin":[157,0],"end":[163,1]},"visibility":"public","docs":"A view into a single location in a `HeaderMap`, which may be vacant or occupied.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:2478:2025","0:2481:2027"],"impls":[]}},"0:3286":{"id":"0:3286","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[25,9],"end":[25,18]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3276:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4745:6411":{"id":"1:4745:6411","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4746:58890","1:4747:43179","1:4748:58891","1:4749:58892"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1582":{"id":"0:1582","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[55,0],"end":[200,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1583:3599","0:1584:2579","0:1585:4145","0:1586:306","0:1587:4161","0:1588:4163","0:1589:4166","0:1590:4169","0:1591:4172","0:1592:4175"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9258:5489-0:3098:3795":{"id":"a:2:9258:5489-0:3098:3795","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3336:5300":{"id":"2:3336:5300","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3338:181","2:3339:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3268:211-0:1244:3657":{"id":"a:2:3268:211-0:1244:3657","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:475:1974":{"id":"0:475:1974","crate_id":0,"name":"into_header_name","span":{"filename":"src/header/map.rs","begin":[3267,0],"end":[3267,20]},"visibility":{"restricted":{"parent":"0:6:841","path":"::header::map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:489:1865","0:490:1696"],"is_stripped":true}},"0:2198":{"id":"0:2198","crate_id":0,"name":null,"span":{"filename":"src/version.rs","begin":[62,0],"end":[75,1]},"visibility":{"restricted":{"parent":"0:2186:1502","path":"::version"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2199:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1279":{"id":"0:1279","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[237,0],"end":[241,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1280:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4001-0:3094:3795":{"id":"b:2:4001-0:3094:3795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1372":{"id":"0:1372","crate_id":0,"name":null,"span":{"filename":"src/request.rs","begin":[194,0],"end":[421,1]},"visibility":{"restricted":{"parent":"0:1324:1673","path":"::request"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}},"items":["0:1373:3805","0:1374:2200","0:1376:3811","0:1378:3814","0:1380:3817","0:1382:971","0:1384:2360","0:1386:3825","0:1388:3828","0:1390:3831"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13502:63243":{"id":"2:13502:63243","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"1:16011:5092","`DoubleEndedIterator`":"2:8447:120","prim@char":"1:16005:5087","self::pattern":"2:13053:5351"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49627:5368","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9259:5488-0:3098:3795":{"id":"a:2:9259:5488-0:3098:3795","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:5488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:8447:120":{"id":"2:8447:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8448:2495","2:8449:5750","2:8450:5751","2:8451:5752","2:8455:5753","2:8458:4731"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8601:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2865:5302":{"id":"2:2865:5302","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2867:57179"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1600:604":{"id":"0:1600:604","crate_id":0,"name":"eq","span":{"filename":"src/status.rs","begin":[236,4],"end":[238,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u16"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2728:1883":{"id":"0:2728:1883","crate_id":0,"name":"ACCEPT_ENCODING","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Advertises which content encoding the client is able to understand.\n\nThe Accept-Encoding request HTTP header advertises which content\nencoding, usually a compression algorithm, the client is able to\nunderstand. Using content negotiation, the server selects one of the\nproposals, uses it and informs the client of its choice with the\nContent-Encoding response header.\n\nEven if both the client and the server supports the same compression\nalgorithms, the server may choose not to compress the body of a\nresponse, if the identity value is also acceptable. Two common cases\nlead to this:\n\n* The data to be sent is already compressed and a second compression\nwon't lead to smaller data to be transmitted. This may the case with\nsome image formats;\n\n* The server is overloaded and cannot afford the computational overhead\ninduced by the compression requirement. Typically, Microsoft recommends\nnot to compress if a server use more than 80 % of its computational\npower.\n\nAs long as the identity value, meaning no encryption, is not explicitly\nforbidden, by an identity;q=0 or a *;q=0 without another explicitly set\nvalue for identity, the server must never send back a 406 Not Acceptable\nerror.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"b:2:3212-0:3247:4525":{"id":"b:2:3212-0:3247:4525","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidUriParts","id":"0:3247:4525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:971":{"id":"0:971","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[82,35],"end":[82,53]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::value::InvalidHeaderValue","name":"InvalidHeaderValue","id":"0:793:1879","glob":false}},"0:3173:4425":{"id":"0:3173:4425","crate_id":0,"name":"NOT_IMPLEMENTED","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:13447:63236":{"id":"2:13447:63236","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49723:5366","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1158":{"id":"0:1158","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[146,4],"end":[146,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::SEC_WEBSOCKET_PROTOCOL","name":"SEC_WEBSOCKET_PROTOCOL","id":"0:2786:1941","glob":false}},"0:1376:3811":{"id":"0:1376:3811","crate_id":0,"name":"put","span":{"filename":"src/request.rs","begin":[253,4],"end":[260,5]},"visibility":"public","docs":"Creates a new `Builder` initialized with a PUT method and the given URI.\n\nThis method returns an instance of `Builder` which can be used to\ncreate a `Request`.\n\n# Example\n\n```\n# use http::*;\n\nlet request = Request::put(\"https://www.rust-lang.org/\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["uri",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2481:2027":{"id":"0:2481:2027","crate_id":0,"name":"Vacant","span":{"filename":"src/header/map.rs","begin":[162,4],"end":[162,30]},"visibility":"default","docs":"A vacant entry","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"VacantEntry","id":"0:2488:1871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}]}},"2:13431:2211":{"id":"2:13431:2211","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47492:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2764:1919":{"id":"0:2764:1919","crate_id":0,"name":"IF_MODIFIED_SINCE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Makes a request conditional based on the modification date.\n\nThe If-Modified-Since request HTTP header makes the request conditional:\nthe server will send back the requested resource, with a 200 status,\nonly if it has been last modified after the given date. If the request\nhas not been modified since, the response will be a 304 without any\nbody; the Last-Modified header will contain the date of last\nmodification. Unlike If-Unmodified-Since, If-Modified-Since can only be\nused with a GET or HEAD.\n\nWhen used in combination with If-None-Match, it is ignored, unless the\nserver doesn't support If-None-Match.\n\nThe most common use case is to update a cached entity that has no\nassociated ETag.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"1:1079:6469":{"id":"1:1079:6469","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1080:5304","1:1081:7170","1:1082:57186","1:1083:4744","1:1084:3435","1:1085:57187","1:1086:57188"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2871-0:1361:1684":{"id":"b:2:2871-0:1361:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3158:4356":{"id":"0:3158:4356","crate_id":0,"name":"URI_TOO_LONG","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2765:1920":{"id":"0:2765:1920","crate_id":0,"name":"IF_NONE_MATCH","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Makes a request conditional based on the E-Tag.\n\nThe If-None-Match HTTP request header makes the request conditional. For\nGET and HEAD methods, the server will send back the requested resource,\nwith a 200 status, only if it doesn't have an ETag matching the given\nones. For other methods, the request will be processed only if the\neventually existing resource's ETag doesn't match any of the values\nlisted.\n\nWhen the condition fails for GET and HEAD methods, then the server must\nreturn HTTP status code 304 (Not Modified). For methods that apply\nserver-side changes, the status code 412 (Precondition Failed) is used.\nNote that the server generating a 304 response MUST generate any of the\nfollowing header fields that would have been sent in a 200 (OK) response\nto the same request: Cache-Control, Content-Location, Date, ETag,\nExpires, and Vary.\n\nThe comparison with the stored ETag uses the weak comparison algorithm,\nmeaning two files are considered identical not only if they are\nidentical byte to byte, but if the content is equivalent. For example,\ntwo pages that would differ only by the date of generation in the footer\nwould be considered as identical.\n\nWhen used in combination with If-Modified-Since, it has precedence (if\nthe server supports it).\n\nThere are two common use cases:\n\n* For `GET` and `HEAD` methods, to update a cached entity that has an associated ETag.\n* For other methods, and in particular for `PUT`, `If-None-Match` used with\nthe `*` value can be used to save a file not known to exist,\nguaranteeing that another upload didn't happen before, losing the data\nof the previous put; this problems is the variation of the lost update\nproblem.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:3169:4407":{"id":"0:3169:4407","crate_id":0,"name":"TOO_MANY_REQUESTS","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2800:1955":{"id":"0:2800:1955","crate_id":0,"name":"WWW_AUTHENTICATE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Defines the authentication method that should be used to gain access to\na resource.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1423":{"id":"0:1423","crate_id":0,"name":null,"span":{"filename":"src/request.rs","begin":[744,0],"end":[1072,1]},"visibility":{"restricted":{"parent":"0:1324:1673","path":"::request"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1424:920","0:1425:1672","0:1428:3917","0:1430:1676","0:1433:3926","0:1435:1502","0:1437:3937","0:1439:1671","0:1443:3950","0:1445:3868","0:1447:3647","0:1450:3967","0:1452:3874","0:1454:1802"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3109":{"id":"0:3109","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[44,22],"end":[44,31]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3110:604","0:3111:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3280:220-0:3233:3782":{"id":"a:2:3280:220-0:3233:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2756:1911":{"id":"0:2756:1911","crate_id":0,"name":"DATE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Contains the date and time at which the message was originated.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"a:2:9258:5489-0:3094:3795":{"id":"a:2:9258:5489-0:3094:3795","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"1:4752:6414":{"id":"1:4752:6414","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4753:60918","1:4754:60919","1:4755:60920","1:4757:6413","1:4758:60921","1:4760:4760","1:4761:7457"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4670:6389","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3207-0:1494:1685":{"id":"b:2:3207-0:1494:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:1494:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2747:1902":{"id":"0:2747:1902","crate_id":0,"name":"CONTENT_LANGUAGE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Used to describe the languages intended for the audience.\n\nThis header allows a user to differentiate according to the users' own\npreferred language. For example, if \"Content-Language: de-DE\" is set, it\nsays that the document is intended for German language speakers\n(however, it doesn't indicate the document is written in German. For\nexample, it might be written in English as part of a language course for\nGerman speakers).\n\nIf no Content-Language is specified, the default is that the content is\nintended for all language audiences. Multiple language tags are also\npossible, as well as applying the Content-Language header to various\nmedia types and not only to textual documents.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1517:3874":{"id":"0:1517:3874","crate_id":0,"name":"extensions_mut","span":{"filename":"src/response.rs","begin":[395,4],"end":[397,5]},"visibility":"public","docs":"Returns a mutable reference to the associated extensions.\n\n# Examples\n\n```\n# use http::*;\n# use http::header::*;\nlet mut response: Response<()> = Response::default();\nresponse.extensions_mut().insert(\"hello\");\nassert_eq!(response.extensions().get(), Some(&\"hello\"));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Extensions","id":"0:3357:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1512:1502":{"id":"0:1512:1502","crate_id":0,"name":"version","span":{"filename":"src/response.rs","begin":[320,4],"end":[322,5]},"visibility":"public","docs":"Returns a reference to the associated version.\n\n# Examples\n\n```\n# use http::*;\nlet response: Response<()> = Response::default();\nassert_eq!(response.version(), Version::HTTP_11);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13462:4731":{"id":"2:13462:4731","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:16005:5087","`None`":"2:47492:176","self::pattern":"2:13053:5351"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:5346","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:924":{"id":"0:924","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[78,51],"end":[78,65]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::IntoHeaderName","name":"IntoHeaderName","id":"0:489:1865","glob":false}},"b:2:2868-0:1580:4125":{"id":"b:2:2868-0:1580:4125","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidStatusCode","id":"0:1580:4125","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:3227:1687":{"id":"b:2:3197-0:3227:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10302:5385":{"id":"2:10302:5385","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10303:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1435:1502":{"id":"0:1435:1502","crate_id":0,"name":"version","span":{"filename":"src/request.rs","begin":[874,4],"end":[879,5]},"visibility":"public","docs":"Set the HTTP version for this request.\n\nThis function will configure the HTTP version of the `Request` that\nwill be returned from `Builder::build`.\n\nBy default this is HTTP/1.1\n\n# Examples\n\n```\n# use http::*;\n\nlet req = Request::builder()\n    .version(Version::HTTP_2)\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["version",{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13418:2160":{"id":"2:13418:2160","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6463:6393":{"id":"1:6463:6393","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6464:57574","1:6465:10363","1:6466:57575","1:6467:57576","1:6468:57577","1:6469:57578"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1615":{"id":"0:1615","crate_id":0,"name":null,"span":{"filename":"src/status.rs","begin":[279,0],"end":[286,1]},"visibility":{"restricted":{"parent":"0:1564:1675","path":"::status"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1617:127","0:1618:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6865:6365":{"id":"1:6865:6365","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6866:57546"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:915":{"id":"0:915","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[78,25],"end":[78,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::Entry","name":"Entry","id":"0:2475:1863","glob":false}},"0:2774:1929":{"id":"0:2774:1929","crate_id":0,"name":"PROXY_AUTHENTICATE","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Defines the authentication method that should be used to gain access to\na proxy.\n\nUnlike `www-authenticate`, the `proxy-authenticate` header field applies\nonly to the next outbound client on the response chain. This is because\nonly the client that chose a given proxy is likely to have the\ncredentials necessary for authentication. However, when multiple proxies\nare used within the same administrative domain, such as office and\nregional caching proxies within a large corporate network, it is common\nfor credentials to be generated by the user agent and passed through the\nhierarchy until consumed. Hence, in such a configuration, it will appear\nas if Proxy-Authenticate is being forwarded because each proxy will send\nthe same challenge set.\n\nThe `proxy-authenticate` header is sent along with a `407 Proxy\nAuthentication Required`.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"a:2:3268:211-0:1498:3782":{"id":"a:2:3268:211-0:1498:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1498:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1005":{"id":"0:1005","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[95,4],"end":[95,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCESS_CONTROL_EXPOSE_HEADERS","name":"ACCESS_CONTROL_EXPOSE_HEADERS","id":"0:2735:1890","glob":false}},"0:1973:4491":{"id":"0:1973:4491","crate_id":0,"name":"Port","span":{"filename":"src/uri/port.rs","begin":[6,0],"end":[9,1]},"visibility":"public","docs":"The port component of a URI.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:1618:1414":{"id":"0:1618:1414","crate_id":0,"name":"try_from","span":{"filename":"src/status.rs","begin":[283,4],"end":[285,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3181:227","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1610:681":{"id":"0:1610:681","crate_id":0,"name":"from","span":{"filename":"src/status.rs","begin":[265,4],"end":[267,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3116:997":{"id":"0:3116:997","crate_id":0,"name":"partial_cmp","span":{"filename":"src/status.rs","begin":[44,37],"end":[44,47]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37624:178","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1023":{"id":"0:1023","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[101,4],"end":[101,11]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ALT_SVC","name":"ALT_SVC","id":"0:2741:1896","glob":false}},"0:2138":{"id":"0:2138","crate_id":0,"name":null,"span":{"filename":"src/uri/mod.rs","begin":[763,0],"end":[770,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2140:127","0:2141:1414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1505:3805":{"id":"0:1505:3805","crate_id":0,"name":"builder","span":{"filename":"src/response.rs","begin":[230,4],"end":[232,5]},"visibility":"public","docs":"Creates a new builder-style object to manufacture a `Response`\n\nThis method returns an instance of `Builder` which can be used to\ncreate a `Response`.\n\n# Examples\n\n```\n# use http::*;\nlet response = Response::builder()\n    .status(200)\n    .header(\"X-Custom-Foo\", \"Bar\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3426:6144":{"id":"2:3426:6144","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3428:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1594:660":{"id":"0:1594:660","crate_id":0,"name":"fmt","span":{"filename":"src/status.rs","begin":[203,4],"end":[205,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:1365:3782":{"id":"b:2:3197-0:1365:3782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:2297"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2803:1958":{"id":"0:2803:1958","crate_id":0,"name":"X_FRAME_OPTIONS","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates whether or not a browser should be allowed to render a page in\na frame.\n\nSites can use this to avoid clickjacking attacks, by ensuring that their\ncontent is not embedded into other sites.\n\nThe added security is only provided if the user accessing the document\nis using a browser supporting `x-frame-options`.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1394:920":{"id":"0:1394:920","crate_id":0,"name":"new","span":{"filename":"src/request.rs","begin":[439,4],"end":[444,5]},"visibility":"public","docs":"Creates a new blank `Request` with the body\n\nThe component parts of this request will be set to their default, e.g.\nthe GET method, no headers, etc.\n\n# Examples\n\n```\n# use http::*;\nlet request = Request::new(\"hello world\");\n\nassert_eq!(*request.method(), Method::GET);\nassert_eq!(*request.body(), \"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2751:1906":{"id":"0:2751:1906","crate_id":0,"name":"CONTENT_SECURITY_POLICY","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Allows controlling resources the user agent is allowed to load for a\ngiven page.\n\nWith a few exceptions, policies mostly involve specifying server origins\nand script endpoints. This helps guard against cross-site scripting\nattacks (XSS).","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:2783:1938":{"id":"0:2783:1938","crate_id":0,"name":"SEC_WEBSOCKET_ACCEPT","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"The |Sec-WebSocket-Accept| header field is used in the WebSocket\nopening handshake. It is sent from the server to the client to\nconfirm that the server is willing to initiate the WebSocket\nconnection.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1386:3825":{"id":"0:1386:3825","crate_id":0,"name":"connect","span":{"filename":"src/request.rs","begin":[369,4],"end":[376,5]},"visibility":"public","docs":"Creates a new `Builder` initialized with a CONNECT method and the given URI.\n\nThis method returns an instance of `Builder` which can be used to\ncreate a `Request`.\n\n# Example\n\n```\n# use http::*;\n\nlet request = Request::connect(\"https://www.rust-lang.org/\")\n    .body(())\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["uri",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:2248:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3157:4351":{"id":"0:3157:4351","crate_id":0,"name":"PAYLOAD_TOO_LARGE","span":{"filename":"src/status.rs","begin":[323,0],"end":[515,1]},"visibility":"public","docs":"413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"a:2:9258:5489-0:3102:1686":{"id":"a:2:9258:5489-0:3102:1686","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:5489","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23462:6836":{"id":"2:23462:6836","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23463:1268","2:23464:1267","2:23465:1265","2:23466:1264"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialEq","id":"2:22874:6922","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1407:3882":{"id":"0:1407:3882","crate_id":0,"name":"body_mut","span":{"filename":"src/request.rs","begin":[638,4],"end":[640,5]},"visibility":"public","docs":"Returns a mutable reference to the associated HTTP body.\n\n# Examples\n\n```\n# use http::*;\nlet mut request: Request<String> = Request::default();\nrequest.body_mut().push_str(\"hello world\");\nassert!(!request.body().is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13487:63239":{"id":"2:13487:63239","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:5345","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:3227:1687":{"id":"b:2:3212-0:3227:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2095:3805":{"id":"0:2095:3805","crate_id":0,"name":"builder","span":{"filename":"src/uri/mod.rs","begin":[200,4],"end":[202,5]},"visibility":"public","docs":"Creates a new builder-style object to manufacture a `Uri`.\n\nThis method returns an instance of `Builder` which can be usd to\ncreate a `Uri`.\n\n# Examples\n\n```\nuse http::Uri;\n\nlet uri = Uri::builder()\n    .scheme(\"https\")\n    .authority(\"hyper.rs\")\n    .path_and_query(\"/\")\n    .build()\n    .unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3188:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2793:1948":{"id":"0:2793:1948","crate_id":0,"name":"TRANSFER_ENCODING","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Specifies the form of encoding used to safely transfer the entity to the\nclient.\n\n`transfer-encoding` is a hop-by-hop header, that is applying to a\nmessage between two nodes, not to a resource itself. Each segment of a\nmulti-node connection can use different `transfer-encoding` values. If\nyou want to compress data over the whole connection, use the end-to-end\nheader `content-encoding` header instead.\n\nWhen present on a response to a `HEAD` request that has no body, it\nindicates the value that would have applied to the corresponding `GET`\nmessage.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:1409:3893":{"id":"0:1409:3893","crate_id":0,"name":"into_parts","span":{"filename":"src/request.rs","begin":[668,4],"end":[670,5]},"visibility":"public","docs":"Consumes the request returning the head and body parts.\n\n# Examples\n\n```\n# use http::*;\nlet request = Request::new(());\nlet (parts, body) = request.into_parts();\nassert_eq!(parts.method, Method::GET);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Parts","id":"0:1365:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},{"kind":"generic","inner":"T"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3174:135":{"id":"2:3174:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3176:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6441:6390":{"id":"1:6441:6390","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6442:6693","1:6443:6694","1:6444:10906","1:6445:61152","1:6447:61156","1:6449:61153","1:6450:61154","1:6452:61155"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1191":{"id":"0:1191","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[157,4],"end":[157,8]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::VARY","name":"VARY","id":"0:2797:1952","glob":false}},"0:961":{"id":"0:961","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[81,21],"end":[81,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::HeaderName","name":"HeaderName","id":"0:2649:1877","glob":false}},"0:2108:2958":{"id":"0:2108:2958","crate_id":0,"name":"host","span":{"filename":"src/uri/mod.rs","begin":[590,4],"end":[592,5]},"visibility":"public","docs":"Get the host of this `Uri`.\n\nThe host subcomponent of authority is identified by an IP literal\nencapsulated within square brackets, an IPv4 address in dotted- decimal\nform, or a registered name.  The host subcomponent is **case-insensitive**.\n\n```notrust\nabc://username:password@example.com:123/path/data?key=value&key2=value2#fragid1\n                        |---------|\n                             |\n                            host\n```\n\n# Examples\n\nAbsolute URI\n\n```\n# use http::Uri;\nlet uri: Uri = \"http://example.org:80/hello/world\".parse().unwrap();\n\nassert_eq!(uri.host(), Some(\"example.org\"));\n```\n\n\nRelative URI\n\n```\n# use http::Uri;\nlet uri: Uri = \"/hello/world\".parse().unwrap();\n\nassert!(uri.host().is_none());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23771:6830":{"id":"2:23771:6830","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23772:6834"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23767:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3278:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3289:907":{"id":"0:3289:907","crate_id":0,"name":"ne","span":{"filename":"src/version.rs","begin":[25,9],"end":[25,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3188:3795":{"id":"0:3188:3795","crate_id":0,"name":"Builder","span":{"filename":"src/uri/builder.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A builder for `Uri`s.\n\nThis type can be used to construct an instance of `Uri`\nthrough a builder pattern.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:2740:1895":{"id":"0:2740:1895","crate_id":0,"name":"ALLOW","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Lists the set of methods support by a resource.\n\nThis header must be sent if the server responds with a 405 Method Not\nAllowed status code to indicate which request methods can be used. An\nempty Allow header indicates that the resource allows no request\nmethods, which might occur temporarily for a given resource, for\nexample.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:3210:127":{"id":"2:3210:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}},"2:22748:6919":{"id":"2:22748:6919","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22749:6834","2:22750:61572","2:22751:61573","2:22752:61574","2:22753:61575","2:22754:46150","2:22755:61576","2:22756:61577","2:22757:61578","2:22758:61579","2:22759:61580","2:22760:61581","2:22761:61582","2:22762:61583","2:22763:13415","2:22764:61584","2:22765:61585","2:22766:12756","2:22767:61586","2:22768:61587","2:22769:61588","2:22770:61589","2:22771:61590","2:22772:61591","2:22773:61592"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3278:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22850:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3013:408":{"id":"0:3013:408","crate_id":0,"name":"clone","span":{"filename":"src/method.rs","begin":[45,9],"end":[45,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1862:1002":{"id":"0:1862:1002","crate_id":0,"name":"path","span":{"filename":"src/uri/path.rs","begin":[1,0],"end":[558,1]},"visibility":{"restricted":{"parent":"0:1631:1676","path":"::uri"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3192:4489"],"is_stripped":true}},"0:987":{"id":"0:987","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[89,4],"end":[89,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::ACCEPT_LANGUAGE","name":"ACCEPT_LANGUAGE","id":"0:2729:1884","glob":false}},"b:2:2871-0:3227:1687":{"id":"b:2:2871-0:3227:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Uri","id":"0:3227:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:942":{"id":"0:942","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[79,19],"end":[79,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::VacantEntry","name":"VacantEntry","id":"0:2488:1871","glob":false}},"2:13437:6494":{"id":"2:13437:6494","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3576:2442","`str`":"1:16011:5092","str::slice_mut_unchecked":"1:16011:5092"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:1252:3679":{"id":"0:1252:3679","crate_id":0,"name":"OPTIONS","span":{"filename":"src/method.rs","begin":[88,4],"end":[88,48]},"visibility":"public","docs":"OPTIONS","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:2760:1915":{"id":"0:2760:1915","crate_id":0,"name":"FORWARDED","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Contains information from the client-facing side of proxy servers that\nis altered or lost when a proxy is involved in the path of the request.\n\nThe alternative and de-facto standard versions of this header are the\nX-Forwarded-For, X-Forwarded-Host and X-Forwarded-Proto headers.\n\nThis header is used for debugging, statistics, and generating\nlocation-dependent content and by design it exposes privacy sensitive\ninformation, such as the IP address of the client. Therefore the user's\nprivacy must be kept in mind when deploying this header.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:3739:6150":{"id":"2:3739:6150","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3741:58262"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6415:1395":{"id":"5:6415:1395","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3309:5286-0:3233:3782":{"id":"a:2:3309:5286-0:3233:3782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:5286","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:3233:3782","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2871-0:3009:1683":{"id":"b:2:2871-0:3009:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:5302","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:57179"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3268:211-0:3098:3795":{"id":"a:2:3268:211-0:3098:3795","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3098:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2868-0:1361:1684":{"id":"b:2:2868-0:1361:1684","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:1361:1684","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2870:2589"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:1244:3657":{"id":"b:2:3201-0:1244:3657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidMethod","id":"0:1244:3657","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2771:1926":{"id":"0:2771:1926","crate_id":0,"name":"MAX_FORWARDS","span":{"filename":"src/header/name.rs","begin":[156,0],"end":[975,1]},"visibility":"public","docs":"Indicates the max number of intermediaries the request should be sent\nthrough.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"HeaderName","id":"0:2649:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"2:10933:214":{"id":"2:10933:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10935:181","2:10936:2200","2:10937:2211","2:10938:4151","2:10939:59378","2:10940:753","2:10941:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10924:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2126:127":{"id":"0:2126:127","crate_id":0,"name":"Error","span":{"filename":"src/uri/mod.rs","begin":[728,4],"end":[728,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"InvalidUri","id":"0:3242:4523","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:1263":{"id":"0:1263","crate_id":0,"name":null,"span":{"filename":"src/method.rs","begin":[195,0],"end":[200,1]},"visibility":{"restricted":{"parent":"0:1216:1672","path":"::method"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1265:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3647:5847":{"id":"2:3647:5847","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3649:62464","2:3650:62465","2:3651:3369"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2337","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1185":{"id":"0:1185","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[155,4],"end":[155,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::UPGRADE_INSECURE_REQUESTS","name":"UPGRADE_INSECURE_REQUESTS","id":"0:2796:1950","glob":false}},"0:1459":{"id":"0:1459","crate_id":0,"name":null,"span":{"filename":"src/request.rs","begin":[1074,0],"end":[1081,1]},"visibility":{"restricted":{"parent":"0:1324:1673","path":"::request"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3246:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:3094:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1460:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3515:2453":{"id":"2:3515:2453","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3516:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1272:604":{"id":"0:1272:604","crate_id":0,"name":"eq","span":{"filename":"src/method.rs","begin":[218,4],"end":[220,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Method","id":"0:3009:1683","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3268:211-0:3283:1688":{"id":"a:2:3268:211-0:3283:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:3283:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13427:304":{"id":"2:13427:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:16011:5092","`u8`":"1:16022:5101"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1510:1675":{"id":"0:1510:1675","crate_id":0,"name":"status","span":{"filename":"src/response.rs","begin":[291,4],"end":[293,5]},"visibility":"public","docs":"Returns the `StatusCode`.\n\n# Examples\n\n```\n# use http::*;\nlet response: Response<()> = Response::default();\nassert_eq!(response.status(), StatusCode::OK);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StatusCode","id":"0:3102:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1050":{"id":"0:1050","crate_id":0,"name":null,"span":{"filename":"src/header/mod.rs","begin":[110,4],"end":[110,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::name::CONTENT_RANGE","name":"CONTENT_RANGE","id":"0:2750:1905","glob":false}}},"paths":{"1:9067:6561":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:47602:5580":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:12142:8605":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"5:3370:6480":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:12298:6502":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:2553:7248":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:1153:10882":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:16008:5089":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"5:1195:12042":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:3268:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:6887:10412":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:5788:8183":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:3515:2453":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:5789:6379":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:50045:6799":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:3405:6139":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:46063:5818":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:11923:5889":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:10635:8395":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:3329:6633":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:4443:1867":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:10211:10803":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:24564:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:5155:7000":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:12756:8722":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:46371:7151":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:11594:6522":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:4401:9982":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:6688:7221":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:6636:7521":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:56400:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:764:1868":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:50179:7058":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:12238:6557":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:56348:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11026:10832":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:1306:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:53553:10624":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"5:5903:1338":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"1:5801:6381":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:374:7202":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:6100:10316":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:49276:5885":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:3168:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:12699:8714":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:8886:5233":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:48546:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"6:4494:10020":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:10558:10809":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:46417:7153":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"0:3233:3782":{"crate_id":0,"path":["http","uri","Parts"],"kind":"struct"},"16:7146:7593":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:22927:1696":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:1623:1863":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:11139:5372":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:11588:8498":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:50404:7067":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:10878:2010":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:10656:8397":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:2507:6192":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:3565:6420":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:1511:5202":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:5657:6466":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:8392:6521":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"5:1441:1863":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:16010:5091":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"14:0:5065":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:8447:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:32693:5333":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:13810:9071":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:4073:9873":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:49297:5875":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:5274:10115":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:47663:1867":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:5159:10061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"15:230:7429":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"6:5998:10280":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:4506:9149":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:4387:9978":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:3276:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:1486:5198":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"6:1665:9700":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:45809:6154":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:11045:50301":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:12685:8711":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:5130:10037":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:3521:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:6699:10295":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:9574:7841":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:1527:9611":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"12:750:1867":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:10822:6387":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:56361:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:23767:1696":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:3491:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:16012:5093":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:49563:5374":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:7511:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:49368:5892":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:9643:12118":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"9:469:11979":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"12:432:7411":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:13386:8941":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"18:713:5727":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:2966:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:1717:9732":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:16024:5103":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:57675:10632":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"6:519:9539":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"18:867:7958":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:6768:7803":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:11616:8502":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:49627:5368":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:10887:8431":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:4065:5311":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"16:7216:7599":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:23125:1696":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:52243:6862":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:3604:8308":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"5:6672:7190":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:6858:10405":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:9332:7920":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:49877:6790":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:1079:6469":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:3383:6135":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:7571:7501":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:6791:6473":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"16:5561:7556":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"9:996:7343":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:52586:6863":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:2462:10893":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:4227:9916":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:6864:10406":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:3881:9763":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:8250:5192":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:16026:5105":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:23661:6446":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"6:1676:9708":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:11293:10688":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"18:775:8288":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"9:927:48075":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:13598:8997":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:14634:6410":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"18:791:7951":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:6893:10413":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:7761:7605":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:7619:6536":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:5580:7744":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:46727:5255":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:11915:8558":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:1646:1871":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:1161:15354":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:1596:9650":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:4255:6691":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:10529:8394":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"5:8138:7235":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:7205:7598":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:4670:6389":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:11654:6524":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"18:637:8288":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"14:250:9397":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:2576:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"17:12343:8637":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"5:8160:1866":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:11779:8536":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:49257:5883":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:3273:2337":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:4040:9857":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:10611:10815":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"6:6185:10371":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:1156:10884":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:53189:6875":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:28051:5408":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:3429:7491":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:50203:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:38868:5287":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:9649:10790":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:5377:6671":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:51355:10560":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"5:8115:1866":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:8478:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:12028:8584":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:7979:8211":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"17:9065:50297":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:10240:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:48580:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"18:812:7953":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:15073:10722":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:11611:6523":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:13884:9092":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:13590:8996":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"16:7333:7524":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:1653:1876":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:11670:6526":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:11835:8553":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"5:6954:7179":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:10431:8229":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"9:1056:7337":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:24010:10430":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:3504:6123":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"18:668:7966":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"18:169:12034":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:51718:6838":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"12:162:1995":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:10502:8393":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:16030:5109":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:13318:8922":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"11:54:7398":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"6:5414:10192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:46717:5254":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:49402:5364":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:10331:7867":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"15:269:7434":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:11282:5898":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:47923:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:4478:10015":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:13163:8887":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:11572:8493":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:13685:9046":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:22561:61711":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:8849:7832":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:13062:8847":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:10420:7849":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:45965:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"9:0:5061":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:3336:5300":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:6463:6393":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:49429:5358":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:48829:6521":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:607:10787":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"0:1631:1676":{"crate_id":0,"path":["http","uri"],"kind":"module"},"2:46587:5245":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:15354:6671":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:15217:6490":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"21:537:7988":{"crate_id":21,"path":["bytes","bytes","Vtable"],"kind":"struct"},"2:22937:6447":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:4410:9985":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:48133:7106":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:16016:5095":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"5:1486:5206":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"16:5456:7551":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:2915:415":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:76:1435":{"crate_id":2,"path":["core","u8"],"kind":"module"},"17:9933:10795":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"19:117:8283":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:15131:6551":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"5:3044:12132":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"12:856:1875":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"16:5855:7567":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"18:152:12031":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:53416:10615":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:1419:1867":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:12524:2622":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:6087:7502":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:1843:8183":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:6219:7576":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:13540:8985":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"5:1674:5200":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:9005:50295":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:786:8228":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"12:0:5064":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"1:6863:6364":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:3410:6141":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:5038:6994":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:4884:6991":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:9210:50300":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:46679:5252":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"5:4599:8186":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"17:11970:8575":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:4215:9915":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:12442:8670":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:3367:5301":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:5815:7566":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:51766:6842":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:3662:8210":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:52082:6870":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:5723:6374":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"21:687:8003":{"crate_id":21,"path":["bytes","bytes","Shared"],"kind":"struct"},"16:3522:8304":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:4350:9144":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:7295:7522":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:50436:5310":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"16:2991:7776":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:22837:6935":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:294:10784":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:6051:10303":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:16017:5096":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"5:7257:8183":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:3506:7774":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:5167:10063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:13957:6542":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:53377:6843":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:11520:6511":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:12120:6584":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:47534:1867":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"12:787:5199":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:47559:3075":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"5:2200:8185":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"16:3365:7754":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:10975:10828":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:32397:61901":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:47611:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:4782:6766":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:10435:10805":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"12:2072:6483":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"6:4364:9970":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:53515:10622":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:11317:5371":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:2865:5302":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"16:6126:7572":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"21:1279:7981":{"crate_id":21,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"2:53338:6878":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:5428:10197":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:14239:6431":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"6:5953:10256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:12072:57274":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"6:4145:9910":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:9978:7032":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:8366:5234":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:1729:6685":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:432:1992":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"16:2912:7764":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:11073:6434":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"6:6106:10317":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:46758:5258":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:5987:10275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:5766:7564":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:11932:8564":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:1533:9614":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:8954:7894":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:1045:6478":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:12671:8710":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:9767:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:13780:9065":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"21:140:3377":{"crate_id":21,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"17:12408:8667":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:9973:7031":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:47755:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:13072:5347":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:4164:9911":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:5488:7553":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"12:1147:1871":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:10596:6619":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"5:3362:6482":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:6689:6377":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"5:923:7232":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:14576:6386":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"6:5210:10081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:16019:5098":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:14805:10901":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:11015:10831":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"16:3392:7779":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:510:10786":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:12275:8624":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:2186:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:22601:61733":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:45873:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:12810:7050":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"12:880:5198":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:15332:6459":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:8197:8211":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"17:10448:7915":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:11438:5896":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:2797:5308":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:3172:7768":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:3039:62851":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:8929:50294":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:46977:5222":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:6028:10302":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:9471:12476":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:16003:5085":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"5:7849:8200":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:24219:5412":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:49378:5893":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:4033:9854":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:52793:6883":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:3174:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:50171:7057":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:16006:5088":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:10279:7865":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:13418:6686":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:542:7477":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:2925:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:5548:10233":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:10953:2607":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:13119:8882":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:11356:6674":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:46986:5224":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:10788:10817":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:7392:7510":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:2862:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"16:5717:7561":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:9264:8378":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:11204:6456":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"1:4516:6428":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:5380:6672":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:2396:5848":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:15510:7438":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:3145:7777":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:11993:8580":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:46394:7152":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"17:13356:8936":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:13772:9062":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:1744:9742":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:10304:7853":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:13892:10876":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:670:43469":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:13962:61794":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"1:15123:10723":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:15202:6489":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:10381:10909":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:5384:7547":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:6221:10390":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:16018:5097":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"0:1244:3657":{"crate_id":0,"path":["http","method","InvalidMethod"],"kind":"struct"},"2:13816:61793":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:53436:10617":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:610:9592":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:3918:9791":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:8391:7172":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:4304:6435":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"17:12373:8656":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:6091:10312":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:10924:1696":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:4523:10033":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:5837:5350":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:7342:7538":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"0:1461:1674":{"crate_id":0,"path":["http","response"],"kind":"module"},"2:24126:10441":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:13564:10891":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"0:1580:4125":{"crate_id":0,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"6:4347:9959":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:12248:6565":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:5528:10219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:49435:5357":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:2159:1867":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:1602:9652":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:11082:6410":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:2816:7781":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:10353:7858":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"12:895:7406":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"17:13377:8940":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:15499:7438":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:5583:15356":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:52003:6882":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:47688:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:3430:6145":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:9729:64187":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:10140:7867":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:8031:6620":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"5:8344:7227":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:4727:3484":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:9296:8380":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:11847:8556":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:49908:6794":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:10581:58817":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:4377:1866":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:46558:10878":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"6:6085:10310":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:3277:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"6:1563:9627":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"18:858:7957":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:10310:5390":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:7174:7595":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"12:2392:9446":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:12195:8613":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:7738:7604":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:2175:6480":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"0:3094:3795":{"crate_id":0,"path":["http","request","Builder"],"kind":"struct"},"17:12262:8623":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:1311:7940":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:10574:1968":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:50195:7055":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:49445:2587":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:7936:12116":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:15020:6543":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"5:69:5851":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:45942:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"12:2066:6482":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:48513:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:3400:6138":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:13054:8845":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:12771:7048":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"22:24:3597":{"crate_id":22,"path":["itoa","Buffer"],"kind":"struct"},"2:5184:5290":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:8179:5221":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:4377:9975":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:8912:5222":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:7073:7592":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:1572:9633":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"5:6475:1862":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"21:1329:7983":{"crate_id":21,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"2:49477:5371":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:51898:10567":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:51442:6881":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:3434:6146":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:3201:2451":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:10294:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"16:6999:7591":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:13978:9113":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:10468:7924":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:13782:6549":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:15054:6501":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:12010:8583":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"21:812:2588":{"crate_id":21,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"16:7303:7603":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:5934:6739":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:53462:10619":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"12:379:7413":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:1547:9619":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:53500:10621":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:8121:7234":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:13098:8877":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:55964:6826":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:4511:10028":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"7:38:47971":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:4535:9150":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:3714:9138":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:8879:1969":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:4448:9147":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:3165:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"18:651:7961":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"14:47:10859":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:11313:57278":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"9:686:7275":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"16:2889:7782":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:10962:10827":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:11410:5373":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:50183:7062":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:47679:1866":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:46424:7154":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:12006:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:605:9590":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:11424:6673":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"17:12795:8733":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:10117:7935":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:11205:5354":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:48847:10552":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:1522:5203":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:9064:6706":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:46021:6149":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:12183:6590":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"16:5505:7554":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:2755:5307":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:9551:7833":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:14937:8235":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:49733:5355":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"9:749:7279":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"6:5241:10102":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:13258:8911":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"0:3247:4525":{"crate_id":0,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"16:7856:7607":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:9347:6444":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:10224:10804":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"11:0:5063":{"crate_id":11,"path":["adler"],"kind":"module"},"6:4066:9870":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:563:9567":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:46609:5238":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:7236:7601":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:10253:7855":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:8163:12043":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"16:6166:7573":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:12155:8608":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"6:6923:10419":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:15976:15355":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:24166:42518":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:49417:5360":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:7843:7606":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"12:1103:1863":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"6:4281:9930":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:12168:8402":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:1637:1870":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"14:189:10859":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"18:621:8287":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:5029:5819":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"16:3549:9137":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"21:42:5296":{"crate_id":21,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"9:27:7326":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:14078:7068":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:13192:8894":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:13919:6540":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:4611:5226":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:7870:7511":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"15:0:5066":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:13283:12044":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"2:3274:5283":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:51520:6873":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:10862:6650":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:13620:9002":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:50418:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:51282:6860":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:13627:9004":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:13488:8968":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"6:4341:9956":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"6:4127:9899":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:11502:5478":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:4852:9159":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:13865:9087":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:48528:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:3246:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:12632:8707":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:13278:10875":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"2:12500:7166":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:2733:7739":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:12278:6501":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:2512:7851":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:10370:8451":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:13842:9086":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:5472:7552":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:47015:5230":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:13402:8945":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:15755:8238":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"0:3102:1686":{"crate_id":0,"path":["http","status","StatusCode"],"kind":"struct"},"1:11681:6527":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"22:0:1699":{"crate_id":22,"path":["itoa"],"kind":"module"},"2:50225:6504":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:50034:6798":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:5197:10080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:6644:7587":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:5012:6450":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"5:3839:8183":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:13394:8943":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:6238:7507":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:3357:6131":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:9259:5488":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:24144:42526":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:1534:5205":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"12:1203:7409":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:51144:6847":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:11264:6553":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"5:3336:6481":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:5231:9165":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"0:2186:1502":{"crate_id":0,"path":["http","version"],"kind":"module"},"17:10095:7933":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:46618:5246":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"5:5415:6400":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:11358:7891":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:10844:7867":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:53396:10613":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:994:7233":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:9162:7835":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:32345:61900":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"17:12645:8708":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:3195:7769":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:12243:6711":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:51027:10557":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5:1472:1870":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:48262:5386":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:7633:6537":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:2218:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"16:7453:7505":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:6764:6400":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:7024:7810":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:10028:10797":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:3395:6137":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:9440:8383":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:14602:6630":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:2187:6482":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:9143:5482":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:11981:8578":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"12:843:1869":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:5330:8379":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"18:740:10782":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:10663:1967":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"16:4417:9146":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:23939:7078":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"5:2218:7184":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:8384:6620":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"17:10584:7896":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:46028:1803":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:1476:1862":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:4008:10789":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:23079:1696":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:12992:2591":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:5360:7546":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:5651:6468":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:4514:6427":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:8807:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:53252:6840":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"18:721:8290":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:53047:6871":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:49839:6786":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:7042:7811":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:51073:6879":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:50448:5309":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:11947:8568":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"12:2280:1871":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:5100:6999":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"0:1498:3782":{"crate_id":0,"path":["http","response","Parts"],"kind":"struct"},"5:7453:8183":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:7445:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:7894:7541":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:2314:7857":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:13799:9070":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:32156:5409":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:37648:5727":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:6870:10407":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:51250:10559":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:12845:5354":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:53530:10623":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:2768:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:46108:6939":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:6032:7495":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:9380:5345":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:10236:7831":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:4386:9145":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:13306:8919":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:7111:8196":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"17:8902:50293":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:5889:8194":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"9:900:9503":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:7755:5244":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:5945:10251":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:46325:6961":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:13781:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:12118:8603":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:9799:10793":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:47881:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"10:0:5062":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"12:1256:5206":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:13078:5346":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:616:9595":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:10680:16327":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:11396:5374":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:3103:5210":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:9638:8225":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"5:7212:1862":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:3181:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:2484:50385":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:4241:9917":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:3341:7181":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:5207:5821":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:5295:48720":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:5972:6744":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:9178:10896":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:49349:5891":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:46483:7102":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:49713:5365":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:24598:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:6441:6390":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:5672:7559":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"16:7786:7515":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:11424:5897":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:1540:9617":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"12:1162:7407":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:46789:5260":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:7406:7508":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:2887:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:10912:10820":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:1505:5201":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:10854:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:12456:8672":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:10403:7863":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:6464:7517":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:4751:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:46600:5237":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:50359:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:8650:6699":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:13788:9066":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:1554:9622":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:6591:7586":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:10933:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"5:5833:5349":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:12049:6545":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:22874:6922":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:11555:8491":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:6176:10368":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:3296:5285":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:11405:6740":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:5407:7548":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"0:1564:1675":{"crate_id":0,"path":["http","status"],"kind":"module"},"17:10864:8430":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:5191:10079":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"0:1494:1685":{"crate_id":0,"path":["http","response","Response"],"kind":"struct"},"17:14000:9119":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:6413:7426":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:56374:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:2543:7922":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:10489:7925":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:38805:4994":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:16021:5100":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:49891:6793":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"5:6973:1500":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"2:13083:5344":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:22931:6445":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"6:531:9545":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:12982:8786":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:543:9550":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:13547:8986":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:49862:6787":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:11794:8542":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:6518:7583":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:51489:6869":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:9186:7893":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:6744:7801":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:11152:6452":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"1:1501:5200":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"5:8379:7171":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:2366:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"5:5536:7190":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:3064:7824":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:5420:10195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:3488:5198":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"16:7467:7506":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:50020:6797":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"4:0:5059":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:7420:7526":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"16:4955:9162":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:8472:2450":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"21:1292:5259":{"crate_id":21,"path":["bytes","buf","take","Take"],"kind":"struct"},"2:10312:5391":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:4890:9160":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:7796:6546":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:50055:6800":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:52160:6877":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"5:1457:1871":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:24234:5411":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:10673:5207":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:50351:10556":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"18:695:7967":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:3102:1696":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:12385:8658":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:1690:9719":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:46340:7156":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:10106:7934":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"5:8176:7178":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:1622:9666":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:5185:10076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:9280:8379":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:1630:9671":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"21:1264:5245":{"crate_id":21,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"6:5255:10113":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:5359:10169":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:6812:10403":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:10529:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:4922:9161":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:11350:6673":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:3647:5847":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:3978:9827":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:7642:5857":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:1617:9664":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:4425:9992":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:12019:6543":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:13331:8928":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:1236:10788":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:1723:9735":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:11738:8524":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:6807:7590":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:46638:5248":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:9865:8228":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:53592:10625":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:3341:6132":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"5:3048:12133":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"21:532:2587":{"crate_id":21,"path":["bytes","bytes","Bytes"],"kind":"struct"},"17:299:10785":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"5:2310:7260":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:14589:10720":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:13370:8938":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:49767:5362":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:24065:10435":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:4790:9157":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"21:0:1697":{"crate_id":21,"path":["bytes"],"kind":"module"},"2:3388:6140":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:32337:5332":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"17:10801:10819":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"9:722:7278":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:11453:10284":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:3287:7773":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:6867:6366":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:12552:8687":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:46708:5240":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:14:3441":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:6935:10420":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:161:43141":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:1522:9609":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:1700:9725":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"13:0:5058":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:6208:7575":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:4995:9163":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:5862:6736":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"6:5386:10178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:15046:61253":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:5273:7756":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:1908:44440":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:10306:5393":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:9260:5487":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:11277:8449":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"7:85:47978":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:56335:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10623:10816":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:49681:5370":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:4745:6411":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:10938:10825":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:6620:7794":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:4727:6923":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:11449:6472":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:3997:9840":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:46779:5259":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"18:0:5069":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:24734:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:57696:10633":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"17:11696:8519":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"20:20:2569":{"crate_id":20,"path":["fnv","FnvHasher"],"kind":"struct"},"2:48269:5392":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"14:11:10859":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:11475:6362":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:14566:10714":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"9:1075:7345":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"5:4306:1868":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:46656:10537":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:4157:7897":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:13574:8993":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:5292:10127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:47797:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:11355:5895":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:46628:5247":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:16023:5102":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:4459:10007":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:46049:6931":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"6:4120:9897":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:4013:9845":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:2282:6761":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:10571:10812":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:4005:9842":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:2938:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"5:1644:1875":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:14627:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:3576:2442":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:46688:5262":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:50238:7113":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:10697:10901":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:3728:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:48091:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:11100:7842":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:24212:10453":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"9:603:11989":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:46465:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"21:374:7982":{"crate_id":21,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"2:49509:5376":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:10052:10799":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:12946:8755":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:6577:7585":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:12521:8681":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:8106:4535":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:4317:9947":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:11434:8456":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:9849:64186":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:8130:1862":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:15392:6672":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"21:1074:10781":{"crate_id":21,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"1:12731:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"5:8298:7225":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:6963:6359":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:11628:8503":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:13898:9094":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:5745:6377":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:13582:8994":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"18:821:7954":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:1528:5204":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:32497:61902":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"17:11337:7921":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:6941:6363":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:24768:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:9809:64188":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:14571:10716":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:48808:5213":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:46748:5257":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:11137:1868":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:23771:6830":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:14822:6545":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"16:7119:7496":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:6203:6689":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:46388:5362":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:48049:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:3945:9814":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:13766:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:4133:9901":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"12:2032:1867":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:7736:6542":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:51208:6868":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:46350:7157":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:9368:8381":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:56322:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:2437:10891":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"5:4699:8188":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:12208:8615":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:6014:7571":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:48632:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:13465:8963":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:11159:8445":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:6949:7807":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:10657:15353":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"5:7620:5856":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"14:231:7174":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:24666:5414":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:13240:8903":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:7185:7596":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:47619:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:8643:6697":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:4736:57217":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"0:1216:1672":{"crate_id":0,"path":["http","method"],"kind":"module"},"6:6155:10354":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:13506:8972":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:6269:7578":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:49459:5372":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:22578:61731":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:15093:6500":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:5504:6679":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:903:6602":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:46548:8202":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:6731:7800":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:10591:3795":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:7667:6539":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:3488:7775":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:12401:10892":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"16:4641:9152":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:2773:7788":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:9631:12117":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"17:12040:8586":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"16:3800:9140":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:5793:6373":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:48839:10551":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:13986:9116":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"6:6614:10399":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:10302:5385":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:5312:10143":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"18:611:7962":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:4215:1862":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:2754:7755":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:13272:8916":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:10950:10826":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:3375:7182":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:10200:10802":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:16015:5094":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:4964:5817":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:2843:7762":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"5:1663:5199":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:14953:8236":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:15987:58815":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:49742:5353":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:2181:6481":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:13205:8899":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:46470:7101":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:16011:5092":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:11767:8533":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:7290:10895":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:51121:6859":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:9258:5489":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:3118:7778":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:5790:7565":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:7121:5477":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"6:5379:10177":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:10569:1696":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:49758:5361":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:16020:5099":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:13935:12119":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"5:4242:8183":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:12741:8718":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:6554:7584":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:7336:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"12:952:5203":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:6605:7519":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"12:777:1866":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:10805:6386":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:0:5068":{"crate_id":17,"path":["object"],"kind":"module"},"17:9689:64189":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"18:850:7956":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:47525:2386":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:4734:9155":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:51394:10561":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:3280:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:12783:8726":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:3218:7770":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:5978:10274":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:7927:5218":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:52129:6874":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:12057:10710":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"1:12128:1866":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:4762:9156":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:49751:5352":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:5436:10199":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:49776:5363":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:4643:8188":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:10673:50485":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:46296:6958":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:11126:5259":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:14103:8234":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:7279:7812":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:6510:5239":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:4046:9859":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"12:2398:9447":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:46578:5236":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:3396:6483":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:3652:6421":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:13296:8918":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:3363:6130":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:11246:6458":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"13:232:9442":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"12:114:12036":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:23136:6834":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:9839:7867":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:11410:6743":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:16027:5106":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:12769:10902":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"1:16025:5104":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:8463:5852":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:13063:5345":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:11750:8525":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"14:56:8471":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:6072:7523":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:4669:6400":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"2:3171:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:13963:9112":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:5029:9164":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:3198:6629":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:32331:2590":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:15971:11997":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"12:933:5201":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:4036:2606":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:7226:7600":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:12307:8631":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"5:8263:5193":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:47671:1868":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:5975:7569":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:6252:7577":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:53477:10620":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:4101:9889":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:11254:7834":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:13746:9053":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:5563:10244":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:4050:5312":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:10570:6598":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"0:3283:1688":{"crate_id":0,"path":["http","version","Version"],"kind":"struct"},"17:13453:8957":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:4436:6429":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:11714:8520":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:8293:6620":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"5:5875:8192":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"5:2777:7247":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:16029:5108":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:13477:8964":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:4438:6430":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:3426:6144":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:15484:58816":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"5:1011:1867":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:9770:8226":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"1:897:6601":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:46309:6959":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"12:928:1876":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:3040:10422":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:9528:2587":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:10298:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"5:8313:7102":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:11001:10830":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:48558:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:6086:6681":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:51741:6841":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:23467:20564":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:46287:10526":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:12073:8596":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:3278:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:12247:8620":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:9245:7844":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:10795:6449":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:9943:64182":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:10458:8340":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:51922:10568":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:4395:9981":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:584:9579":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:47713:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:13912:9101":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"0:3242:4523":{"crate_id":0,"path":["http","uri","InvalidUri"],"kind":"struct"},"2:3774:6155":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:24103:6980":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:2920:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:22580:61734":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"5:3772:1868":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:4439:10000":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:45919:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:3972:9824":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"12:979:5205":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:7250:7602":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"12:815:5200":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:24049:10432":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:51818:10565":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:8601:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:12771:8723":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"0:1365:3782":{"crate_id":0,"path":["http","request","Parts"],"kind":"struct"},"12:2052:6480":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:10160:8390":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"5:7824:8196":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:4477:6432":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:12917:8735":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:11228:6457":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"1:1450:1869":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:9896:64191":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:11822:8552":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:10988:10829":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:5522:10218":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"5:3759:1867":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:3739:6150":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:6068:10305":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:12199:6591":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:11398:6452":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:5779:6378":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:10241:3484":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:10827:7889":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:11146:5365":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:12112:1867":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"13:120:48616":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"18:645:7964":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:12494:8677":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:23868:7077":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:15186:6488":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:1694:7240":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:5400:10189":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:1432:1868":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:5927:7568":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:10701:7251":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"6:1760:9747":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:9737:6666":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"5:3038:5304":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:5:1500":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"2:9762:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"6:6899:10414":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:3882:2010":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:4084:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:5964:6742":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:13053:5351":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:9404:8382":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:51048:10558":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"5:8203:1866":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:9769:64183":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:46410:5361":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:823:8228":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"16:7514:7525":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:51096:6867":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"5:1635:1869":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:12740:8233":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:6424:7581":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"12:2404:64179":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:6881:10411":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"9:1020:7344":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"0:1361:1684":{"crate_id":0,"path":["http","request","Request"],"kind":"struct"},"12:353:9443":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:6357:7579":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:6780:7589":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:73:1432":{"crate_id":2,"path":["core","u16"],"kind":"module"},"6:1708:9726":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:0:5067":{"crate_id":16,"path":["gimli"],"kind":"module"},"8:0:5060":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:7681:6540":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:4112:9893":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:2163:1866":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:13583:12045":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:5739:6376":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"0:1324:1673":{"crate_id":0,"path":["http","request"],"kind":"module"},"16:5960:7751":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:1736:9738":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:3518:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:5956:6741":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:8399:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:5753:7563":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:10516:7926":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:47492:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:1939:5198":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"6:4095:9886":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:50395:7066":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"12:399:7412":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:6718:7799":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:8694:6700":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:13497:8971":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:13924:9103":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:49723:5366":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:46500:7103":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:14165:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:51336:6852":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:11082:7840":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:3745:6152":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:1194:12113":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"6:4517:10030":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:8492:6586":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"16:4614:9151":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:13637:9009":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:5595:7557":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:12734:7047":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"9:776:7324":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"17:11199:8448":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:4752:6414":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:22801:6928":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:11430:6692":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:8485:6585":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:16028:5107":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"22:39:1696":{"crate_id":22,"path":["itoa","private","Sealed"],"kind":"trait"},"16:6366:7427":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:46363:5363":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:53299:6858":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:46670:5251":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:14959:8237":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:578:9576":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:24802:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:46736:5256":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:6200:10378":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"9:809:6521":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:6569:7796":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:49983:6796":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:5632:7558":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"16:7549:7513":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:14317:6044":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:4475:6431":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"12:1183:7408":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:11571:6521":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:24032:6984":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:8742:6709":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:3892:9771":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:51866:10566":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:10300:5386":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:11665:8509":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:7931:3646":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"16:4671:9153":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:15413:6679":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:6257:5856":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:569:9570":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:3241:7771":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:10377:7856":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:8882:5232":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:10477:7923":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:7928:6931":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:13760:9059":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:537:9547":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:7804:7514":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:9722:6665":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"6:5228:10093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:3204:6408":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"5:1597:1867":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:11147:8444":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:46647:5249":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:3999:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:4501:10023":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:4920:6992":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:10081:7865":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:11653:8508":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:13221:8902":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:22748:6919":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:11809:8548":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:52369:6854":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:11189:6454":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"12:1238:7410":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"5:2330:7244":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:16009:5090":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:4643:6400":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:12095:8597":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"16:6101:7500":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:11458:8470":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:11176:6453":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:23462:6836":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:2170:5198":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:11118:50302":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:10266:7854":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:52435:6839":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:12537:8683":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:11482:8471":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:10456:8231":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:4325:9949":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:12712:8715":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:13554:8987":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:9719:10791":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:12327:8632":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:11304:50303":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:12610:8696":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:45781:6122":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:3334:963":{"crate_id":2,"path":["core","ops"],"kind":"module"},"2:2956:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:3177:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:12738:6628":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:24836:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:12000:6541":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:12431:8668":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"5:8106:5850":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"9:41:7327":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:13609:9001":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:10071:7939":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:46970:5220":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:48616:5808":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"17:11726:8523":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"12:971:5204":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:11113:1867":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:46450:6963":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:46431:7155":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"16:4304:9143":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"12:472:12038":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:10317:7852":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:45898:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:23134:6835":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"12:2036:1866":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:53405:10614":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:3580:2565":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:10579:5000":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:5604:6764":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:16022:5101":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:10407:7850":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:11231:7836":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:1492:1876":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:14242:6427":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:3951:5198":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:2460:10892":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:53126:6855":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"18:830:7955":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"9:963:7342":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:10061:10800":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:9886:10794":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:7378:7509":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:2268:6190":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:13429:8949":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:24090:5410":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:48495:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:4023:9851":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:2866:7763":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:51670:6853":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:6703:10299":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:53451:10618":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:49039:7168":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:4358:9967":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:5407:7148":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:10446:10874":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:6323:6690":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:10800:6628":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"0:5:1671":{"crate_id":0,"path":["http","header"],"kind":"module"},"17:9759:10792":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:14610:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:49043:5876":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:4060:9867":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:10706:5245":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"17:10599:10814":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:56387:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:3264:7772":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:3041:7767":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:52400:6857":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:10814:7888":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"22:37:6307":{"crate_id":22,"path":["itoa","Integer"],"kind":"trait"},"1:5985:6745":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:14129:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"16:5996:7570":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:6152:7504":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"0:0:1700":{"crate_id":0,"path":["http"],"kind":"module"},"1:12253:6566":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:12568:8688":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:4272:9925":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:1655:5206":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:46768:5242":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"5:1607:1868":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:511:9534":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:2968:7765":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:12659:8709":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:23673:61714":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:3196:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:12258:6500":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"18:661:7965":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:7264:7520":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:11244:5888":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:49286:5886":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:9133:50299":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:7857:6770":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:10308:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:3018:7766":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:4300:9938":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:5707:7560":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"16:4704:9154":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"6:4203:9914":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:6005:10284":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:5969:10268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:2192:6483":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"12:1784:8181":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:12507:8678":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:10149:10794":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:3966:9822":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:6214:10387":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:3327:6164":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"14:244:9396":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:12154:6588":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:15033:6544":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:5371:10176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:5459:10205":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"21:1286:7493":{"crate_id":21,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"16:5522:7555":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:3524:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:7823:7516":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:11162:5372":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:12467:8673":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:13282:8917":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:3286:1970":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"5:1215:7242":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:48255:5385":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:12287:8625":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:3733:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:47965:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"12:2045:5198":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"12:940:5202":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"18:755:64193":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:5731:6375":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:591:9582":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:3686:6416":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:16004:5086":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:51313:6848":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:3422:6143":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:2031:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:4052:9862":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:3375:6134":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:8362:10426":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"16:6136:7544":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:3355:6643":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:50175:7059":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:49609:5367":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"7:0:1479":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:6964:3075":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:46281:5362":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:6491:7582":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:13180:8889":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:11186:8446":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:46995:5226":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:6852:10404":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:4293:9937":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:13041:8838":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:50191:7061":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:10958:4524":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"5:7379:1866":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"5:1091:8183":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:3439:6147":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:13520:8979":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:12725:8716":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:6910:10418":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:13933:9107":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:12079:10711":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"6:5221:10089":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"18:886:7959":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:6239:10393":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:9961:10796":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:7669:3365":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:624:9600":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:50068:10879":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:15236:6497":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:11361:6675":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:7799:6547":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:11116:5245":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:13532:8982":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"5:8330:7226":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"12:183:7414":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:11664:1867":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:5347:10164":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:3772:9139":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:1021:6620":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:9034:50296":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:11378:7890":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:4331:9950":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:8136:6620":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"2:9517:1112":{"crate_id":2,"path":["core","result"],"kind":"module"},"2:47542:1868":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:4371:9972":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:14030:6541":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:52322:6850":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"9:692:7277":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:51543:6876":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:5033:6993":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:11678:8510":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:24496:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:5110:5818":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:7884:7512":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"6:3951:9815":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:48800:10547":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:6865:6365":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:7158:7594":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:52936:6851":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:11416:6684":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:6691:7588":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:11066:4535":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:49527:5375":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:32296:5331":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:4401:6657":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:6391:7580":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"16:5736:7562":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:88:43074":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:10001:50347":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:50341:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"5:8197:1866":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:14068:6767":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"16:6110:7543":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:8414:7229":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:11519:8486":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:22990:6834":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:51177:6880":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:37624:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:12061:61052":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"12:2412:9449":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:2598:10894":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"16:5433:7550":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:4082:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"18:136:12030":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"0:3227:1687":{"crate_id":0,"path":["http","uri","Uri"],"kind":"struct"},"2:6437:5250":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:4823:9158":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:49663:5369":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"18:745:64192":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:6701:10297":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:10948:6572":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:11336:10694":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"16:547:7746":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:12134:6587":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"18:767:8298":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:599:9587":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:10642:15351":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"12:2419:5192":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:51592:6861":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:11539:8487":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:8146:62858":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:9775:8227":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"1:14236:6429":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"5:8446:5198":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"14:216:48649":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"12:1682:7421":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:7259:10895":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"0:3009:1683":{"crate_id":0,"path":["http","method","Method"],"kind":"struct"},"2:48792:5214":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:2945:7787":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:45857:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:47004:5228":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:3379:6133":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:10128:7936":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:10812:6630":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:3346:6129":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:24700:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:11133:2587":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"6:6124:10328":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"18:705:8288":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:11604:8499":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:47593:5486":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"12:1703:7422":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:3345:6638":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:3905:9781":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:5346:7503":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:12034:6544":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:49266:5887":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:13942:9109":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:5164:5820":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"18:838:5347":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:13129:6789":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:10836:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"6:4183:9912":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:9600:64184":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"6:632:9605":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:2506:1678":{"crate_id":1,"path":["std","error"],"kind":"module"},"2:49581:5373":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:12051:8587":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:12598:8694":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"14:194:48644":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:5269:10114":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:14809:5296":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"12:1666:7420":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:24632:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:13655:6555":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:4230:9142":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:157:43140":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"6:1658:9696":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"18:897:7960":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:9476:8384":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:8929:6719":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:6892:5263":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:22599:61729":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:2291:6189":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:3320:7826":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:13446:8956":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:2262:7245":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:6644:10402":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:9971:64185":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:10179:8392":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:10304:5392":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:5407:10191":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:49336:5874":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:9088:50298":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:1463:1875":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:699:6597":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:49197:7045":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:12221:8616":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"12:2059:6481":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:5469:10207":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:50199:7056":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:8843:10896":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:11956:5890":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"18:783:8288":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:13733:9047":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:51639:6849":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:12582:8690":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:51375:6837":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:10543:8434":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:3371:6136":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"16:5314:8378":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:4404:6658":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:46056:6932":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:6561:6475":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"3:300:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"21:1273:1866":{"crate_id":21,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"1:6794:6390":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:45988:5186":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:2166:1862":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:13154:8883":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:23086:20545":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:10251:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:681:8451":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:4688:6409":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:3740:6423":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:3970:8183":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:6636:10400":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"12:2253:1863":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:3091:7825":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:1584:9642":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:6176:7574":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:49358:5894":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:22546:61711":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"6:4449:10006":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:10535:142":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"6:4262:9918":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:24118:10440":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:6633:62450":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:11640:8506":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:2399:10889":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:11328:8723":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:7195:7597":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"9:157:7294":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"1:15230:6496":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:4477:9148":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"5:4515:7209":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"6:4419:9991":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:3416:6142":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:525:9542":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:46799:5261":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:51231:6872":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:10614:6044":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:10539:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:11499:8476":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:8412:2422":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:3862:9753":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:3939:9141":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:3351:6128":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:12480:8675":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:14239:5849":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:47839:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:25240:5407":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:12234:8618":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:11406:8453":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"12:869:1862":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:10041:10798":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:6682:7518":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:0:1329":{"crate_id":1,"path":["std"],"kind":"module"},"2:3716:6148":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:1618:1866":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"15:248:7430":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"12:2040:1862":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:47550:1866":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:7653:6538":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"9:234:7302":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"6:5282:10120":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:9598:8224":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"12:466:12037":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:15475:10726":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:3868:9754":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"0:3098:3795":{"crate_id":0,"path":["http","response","Builder"],"kind":"struct"},"2:50167:7054":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"16:2794:7490":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:4398:6656":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:24870:5413":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:48276:5393":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:46699:5253":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:10926:10824":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:2062:6400":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:3957:9817":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:12167:6589":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"11:46:9452":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:16005:5087":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:3338:7753":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:3811:6156":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:13172:8888":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:7477:7527":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:6021:7761":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:2401:10890":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:51693:6856":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:4193:9913":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:24182:42527":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:3309:5286":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:50187:7060":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:49956:6795":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"18:730:64195":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:13857:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:12794:7049":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:1136:5313":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:4431:9995":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:9659:64190":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"12:2269:1870":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:14644:61251":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:1944:1971":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:8403:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:10291:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:3743:7885":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:4470:10013":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:1497:5199":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:4083:9880":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:3757:6933":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:24530:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:5421:7549":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"6:3990:9836":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"5:1235:7243":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:4306:9941":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:24247:5415":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:4739:6924":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:11962:8573":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:12056:8208":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:8977:6575":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:48007:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:22533:5727":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:8362:5235":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:53425:10616":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:49323:5873":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:48519:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:5630:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:13564:8990":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:14551:6474":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:12223:6705":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:3343:6637":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:2193:5329":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:11094:6412":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:13819:9073":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:10870:6422":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:1442:1866":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:3329:1867":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"5:3894:7230":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:13348:8933":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:3558:6153":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:12182:8612":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:49248:5884":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:48817:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"20:0:1698":{"crate_id":20,"path":["fnv"],"kind":"module"},"1:2941:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:8280:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"18:802:7952":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:22850:1696":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"12:1121:1870":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"}},"external_crates":{"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"bytes","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.3/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"fnv","html_root_url":null}},"format_version":16}