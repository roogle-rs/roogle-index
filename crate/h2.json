{"root":"0:0","crate_version":"0.3.13","includes_private":false,"index":{"0:3498":{"id":"0:3498","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[389,0],"end":[444,1]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3500","0:3504","0:3508","0:3510","0:3511","0:3512"],"negative":false,"synthetic":false,"blanket_impl":null}},"20:127":{"id":"20:127","crate_id":20,"name":"TryStream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:128","20:129","20:130"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"20:96","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"20:122","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3048":{"id":"0:3048","crate_id":0,"name":"SendRequest","span":{"filename":"src/client.rs","begin":[176,0],"end":[179,1]},"visibility":"public","docs":"Initializes new HTTP/2 streams on a connection by sending a request.\n\nThis type does no work itself. Instead, it is a handle to the inner\nconnection state held by [`Connection`]. If the associated connection\ninstance is dropped, all `SendRequest` functions will return [`Error`].\n\n[`SendRequest`] instances are able to move to and operate on separate tasks\n/ threads than their associated [`Connection`] instance. Internally, there\nis a buffer used to stage requests before they get written to the\nconnection. There is no guarantee that requests get written to the\nconnection in FIFO order as HTTP/2 prioritization logic can play a role.\n\n[`SendRequest`] implements [`Clone`], enabling the creation of many\ninstances that are backed by a single connection.\n\nSee [module] level documentation for more details.\n\n[module]: index.html\n[`Connection`]: struct.Connection.html\n[`Clone`]: https://doc.rust-lang.org/std/clone/trait.Clone.html\n[`Error`]: ../struct.Error.html","links":{"`SendRequest`":"0:3048"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3056","a:2:8871-0:3048","a:2:3127-0:3048","a:2:3139-0:3048","a:2:3168-0:3048","a:2:8870-0:3048","b:2:3850-0:3048","b:2:2733-0:3048","b:2:3066-0:3048","b:2:3071-0:3048","b:2:3060-0:3048","b:2:3056-0:3048","b:2:2730-0:3048","b:5:774-0:3048","b:33:159-0:3048","0:3063","0:3066"]}},"b:20:48-0:3285":{"id":"b:20:48-0:3285","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","begin":[73,0],"end":[84,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"20:44","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["20:52","20:53","20:54"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"0:3513":{"id":"0:3513","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[455,0],"end":[461,1]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3514"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5729":{"id":"5:5729","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15704"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[rustc_allow_incoherent_impl]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8013","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"21:42":{"id":"21:42","crate_id":21,"name":"Buf","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["21:43","21:44","21:45","21:47","21:48","21:49","21:50","21:51","21:52","21:53","21:54","21:55","21:56","21:57","21:58","21:59","21:60","21:61","21:62","21:63","21:64","21:65","21:66","21:67","21:68","21:69","21:70","21:71","21:72","21:73","21:74","21:75","21:76","21:80","21:81","21:83"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3056-0:9076":{"id":"b:2:3056-0:9076","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3106":{"id":"0:3106","crate_id":0,"name":"set_initial_window_size","span":{"filename":"src/client.rs","begin":[1263,4],"end":[1267,5]},"visibility":"public","docs":"Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level\nflow control for received data.\n\nThe `SETTINGS` will be sent to the remote, and only applied once the\nremote acknowledges the change.\n\nThis can be used to increase or decrease the window size for existing\nstreams.\n\n# Errors\n\nReturns an error if a previous call is still pending acknowledgement\nfrom the remote endpoint.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["size",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3127-0:8613":{"id":"a:2:3127-0:8613","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3523":{"id":"0:3523","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[527,0],"end":[556,1]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3525"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8870":{"id":"2:8870","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5719":{"id":"1:5719","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5720","1:5721","1:5722","1:5723"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5729":{"id":"1:5729","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5730"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:8871-0:8622":{"id":"a:2:8871-0:8622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:8319":{"id":"0:8319","crate_id":0,"name":"eq","span":{"filename":"src/frame/reason.rs","begin":[18,9],"end":[18,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3300":{"id":"0:3300","crate_id":0,"name":"fmt","span":{"filename":"src/server.rs","begin":[293,4],"end":[295,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2733-0:4364":{"id":"b:2:2733-0:4364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3056-0:8609":{"id":"b:2:3056-0:8609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2619":{"id":"0:2619","crate_id":0,"name":null,"span":{"filename":"src/frame/reason.rs","begin":[21,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:2615","path":"::frame::reason"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2620","0:2621","0:2622","0:2623","0:2624","0:2625","0:2626","0:2627","0:2628","0:2629","0:2630","0:2631","0:2632","0:2633","0:2634"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3136":{"id":"2:3136","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:770":{"id":"5:770","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:771","5:772","5:773"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3850-0:8689":{"id":"b:2:3850-0:8689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8603":{"id":"0:8603","crate_id":0,"name":"fmt","span":{"filename":"src/client.rs","begin":[183,9],"end":[183,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12915":{"id":"2:12915","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8013":{"id":"2:8013","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8014","2:8015"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2730-0:3285":{"id":"b:2:2730-0:3285","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8702":{"id":"0:8702","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[268,9],"end":[268,14]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:8704"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3075":{"id":"2:3075","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12971":{"id":"2:12971","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12549","prim@char":"1:15699","`DoubleEndedIterator`":"2:7988","str::rsplit_terminator":"1:15704","str::split":"1:15704"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:48855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3127-0:8699":{"id":"a:2:3127-0:8699","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:8620":{"id":"0:8620","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[267,9],"end":[267,14]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8621"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:7953":{"id":"2:7953","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7955","2:7957","2:7958"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3060-0:9059":{"id":"b:2:3060-0:9059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:20:48-0:8604":{"id":"b:20:48-0:8604","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","begin":[73,0],"end":[84,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"20:44","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["20:52","20:53","20:54"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"b:2:3056-0:4364":{"id":"b:2:3056-0:4364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:774-0:8678":{"id":"b:5:774-0:8678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:770","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:776","5:777","5:778"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:774-0:9059":{"id":"b:5:774-0:9059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:770","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:776","5:777","5:778"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8608":{"id":"0:8608","crate_id":0,"name":"fmt","span":{"filename":"src/client.rs","begin":[237,9],"end":[237,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13009":{"id":"2:13009","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:15699","self::pattern":"2:12549"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:12579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12954":{"id":"2:12954","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:15699","`None`":"2:46856","self::pattern":"2:12549"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3076":{"id":"0:3076","crate_id":0,"name":"initial_connection_window_size","span":{"filename":"src/client.rs","begin":[709,4],"end":[712,5]},"visibility":"public","docs":"Indicates the initial window size (in octets) for connection-level flow control\nfor received data.\n\nThe initial window of a connection is used as part of flow control. For more details,\nsee [`FlowControl`].\n\nThe default value is 65,535.\n\n[`FlowControl`]: ../struct.FlowControl.html\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .initial_connection_window_size(1_000_000)\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["size",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3080":{"id":"0:3080","crate_id":0,"name":"initial_max_send_streams","span":{"filename":"src/client.rs","begin":[873,4],"end":[876,5]},"visibility":"public","docs":"Sets the initial maximum of locally initiated (send) streams.\n\nThe initial settings will be overwritten by the remote peer when\nthe Settings frame is received. The new value will be set to the\n`max_concurrent_streams()` from the frame.\n\nThis setting prevents the caller from exceeding this number of\nstreams that are counted towards the concurrency limit.\n\nSending streams past the limit returned by the peer will be treated\nas a stream error of type PROTOCOL_ERROR or REFUSED_STREAM.\n\nSee [Section 5.1.2] in the HTTP/2 spec for more details.\n\n[Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .initial_max_send_streams(1000)\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["initial",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3289":{"id":"2:3289","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3291"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3339":{"id":"0:3339","crate_id":0,"name":"abrupt_shutdown","span":{"filename":"src/server.rs","begin":[525,4],"end":[527,5]},"visibility":"public","docs":"Sets the connection to a GOAWAY state.\n\nDoes not terminate the connection. Must continue being polled to close\nconnection.\n\nAfter flushing the GOAWAY frame, the connection is closed. Any\noutstanding streams do not prevent the connection from closing. This\nshould usually be reserved for shutting down when something bad\nexternal to `h2` has happened, and open streams cannot be properly\nhandled.\n\nFor graceful shutdowns, see [`graceful_shutdown`](Connection::graceful_shutdown).","links":{"Connection::graceful_shutdown":"0:3291"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["reason",{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2733-0:8699":{"id":"b:2:2733-0:8699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5713":{"id":"5:5713","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8013"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[rustc_allow_incoherent_impl]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8013","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8326":{"id":"0:8326","crate_id":0,"name":null,"span":{"filename":"src/frame/reason.rs","begin":[18,31],"end":[18,35]},"visibility":{"restricted":{"parent":"0:2615","path":"::frame::reason"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3137","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:7944":{"id":"2:7944","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7945","2:7946","2:7947"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:9066":{"id":"0:9066","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[112,23],"end":[112,25]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3135":{"id":"0:3135","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[1430,0],"end":[1436,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3136","0:3137"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3056-0:9053":{"id":"b:2:3056-0:9053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3071-0:3285":{"id":"b:2:3071-0:3285","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3071-0:8604":{"id":"b:2:3071-0:8604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8871-0:3052":{"id":"a:2:8871-0:3052","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Bytes","id":"21:513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:33:159-0:8598":{"id":"b:33:159-0:8598","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"31:577":{"id":"31:577","crate_id":31,"name":"Decoder","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:578","31:579","31:580","31:581","31:582"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3127-0:3478":{"id":"a:2:3127-0:3478","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12921":{"id":"2:12921","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12020"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[inline(always)]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9792":{"id":"2:9792","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9793","2:9794","2:9796"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:8871-0:3480":{"id":"a:2:8871-0:3480","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:33:159-0:8678":{"id":"b:33:159-0:8678","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9851":{"id":"2:9851","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9852"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:33:159-0:3478":{"id":"b:33:159-0:3478","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3070":{"id":"2:3070","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3074":{"id":"0:3074","crate_id":0,"name":"new","span":{"filename":"src/client.rs","begin":[632,4],"end":[642,5]},"visibility":"public","docs":"Returns a new client builder instance initialized with default\nconfiguration values.\n\nConfiguration methods can be chained on the return value.\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .initial_window_size(1_000_000)\n    .max_concurrent_streams(1000)\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6404":{"id":"1:6404","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6405","1:6406","1:6407","1:6408","1:6409","1:6410"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10414","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2733-0:3480":{"id":"b:2:2733-0:3480","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8680":{"id":"0:8680","crate_id":0,"name":null,"span":{"filename":"src/ext.rs","begin":[12,9],"end":[12,14]},"visibility":{"restricted":{"parent":"0:3151","path":"::ext"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:8632":{"id":"0:8632","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[309,16],"end":[309,21]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8633"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3399":{"id":"0:3399","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[1262,0],"end":[1326,1]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"22:303","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3402","0:3403"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3059":{"id":"0:3059","crate_id":0,"name":"ready","span":{"filename":"src/client.rs","begin":[390,4],"end":[392,5]},"visibility":"public","docs":"Consumes `self`, returning a future that returns `self` back once it is\nready to send a request.\n\nThis function should be called before calling `send_request`.\n\nThis is a functional combinator for [`poll_ready`]. The returned future\nwill call `SendStream::poll_ready` until `Ready`, then returns `self` to\nthe caller.\n\n# Examples\n\n```rust\n# use h2::client::*;\n# use http::*;\n# async fn doc(send_request: SendRequest<&'static [u8]>)\n# {\n// First, wait until the `send_request` handle is ready to send a new\n// request\nlet mut send_request = send_request.ready().await.unwrap();\n// Use `send_request` here.\n# }\n# pub fn main() {}\n```\n\nSee [module] level docs for more details.\n\n[`poll_ready`]: #method.poll_ready\n[module]: index.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3626":{"id":"2:3626","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementations":[]}},"0:3375":{"id":"0:3375","crate_id":0,"name":"send_response","span":{"filename":"src/server.rs","begin":[1133,4],"end":[1139,5]},"visibility":"public","docs":"Send a response to a promised request.\n\nOn success, a [`SendStream`] instance is returned. This instance can be\nused to stream the response body and send trailers.\n\nIf a body or trailers will be sent on the returned [`SendStream`]\ninstance, then `end_of_stream` must be set to `false` when calling this\nfunction.\n\nThe [`SendPushedResponse`] instance is associated with a promised\nrequest.  This function may only be called once per instance and only if\n[`send_reset`] has not been previously called.\n\n[`SendPushedResponse`]: #\n[`SendStream`]: ../struct.SendStream.html\n[`send_reset`]: #method.send_reset","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["response",{"kind":"resolved_path","inner":{"name":"Response","id":"37:1479","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}],["end_of_stream",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2784":{"id":"2:2784","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2779","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:12974":{"id":"2:12974","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"1:15704","self::pattern":"2:12549","prim@char":"1:15699","str::split_terminator":"1:15704"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:48873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3107":{"id":"0:3107","crate_id":0,"name":"ping_pong","span":{"filename":"src/client.rs","begin":[1274,4],"end":[1276,5]},"visibility":"public","docs":"Takes a `PingPong` instance from the connection.\n\n# Note\n\nThis may only be called once. Calling multiple times will return `None`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3066-0:8689":{"id":"b:2:3066-0:8689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3850-0:8699":{"id":"b:2:3850-0:8699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:357":{"id":"0:357","crate_id":0,"name":"reason","span":{"filename":"src/error.rs","begin":[51,4],"end":[58,5]},"visibility":"public","docs":"If the error was caused by the remote peer, the error reason.\n\nThis is either an error received by the peer or caused by an invalid\naction taken by the peer (i.e. a protocol error).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3123":{"id":"0:3123","crate_id":0,"name":"stream_id","span":{"filename":"src/client.rs","begin":[1349,4],"end":[1351,5]},"visibility":"public","docs":"Returns the stream ID of the response stream.\n\n# Panics\n\nIf the lock on the stream store has been poisoned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"crate::StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:370":{"id":"0:370","crate_id":0,"name":"from","span":{"filename":"src/error.rs","begin":[125,4],"end":[129,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6896":{"id":"1:6896","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6897"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3254":{"id":"2:3254","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3256","2:3257"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2730-0:8598":{"id":"b:2:2730-0:8598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"20:44":{"id":"20:44","crate_id":20,"name":"TryFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:45","20:46","20:47"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"20:39","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2733-0:8613":{"id":"b:2:2733-0:8613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8607":{"id":"0:8607","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[237,9],"end":[237,14]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8608"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3373":{"id":"2:3373","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3375"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3376","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8871":{"id":"2:8871","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3139-0:8598":{"id":"a:2:3139-0:8598","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:6029-0:4364":{"id":"b:5:6029-0:4364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:9849","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6027","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12914":{"id":"2:12914","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:774-0:3048":{"id":"b:5:774-0:3048","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:770","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["5:776","5:777","5:778"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12925":{"id":"2:12925","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:46856"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10451","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10451","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8618":{"id":"0:8618","crate_id":0,"name":"PushPromises","span":{"filename":"src/client.rs","begin":[269,0],"end":[271,1]},"visibility":"public","docs":"A stream of pushed responses and corresponding promised requests","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3125","a:2:8871-0:8618","a:2:3127-0:8618","a:2:3139-0:8618","a:2:3168-0:8618","a:2:8870-0:8618","b:2:3850-0:8618","b:2:2733-0:8618","b:2:3066-0:8618","b:2:3071-0:8618","b:2:3060-0:8618","b:2:3056-0:8618","b:2:2730-0:8618","b:33:159-0:8618","0:8620"]}},"b:2:3850-0:8613":{"id":"b:2:3850-0:8613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12945":{"id":"2:12945","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:12549","prim@char":"1:15699"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3151":{"id":"0:3151","crate_id":0,"name":"ext","span":{"filename":"src/ext.rs","begin":[1,0],"end":[55,1]},"visibility":"public","docs":"Extensions specific to the HTTP/2 protocol.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:8678"]}},"b:40:219-0:3285":{"id":"b:40:219-0:3285","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.16/src/future/future/mod.rs","begin":[119,0],"end":[119,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":["map","into_stream","flatten","left_future","unit_error","poll_unpin","now_or_never","fuse","right_future","never_error","inspect","flatten_stream","map_into","then"],"trait":{"kind":"resolved_path","inner":{"name":"FutureExt","id":"40:221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12912":{"id":"2:12912","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12009","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:12913","2:12914","2:12915","2:12916","2:12918","2:12921","2:12922","2:12923","2:12924","2:12925","2:12927","2:12929","2:12931","2:12933","2:12934","2:12935","2:12936","2:12937","2:12938","2:12939","2:12940","2:12941","2:12942","2:12943","2:12944","2:12945","2:12948","2:12951","2:12954","2:12958","2:12962","2:12965","2:12968","2:12971","2:12974","2:12977","2:12980","2:12983","2:12986","2:12989","2:12992","2:12995","2:12998","2:13001","2:13003","2:13005","2:13007","2:13008","2:13009","2:13012","2:13015","2:13018","2:13021","2:13024","2:13027","2:13030","2:13032","2:13033","2:13034","2:13035","2:13036","2:13038","2:13039"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3071-0:3295":{"id":"b:2:3071-0:3295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3090":{"id":"0:3090","crate_id":0,"name":"default","span":{"filename":"src/client.rs","begin":[1110,4],"end":[1112,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3504":{"id":"0:3504","crate_id":0,"name":"trailers","span":{"filename":"src/share.rs","begin":[400,4],"end":[402,5]},"visibility":"public","docs":"Get optional trailers for this stream.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"37:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"},"has_body":true}},"b:2:3071-0:9076":{"id":"b:2:3071-0:9076","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3583":{"id":"2:3583","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3584","2:3585","2:3586","2:3587"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3588","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3056-0:3048":{"id":"b:2:3056-0:3048","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13283":{"id":"2:13283","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"0:2633":{"id":"0:2633","crate_id":0,"name":"HTTP_1_1_REQUIRED","span":{"filename":"src/frame/reason.rs","begin":[60,4],"end":[60,53]},"visibility":"public","docs":"The endpoint requires that HTTP/1.1 be used instead of HTTP/2.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(13)"}},"1:6732":{"id":"1:6732","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6733","1:6734"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10414","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:4488":{"id":"2:4488","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4489","2:4490","2:4491"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:8696":{"id":"0:8696","crate_id":0,"name":"clone","span":{"filename":"src/server.rs","begin":[235,9],"end":[235,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3165":{"id":"0:3165","crate_id":0,"name":null,"span":{"filename":"src/ext.rs","begin":[37,0],"end":[43,1]},"visibility":{"restricted":{"parent":"0:3151","path":"::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3167"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3056":{"id":"0:3056","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[342,0],"end":[537,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3058","0:3059","0:3060","0:3062"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3139":{"id":"2:3139","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3056-0:8598":{"id":"b:2:3056-0:8598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8870-0:3482":{"id":"a:2:8870-0:3482","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3056-0:3476":{"id":"b:2:3056-0:3476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12574":{"id":"2:12574","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:12576","2:12577","2:12578"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:12568","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:0":{"id":"0:0","crate_id":0,"name":"h2","span":{"filename":"src/lib.rs","begin":[1,0],"end":[176,1]},"visibility":"public","docs":"An asynchronous, HTTP/2 server and client implementation.\n\nThis library implements the [HTTP/2] specification. The implementation is\nasynchronous, using [futures] as the basis for the API. The implementation\nis also decoupled from TCP or TLS details. The user must handle ALPN and\nHTTP/1.1 upgrades themselves.\n\n# Getting started\n\nAdd the following to your `Cargo.toml` file:\n\n```toml\n[dependencies]\nh2 = \"0.3\"\n```\n\n# Layout\n\nThe crate is split into [`client`] and [`server`] modules. Types that are\ncommon to both clients and servers are located at the root of the crate.\n\nSee module level documentation for more details on how to use `h2`.\n\n# Handshake\n\nBoth the client and the server require a connection to already be in a state\nready to start the HTTP/2 handshake. This library does not provide\nfacilities to do this.\n\nThere are three ways to reach an appropriate state to start the HTTP/2\nhandshake.\n\n* Opening an HTTP/1.1 connection and performing an [upgrade].\n* Opening a connection with TLS and use ALPN to negotiate the protocol.\n* Open a connection with prior knowledge, i.e. both the client and the\n  server assume that the connection is immediately ready to start the\n  HTTP/2 handshake once opened.\n\nOnce the connection is ready to start the HTTP/2 handshake, it can be\npassed to [`server::handshake`] or [`client::handshake`]. At this point, the\nlibrary will start the handshake process, which consists of:\n\n* The client sends the connection preface (a predefined sequence of 24\noctets).\n* Both the client and the server sending a SETTINGS frame.\n\nSee the [Starting HTTP/2] in the specification for more details.\n\n# Flow control\n\n[Flow control] is a fundamental feature of HTTP/2. The `h2` library\nexposes flow control to the user.\n\nAn HTTP/2 client or server may not send unlimited data to the peer. When a\nstream is initiated, both the client and the server are provided with an\ninitial window size for that stream.  A window size is the number of bytes\nthe endpoint can send to the peer. At any point in time, the peer may\nincrease this window size by sending a `WINDOW_UPDATE` frame. Once a client\nor server has sent data filling the window for a stream, no further data may\nbe sent on that stream until the peer increases the window.\n\nThere is also a **connection level** window governing data sent across all\nstreams.\n\nManaging flow control for inbound data is done through [`FlowControl`].\nManaging flow control for outbound data is done through [`SendStream`]. See\nthe struct level documentation for those two types for more details.\n\n[HTTP/2]: https://http2.github.io/\n[futures]: https://docs.rs/futures/\n[`client`]: client/index.html\n[`server`]: server/index.html\n[Flow control]: http://httpwg.org/specs/rfc7540.html#FlowControl\n[`FlowControl`]: struct.FlowControl.html\n[`SendStream`]: struct.SendStream.html\n[Starting HTTP/2]: http://httpwg.org/specs/rfc7540.html#starting\n[upgrade]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n[`server::handshake`]: server/fn.handshake.html\n[`client::handshake`]: client/fn.handshake.html","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/h2/0.3.13\")]","#![deny(missing_debug_implementations, missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:2937","0:3151","0:3172","0:4364","0:8314","0:9076","0:3480","0:3478","0:3482","0:3476","0:9053","0:9059"]}},"0:3373":{"id":"0:3373","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[1116,0],"end":[1184,1]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3375","0:3376","0:3377","0:3378"],"negative":false,"synthetic":false,"blanket_impl":null}},"42:15":{"id":"42:15","crate_id":42,"name":"Spawn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["42:16","42:17"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:40:482-0:3285":{"id":"b:40:482-0:3285","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.16/src/future/try_future/mod.rs","begin":[134,0],"end":[134,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fut"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"20:44","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":["err_into","unwrap_or_else","and_then","into_future","try_flatten","ok_into","map_ok","try_flatten_stream","try_poll_unpin","map_err","map_ok_or_else","or_else","inspect_ok","inspect_err"],"trait":{"kind":"resolved_path","inner":{"name":"TryFutureExt","id":"40:484","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Fut"}}},"b:2:3066-0:9053":{"id":"b:2:3066-0:9053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12938":{"id":"2:12938","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15699"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:48781","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13003":{"id":"2:13003","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3295":{"id":"0:3295","crate_id":0,"name":"SendPushedResponse","span":{"filename":"src/server.rs","begin":[287,0],"end":[289,1]},"visibility":"public","docs":"Send a response to a promised request\n\nA `SendPushedResponse` instance is provided when promising a request and is used\nto send the associated response to the client. It is also used to\nexplicitly reset the stream with a custom reason.\n\nIt can not be used to initiate push promises.\n\nIf the `SendPushedResponse` instance is dropped without sending a response, then\nthe HTTP/2 stream will be reset.\n\nSee [module] level docs for more details.\n\n[module]: index.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3373","a:2:8871-0:3295","a:2:3127-0:3295","a:2:3139-0:3295","a:2:3168-0:3295","a:2:8870-0:3295","b:2:3850-0:3295","b:2:2733-0:3295","b:2:3066-0:3295","b:2:3071-0:3295","b:2:3060-0:3295","b:2:3056-0:3295","b:2:2730-0:3295","b:33:159-0:3295","0:3298"]}},"a:2:8870-0:3476":{"id":"a:2:8870-0:3476","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3494":{"id":"0:3494","crate_id":0,"name":"poll_reset","span":{"filename":"src/share.rs","begin":[366,4],"end":[368,5]},"visibility":"public","docs":"Polls to be notified when the client resets this stream.\n\nIf stream is still open, this returns `Poll::Pending`, and\nregisters the task to be notified if a `RST_STREAM` is received.\n\nIf a `RST_STREAM` frame is received for this stream, calling this\nmethod will yield the `Reason` for the reset.\n\n# Error\n\nIf connection sees an error, this returns that error instead of a\n`Reason`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2626":{"id":"0:2626","crate_id":0,"name":"FRAME_SIZE_ERROR","span":{"filename":"src/frame/reason.rs","begin":[41,4],"end":[41,51]},"visibility":"public","docs":"The endpoint received a frame with an invalid size.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(6)"}},"b:2:2733-0:9059":{"id":"b:2:2733-0:9059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"20:27":{"id":"20:27","crate_id":20,"name":"FusedFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:28"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:8871-0:9059":{"id":"a:2:8871-0:9059","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3060-0:3291":{"id":"b:2:3060-0:3291","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2730-0:3048":{"id":"b:2:2730-0:3048","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12998":{"id":"2:12998","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:15699","`DoubleEndedIterator`":"2:7988","self::pattern":"2:12549","str::match_indices":"1:15704"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:48973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12962":{"id":"2:12962","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"1:15704","prim@char":"1:15699","str::rsplit":"1:15704","`DoubleEndedIterator`":"2:7988","self::pattern":"2:12549"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:48805","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3355":{"id":"0:3355","crate_id":0,"name":"max_concurrent_reset_streams","span":{"filename":"src/server.rs","begin":[873,4],"end":[876,5]},"visibility":"public","docs":"Sets the maximum number of concurrent locally reset streams.\n\nWhen a stream is explicitly reset by either calling\n[`SendResponse::send_reset`] or by dropping a [`SendResponse`] instance\nbefore completing the stream, the HTTP/2 specification requires that\nany further frames received for that stream must be ignored for \"some\ntime\".\n\nIn order to satisfy the specification, internal state must be maintained\nto implement the behavior. This state grows linearly with the number of\nstreams that are locally reset.\n\nThe `max_concurrent_reset_streams` setting configures sets an upper\nbound on the amount of state that is maintained. When this max value is\nreached, the oldest reset stream is purged from memory.\n\nOnce the stream has been fully purged from memory, any additional frames\nreceived for that stream will result in a connection level protocol\nerror, forcing the connection to terminate.\n\nThe default value is 10.\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server::*;\n#\n# fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Handshake<T>\n# {\n// `server_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet server_fut = Builder::new()\n    .max_concurrent_reset_streams(1000)\n    .handshake(my_io);\n# server_fut\n# }\n#\n# pub fn main() {}\n```","links":{"`SendResponse`":"0:8699","`SendResponse::send_reset`":"0:8699"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["max",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3124":{"id":"0:3124","crate_id":0,"name":"push_promises","span":{"filename":"src/client.rs","begin":[1358,4],"end":[1366,5]},"visibility":"public","docs":"Returns a stream of PushPromises\n\n# Panics\n\nIf this method has been called before\nor the stream was itself was pushed","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5705":{"id":"5:5705","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5525","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5706","5:5707","5:5710","5:5713","5:5725","5:5726","5:5727","5:5728","5:5729"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:33:159-0:3482":{"id":"b:33:159-0:3482","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:33:159-0:9076":{"id":"b:33:159-0:9076","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2730-0:8622":{"id":"b:2:2730-0:8622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3127-0:3476":{"id":"a:2:3127-0:3476","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3127-0:8689":{"id":"a:2:3127-0:8689","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12923":{"id":"2:12923","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:15713","str::as_mut_ptr":"1:15704"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3071-0:8609":{"id":"b:2:3071-0:8609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2733-0:9076":{"id":"b:2:2733-0:9076","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5706":{"id":"5:5706","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[rustc_allow_incoherent_impl]","#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:421","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7718","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:421","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7718","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8870-0:8604":{"id":"a:2:8870-0:8604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3139-0:8678":{"id":"a:2:3139-0:8678","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:13281-0:3285":{"id":"b:2:13281-0:3285","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13277","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:13283","2:13284","2:13285"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"b:2:3056-0:8622":{"id":"b:2:3056-0:8622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3127-0:3285":{"id":"a:2:3127-0:3285","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3168-0:3478":{"id":"a:2:3168-0:3478","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3056-0:3482":{"id":"b:2:3056-0:3482","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3071-0:3052":{"id":"b:2:3071-0:3052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3127-0:8618":{"id":"a:2:3127-0:8618","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:40:482-0:8609":{"id":"b:40:482-0:8609","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.16/src/future/try_future/mod.rs","begin":[134,0],"end":[134,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fut"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"20:44","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":["err_into","unwrap_or_else","and_then","into_future","try_flatten","ok_into","map_ok","try_flatten_stream","try_poll_unpin","map_err","map_ok_or_else","or_else","inspect_ok","inspect_err"],"trait":{"kind":"resolved_path","inner":{"name":"TryFutureExt","id":"40:484","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Fut"}}},"2:13036":{"id":"2:13036","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15699"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49104","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3515":{"id":"0:3515","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[463,0],"end":[472,1]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Drop","id":"2:3370","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3516"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3139-0:3285":{"id":"a:2:3139-0:3285","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2733-0:3052":{"id":"b:2:2733-0:3052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9857":{"id":"2:9857","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9858"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5733":{"id":"1:5733","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5734"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10414","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3082":{"id":"0:3082","crate_id":0,"name":"reset_stream_duration","span":{"filename":"src/client.rs","begin":[964,4],"end":[967,5]},"visibility":"public","docs":"Sets the duration to remember locally reset streams.\n\nWhen a stream is explicitly reset, the HTTP/2 specification requires\nthat any further frames received for that stream must be ignored for\n\"some time\".\n\nIn order to satisfy the specification, internal state must be maintained\nto implement the behavior. This state grows linearly with the number of\nstreams that are locally reset.\n\nThe `reset_stream_duration` setting configures the max amount of time\nthis state will be maintained in memory. Once the duration elapses, the\nstream state is purged from memory.\n\nOnce the stream has been fully purged from memory, any additional frames\nreceived for that stream will result in a connection level protocol\nerror, forcing the connection to terminate.\n\nThe default value is 30 seconds.\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use std::time::Duration;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .reset_stream_duration(Duration::from_secs(10))\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dur",{"kind":"resolved_path","inner":{"name":"Duration","id":"2:49549","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3216":{"id":"2:3216","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3218","2:3219"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3062":{"id":"0:3062","crate_id":0,"name":"is_extended_connect_protocol_enabled","span":{"filename":"src/client.rs","begin":[534,4],"end":[536,5]},"visibility":"public","docs":"Returns whether the [extended CONNECT protocol][1] is enabled or not.\n\nThis setting is configured by the server peer by sending the\n[`SETTINGS_ENABLE_CONNECT_PROTOCOL` parameter][2] in a `SETTINGS` frame.\nThis method returns the currently acknowledged value recieved from the\nremote.\n\n[1]: https://datatracker.ietf.org/doc/html/rfc8441#section-4\n[2]: https://datatracker.ietf.org/doc/html/rfc8441#section-3","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8611":{"id":"0:8611","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[250,9],"end":[250,14]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8612"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:33:159-0:8689":{"id":"b:33:159-0:8689","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2733-0:8314":{"id":"b:2:2733-0:8314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10451":{"id":"2:10451","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10453","2:10454","2:10455","2:10456","2:10457","2:10458","2:10459"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10442","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:20:48-0:8598":{"id":"b:20:48-0:8598","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","begin":[73,0],"end":[84,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"20:44","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["20:52","20:53","20:54"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"2:12948":{"id":"2:12948","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:15699","self::pattern":"2:12549"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8871-0:3048":{"id":"a:2:8871-0:3048","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"34:684":{"id":"34:684","crate_id":34,"name":"Subscriber","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["34:685","34:686","34:687","34:688","34:689","34:690","34:691","34:692","34:693","34:694","34:695","34:696","34:697","34:698"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:3125":{"id":"0:3125","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[1371,0],"end":[1397,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3126"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3066-0:8678":{"id":"b:2:3066-0:8678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8871-0:3482":{"id":"a:2:8871-0:3482","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2727":{"id":"2:2727","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2729"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:96":{"id":"20:96","crate_id":20,"name":"Stream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:97","20:98","20:99"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3510":{"id":"0:3510","crate_id":0,"name":"is_end_stream","span":{"filename":"src/share.rs","begin":[425,4],"end":[427,5]},"visibility":"public","docs":"Returns true if the receive half has reached the end of stream.\n\nA return value of `true` means that calls to `poll` and `poll_trailers`\nwill both return `None`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3168-0:4364":{"id":"a:2:3168-0:4364","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8871-0:8314":{"id":"a:2:8871-0:8314","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"40:221":{"id":"40:221","crate_id":40,"name":"FutureExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["40:222","40:225","40:227","40:230","40:232","40:234","40:235","40:236","40:237","40:238","40:240","40:241","40:242","40:243"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3139-0:8622":{"id":"a:2:3139-0:8622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3291":{"id":"0:3291","crate_id":0,"name":"Connection","span":{"filename":"src/server.rs","begin":[196,0],"end":[198,1]},"visibility":"public","docs":"Accepts inbound HTTP/2 streams on a connection.\n\nA `Connection` is backed by an I/O resource (usually a TCP socket) and\nimplements the HTTP/2 server logic for that connection. It is responsible\nfor receiving inbound streams initiated by the client as well as driving the\ninternal state forward.\n\n`Connection` values are created by calling [`handshake`]. Once a\n`Connection` value is obtained, the caller must call [`poll`] or\n[`poll_close`] in order to drive the internal connection state forward.\n\nSee [module level] documentation for more details\n\n[module level]: index.html\n[`handshake`]: struct.Connection.html#method.handshake\n[`poll`]: struct.Connection.html#method.poll\n[`poll_close`]: struct.Connection.html#method.poll_close\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server;\n# use h2::server::*;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T) {\nlet mut server = server::handshake(my_io).await.unwrap();\nwhile let Some(request) = server.accept().await {\n    tokio::spawn(async move {\n        let (request, respond) = request.unwrap();\n        // Process the request and send the response back to the client\n        // using `respond`.\n    });\n}\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3325","a:2:8871-0:3291","a:2:3127-0:3291","a:2:3139-0:3291","a:2:3168-0:3291","a:2:8870-0:3291","b:2:3850-0:3291","b:2:2733-0:3291","b:2:3066-0:3291","b:2:3071-0:3291","b:2:3060-0:3291","b:2:3056-0:3291","b:2:2730-0:3291","b:33:159-0:3291","0:3344"]}},"44:28":{"id":"44:28","crate_id":44,"name":"equivalent","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","begin":[24,4],"end":[24,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["key",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3850-0:3048":{"id":"b:2:3850-0:3048","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3085":{"id":"0:3085","crate_id":0,"name":"handshake","span":{"filename":"src/client.rs","begin":[1097,4],"end":[1106,5]},"visibility":"public","docs":"Creates a new configured HTTP/2 client backed by `io`.\n\nIt is expected that `io` already be in an appropriate state to commence\nthe [HTTP/2 handshake]. The handshake is completed once both the connection\npreface and the initial settings frame is sent by the client.\n\nThe handshake future does not wait for the initial settings frame from the\nserver.\n\nReturns a future which resolves to the [`Connection`] / [`SendRequest`]\ntuple once the HTTP/2 handshake has been completed.\n\nThis function also allows the caller to configure the send payload data\ntype. See [Outbound data type] for more details.\n\n[HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader\n[`Connection`]: struct.Connection.html\n[`SendRequest`]: struct.SendRequest.html\n[Outbound data type]: ../index.html#outbound-data-type.\n\n# Examples\n\nBasic usage:\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n    -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```\n\nConfigures the send-payload data type. In this case, the outbound data\ntype will be `&'static [u8]`.\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Result<((SendRequest<&'static [u8]>, Connection<T, &'static [u8]>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .handshake::<_, &'static [u8]>(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["io",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}}]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"22:303","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2733-0:9053":{"id":"b:2:2733-0:9053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3131":{"id":"0:3131","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[1410,0],"end":[1426,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3132","0:3133","0:3134"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5727":{"id":"5:5727","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8013"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[rustc_allow_incoherent_impl]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8013","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3480":{"id":"0:3480","crate_id":0,"name":"Ping","span":{"filename":"src/share.rs","begin":[203,0],"end":[205,1]},"visibility":"public","docs":"Sent via [`PingPong`][] to send a PING frame to a peer.\n\n[`PingPong`]: struct.PingPong.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3534","a:2:8871-0:3480","a:2:3127-0:3480","a:2:3139-0:3480","a:2:3168-0:3480","a:2:8870-0:3480","b:2:3850-0:3480","b:2:2733-0:3480","b:2:3066-0:3480","b:2:3071-0:3480","b:2:3060-0:3480","b:2:3056-0:3480","b:2:2730-0:3480","b:33:159-0:3480","0:3536"]}},"b:2:3066-0:8314":{"id":"b:2:3066-0:8314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3066-0:9059":{"id":"b:2:3066-0:9059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3519":{"id":"0:3519","crate_id":0,"name":"stream_id","span":{"filename":"src/share.rs","begin":[483,4],"end":[485,5]},"visibility":"public","docs":"Returns the stream ID of the stream whose capacity will\nbe released by this `FlowControl`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:9079":{"id":"0:9079","crate_id":0,"name":"clone","span":{"filename":"src/share.rs","begin":[189,9],"end":[189,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3099":{"id":"0:3099","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[1177,0],"end":[1304,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"22:303","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3105","0:3106","0:3107","0:3108","0:3109"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3329":{"id":"0:3329","crate_id":0,"name":"accept","span":{"filename":"src/server.rs","begin":[403,4],"end":[407,5]},"visibility":"public","docs":"Accept the next incoming request on this connection.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Request","id":"37:1348","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}}]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"},"has_body":true}},"0:3488":{"id":"0:3488","crate_id":0,"name":"capacity","span":{"filename":"src/share.rs","begin":[289,4],"end":[291,5]},"visibility":"public","docs":"Returns the stream's current send capacity.\n\nThis allows the caller to check the current amount of available capacity\nbefore sending data.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3168-0:8613":{"id":"a:2:3168-0:8613","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3126":{"id":"0:3126","crate_id":0,"name":"push_promise","span":{"filename":"src/client.rs","begin":[1373,4],"end":[1375,5]},"visibility":"public","docs":"Get the next `PushPromise`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"},"has_body":true}},"1:6502":{"id":"1:6502","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6503","1:6504"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4651":{"id":"1:4651","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4652","1:4653","1:4654","1:4656","1:4657","1:4659","1:4660"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4569","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3850-0:8618":{"id":"b:2:3850-0:8618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3060-0:8604":{"id":"b:2:3060-0:8604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8870-0:8689":{"id":"a:2:8870-0:8689","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3521":{"id":"0:3521","crate_id":0,"name":"used_capacity","span":{"filename":"src/share.rs","begin":[495,4],"end":[497,5]},"visibility":"public","docs":"Get the currently *used* capacity for this stream.\n\nThis is the amount of bytes that can be released back to the remote.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"40:3638":{"id":"40:3638","crate_id":40,"name":"TryStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["40:3639","40:3641","40:3644","40:3647","40:3650","40:3653","40:3655","40:3657","40:3658","40:3659","40:3662","40:3665","40:3668","40:3670","40:3673","40:3677","40:3678","40:3682","40:3683"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryStream","id":"20:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3066-0:3476":{"id":"b:2:3066-0:3476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:776":{"id":"5:776","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"T"},"generics":{"params":[],"where_predicates":[]}}},"5:5461":{"id":"5:5461","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5463","5:5464"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3403":{"id":"0:3403","crate_id":0,"name":"poll","span":{"filename":"src/server.rs","begin":[1269,4],"end":[1325,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:46975","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:13262","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8871-0:8689":{"id":"a:2:8871-0:8689","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13033":{"id":"2:13033","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8612":{"id":"0:8612","crate_id":0,"name":"fmt","span":{"filename":"src/client.rs","begin":[250,9],"end":[250,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3040":{"id":"2:3040","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3042","2:3043"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2730-0:3482":{"id":"b:2:2730-0:3482","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3056-0:8613":{"id":"b:2:3056-0:8613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3340":{"id":"0:3340","crate_id":0,"name":"graceful_shutdown","span":{"filename":"src/server.rs","begin":[539,4],"end":[541,5]},"visibility":"public","docs":"Starts a [graceful shutdown][1] process.\n\nMust continue being polled to close connection.\n\nIt's possible to receive more requests after calling this method, since\nthey might have been in-flight from the client already. After about\n1 RTT, no new requests should be accepted. Once all active streams\nhave completed, the connection is closed.\n\n[1]: http://httpwg.org/specs/rfc7540.html#GOAWAY","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3133":{"id":"0:3133","crate_id":0,"name":"request_mut","span":{"filename":"src/client.rs","begin":[1417,4],"end":[1419,5]},"visibility":"public","docs":"Returns a mutable reference to the push promise's request headers.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"37:1348","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8683":{"id":"0:8683","crate_id":0,"name":null,"span":{"filename":"src/ext.rs","begin":[12,16],"end":[12,18]},"visibility":{"restricted":{"parent":"0:3151","path":"::ext"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3230":{"id":"2:3230","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3232"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3137":{"id":"0:3137","crate_id":0,"name":"poll","span":{"filename":"src/client.rs","begin":[1433,4],"end":[1435,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:46975","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:13262","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3167":{"id":"0:3167","crate_id":0,"name":"from","span":{"filename":"src/ext.rs","begin":[38,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3168-0:3291":{"id":"a:2:3168-0:3291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13035":{"id":"2:13035","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"40:4332":{"id":"40:4332","crate_id":40,"name":"SpawnExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Spawn","id":"42:15","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:12924":{"id":"2:12924","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15713"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8871-0:8699":{"id":"a:2:8871-0:8699","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5685":{"id":"1:5685","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5686","1:5687","1:5688","1:5689","1:5690","1:5691","1:5692","1:5693","1:5694","1:5695","1:5696","1:5697","1:5698","1:5699","1:5700","1:5701"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:7940":{"id":"2:7940","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7942"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2733-0:8618":{"id":"b:2:2733-0:8618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8870-0:9076":{"id":"a:2:8870-0:9076","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:33:159-0:3480":{"id":"b:33:159-0:3480","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8870-0:8314":{"id":"a:2:8870-0:8314","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3325":{"id":"0:3325","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[364,0],"end":[579,1]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"22:303","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3329","0:3334","0:3335","0:3336","0:3337","0:3339","0:3340","0:3341","0:3342","0:3343"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9853":{"id":"2:9853","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9854"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:8688":{"id":"0:8688","crate_id":0,"name":"ne","span":{"filename":"src/ext.rs","begin":[12,20],"end":[12,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3364":{"id":"0:3364","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[1024,0],"end":[1112,1]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3366","0:3368","0:3370","0:3371","0:3372"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:7493":{"id":"2:7493","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7494","2:7495","2:7496","2:7497","2:7498","2:7499","2:7500"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2825","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3139-0:8689":{"id":"a:2:3139-0:8689","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3071-0:4364":{"id":"b:2:3071-0:4364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12941":{"id":"2:12941","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15704"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49088","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8871-0:3476":{"id":"a:2:8871-0:3476","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3139-0:8609":{"id":"a:2:3139-0:8609","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3127-0:3052":{"id":"a:2:3127-0:3052","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:13281-0:8598":{"id":"b:2:13281-0:8598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13277","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:13283","2:13284","2:13285"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"a:2:3168-0:3285":{"id":"a:2:3168-0:3285","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:33:159-0:3052":{"id":"b:33:159-0:3052","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9842":{"id":"2:9842","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9843"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3079":{"id":"0:3079","crate_id":0,"name":"max_concurrent_streams","span":{"filename":"src/client.rs","begin":[832,4],"end":[835,5]},"visibility":"public","docs":"Sets the maximum number of concurrent streams.\n\nThe maximum concurrent streams setting only controls the maximum number\nof streams that can be initiated by the remote peer. In other words,\nwhen this setting is set to 100, this does not limit the number of\nconcurrent streams that can be created by the caller.\n\nIt is recommended that this value be no smaller than 100, so as to not\nunnecessarily limit parallelism. However, any value is legal, including\n0. If `max` is set to 0, then the remote will not be permitted to\ninitiate streams.\n\nNote that streams in the reserved state, i.e., push promises that have\nbeen reserved but the stream has not started, do not count against this\nsetting.\n\nAlso note that if the remote *does* exceed the value set here, it is not\na protocol level error. Instead, the `h2` library will immediately reset\nthe stream.\n\nSee [Section 5.1.2] in the HTTP/2 spec for more details.\n\n[Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .max_concurrent_streams(1000)\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["max",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3850-0:8622":{"id":"b:2:3850-0:8622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3358":{"id":"0:3358","crate_id":0,"name":"enable_connect_protocol","span":{"filename":"src/server.rs","begin":[946,4],"end":[949,5]},"visibility":"public","docs":"Enables the [extended CONNECT protocol].\n\n[extended CONNECT protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3663":{"id":"2:3663","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3366":{"id":"0:3366","crate_id":0,"name":"send_response","span":{"filename":"src/server.rs","begin":[1041,4],"end":[1050,5]},"visibility":"public","docs":"Send a response to a client request.\n\nOn success, a [`SendStream`] instance is returned. This instance can be\nused to stream the response body and send trailers.\n\nIf a body or trailers will be sent on the returned [`SendStream`]\ninstance, then `end_of_stream` must be set to `false` when calling this\nfunction.\n\nThe [`SendResponse`] instance is already associated with a received\nrequest.  This function may only be called once per instance and only if\n[`send_reset`] has not been previously called.\n\n[`SendResponse`]: #\n[`SendStream`]: ../struct.SendStream.html\n[`send_reset`]: #method.send_reset","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["response",{"kind":"resolved_path","inner":{"name":"Response","id":"37:1479","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}],["end_of_stream",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:33:159-0:3295":{"id":"b:33:159-0:3295","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2631":{"id":"0:2631","crate_id":0,"name":"ENHANCE_YOUR_CALM","span":{"filename":"src/frame/reason.rs","begin":[55,4],"end":[55,53]},"visibility":"public","docs":"The endpoint detected that its peer is exhibiting a behavior that might\nbe generating excessive load.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(11)"}},"2:2962":{"id":"2:2962","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:2961","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3168":{"id":"0:3168","crate_id":0,"name":null,"span":{"filename":"src/ext.rs","begin":[45,0],"end":[49,1]},"visibility":{"restricted":{"parent":"0:3151","path":"::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3024","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3169"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3487":{"id":"0:3487","crate_id":0,"name":"reserve_capacity","span":{"filename":"src/share.rs","begin":[280,4],"end":[283,5]},"visibility":"public","docs":"Requests capacity to send data.\n\nThis function is used to express intent to send data. This requests\nconnection level capacity. Once the capacity is available, it is\nassigned to the stream and not reused by other streams.\n\nThis function may be called repeatedly. The `capacity` argument is the\n**total** amount of requested capacity. Sequential calls to\n`reserve_capacity` are *not* additive. Given the following:\n\n```rust\n# use h2::*;\n# fn doc(mut send_stream: SendStream<&'static [u8]>) {\nsend_stream.reserve_capacity(100);\nsend_stream.reserve_capacity(200);\n# }\n```\n\nAfter the second call to `reserve_capacity`, the *total* requested\ncapacity will be 200.\n\n`reserve_capacity` is also used to cancel previous capacity requests.\nGiven the following:\n\n```rust\n# use h2::*;\n# fn doc(mut send_stream: SendStream<&'static [u8]>) {\nsend_stream.reserve_capacity(100);\nsend_stream.reserve_capacity(0);\n# }\n```\n\nAfter the second call to `reserve_capacity`, the *total* requested\ncapacity will be 0, i.e. there is no requested capacity for the stream.\n\nIf `reserve_capacity` is called with a lower value than the amount of\ncapacity **currently** assigned to the stream, this capacity will be\nreturned to the connection to be re-assigned to other streams.\n\nAlso, the amount of capacity that is reserved gets decremented as data\nis sent. For example:\n\n```rust\n# use h2::*;\n# async fn doc(mut send_stream: SendStream<&'static [u8]>) {\nsend_stream.reserve_capacity(100);\n\nsend_stream.send_data(b\"hello\", false).unwrap();\n// At this point, the total amount of requested capacity is 95 bytes.\n\n// Calling `reserve_capacity` with `100` again essentially requests an\n// additional 5 bytes.\nsend_stream.reserve_capacity(100);\n# }\n```\n\nSee [Flow control](struct.SendStream.html#flow-control) for an overview\nof how send flow control works.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["capacity",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2637":{"id":"0:2637","crate_id":0,"name":null,"span":{"filename":"src/frame/reason.rs","begin":[93,0],"end":[97,1]},"visibility":{"restricted":{"parent":"0:2615","path":"::frame::reason"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"u32"},"items":["0:2638"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3139-0:8618":{"id":"a:2:3139-0:8618","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3346":{"id":"2:3346","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3347","2:3348"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3376":{"id":"2:3376","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3379","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3281":{"id":"2:3281","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3283"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3285":{"id":"2:3285","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3287"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3071-0:8622":{"id":"b:2:3071-0:8622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3060-0:3048":{"id":"b:2:3060-0:3048","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3353":{"id":"0:3353","crate_id":0,"name":"max_header_list_size","span":{"filename":"src/server.rs","begin":[779,4],"end":[782,5]},"visibility":"public","docs":"Sets the max size of received header frames.\n\nThis advisory setting informs a peer of the maximum size of header list\nthat the sender is prepared to accept, in octets. The value is based on\nthe uncompressed size of header fields, including the length of the name\nand value in octets plus an overhead of 32 octets for each header field.\n\nThis setting is also used to limit the maximum amount of data that is\nbuffered to decode HEADERS frames.\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server::*;\n#\n# fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Handshake<T>\n# {\n// `server_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet server_fut = Builder::new()\n    .max_header_list_size(16 * 1024)\n    .handshake(my_io);\n# server_fut\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["max",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"37:543":{"id":"37:543","crate_id":37,"name":"AsHeaderName","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"37:544","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:11996":{"id":"2:11996","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:11997","2:11998"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:8689":{"id":"0:8689","crate_id":0,"name":"Builder","span":{"filename":"src/server.rs","begin":[236,0],"end":[251,1]},"visibility":"public","docs":"Builds server connections with custom configuration values.\n\nMethods can be chained in order to set the configuration values.\n\nThe server is constructed by calling [`handshake`] and passing the I/O\nhandle that will back the HTTP/2 server.\n\nNew instances of `Builder` are obtained via [`Builder::new`].\n\nSee function level documentation for details on the various server\nconfiguration settings.\n\n[`Builder::new`]: struct.Builder.html#method.new\n[`handshake`]: struct.Builder.html#method.handshake\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server::*;\n#\n# fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Handshake<T>\n# {\n// `server_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet server_fut = Builder::new()\n    .initial_window_size(1_000_000)\n    .max_concurrent_streams(1000)\n    .handshake(my_io);\n# server_fut\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3348","a:2:8871-0:8689","a:2:3127-0:8689","a:2:3139-0:8689","a:2:3168-0:8689","a:2:8870-0:8689","b:2:3850-0:8689","b:2:2733-0:8689","b:2:3066-0:8689","b:2:3071-0:8689","b:2:3060-0:8689","b:2:3056-0:8689","b:2:2730-0:8689","b:5:774-0:8689","b:33:159-0:8689","0:8695","0:8697","0:3362"]}},"0:9062":{"id":"0:9062","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[112,9],"end":[112,14]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:9063"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5741":{"id":"1:5741","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5742"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3127-0:8604":{"id":"a:2:3127-0:8604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3511":{"id":"0:3511","crate_id":0,"name":"flow_control","span":{"filename":"src/share.rs","begin":[432,4],"end":[434,5]},"visibility":"public","docs":"Get a mutable reference to this stream's `FlowControl`.\n\nIt can be used immediately, or cloned to be used later.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3850-0:3052":{"id":"b:2:3850-0:3052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3071-0:3482":{"id":"b:2:3071-0:3482","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"24:160":{"id":"24:160","crate_id":24,"name":"Log","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:161","24:162","24:163"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:8870-0:3048":{"id":"a:2:8870-0:3048","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:9081":{"id":"0:9081","crate_id":0,"name":"fmt","span":{"filename":"src/share.rs","begin":[189,16],"end":[189,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3071-0:3478":{"id":"b:2:3071-0:3478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8682":{"id":"0:8682","crate_id":0,"name":null,"span":{"filename":"src/ext.rs","begin":[12,16],"end":[12,18]},"visibility":{"restricted":{"parent":"0:3151","path":"::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:8601":{"id":"0:8601","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[183,9],"end":[183,14]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:8603"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2733-0:3285":{"id":"b:2:2733-0:3285","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3120":{"id":"0:3120","crate_id":0,"name":"Output","span":{"filename":"src/client.rs","begin":[1333,4],"end":[1333,61]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Response","id":"37:1479","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:2624":{"id":"0:2624","crate_id":0,"name":"SETTINGS_TIMEOUT","span":{"filename":"src/frame/reason.rs","begin":[37,4],"end":[37,51]},"visibility":"public","docs":"The endpoint sent a SETTINGS frame but did not receive a response in\na timely manner.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(4)"}},"2:3127":{"id":"2:3127","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:33:159-0:8618":{"id":"b:33:159-0:8618","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5671":{"id":"1:5671","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5672","1:5673","1:5674"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3060-0:8622":{"id":"b:2:3060-0:8622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8871-0:3285":{"id":"a:2:8871-0:3285","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Bytes","id":"21:513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2629":{"id":"0:2629","crate_id":0,"name":"COMPRESSION_ERROR","span":{"filename":"src/frame/reason.rs","begin":[49,4],"end":[49,52]},"visibility":"public","docs":"The endpoint is unable to maintain the header compression context for\nthe connection.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(9)"}},"a:2:3168-0:3476":{"id":"a:2:3168-0:3476","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12942":{"id":"2:12942","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49059","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3334":{"id":"0:3334","crate_id":0,"name":"set_target_window_size","span":{"filename":"src/server.rs","begin":[453,4],"end":[456,5]},"visibility":"public","docs":"Sets the target window size for the whole connection.\n\nIf `size` is greater than the current value, then a `WINDOW_UPDATE`\nframe will be immediately sent to the remote, increasing the connection\nlevel window by `size - current_value`.\n\nIf `size` is less than the current value, nothing will happen\nimmediately. However, as window capacity is released by\n[`FlowControl`] instances, no `WINDOW_UPDATE` frames will be sent\nout until the number of \"in flight\" bytes drops below `size`.\n\nThe default value is 65,535.\n\nSee [`FlowControl`] documentation for more details.\n\n[`FlowControl`]: ../struct.FlowControl.html\n[library level]: ../index.html#flow-control","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["size",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3132":{"id":"0:3132","crate_id":0,"name":"request","span":{"filename":"src/client.rs","begin":[1412,4],"end":[1414,5]},"visibility":"public","docs":"Returns a reference to the push promise's request headers.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"37:1348","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3431":{"id":"2:3431","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433","2:3434"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementations":[]}},"1:6804":{"id":"1:6804","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6805"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:9074":{"id":"0:9074","crate_id":0,"name":"hash","span":{"filename":"src/share.rs","begin":[112,38],"end":[112,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3491":{"id":"0:3491","crate_id":0,"name":"send_data","span":{"filename":"src/share.rs","begin":[329,4],"end":[333,5]},"visibility":"public","docs":"Sends a single data frame to the remote peer.\n\nThis function may be called repeatedly as long as `end_of_stream` is set\nto `false`. Setting `end_of_stream` to `true` sets the end stream flag\non the data frame. Any further calls to `send_data` or `send_trailers`\nwill return an [`Error`].\n\n`send_data` can be called without reserving capacity. In this case, the\ndata is buffered and the capacity is implicitly requested. Once the\ncapacity becomes available, the data is flushed to the connection.\nHowever, this buffering is unbounded. As such, sending large amounts of\ndata without reserving capacity before hand could result in large\namounts of data being buffered in memory.\n\n[`Error`]: struct.Error.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["data",{"kind":"generic","inner":"B"}],["end_of_stream",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8421":{"id":"2:8421","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7493","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9849":{"id":"2:9849","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9850"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3073":{"id":"0:3073","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[605,0],"end":[1107,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3074","0:3075","0:3076","0:3077","0:3078","0:3079","0:3080","0:3081","0:3082","0:3083","0:3084","0:3085"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3168-0:8618":{"id":"a:2:3168-0:8618","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13027":{"id":"2:13027","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15699","self::pattern":"2:12549"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason =\n\"superseded by `trim_end_matches`\", suggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2730-0:8678":{"id":"b:2:2730-0:8678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:40:482-0:8604":{"id":"b:40:482-0:8604","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.16/src/future/try_future/mod.rs","begin":[134,0],"end":[134,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fut"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"20:44","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":["err_into","unwrap_or_else","and_then","into_future","try_flatten","ok_into","map_ok","try_flatten_stream","try_poll_unpin","map_err","map_ok_or_else","or_else","inspect_ok","inspect_err"],"trait":{"kind":"resolved_path","inner":{"name":"TryFutureExt","id":"40:484","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Fut"}}},"b:2:2733-0:8622":{"id":"b:2:2733-0:8622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3127-0:3482":{"id":"a:2:3127-0:3482","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13262":{"id":"2:13262","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13263","2:13264"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3060-0:8699":{"id":"b:2:3060-0:8699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3066-0:3295":{"id":"b:2:3066-0:3295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3066-0:9076":{"id":"b:2:3066-0:9076","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6630":{"id":"1:6630","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6631","1:6632","1:6633","1:6634","1:6635","1:6636","1:6637","1:6638","1:6639","1:6640","1:6641","1:6642","1:6643","1:6644","1:6645","1:6646","1:6647"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:9064":{"id":"0:9064","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[112,16],"end":[112,21]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:9065"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:9065":{"id":"0:9065","crate_id":0,"name":"clone","span":{"filename":"src/share.rs","begin":[112,16],"end":[112,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3074":{"id":"2:3074","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38214","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"b:2:3066-0:3048":{"id":"b:2:3066-0:3048","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6382":{"id":"1:6382","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6383","1:6384","1:6385","1:6386","1:6388","1:6390","1:6391","1:6393"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10414","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:22510":{"id":"2:22510","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:22511","2:22512","2:22513"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22503","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3127-0:3048":{"id":"a:2:3127-0:3048","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"31:594":{"id":"31:594","crate_id":31,"name":"Encoder","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:596","31:597"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3476":{"id":"0:3476","crate_id":0,"name":"RecvStream","span":{"filename":"src/share.rs","begin":[133,0],"end":[135,1]},"visibility":"public","docs":"Receives the body stream and trailers from the remote peer.\n\nA `RecvStream` is provided by [`client::ResponseFuture`] and\n[`server::Connection`] with the received HTTP/2 message head (the response\nand request head respectively).\n\nA `RecvStream` instance is used to receive the streaming message body and\nany trailers from the remote peer. It is also used to manage inbound flow\ncontrol.\n\nSee method level documentation for more details on receiving data. See\n[`FlowControl`] for more details on inbound flow control.\n\n[`client::ResponseFuture`]: client/struct.ResponseFuture.html\n[`server::Connection`]: server/struct.Connection.html\n[`FlowControl`]: struct.FlowControl.html\n[`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3498","a:2:8871-0:3476","a:2:3127-0:3476","a:2:3139-0:3476","a:2:3168-0:3476","a:2:8870-0:3476","b:2:3850-0:3476","b:2:2733-0:3476","b:2:3066-0:3476","b:2:3071-0:3476","b:2:3060-0:3476","b:2:3056-0:3476","b:2:2730-0:3476","b:33:159-0:3476","0:3513","0:3515"]}},"b:2:3850-0:3291":{"id":"b:2:3850-0:3291","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3060-0:4364":{"id":"b:2:3060-0:4364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3127-0:3295":{"id":"a:2:3127-0:3295","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3132":{"id":"2:3132","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:358":{"id":"0:358","crate_id":0,"name":"is_io","span":{"filename":"src/error.rs","begin":[61,4],"end":[66,5]},"visibility":"public","docs":"Returns true if the error is an io::Error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3495":{"id":"0:3495","crate_id":0,"name":"stream_id","span":{"filename":"src/share.rs","begin":[375,4],"end":[377,5]},"visibility":"public","docs":"Returns the stream ID of this `SendStream`.\n\n# Panics\n\nIf the lock on the stream store has been poisoned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3335":{"id":"0:3335","crate_id":0,"name":"set_initial_window_size","span":{"filename":"src/server.rs","begin":[471,4],"end":[475,5]},"visibility":"public","docs":"Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level\nflow control for received data.\n\nThe `SETTINGS` will be sent to the remote, and only applied once the\nremote acknowledges the change.\n\nThis can be used to increase or decrease the window size for existing\nstreams.\n\n# Errors\n\nReturns an error if a previous call is still pending acknowledgement\nfrom the remote endpoint.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["size",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8870-0:8598":{"id":"a:2:8870-0:8598","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:9058":{"id":"0:9058","crate_id":0,"name":"fmt","span":{"filename":"src/share.rs","begin":[97,9],"end":[97,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3850-0:3476":{"id":"b:2:3850-0:3476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3377":{"id":"0:3377","crate_id":0,"name":"poll_reset","span":{"filename":"src/server.rs","begin":[1172,4],"end":[1174,5]},"visibility":"public","docs":"Polls to be notified when the client resets this stream.\n\nIf stream is still open, this returns `Poll::Pending`, and\nregisters the task to be notified if a `RST_STREAM` is received.\n\nIf a `RST_STREAM` frame is received for this stream, calling this\nmethod will yield the `Reason` for the reset.\n\n# Error\n\nCalling this method after having called `send_response` will return\na user error.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3137":{"id":"2:3137","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:33:159-0:8622":{"id":"b:33:159-0:8622","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2628":{"id":"0:2628","crate_id":0,"name":"CANCEL","span":{"filename":"src/frame/reason.rs","begin":[46,4],"end":[46,41]},"visibility":"public","docs":"Used by the endpoint to indicate that the stream is no longer needed.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(8)"}},"2:7988":{"id":"2:7988","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7989","2:7990","2:7991","2:7992","2:7996","2:7999"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2724":{"id":"2:2724","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2726"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementations":[]}},"0:3336":{"id":"0:3336","crate_id":0,"name":"enable_connect_protocol","span":{"filename":"src/server.rs","begin":[485,4],"end":[488,5]},"visibility":"public","docs":"Enables the [extended CONNECT protocol].\n\n[extended CONNECT protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4\n\n# Errors\n\nReturns an error if a previous call is still pending acknowledgement\nfrom the remote endpoint.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13018":{"id":"2:13018","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15699","self::pattern":"2:12549"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2730-0:8609":{"id":"b:2:2730-0:8609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"22:224":{"id":"22:224","crate_id":22,"name":"AsyncRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:225"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2733-0:8604":{"id":"b:2:2733-0:8604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3200":{"id":"2:3200","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3202","2:3203"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3138":{"id":"0:3138","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[1438,0],"end":[1447,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3139"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12980":{"id":"2:12980","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:15699","str::splitn":"1:15704","self::pattern":"2:12549"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:48927","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3121":{"id":"0:3121","crate_id":0,"name":"poll","span":{"filename":"src/client.rs","begin":[1335,4],"end":[1340,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:46975","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:13262","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2627":{"id":"0:2627","crate_id":0,"name":"REFUSED_STREAM","span":{"filename":"src/frame/reason.rs","begin":[44,4],"end":[44,49]},"visibility":"public","docs":"The endpoint refused the stream prior to performing any application\nprocessing.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(7)"}},"0:3119":{"id":"0:3119","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[1332,0],"end":[1341,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3120","0:3121"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3071-0:8678":{"id":"b:2:3071-0:8678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8870-0:8699":{"id":"a:2:8870-0:8699","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:13281-0:3052":{"id":"b:2:13281-0:3052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13277","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:13283","2:13284","2:13285"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"2:3222":{"id":"2:3222","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3223","2:3224"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3110":{"id":"0:3110","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[1306,0],"end":[1317,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"22:303","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3113","0:3114"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3850-0:8609":{"id":"b:2:3850-0:8609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3071-0:3048":{"id":"b:2:3071-0:3048","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8617":{"id":"0:8617","crate_id":0,"name":"fmt","span":{"filename":"src/client.rs","begin":[257,9],"end":[257,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3056-0:3285":{"id":"b:2:3056-0:3285","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3413":{"id":"2:3413","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3415","2:3416","2:3417"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"39:38":{"id":"39:38","crate_id":39,"name":"Integer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"39:37","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3056-0:8678":{"id":"b:2:3056-0:8678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3852":{"id":"2:3852","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45430","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12940":{"id":"2:12940","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15704"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49079","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3195":{"id":"2:3195","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3197","2:3198"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:44:25-0:9059":{"id":"b:44:25-0:9059","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","begin":[18,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Equivalent","id":"44:22","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["44:28"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"b:2:3071-0:8689":{"id":"b:2:3071-0:8689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3066":{"id":"0:3066","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[548,0],"end":[558,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3068"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3056-0:8689":{"id":"b:2:3056-0:8689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"20:110":{"id":"20:110","crate_id":20,"name":"FusedStream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:111"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"20:96","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:12944":{"id":"2:12944","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49097","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3060-0:3480":{"id":"b:2:3060-0:3480","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:33:159-0:9053":{"id":"b:33:159-0:9053","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3533":{"id":"0:3533","crate_id":0,"name":"fmt","span":{"filename":"src/share.rs","begin":[559,4],"end":[561,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"22:437":{"id":"22:437","crate_id":22,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToSocketAddrsPriv","id":"22:492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3139-0:8613":{"id":"a:2:3139-0:8613","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3161":{"id":"0:3161","crate_id":0,"name":null,"span":{"filename":"src/ext.rs","begin":[17,0],"end":[35,1]},"visibility":{"restricted":{"parent":"0:3151","path":"::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3162","0:3163"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2730-0:8314":{"id":"b:2:2730-0:8314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5591":{"id":"1:5591","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5592","1:5593"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10414","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3056-0:8604":{"id":"b:2:3056-0:8604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3062":{"id":"2:3062","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2730-0:8689":{"id":"b:2:2730-0:8689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3139-0:3048":{"id":"a:2:3139-0:3048","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3850-0:9053":{"id":"b:2:3850-0:9053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2733-0:8689":{"id":"b:2:2733-0:8689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3850-0:3285":{"id":"b:2:3850-0:3285","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3127-0:8598":{"id":"a:2:3127-0:8598","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:33:159-0:4364":{"id":"b:33:159-0:4364","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3850-0:3480":{"id":"b:2:3850-0:3480","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3168-0:8622":{"id":"a:2:3168-0:8622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6027":{"id":"5:6027","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6028"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9861":{"id":"2:9861","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9862"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13030":{"id":"2:13030","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12488","FromStr::Err":"2:12489"},"attrs":["#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12488","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3114":{"id":"0:3114","crate_id":0,"name":"poll","span":{"filename":"src/client.rs","begin":[1313,4],"end":[1316,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:46975","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:13262","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3060-0:3295":{"id":"b:2:3060-0:3295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3525":{"id":"0:3525","crate_id":0,"name":"ping","span":{"filename":"src/share.rs","begin":[533,4],"end":[536,5]},"visibility":"public","docs":"Send a PING frame and wait for the peer to send the pong.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["ping",{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"},"has_body":true}},"b:2:3056-0:8699":{"id":"b:2:3056-0:8699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3139-0:4364":{"id":"a:2:3139-0:4364","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2730-0:8604":{"id":"b:2:2730-0:8604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3139-0:3476":{"id":"a:2:3139-0:3476","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:8324":{"id":"0:8324","crate_id":0,"name":null,"span":{"filename":"src/frame/reason.rs","begin":[18,24],"end":[18,29]},"visibility":{"restricted":{"parent":"0:2615","path":"::frame::reason"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8325"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3127-0:3480":{"id":"a:2:3127-0:3480","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8870-0:3285":{"id":"a:2:8870-0:3285","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Bytes","id":"21:513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3293":{"id":"2:3293","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3295"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3060-0:3052":{"id":"b:2:3060-0:3052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3404":{"id":"0:3404","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[1328,0],"end":[1336,1]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"22:303","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3407"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8870-0:9053":{"id":"a:2:8870-0:9053","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3378":{"id":"0:3378","crate_id":0,"name":"stream_id","span":{"filename":"src/server.rs","begin":[1181,4],"end":[1183,5]},"visibility":"public","docs":"Returns the stream ID of the response stream.\n\n# Panics\n\nIf the lock on the stream store has been poisoned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"crate::StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3066-0:8618":{"id":"b:2:3066-0:8618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:9067":{"id":"0:9067","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[112,23],"end":[112,25]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12943":{"id":"2:12943","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.4.0\", reason = \"use lines() instead now\")]","#[inline]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49069","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:13281-0:8604":{"id":"b:2:13281-0:8604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13277","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:13283","2:13284","2:13285"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"0:3052":{"id":"0:3052","crate_id":0,"name":"Connection","span":{"filename":"src/client.rs","begin":[232,0],"end":[234,1]},"visibility":"public","docs":"Manages all state associated with an HTTP/2 client connection.\n\nA `Connection` is backed by an I/O resource (usually a TCP socket) and\nimplements the HTTP/2 client logic for that connection. It is responsible\nfor driving the internal state forward, performing the work requested of the\nassociated handles ([`SendRequest`], [`ResponseFuture`], [`SendStream`],\n[`RecvStream`]).\n\n`Connection` values are created by calling [`handshake`]. Once a\n`Connection` value is obtained, the caller must repeatedly call [`poll`]\nuntil `Ready` is returned. The easiest way to do this is to submit the\n`Connection` instance to an [executor].\n\n[module]: index.html\n[`handshake`]: fn.handshake.html\n[`SendRequest`]: struct.SendRequest.html\n[`ResponseFuture`]: struct.ResponseFuture.html\n[`SendStream`]: ../struct.SendStream.html\n[`RecvStream`]: ../struct.RecvStream.html\n[`poll`]: #method.poll\n[executor]: https://docs.rs/futures/0.1/futures/future/trait.Executor.html\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client;\n# use h2::client::*;\n#\n# async fn doc<T>(my_io: T) -> Result<(), h2::Error>\n# where T: AsyncRead + AsyncWrite + Send + Unpin + 'static,\n# {\n    let (send_request, connection) = client::handshake(my_io).await?;\n    // Submit the connection handle to an executor.\n    tokio::spawn(async { connection.await.expect(\"connection failed\"); });\n\n    // Now, use `send_request` to initialize HTTP/2 streams.\n    // ...\n# Ok(())\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":["#[must_use = \"futures do nothing unless polled\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":{"kind":"resolved_path","inner":{"name":"Bytes","id":"21:513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3099","a:2:8871-0:3052","a:2:3127-0:3052","a:2:3139-0:3052","a:2:3168-0:3052","a:2:8870-0:3052","b:2:3850-0:3052","b:2:13281-0:3052","b:2:2733-0:3052","b:2:3066-0:3052","b:2:3071-0:3052","b:2:3060-0:3052","b:2:3056-0:3052","b:2:2730-0:3052","b:20:48-0:3052","b:33:159-0:3052","b:40:219-0:3052","b:40:482-0:3052","0:3110","0:3115"]}},"a:2:3168-0:8689":{"id":"a:2:3168-0:8689","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3168-0:9059":{"id":"a:2:3168-0:9059","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"40:2685":{"id":"40:2685","crate_id":40,"name":"StreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["40:2686","40:2687","40:2688","40:2691","40:2692","40:2695","40:2699","40:2702","40:2704","40:2709","40:2710","40:2711","40:2715","40:2718","40:2721","40:2722","40:2725","40:2730","40:2733","40:2736","40:2738","40:2741","40:2742","40:2743","40:2744","40:2745","40:2747","40:2749","40:2750","40:2752","40:2754","40:2756","40:2757"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"20:96","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:9071":{"id":"0:9071","crate_id":0,"name":"eq","span":{"filename":"src/share.rs","begin":[112,27],"end":[112,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3071-0:9059":{"id":"b:2:3071-0:9059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4366":{"id":"0:4366","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[20,9],"end":[20,14]},"visibility":{"restricted":{"parent":"0:322","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:4367"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2730-0:9053":{"id":"b:2:2730-0:9053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8871-0:8604":{"id":"a:2:8871-0:8604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3168-0:3480":{"id":"a:2:3168-0:3480","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13015":{"id":"2:13015","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15699","self::pattern":"2:12549"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"40:4333":{"id":"40:4333","crate_id":40,"name":"LocalSpawnExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"LocalSpawn","id":"42:18","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"44:45":{"id":"44:45","crate_id":44,"name":"MutableKeys","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:46","44:47","44:48","44:50","44:52"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3247":{"id":"2:3247","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248","2:3249"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"22:3853":{"id":"22:3853","crate_id":22,"name":"AsyncWriteExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:3854","22:3856","22:3859","22:3862","22:3865","22:3869","22:3871","22:3873","22:3875","22:3877","22:3879","22:3881","22:3883","22:3885","22:3887","22:3889","22:3891","22:3893","22:3895","22:3897","22:3899","22:3901","22:3903","22:3905","22:3907","22:3909","22:3911","22:3867","22:3868"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"22:303","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3139-0:8604":{"id":"a:2:3139-0:8604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3060-0:3476":{"id":"b:2:3060-0:3476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3066-0:4364":{"id":"b:2:3066-0:4364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:33:159-0:3048":{"id":"b:33:159-0:3048","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12937":{"id":"2:12937","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15699"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:48775","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2622":{"id":"0:2622","crate_id":0,"name":"INTERNAL_ERROR","span":{"filename":"src/frame/reason.rs","begin":[32,4],"end":[32,49]},"visibility":"public","docs":"The endpoint encountered an unexpected internal error.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(2)"}},"0:3113":{"id":"0:3113","crate_id":0,"name":"Output","span":{"filename":"src/client.rs","begin":[1311,4],"end":[1311,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"b:2:3071-0:8699":{"id":"b:2:3071-0:8699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8870-0:8678":{"id":"a:2:8870-0:8678","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3066-0:8604":{"id":"b:2:3066-0:8604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:9059":{"id":"0:9059","crate_id":0,"name":"StreamId","span":{"filename":"src/share.rs","begin":[113,0],"end":[113,25]},"visibility":"public","docs":"A stream identifier, as described in [Section 5.1.1] of RFC 7540.\n\nStreams are identified with an unsigned 31-bit integer. Streams\ninitiated by a client MUST use odd-numbered stream identifiers; those\ninitiated by the server MUST use even-numbered stream identifiers.  A\nstream identifier of zero (0x0) is used for connection control\nmessages; the stream identifier of zero cannot be used to establish a\nnew stream.\n\n[Section 5.1.1]: https://tools.ietf.org/html/rfc7540#section-5.1.1","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:8871-0:9059","a:2:3127-0:9059","a:2:3139-0:9059","a:2:3168-0:9059","a:2:8870-0:9059","b:2:3850-0:9059","b:2:2733-0:9059","b:2:3066-0:9059","b:2:3071-0:9059","b:2:3060-0:9059","b:2:3056-0:9059","b:2:2730-0:9059","b:5:774-0:9059","b:33:159-0:9059","b:44:25-0:9059","0:9062","0:9064","0:9066","0:9067","0:9069","0:9070","0:9073"]}},"a:2:3168-0:3052":{"id":"a:2:3168-0:3052","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3060-0:8314":{"id":"b:2:3060-0:8314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3024":{"id":"2:3024","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3026"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementations":[]}},"0:2937":{"id":"0:2937","crate_id":0,"name":"client","span":{"filename":"src/client.rs","begin":[1,0],"end":[1555,1]},"visibility":"public","docs":"Client implementation of the HTTP/2 protocol.\n\n# Getting started\n\nRunning an HTTP/2 client requires the caller to establish the underlying\nconnection as well as get the connection to a state that is ready to begin\nthe HTTP/2 handshake. See [here](../index.html#handshake) for more\ndetails.\n\nThis could be as basic as using Tokio's [`TcpStream`] to connect to a remote\nhost, but usually it means using either ALPN or HTTP/1.1 protocol upgrades.\n\nOnce a connection is obtained, it is passed to [`handshake`], which will\nbegin the [HTTP/2 handshake]. This returns a future that completes once\nthe handshake process is performed and HTTP/2 streams may be initialized.\n\n[`handshake`] uses default configuration values. There are a number of\nsettings that can be changed by using [`Builder`] instead.\n\nOnce the handshake future completes, the caller is provided with a\n[`Connection`] instance and a [`SendRequest`] instance. The [`Connection`]\ninstance is used to drive the connection (see [Managing the connection]).\nThe [`SendRequest`] instance is used to initialize new streams (see [Making\nrequests]).\n\n# Making requests\n\nRequests are made using the [`SendRequest`] handle provided by the handshake\nfuture. Once a request is submitted, an HTTP/2 stream is initialized and\nthe request is sent to the server.\n\nA request body and request trailers are sent using [`SendRequest`] and the\nserver's response is returned once the [`ResponseFuture`] future completes.\nBoth the [`SendStream`] and [`ResponseFuture`] instances are returned by\n[`SendRequest::send_request`] and are tied to the HTTP/2 stream\ninitialized by the sent request.\n\nThe [`SendRequest::poll_ready`] function returns `Ready` when a new HTTP/2\nstream can be created, i.e. as long as the current number of active streams\nis below [`MAX_CONCURRENT_STREAMS`]. If a new stream cannot be created, the\ncaller will be notified once an existing stream closes, freeing capacity for\nthe caller.  The caller should use [`SendRequest::poll_ready`] to check for\ncapacity before sending a request to the server.\n\n[`SendRequest`] enforces the [`MAX_CONCURRENT_STREAMS`] setting. The user\nmust not send a request if `poll_ready` does not return `Ready`. Attempting\nto do so will result in an [`Error`] being returned.\n\n# Managing the connection\n\nThe [`Connection`] instance is used to manage connection state. The caller\nis required to call [`Connection::poll`] in order to advance state.\n[`SendRequest::send_request`] and other functions have no effect unless\n[`Connection::poll`] is called.\n\nThe [`Connection`] instance should only be dropped once [`Connection::poll`]\nreturns `Ready`. At this point, the underlying socket has been closed and no\nfurther work needs to be done.\n\nThe easiest way to ensure that the [`Connection`] instance gets polled is to\nsubmit the [`Connection`] instance to an [executor]. The executor will then\nmanage polling the connection until the connection is complete.\nAlternatively, the caller can call `poll` manually.\n\n# Example\n\n```rust, no_run\n\nuse h2::client;\n\nuse http::{Request, Method};\nuse std::error::Error;\nuse tokio::net::TcpStream;\n\n#[tokio::main]\npub async fn main() -> Result<(), Box<dyn Error>> {\n    // Establish TCP connection to the server.\n    let tcp = TcpStream::connect(\"127.0.0.1:5928\").await?;\n    let (h2, connection) = client::handshake(tcp).await?;\n    tokio::spawn(async move {\n        connection.await.unwrap();\n    });\n\n    let mut h2 = h2.ready().await?;\n    // Prepare the HTTP request to send to the server.\n    let request = Request::builder()\n                    .method(Method::GET)\n                    .uri(\"https://www.example.com/\")\n                    .body(())\n                    .unwrap();\n\n    // Send the request. The second tuple item allows the caller\n    // to stream a request body.\n    let (response, _) = h2.send_request(request, true).unwrap();\n\n    let (head, mut body) = response.await?.into_parts();\n\n    println!(\"Received response: {:?}\", head);\n\n    // The `flow_control` handle allows the caller to manage\n    // flow control.\n    //\n    // Whenever data is received, the caller is responsible for\n    // releasing capacity back to the server once it has freed\n    // the data from memory.\n    let mut flow_control = body.flow_control().clone();\n\n    while let Some(chunk) = body.data().await {\n        let chunk = chunk?;\n        println!(\"RX: {:?}\", chunk);\n\n        // Let the server send more data.\n        let _ = flow_control.release_capacity(chunk.len());\n    }\n\n    Ok(())\n}\n```\n\n[`TcpStream`]: https://docs.rs/tokio-core/0.1/tokio_core/net/struct.TcpStream.html\n[`handshake`]: fn.handshake.html\n[executor]: https://docs.rs/futures/0.1/futures/future/trait.Executor.html\n[`SendRequest`]: struct.SendRequest.html\n[`SendStream`]: ../struct.SendStream.html\n[Making requests]: #making-requests\n[Managing the connection]: #managing-the-connection\n[`Connection`]: struct.Connection.html\n[`Connection::poll`]: struct.Connection.html#method.poll\n[`SendRequest::send_request`]: struct.SendRequest.html#method.send_request\n[`MAX_CONCURRENT_STREAMS`]: http://httpwg.org/specs/rfc7540.html#SettingValues\n[`SendRequest`]: struct.SendRequest.html\n[`ResponseFuture`]: struct.ResponseFuture.html\n[`SendRequest::poll_ready`]: struct.SendRequest.html#method.poll_ready\n[HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader\n[`Builder`]: struct.Builder.html\n[`Error`]: ../struct.Error.html","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3048","0:8598","0:3052","0:8604","0:8609","0:8613","0:8618","0:8622","0:3091"]}},"a:2:8871-0:8613":{"id":"a:2:8871-0:8613","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:8622":{"id":"0:8622","crate_id":0,"name":"Builder","span":{"filename":"src/client.rs","begin":[310,0],"end":[335,1]},"visibility":"public","docs":"Builds client connections with custom configuration values.\n\nMethods can be chained in order to set the configuration values.\n\nThe client is constructed by calling [`handshake`] and passing the I/O\nhandle that will back the HTTP/2 server.\n\nNew instances of `Builder` are obtained via [`Builder::new`].\n\nSee function level documentation for details on the various client\nconfiguration settings.\n\n[`Builder::new`]: struct.Builder.html#method.new\n[`handshake`]: struct.Builder.html#method.handshake\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n    -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .initial_window_size(1_000_000)\n    .max_concurrent_streams(1000)\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3073","a:2:8871-0:8622","a:2:3127-0:8622","a:2:3139-0:8622","a:2:3168-0:8622","a:2:8870-0:8622","b:2:3850-0:8622","b:2:2733-0:8622","b:2:3066-0:8622","b:2:3071-0:8622","b:2:3060-0:8622","b:2:3056-0:8622","b:2:2730-0:8622","b:5:774-0:8622","b:33:159-0:8622","0:8630","0:8632","0:3089"]}},"2:8417":{"id":"2:8417","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10062":{"id":"2:10062","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10063","2:10064","2:10065","2:10066","2:10067","2:10068","2:10069","2:10070","2:10071","2:10072","2:10073","2:10074","2:10075","2:10076"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5457":{"id":"5:5457","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5459","5:5460"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementations":[]}},"b:5:774-0:8314":{"id":"b:5:774-0:8314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:770","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:776","5:777","5:778"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3168-0:3048":{"id":"a:2:3168-0:3048","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13021":{"id":"2:13021","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:12549","prim@char":"1:15699"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5726":{"id":"5:5726","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:421","`String`":"5:8013"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[rustc_allow_incoherent_impl]","#[must_use = \"`self` will be dropped if the result is not used\"]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:421","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:7718","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8013","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3066-0:8699":{"id":"b:2:3066-0:8699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:22555":{"id":"2:22555","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23204","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22546","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3139-0:3295":{"id":"a:2:3139-0:3295","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[124,0],"end":[130,1]},"visibility":{"restricted":{"parent":"0:322","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:370"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3532":{"id":"0:3532","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[558,0],"end":[562,1]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3533"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2620":{"id":"0:2620","crate_id":0,"name":"NO_ERROR","span":{"filename":"src/frame/reason.rs","begin":[26,4],"end":[26,43]},"visibility":"public","docs":"The associated condition is not a result of an error.\n\nFor example, a GOAWAY might include this code to indicate graceful\nshutdown of a connection.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(0)"}},"0:3171":{"id":"0:3171","crate_id":0,"name":"fmt","span":{"filename":"src/ext.rs","begin":[52,4],"end":[54,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:363":{"id":"0:363","crate_id":0,"name":"is_remote","span":{"filename":"src/error.rs","begin":[98,4],"end":[103,5]},"visibility":"public","docs":"Returns true if the error was received in a frame from the remote.\n\nSuch as from a received `RST_STREAM` or `GOAWAY` frame.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3056-0:8618":{"id":"b:2:3056-0:8618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3168-0:3295":{"id":"a:2:3168-0:3295","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:8318":{"id":"0:8318","crate_id":0,"name":null,"span":{"filename":"src/frame/reason.rs","begin":[18,9],"end":[18,18]},"visibility":{"restricted":{"parent":"0:2615","path":"::frame::reason"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2779","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8319","0:8320"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3517":{"id":"0:3517","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[476,0],"end":[523,1]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3519","0:3520","0:3521","0:3522"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8870-0:8613":{"id":"a:2:8870-0:8613","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3482":{"id":"0:3482","crate_id":0,"name":"Pong","span":{"filename":"src/share.rs","begin":[211,0],"end":[213,1]},"visibility":"public","docs":"Received via [`PingPong`][] when a peer acknowledges a [`Ping`][].\n\n[`PingPong`]: struct.PingPong.html\n[`Ping`]: struct.Ping.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:8871-0:3482","a:2:3127-0:3482","a:2:3139-0:3482","a:2:3168-0:3482","a:2:8870-0:3482","b:2:3850-0:3482","b:2:2733-0:3482","b:2:3066-0:3482","b:2:3071-0:3482","b:2:3060-0:3482","b:2:3056-0:3482","b:2:2730-0:3482","b:33:159-0:3482","0:3538"]}},"b:33:159-0:3476":{"id":"b:33:159-0:3476","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6808":{"id":"1:6808","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6809"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2640":{"id":"0:2640","crate_id":0,"name":"fmt","span":{"filename":"src/frame/reason.rs","begin":[100,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:778":{"id":"5:778","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3351":{"id":"0:3351","crate_id":0,"name":"initial_connection_window_size","span":{"filename":"src/server.rs","begin":[707,4],"end":[710,5]},"visibility":"public","docs":"Indicates the initial window size (in octets) for connection-level flow control\nfor received data.\n\nThe initial window of a connection is used as part of flow control. For more details,\nsee [`FlowControl`].\n\nThe default value is 65,535.\n\n[`FlowControl`]: ../struct.FlowControl.html\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server::*;\n#\n# fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Handshake<T>\n# {\n// `server_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet server_fut = Builder::new()\n    .initial_connection_window_size(1_000_000)\n    .handshake(my_io);\n# server_fut\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["size",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2825":{"id":"2:2825","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2827","2:2828","2:2829","2:2830","2:2831"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2779","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3139-0:8699":{"id":"a:2:3139-0:8699","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3168-0:8598":{"id":"a:2:3168-0:8598","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12958":{"id":"2:12958","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the rightmost match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:15699","`None`":"2:46856","self::pattern":"2:12549"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12931":{"id":"2:12931","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10451","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10451","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:5:774-0:8689":{"id":"b:5:774-0:8689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:770","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:776","5:777","5:778"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8871-0:8618":{"id":"a:2:8871-0:8618","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2749":{"id":"2:2749","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2750","2:2751"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:8870-0:4364":{"id":"a:2:8870-0:4364","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3348":{"id":"0:3348","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[608,0],"end":[1014,1]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3349","0:3350","0:3351","0:3352","0:3353","0:3354","0:3355","0:3356","0:3357","0:3358","0:3359"],"negative":false,"synthetic":false,"blanket_impl":null}},"20:52":{"id":"20:52","crate_id":20,"name":"Ok","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","begin":[77,4],"end":[77,16]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"T"},"generics":{"params":[],"where_predicates":[]}}},"b:5:774-0:8622":{"id":"b:5:774-0:8622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:770","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:776","5:777","5:778"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3066-0:3482":{"id":"b:2:3066-0:3482","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3242":{"id":"2:3242","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3244"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3372":{"id":"0:3372","crate_id":0,"name":"stream_id","span":{"filename":"src/server.rs","begin":[1109,4],"end":[1111,5]},"visibility":"public","docs":"Returns the stream ID of the response stream.\n\n# Panics\n\nIf the lock on the stream store has been poisoned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"crate::StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3056-0:3291":{"id":"b:2:3056-0:3291","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12965":{"id":"2:12965","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:12549","prim@char":"1:15699"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3056-0:3480":{"id":"b:2:3056-0:3480","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12927":{"id":"2:12927","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:46856"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10451","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10451","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8871-0:3478":{"id":"a:2:8871-0:3478","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"1:2552":{"id":"1:2552","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2553","1:2555","1:2556","1:2557"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:9849","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3139-0:8314":{"id":"a:2:3139-0:8314","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:9076":{"id":"0:9076","crate_id":0,"name":"FlowControl","span":{"filename":"src/share.rs","begin":[190,0],"end":[192,1]},"visibility":"public","docs":"A handle to release window capacity to a remote stream.\n\nThis type allows the caller to manage inbound data [flow control]. The\ncaller is expected to call [`release_capacity`] after dropping data frames.\n\n# Overview\n\nEach stream has a window size. This window size is the maximum amount of\ninbound data that can be in-flight. In-flight data is defined as data that\nhas been received, but not yet released.\n\nWhen a stream is created, the window size is set to the connection's initial\nwindow size value. When a data frame is received, the window size is then\ndecremented by size of the data frame before the data is provided to the\ncaller. As the caller finishes using the data, [`release_capacity`] must be\ncalled. This will then increment the window size again, allowing the peer to\nsend more data.\n\nThere is also a connection level window as well as the stream level window.\nReceived data counts against the connection level window as well and calls\nto [`release_capacity`] will also increment the connection level window.\n\n# Sending `WINDOW_UPDATE` frames\n\n`WINDOW_UPDATE` frames will not be sent out for **every** call to\n`release_capacity`, as this would end up slowing down the protocol. Instead,\n`h2` waits until the window size is increased to a certain threshold and\nthen sends out a single `WINDOW_UPDATE` frame representing all the calls to\n`release_capacity` since the last `WINDOW_UPDATE` frame.\n\nThis essentially batches window updating.\n\n# Scenarios\n\nFollowing is a basic scenario with an HTTP/2 connection containing a\nsingle active stream.\n\n* A new stream is activated. The receive window is initialized to 1024 (the\n  value of the initial window size for this connection).\n* A `DATA` frame is received containing a payload of 600 bytes.\n* The receive window size is reduced to 424 bytes.\n* [`release_capacity`] is called with 200.\n* The receive window size is now 624 bytes. The peer may send no more than\n  this.\n* A `DATA` frame is received with a payload of 624 bytes.\n* The window size is now 0 bytes. The peer may not send any more data.\n* [`release_capacity`] is called with 1024.\n* The receive window size is now 1024 bytes. The peer may now send more\ndata.\n\n[flow control]: ../index.html#flow-control\n[`release_capacity`]: struct.FlowControl.html#method.release_capacity","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3517","a:2:8871-0:9076","a:2:3127-0:9076","a:2:3139-0:9076","a:2:3168-0:9076","a:2:8870-0:9076","b:2:3850-0:9076","b:2:2733-0:9076","b:2:3066-0:9076","b:2:3071-0:9076","b:2:3060-0:9076","b:2:3056-0:9076","b:2:2730-0:9076","b:5:774-0:9076","b:33:159-0:9076","0:9078","0:9080"]}},"0:8321":{"id":"0:8321","crate_id":0,"name":null,"span":{"filename":"src/frame/reason.rs","begin":[18,20],"end":[18,22]},"visibility":{"restricted":{"parent":"0:2615","path":"::frame::reason"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3136","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3083":{"id":"0:3083","crate_id":0,"name":"max_send_buffer_size","span":{"filename":"src/client.rs","begin":[981,4],"end":[985,5]},"visibility":"public","docs":"Sets the maximum send buffer size per stream.\n\nOnce a stream has buffered up to (or over) the maximum, the stream's\nflow control will not \"poll\" additional capacity. Once bytes for the\nstream have been written to the connection, the send buffer capacity\nwill be freed up again.\n\nThe default is currently ~400MB, but may change.\n\n# Panics\n\nThis function panics if `max` is larger than `u32::MAX`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["max",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8631":{"id":"0:8631","crate_id":0,"name":"clone","span":{"filename":"src/client.rs","begin":[309,9],"end":[309,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[186,0],"end":[186,30]},"visibility":{"restricted":{"parent":"0:322","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","cause","backtrace","source","description"],"trait":{"kind":"resolved_path","inner":{"name":"Error","id":"1:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3071-0:8598":{"id":"b:2:3071-0:8598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8871-0:9076":{"id":"a:2:8871-0:9076","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"23:207":{"id":"23:207","crate_id":23,"name":"Source","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:208","23:209","23:210"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:8870-0:3480":{"id":"a:2:8870-0:3480","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3168":{"id":"2:3168","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3075":{"id":"0:3075","crate_id":0,"name":"initial_window_size","span":{"filename":"src/client.rs","begin":[674,4],"end":[677,5]},"visibility":"public","docs":"Indicates the initial window size (in octets) for stream-level\nflow control for received data.\n\nThe initial window of a stream is used as part of flow control. For more\ndetails, see [`FlowControl`].\n\nThe default value is 65,535.\n\n[`FlowControl`]: ../struct.FlowControl.html\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .initial_window_size(1_000_000)\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["size",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"34:288":{"id":"34:288","crate_id":34,"name":"Visit","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["34:289","34:290","34:291","34:292","34:293","34:294"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:7903":{"id":"2:7903","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7905"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3269":{"id":"2:3269","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3271","2:3272"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:8870-0:8622":{"id":"a:2:8870-0:8622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:9080":{"id":"0:9080","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[189,16],"end":[189,21]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:9081"],"negative":false,"synthetic":false,"blanket_impl":null}},"33:147":{"id":"33:147","crate_id":33,"name":"Instrument","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["33:148","33:149"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2730-0:9076":{"id":"b:2:2730-0:9076","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13284":{"id":"2:13284","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"F"},"generics":{"params":[],"where_predicates":[]}}},"a:2:3139-0:3291":{"id":"a:2:3139-0:3291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:8609":{"id":"0:8609","crate_id":0,"name":"PushedResponseFuture","span":{"filename":"src/client.rs","begin":[252,0],"end":[254,1]},"visibility":"public","docs":"A future of a pushed HTTP response.\n\nWe have to differentiate between pushed and non pushed because of the spec\n<https://httpwg.org/specs/rfc7540.html#PUSH_PROMISE>\n> PUSH_PROMISE frames MUST only be sent on a peer-initiated stream\n> that is in either the \"open\" or \"half-closed (remote)\" state.","links":{},"attrs":["#[must_use = \"futures do nothing unless polled\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3138","a:2:8871-0:8609","a:2:3127-0:8609","a:2:3139-0:8609","a:2:3168-0:8609","a:2:8870-0:8609","b:2:3850-0:8609","b:2:13281-0:8609","b:2:2733-0:8609","b:2:3066-0:8609","b:2:3071-0:8609","b:2:3060-0:8609","b:2:3056-0:8609","b:2:2730-0:8609","b:20:48-0:8609","b:33:159-0:8609","b:40:219-0:8609","b:40:482-0:8609","0:8611","0:3135"]}},"a:2:8870-0:9059":{"id":"a:2:8870-0:9059","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3298":{"id":"0:3298","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[292,0],"end":[296,1]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3300"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3168-0:8314":{"id":"a:2:3168-0:8314","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3127-0:9059":{"id":"a:2:3127-0:9059","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3537":{"id":"0:3537","crate_id":0,"name":"fmt","span":{"filename":"src/share.rs","begin":[578,4],"end":[580,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5725":{"id":"5:5725","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8013"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[rustc_allow_incoherent_impl]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8013","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2647":{"id":"0:2647","crate_id":0,"name":"fmt","span":{"filename":"src/frame/reason.rs","begin":[131,4],"end":[133,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6031":{"id":"5:6031","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8013","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:33:159-0:8314":{"id":"b:33:159-0:8314","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3342":{"id":"0:3342","crate_id":0,"name":"max_concurrent_send_streams","span":{"filename":"src/server.rs","begin":[561,4],"end":[563,5]},"visibility":"public","docs":"Returns the maximum number of concurrent streams that may be initiated\nby the server on this connection.\n\nThis limit is configured by the client peer by sending the\n[`SETTINGS_MAX_CONCURRENT_STREAMS` parameter][1] in a `SETTINGS` frame.\nThis method returns the currently acknowledged value recieved from the\nremote.\n\n[1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2621":{"id":"0:2621","crate_id":0,"name":"PROTOCOL_ERROR","span":{"filename":"src/frame/reason.rs","begin":[30,4],"end":[30,49]},"visibility":"public","docs":"The endpoint detected an unspecific protocol error.\n\nThis error is for use when a more specific error code is not available.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(1)"}},"0:8325":{"id":"0:8325","crate_id":0,"name":"clone","span":{"filename":"src/frame/reason.rs","begin":[18,24],"end":[18,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3063":{"id":"0:3063","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[539,0],"end":[546,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3065"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3264":{"id":"2:3264","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3266","2:3267"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3591":{"id":"2:3591","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3593"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2733-0:3048":{"id":"b:2:2733-0:3048","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3139-0:3482":{"id":"a:2:3139-0:3482","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2625":{"id":"0:2625","crate_id":0,"name":"STREAM_CLOSED","span":{"filename":"src/frame/reason.rs","begin":[39,4],"end":[39,48]},"visibility":"public","docs":"The endpoint received a frame after a stream was half-closed.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(5)"}},"2:3205":{"id":"2:3205","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3207","2:3208"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:8681":{"id":"0:8681","crate_id":0,"name":"clone","span":{"filename":"src/ext.rs","begin":[12,9],"end":[12,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6735":{"id":"1:6735","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6736"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10414","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10052":{"id":"2:10052","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10053","2:10055"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12968":{"id":"2:12968","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15699","`DoubleEndedIterator`":"2:7988","str::split":"1:15704","self::pattern":"2:12549"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:48823","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2730-0:8699":{"id":"b:2:2730-0:8699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3091":{"id":"0:3091","crate_id":0,"name":"handshake","span":{"filename":"src/client.rs","begin":[1150,0],"end":[1159,1]},"visibility":"public","docs":"Creates a new configured HTTP/2 client with default configuration\nvalues backed by `io`.\n\nIt is expected that `io` already be in an appropriate state to commence\nthe [HTTP/2 handshake]. See [Handshake] for more details.\n\nReturns a future which resolves to the [`Connection`] / [`SendRequest`]\ntuple once the HTTP/2 handshake has been completed. The returned\n[`Connection`] instance will be using default configuration values. Use\n[`Builder`] to customize the configuration values used by a [`Connection`]\ninstance.\n\n[HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader\n[Handshake]: ../index.html#handshake\n[`Connection`]: struct.Connection.html\n[`SendRequest`]: struct.SendRequest.html\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client;\n# use h2::client::*;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T) -> Result<(), h2::Error>\n# {\nlet (send_request, connection) = client::handshake(my_io).await?;\n// The HTTP/2 handshake has completed, now start polling\n// `connection` and use `send_request` to send requests to the\n// server.\n# Ok(())\n# }\n#\n# pub fn main() {}\n```","links":{"`Builder`":"0:8622"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["io",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"21:513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"21:513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"22:303","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"}}},"b:2:3850-0:9076":{"id":"b:2:3850-0:9076","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3170":{"id":"0:3170","crate_id":0,"name":null,"span":{"filename":"src/ext.rs","begin":[51,0],"end":[55,1]},"visibility":{"restricted":{"parent":"0:3151","path":"::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3171"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3539":{"id":"0:3539","crate_id":0,"name":"fmt","span":{"filename":"src/share.rs","begin":[586,4],"end":[588,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3056-0:8314":{"id":"b:2:3056-0:8314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8687":{"id":"0:8687","crate_id":0,"name":"eq","span":{"filename":"src/ext.rs","begin":[12,20],"end":[12,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:33:159-0:3291":{"id":"b:33:159-0:3291","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:33:159-0:9059":{"id":"b:33:159-0:9059","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2733-0:3295":{"id":"b:2:2733-0:3295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5710":{"id":"5:5710","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8013"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[rustc_allow_incoherent_impl]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8013","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:362":{"id":"0:362","crate_id":0,"name":"is_go_away","span":{"filename":"src/error.rs","begin":[91,4],"end":[93,5]},"visibility":"public","docs":"Returns true if the error is from a `GOAWAY`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2730-0:3052":{"id":"b:2:2730-0:3052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2635":{"id":"0:2635","crate_id":0,"name":null,"span":{"filename":"src/frame/reason.rs","begin":[87,0],"end":[91,1]},"visibility":{"restricted":{"parent":"0:2615","path":"::frame::reason"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u32"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2636"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:8621":{"id":"0:8621","crate_id":0,"name":"fmt","span":{"filename":"src/client.rs","begin":[267,9],"end":[267,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3520":{"id":"0:3520","crate_id":0,"name":"available_capacity","span":{"filename":"src/share.rs","begin":[488,4],"end":[490,5]},"visibility":"public","docs":"Get the current available capacity of data this stream *could* receive.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"isize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12913":{"id":"2:12913","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15699"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13733":{"id":"2:13733","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13734","2:13735","2:13736","2:13737","2:13738","2:13739","2:13740"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3139-0:9059":{"id":"a:2:3139-0:9059","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:777":{"id":"5:777","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3359":{"id":"2:3359","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3360"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3346","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"22:3790":{"id":"22:3790","crate_id":22,"name":"AsyncReadExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:3791","22:3793","22:3795","22:3798","22:3805","22:3807","22:3809","22:3811","22:3813","22:3815","22:3817","22:3819","22:3821","22:3823","22:3825","22:3827","22:3829","22:3831","22:3833","22:3835","22:3837","22:3839","22:3841","22:3843","22:3845","22:3847","22:3800","22:3802","22:3804"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3056-0:3478":{"id":"b:2:3056-0:3478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3056-0:3052":{"id":"b:2:3056-0:3052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8699":{"id":"0:8699","crate_id":0,"name":"SendResponse","span":{"filename":"src/server.rs","begin":[269,0],"end":[271,1]},"visibility":"public","docs":"Send a response back to the client\n\nA `SendResponse` instance is provided when receiving a request and is used\nto send the associated response back to the client. It is also used to\nexplicitly reset the stream with a custom reason.\n\nIt will also be used to initiate push promises linked with the associated\nstream.\n\nIf the `SendResponse` instance is dropped without sending a response, then\nthe HTTP/2 stream will be reset.\n\nSee [module] level docs for more details.\n\n[module]: index.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3364","a:2:8871-0:8699","a:2:3127-0:8699","a:2:3139-0:8699","a:2:3168-0:8699","a:2:8870-0:8699","b:2:3850-0:8699","b:2:2733-0:8699","b:2:3066-0:8699","b:2:3071-0:8699","b:2:3060-0:8699","b:2:3056-0:8699","b:2:2730-0:8699","b:33:159-0:8699","0:8702"]}},"1:5597":{"id":"1:5597","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5598","1:5599"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10414","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3508":{"id":"0:3508","crate_id":0,"name":"poll_data","span":{"filename":"src/share.rs","begin":[405,4],"end":[407,5]},"visibility":"public","docs":"Poll for the next data frame.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"21:513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2733-0:3291":{"id":"b:2:2733-0:3291","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2732":{"id":"2:2732","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3060-0:9053":{"id":"b:2:3060-0:9053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3060-0:8618":{"id":"b:2:3060-0:8618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"37:489":{"id":"37:489","crate_id":37,"name":"IntoHeaderName","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"37:490","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:12918":{"id":"2:12918","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15704"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8685":{"id":"0:8685","crate_id":0,"name":null,"span":{"filename":"src/ext.rs","begin":[12,20],"end":[12,29]},"visibility":{"restricted":{"parent":"0:3151","path":"::ext"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3135","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:8320":{"id":"0:8320","crate_id":0,"name":"ne","span":{"filename":"src/frame/reason.rs","begin":[18,9],"end":[18,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3354":{"id":"0:3354","crate_id":0,"name":"max_concurrent_streams","span":{"filename":"src/server.rs","begin":[827,4],"end":[830,5]},"visibility":"public","docs":"Sets the maximum number of concurrent streams.\n\nThe maximum concurrent streams setting only controls the maximum number\nof streams that can be initiated by the remote peer. In other words,\nwhen this setting is set to 100, this does not limit the number of\nconcurrent streams that can be created by the caller.\n\nIt is recommended that this value be no smaller than 100, so as to not\nunnecessarily limit parallelism. However, any value is legal, including\n0. If `max` is set to 0, then the remote will not be permitted to\ninitiate streams.\n\nNote that streams in the reserved state, i.e., push promises that have\nbeen reserved but the stream has not started, do not count against this\nsetting.\n\nAlso note that if the remote *does* exceed the value set here, it is not\na protocol level error. Instead, the `h2` library will immediately reset\nthe stream.\n\nSee [Section 5.1.2] in the HTTP/2 spec for more details.\n\n[Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server::*;\n#\n# fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Handshake<T>\n# {\n// `server_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet server_fut = Builder::new()\n    .max_concurrent_streams(1000)\n    .handshake(my_io);\n# server_fut\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["max",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"42:18":{"id":"42:18","crate_id":42,"name":"LocalSpawn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["42:19","42:20"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"34:295":{"id":"34:295","crate_id":34,"name":"Value","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["34:296"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"34:776","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3538":{"id":"0:3538","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[585,0],"end":[589,1]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3539"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:9070":{"id":"0:9070","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[112,27],"end":[112,36]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2779","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:9071","0:9072"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5728":{"id":"5:5728","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15704"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[rustc_allow_incoherent_impl]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8013","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:356":{"id":"0:356","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[46,0],"end":[104,1]},"visibility":{"restricted":{"parent":"0:322","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:357","0:358","0:359","0:360","0:362","0:363"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2730-0:4364":{"id":"b:2:2730-0:4364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3059":{"id":"2:3059","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3033"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3071-0:3476":{"id":"b:2:3071-0:3476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3571":{"id":"2:3571","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3502","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:6029-0:8314":{"id":"b:5:6029-0:8314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:9849","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6027","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6031"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2730-0:3291":{"id":"b:2:2730-0:3291","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8871-0:4364":{"id":"a:2:8871-0:4364","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:40:219-0:3052":{"id":"b:40:219-0:3052","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.16/src/future/future/mod.rs","begin":[119,0],"end":[119,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":["map","into_stream","flatten","left_future","unit_error","poll_unpin","now_or_never","fuse","right_future","never_error","inspect","flatten_stream","map_into","then"],"trait":{"kind":"resolved_path","inner":{"name":"FutureExt","id":"40:221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3514":{"id":"0:3514","crate_id":0,"name":"fmt","span":{"filename":"src/share.rs","begin":[456,4],"end":[460,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13007":{"id":"2:13007","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason = \"superseded by `trim_start`\",\nsuggestion = \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5679":{"id":"1:5679","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5680","1:5681"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5707":{"id":"5:5707","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8013"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[rustc_allow_incoherent_impl]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8013","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2639":{"id":"0:2639","crate_id":0,"name":null,"span":{"filename":"src/frame/reason.rs","begin":[99,0],"end":[120,1]},"visibility":{"restricted":{"parent":"0:2615","path":"::frame::reason"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2640"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13038":{"id":"2:13038","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15699"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3168-0:8678":{"id":"a:2:3168-0:8678","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3127-0:8678":{"id":"a:2:3127-0:8678","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13024":{"id":"2:13024","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:12549","prim@char":"1:15699"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason =\n\"superseded by `trim_start_matches`\", suggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:33:159-0:8613":{"id":"b:33:159-0:8613","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3069":{"id":"2:3069","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"1:4644":{"id":"1:4644","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4645","1:4646","1:4647","1:4648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3139-0:3480":{"id":"a:2:3139-0:3480","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"22:3780":{"id":"22:3780","crate_id":22,"name":"AsyncBufReadExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:3781","22:3783","22:3785","22:3786","22:3787","22:3788"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncBufRead","id":"22:182","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3066-0:8613":{"id":"b:2:3066-0:8613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3127-0:8609":{"id":"a:2:3127-0:8609","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3060-0:8598":{"id":"b:2:3060-0:8598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3492":{"id":"0:3492","crate_id":0,"name":"send_trailers","span":{"filename":"src/share.rs","begin":[339,4],"end":[341,5]},"visibility":"public","docs":"Sends trailers to the remote peer.\n\nSending trailers implicitly closes the send stream. Once the send stream\nis closed, no more data can be sent.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["trailers",{"kind":"resolved_path","inner":{"name":"HeaderMap","id":"37:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3368":{"id":"0:3368","crate_id":0,"name":"push_request","span":{"filename":"src/server.rs","begin":[1057,4],"end":[1067,5]},"visibility":"public","docs":"Push a request and response to the client\n\nOn success, a [`SendResponse`] instance is returned.\n\n[`SendResponse`]: #","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["request",{"kind":"resolved_path","inner":{"name":"Request","id":"37:1348","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3500":{"id":"0:3500","crate_id":0,"name":"data","span":{"filename":"src/share.rs","begin":[395,4],"end":[397,5]},"visibility":"public","docs":"Get the next data frame.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"21:513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"},"has_body":true}},"b:2:3066-0:3291":{"id":"b:2:3066-0:3291","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3337":{"id":"0:3337","crate_id":0,"name":"poll_closed","span":{"filename":"src/server.rs","begin":[503,4],"end":[505,5]},"visibility":"public","docs":"Returns `Ready` when the underlying connection has closed.\n\nIf any new inbound streams are received during a call to `poll_closed`,\nthey will be queued and returned on the next call to [`poll_accept`].\n\nThis function will advance the internal connection state, driving\nprogress on all the other handles (e.g. [`RecvStream`] and [`SendStream`]).\n\nSee [here](index.html#managing-the-connection) for more details.\n\n[`poll_accept`]: struct.Connection.html#method.poll_accept\n[`RecvStream`]: ../struct.RecvStream.html\n[`SendStream`]: ../struct.SendStream.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3349":{"id":"0:3349","crate_id":0,"name":"new","span":{"filename":"src/server.rs","begin":[634,4],"end":[642,5]},"visibility":"public","docs":"Returns a new server builder instance initialized with default\nconfiguration values.\n\nConfiguration methods can be chained on the return value.\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server::*;\n#\n# fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Handshake<T>\n# {\n// `server_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet server_fut = Builder::new()\n    .initial_window_size(1_000_000)\n    .max_concurrent_streams(1000)\n    .handshake(my_io);\n# server_fut\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3478":{"id":"0:3478","crate_id":0,"name":"PingPong","span":{"filename":"src/share.rs","begin":[196,0],"end":[198,1]},"visibility":"public","docs":"A handle to send and receive PING frames with the peer.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3523","a:2:8871-0:3478","a:2:3127-0:3478","a:2:3139-0:3478","a:2:3168-0:3478","a:2:8870-0:3478","b:2:3850-0:3478","b:2:2733-0:3478","b:2:3066-0:3478","b:2:3071-0:3478","b:2:3060-0:3478","b:2:3056-0:3478","b:2:2730-0:3478","b:33:159-0:3478","0:3532"]}},"b:5:774-0:9076":{"id":"b:5:774-0:9076","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:770","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:776","5:777","5:778"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5663":{"id":"1:5663","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5664","1:5665","1:5666","1:5667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3848":{"id":"2:3848","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3849"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"b:2:3060-0:3478":{"id":"b:2:3060-0:3478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4364":{"id":"0:4364","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Represents HTTP/2 operation errors.\n\n`Error` covers error cases raised by protocol errors caused by the\npeer, I/O (transport) errors, and errors caused by the user of the library.\n\nIf the error was caused by the remote peer, then it will contain a\n[`Reason`] which can be obtained with the [`reason`] function.\n\n[`Reason`]: struct.Reason.html\n[`reason`]: #method.reason","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:356","a:2:8871-0:4364","a:2:3127-0:4364","a:2:3139-0:4364","a:2:3168-0:4364","a:2:8870-0:4364","b:2:3850-0:4364","b:2:2733-0:4364","b:2:3066-0:4364","b:2:3071-0:4364","b:2:3060-0:4364","b:2:3056-0:4364","b:2:2730-0:4364","b:5:6029-0:4364","b:33:159-0:4364","0:4366","0:369","0:375","0:377"]}},"b:2:3850-0:8314":{"id":"b:2:3850-0:8314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"22:303":{"id":"22:303","crate_id":22,"name":"AsyncWrite","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:304","22:305","22:306","22:307","22:310"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:9063":{"id":"0:9063","crate_id":0,"name":"fmt","span":{"filename":"src/share.rs","begin":[112,9],"end":[112,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3371":{"id":"0:3371","crate_id":0,"name":"poll_reset","span":{"filename":"src/server.rs","begin":[1100,4],"end":[1102,5]},"visibility":"public","docs":"Polls to be notified when the client resets this stream.\n\nIf stream is still open, this returns `Poll::Pending`, and\nregisters the task to be notified if a `RST_STREAM` is received.\n\nIf a `RST_STREAM` frame is received for this stream, calling this\nmethod will yield the `Reason` for the reset.\n\n# Error\n\nCalling this method after having called `send_response` will return\na user error.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3060-0:9076":{"id":"b:2:3060-0:9076","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3489":{"id":"0:3489","crate_id":0,"name":"poll_capacity","span":{"filename":"src/share.rs","begin":[307,4],"end":[312,5]},"visibility":"public","docs":"Requests to be notified when the stream's capacity increases.\n\nBefore calling this, capacity should be requested with\n`reserve_capacity`. Once capacity is requested, the connection will\nassign capacity to the stream **as it becomes available**. There is no\nguarantee as to when and in what increments capacity gets assigned to\nthe stream.\n\nTo get notified when the available capacity increases, the caller calls\n`poll_capacity`, which returns `Ready(Some(n))` when `n` has been\nincreased by the connection. Note that `n` here represents the **total**\namount of assigned capacity at that point in time. It is also possible\nthat `n` is lower than the previous call if, since then, the caller has\nsent data.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:9069":{"id":"0:9069","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[112,27],"end":[112,36]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3135","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3168-0:3482":{"id":"a:2:3168-0:3482","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:44:25-0:8678":{"id":"b:44:25-0:8678","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","begin":[18,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Equivalent","id":"44:22","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["44:28"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"2:12989":{"id":"2:12989","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"2:7988","prim@char":"1:15699","str::matches":"1:15704","self::pattern":"2:12549"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49009","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3168-0:9053":{"id":"a:2:3168-0:9053","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3407":{"id":"0:3407","crate_id":0,"name":"fmt","span":{"filename":"src/server.rs","begin":[1333,4],"end":[1335,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3226":{"id":"2:3226","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3228"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13277":{"id":"2:13277","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13278","2:13279","2:13280"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2735":{"id":"2:2735","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"40:484":{"id":"40:484","crate_id":40,"name":"TryFutureExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["40:485","40:488","40:492","40:495","40:497","40:499","40:502","40:505","40:507","40:509","40:510","40:511","40:513","40:514"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"20:44","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3060-0:8689":{"id":"b:2:3060-0:8689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9863":{"id":"2:9863","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9864"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3238":{"id":"2:3238","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3240"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:375":{"id":"0:375","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[149,0],"end":[184,1]},"visibility":{"restricted":{"parent":"0:322","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:9849","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:376"],"negative":false,"synthetic":false,"blanket_impl":null}},"22:3849":{"id":"22:3849","crate_id":22,"name":"AsyncSeekExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:3850","22:3851"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncSeek","id":"22:263","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13034":{"id":"2:13034","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12983":{"id":"2:12983","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3084":{"id":"0:3084","crate_id":0,"name":"enable_push","span":{"filename":"src/client.rs","begin":[1020,4],"end":[1023,5]},"visibility":"public","docs":"Enables or disables server push promises.\n\nThis value is included in the initial SETTINGS handshake. When set, the\nserver MUST NOT send a push promise. Setting this value to value to\nfalse in the initial SETTINGS handshake guarantees that the remote server\nwill never send a push promise.\n\nThis setting can be changed during the life of a single HTTP/2\nconnection by sending another settings frame updating the value.\n\nDefault value: `true`.\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use std::time::Duration;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .enable_push(false)\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["enabled",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3139-0:9053":{"id":"a:2:3139-0:9053","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:8616":{"id":"0:8616","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[257,9],"end":[257,14]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:8604":{"id":"0:8604","crate_id":0,"name":"ResponseFuture","span":{"filename":"src/client.rs","begin":[239,0],"end":[242,1]},"visibility":"public","docs":"A future of an HTTP response.","links":{},"attrs":["#[must_use = \"futures do nothing unless polled\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3122","a:2:8871-0:8604","a:2:3127-0:8604","a:2:3139-0:8604","a:2:3168-0:8604","a:2:8870-0:8604","b:2:3850-0:8604","b:2:13281-0:8604","b:2:2733-0:8604","b:2:3066-0:8604","b:2:3071-0:8604","b:2:3060-0:8604","b:2:3056-0:8604","b:2:2730-0:8604","b:20:48-0:8604","b:33:159-0:8604","b:40:219-0:8604","b:40:482-0:8604","0:8607","0:3119"]}},"2:3030":{"id":"2:3030","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3032"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3850-0:4364":{"id":"b:2:3850-0:4364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:33:159-0:8604":{"id":"b:33:159-0:8604","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12951":{"id":"2:12951","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:12549","prim@char":"1:15699"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3060-0:3285":{"id":"b:2:3060-0:3285","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3071-0:3480":{"id":"b:2:3071-0:3480","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:40:482-0:8598":{"id":"b:40:482-0:8598","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.16/src/future/try_future/mod.rs","begin":[134,0],"end":[134,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fut"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"20:44","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":["err_into","unwrap_or_else","and_then","into_future","try_flatten","ok_into","map_ok","try_flatten_stream","try_poll_unpin","map_err","map_ok_or_else","or_else","inspect_ok","inspect_err"],"trait":{"kind":"resolved_path","inner":{"name":"TryFutureExt","id":"40:484","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Fut"}}},"b:2:3066-0:8622":{"id":"b:2:3066-0:8622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3127-0:9076":{"id":"a:2:3127-0:9076","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12488":{"id":"2:12488","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12489","2:12490"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3060":{"id":"0:3060","crate_id":0,"name":"send_request","span":{"filename":"src/client.rs","begin":[501,4],"end":[523,5]},"visibility":"public","docs":"Sends a HTTP/2 request to the server.\n\n`send_request` initializes a new HTTP/2 stream on the associated\nconnection, then sends the given request using this new stream. Only the\nrequest head is sent.\n\nOn success, a [`ResponseFuture`] instance and [`SendStream`] instance\nare returned. The [`ResponseFuture`] instance is used to get the\nserver's response and the [`SendStream`] instance is used to send a\nrequest body or trailers to the server over the same HTTP/2 stream.\n\nTo send a request body or trailers, set `end_of_stream` to `false`.\nThen, use the returned [`SendStream`] instance to stream request body\nchunks or send trailers. If `end_of_stream` is **not** set to `false`\nthen attempting to call [`SendStream::send_data`] or\n[`SendStream::send_trailers`] will result in an error.\n\nIf no request body or trailers are to be sent, set `end_of_stream` to\n`true` and drop the returned [`SendStream`] instance.\n\n# A note on HTTP versions\n\nThe provided `Request` will be encoded differently depending on the\nvalue of its version field. If the version is set to 2.0, then the\nrequest is encoded as per the specification recommends.\n\nIf the version is set to a lower value, then the request is encoded to\npreserve the characteristics of HTTP 1.1 and lower. Specifically, host\nheaders are permitted and the `:authority` pseudo header is not\nincluded.\n\nThe caller should always set the request's version field to 2.0 unless\nspecifically transmitting an HTTP 1.1 request over 2.0.\n\n# Examples\n\nSending a request with no body\n\n```rust\n# use h2::client::*;\n# use http::*;\n# async fn doc(send_request: SendRequest<&'static [u8]>)\n# {\n// First, wait until the `send_request` handle is ready to send a new\n// request\nlet mut send_request = send_request.ready().await.unwrap();\n// Prepare the HTTP request to send to the server.\nlet request = Request::get(\"https://www.example.com/\")\n    .body(())\n    .unwrap();\n\n// Send the request to the server. Since we are not sending a\n// body or trailers, we can drop the `SendStream` instance.\nlet (response, _) = send_request.send_request(request, true).unwrap();\nlet response = response.await.unwrap();\n// Process the response\n# }\n# pub fn main() {}\n```\n\nSending a request with a body and trailers\n\n```rust\n# use h2::client::*;\n# use http::*;\n# async fn doc(send_request: SendRequest<&'static [u8]>)\n# {\n// First, wait until the `send_request` handle is ready to send a new\n// request\nlet mut send_request = send_request.ready().await.unwrap();\n\n// Prepare the HTTP request to send to the server.\nlet request = Request::get(\"https://www.example.com/\")\n    .body(())\n    .unwrap();\n\n// Send the request to the server. If we are not sending a\n// body or trailers, we can drop the `SendStream` instance.\nlet (response, mut send_stream) = send_request\n    .send_request(request, false).unwrap();\n\n// At this point, one option would be to wait for send capacity.\n// Doing so would allow us to not hold data in memory that\n// cannot be sent. However, this is not a requirement, so this\n// example will skip that step. See `SendStream` documentation\n// for more details.\nsend_stream.send_data(b\"hello\", false).unwrap();\nsend_stream.send_data(b\"world\", false).unwrap();\n\n// Send the trailers.\nlet mut trailers = HeaderMap::new();\ntrailers.insert(\n    header::HeaderName::from_bytes(b\"my-trailer\").unwrap(),\n    header::HeaderValue::from_bytes(b\"hello\").unwrap());\n\nsend_stream.send_trailers(trailers).unwrap();\n\nlet response = response.await.unwrap();\n// Process the response\n# }\n# pub fn main() {}\n```\n\n[`ResponseFuture`]: struct.ResponseFuture.html\n[`SendStream`]: ../struct.SendStream.html\n[`SendStream::send_data`]: ../struct.SendStream.html#method.send_data\n[`SendStream::send_trailers`]: ../struct.SendStream.html#method.send_trailers","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["request",{"kind":"resolved_path","inner":{"name":"Request","id":"37:1348","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}],["end_of_stream",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}}]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8870-0:3295":{"id":"a:2:8870-0:3295","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:20:48-0:3052":{"id":"b:20:48-0:3052","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","begin":[73,0],"end":[84,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"20:44","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["20:52","20:53","20:54"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"b:40:219-0:8609":{"id":"b:40:219-0:8609","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.16/src/future/future/mod.rs","begin":[119,0],"end":[119,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":["map","into_stream","flatten","left_future","unit_error","poll_unpin","now_or_never","fuse","right_future","never_error","inspect","flatten_stream","map_into","then"],"trait":{"kind":"resolved_path","inner":{"name":"FutureExt","id":"40:221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3850-0:8598":{"id":"b:2:3850-0:8598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3066-0:3285":{"id":"b:2:3066-0:3285","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8686":{"id":"0:8686","crate_id":0,"name":null,"span":{"filename":"src/ext.rs","begin":[12,20],"end":[12,29]},"visibility":{"restricted":{"parent":"0:3151","path":"::ext"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2779","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8687","0:8688"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13032":{"id":"2:13032","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3210":{"id":"2:3210","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3212","2:3213"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3127-0:8622":{"id":"a:2:3127-0:8622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3352":{"id":"0:3352","crate_id":0,"name":"max_frame_size","span":{"filename":"src/server.rs","begin":[745,4],"end":[748,5]},"visibility":"public","docs":"Indicates the size (in octets) of the largest HTTP/2 frame payload that the\nconfigured server is able to accept.\n\nThe sender may send data frames that are **smaller** than this value,\nbut any data larger than `max` will be broken up into multiple `DATA`\nframes.\n\nThe value **must** be between 16,384 and 16,777,215. The default value is 16,384.\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server::*;\n#\n# fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Handshake<T>\n# {\n// `server_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet server_fut = Builder::new()\n    .max_frame_size(1_000_000)\n    .handshake(my_io);\n# server_fut\n# }\n#\n# pub fn main() {}\n```\n\n# Panics\n\nThis function panics if `max` is not within the legal range specified\nabove.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["max",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:33:159-0:3285":{"id":"b:33:159-0:3285","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2646":{"id":"0:2646","crate_id":0,"name":null,"span":{"filename":"src/frame/reason.rs","begin":[130,0],"end":[134,1]},"visibility":{"restricted":{"parent":"0:2615","path":"::frame::reason"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:9849","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2647"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3536":{"id":"0:3536","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[577,0],"end":[581,1]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3537"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12992":{"id":"2:12992","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:7988","self::pattern":"2:12549","prim@char":"1:15699","str::matches":"1:15704"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49027","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3127-0:4364":{"id":"a:2:3127-0:4364","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:1066":{"id":"1:1066","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1067","1:1068","1:1069","1:1070","1:1071","1:1072","1:1073"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2815":{"id":"2:2815","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2816","2:2817","2:2818","2:2819"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2825","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:54":{"id":"20:54","crate_id":20,"name":"try_poll","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","begin":[81,4],"end":[81,81]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:46975","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"F"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8598":{"id":"0:8598","crate_id":0,"name":"ReadySendRequest","span":{"filename":"src/client.rs","begin":[184,0],"end":[186,1]},"visibility":"public","docs":"Returns a `SendRequest` instance once it is ready to send at least one\nrequest.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:8871-0:8598","a:2:3127-0:8598","a:2:3139-0:8598","a:2:3168-0:8598","a:2:8870-0:8598","b:2:3850-0:8598","b:2:13281-0:8598","b:2:2733-0:8598","b:2:3066-0:8598","b:2:3071-0:8598","b:2:3060-0:8598","b:2:3056-0:8598","b:2:2730-0:8598","b:20:48-0:8598","b:33:159-0:8598","b:40:219-0:8598","b:40:482-0:8598","0:8601","0:3069"]}},"22:263":{"id":"22:263","crate_id":22,"name":"AsyncSeek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:264","22:265"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:8314":{"id":"0:8314","crate_id":0,"name":"Reason","span":{"filename":"src/frame/reason.rs","begin":[19,0],"end":[19,23]},"visibility":"public","docs":"HTTP/2 error codes.\n\nError codes are used in `RST_STREAM` and `GOAWAY` frames to convey the\nreasons for the stream or connection error. For example,\n[`SendStream::send_reset`] takes a `Reason` argument. Also, the `Error` type\nmay contain a `Reason`.\n\nError codes share a common code space. Some error codes apply only to\nstreams, others apply only to connections, and others may apply to either.\nSee [RFC 7540] for more information.\n\nSee [Error Codes in the spec][spec].\n\n[spec]: http://httpwg.org/specs/rfc7540.html#ErrorCodes\n[`SendStream::send_reset`]: struct.SendStream.html#method.send_reset","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2619","a:2:8871-0:8314","a:2:3127-0:8314","a:2:3139-0:8314","a:2:3168-0:8314","a:2:8870-0:8314","b:2:3850-0:8314","b:2:2733-0:8314","b:2:3066-0:8314","b:2:3071-0:8314","b:2:3060-0:8314","b:2:3056-0:8314","b:2:2730-0:8314","b:5:6029-0:8314","b:5:774-0:8314","b:33:159-0:8314","b:44:25-0:8314","0:369","0:8317","0:8318","0:8321","0:8322","0:8324","0:8326","0:2635","0:2637","0:2639","0:2646"]}},"0:3323":{"id":"0:3323","crate_id":0,"name":"handshake","span":{"filename":"src/server.rs","begin":[355,0],"end":[360,1]},"visibility":"public","docs":"Creates a new configured HTTP/2 server with default configuration\nvalues backed by `io`.\n\nIt is expected that `io` already be in an appropriate state to commence\nthe [HTTP/2 handshake]. See [Handshake] for more details.\n\nReturns a future which resolves to the [`Connection`] instance once the\nHTTP/2 handshake has been completed. The returned [`Connection`]\ninstance will be using default configuration values. Use [`Builder`] to\ncustomize the configuration values used by a [`Connection`] instance.\n\n[HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader\n[Handshake]: ../index.html#handshake\n[`Connection`]: struct.Connection.html\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server;\n# use h2::server::*;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# {\nlet connection = server::handshake(my_io).await.unwrap();\n// The HTTP/2 handshake has completed, now use `connection` to\n// accept inbound HTTP/2 streams.\n# }\n#\n# pub fn main() {}\n```","links":{"`Builder`":"0:8689"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["io",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"21:513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"22:303","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:8871-0:3291":{"id":"a:2:8871-0:3291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3850-0:8678":{"id":"b:2:3850-0:8678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2733-0:8678":{"id":"b:2:2733-0:8678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3502":{"id":"2:3502","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3504","2:3505","2:3506"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementations":[]}},"0:9078":{"id":"0:9078","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[189,9],"end":[189,14]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:9079"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3060-0:3482":{"id":"b:2:3060-0:3482","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2733-0:3482":{"id":"b:2:2733-0:3482","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8870-0:8618":{"id":"a:2:8870-0:8618","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3056-0:3295":{"id":"b:2:3056-0:3295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3172":{"id":"0:3172","crate_id":0,"name":"server","span":{"filename":"src/server.rs","begin":[1,0],"end":[1552,1]},"visibility":"public","docs":"Server implementation of the HTTP/2 protocol.\n\n# Getting started\n\nRunning an HTTP/2 server requires the caller to manage accepting the\nconnections as well as getting the connections to a state that is ready to\nbegin the HTTP/2 handshake. See [here](../index.html#handshake) for more\ndetails.\n\nThis could be as basic as using Tokio's [`TcpListener`] to accept\nconnections, but usually it means using either ALPN or HTTP/1.1 protocol\nupgrades.\n\nOnce a connection is obtained, it is passed to [`handshake`],\nwhich will begin the [HTTP/2 handshake]. This returns a future that\ncompletes once the handshake process is performed and HTTP/2 streams may\nbe received.\n\n[`handshake`] uses default configuration values. There are a number of\nsettings that can be changed by using [`Builder`] instead.\n\n# Inbound streams\n\nThe [`Connection`] instance is used to accept inbound HTTP/2 streams. It\ndoes this by implementing [`futures::Stream`]. When a new stream is\nreceived, a call to [`Connection::accept`] will return `(request, response)`.\nThe `request` handle (of type [`http::Request<RecvStream>`]) contains the\nHTTP request head as well as provides a way to receive the inbound data\nstream and the trailers. The `response` handle (of type [`SendResponse`])\nallows responding to the request, stream the response payload, send\ntrailers, and send push promises.\n\nThe send ([`SendStream`]) and receive ([`RecvStream`]) halves of the stream\ncan be operated independently.\n\n# Managing the connection\n\nThe [`Connection`] instance is used to manage connection state. The caller\nis required to call either [`Connection::accept`] or\n[`Connection::poll_close`] in order to advance the connection state. Simply\noperating on [`SendStream`] or [`RecvStream`] will have no effect unless the\nconnection state is advanced.\n\nIt is not required to call **both** [`Connection::accept`] and\n[`Connection::poll_close`]. If the caller is ready to accept a new stream,\nthen only [`Connection::accept`] should be called. When the caller **does\nnot** want to accept a new stream, [`Connection::poll_close`] should be\ncalled.\n\nThe [`Connection`] instance should only be dropped once\n[`Connection::poll_close`] returns `Ready`. Once [`Connection::accept`]\nreturns `Ready(None)`, there will no longer be any more inbound streams. At\nthis point, only [`Connection::poll_close`] should be called.\n\n# Shutting down the server\n\nGraceful shutdown of the server is [not yet\nimplemented](https://github.com/hyperium/h2/issues/69).\n\n# Example\n\nA basic HTTP/2 server example that runs over TCP and assumes [prior\nknowledge], i.e. both the client and the server assume that the TCP socket\nwill use the HTTP/2 protocol without prior negotiation.\n\n```no_run\nuse h2::server;\nuse http::{Response, StatusCode};\nuse tokio::net::TcpListener;\n\n#[tokio::main]\npub async fn main() {\n    let mut listener = TcpListener::bind(\"127.0.0.1:5928\").await.unwrap();\n\n    // Accept all incoming TCP connections.\n    loop {\n        if let Ok((socket, _peer_addr)) = listener.accept().await {\n            // Spawn a new task to process each connection.\n            tokio::spawn(async {\n                // Start the HTTP/2 connection handshake\n                let mut h2 = server::handshake(socket).await.unwrap();\n                // Accept all inbound HTTP/2 streams sent over the\n                // connection.\n                while let Some(request) = h2.accept().await {\n                    let (request, mut respond) = request.unwrap();\n                    println!(\"Received request: {:?}\", request);\n\n                    // Build a response with no body\n                    let response = Response::builder()\n                        .status(StatusCode::OK)\n                        .body(())\n                        .unwrap();\n\n                    // Send the response back to the client\n                    respond.send_response(response, true)\n                        .unwrap();\n                }\n\n            });\n        }\n    }\n}\n```\n\n[prior knowledge]: http://httpwg.org/specs/rfc7540.html#known-http\n[`handshake`]: fn.handshake.html\n[HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader\n[`Builder`]: struct.Builder.html\n[`Connection`]: struct.Connection.html\n[`Connection::poll`]: struct.Connection.html#method.poll\n[`Connection::poll_close`]: struct.Connection.html#method.poll_close\n[`futures::Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\n[`http::Request<RecvStream>`]: ../struct.RecvStream.html\n[`RecvStream`]: ../struct.RecvStream.html\n[`SendStream`]: ../struct.SendStream.html\n[`TcpListener`]: https://docs.rs/tokio-core/0.1/tokio_core/net/struct.TcpListener.html","links":{"`SendResponse`":"0:8699","`Connection::accept`":"0:3291"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:3285","0:3291","0:8689","0:8699","0:3295","0:3323"]}},"0:9072":{"id":"0:9072","crate_id":0,"name":"ne","span":{"filename":"src/share.rs","begin":[112,27],"end":[112,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3058":{"id":"0:3058","crate_id":0,"name":"poll_ready","span":{"filename":"src/client.rs","begin":[356,4],"end":[360,5]},"visibility":"public","docs":"Returns `Ready` when the connection can initialize a new HTTP/2\nstream.\n\nThis function must return `Ready` before `send_request` is called. When\n`Poll::Pending` is returned, the task will be notified once the readiness\nstate changes.\n\nSee [module] level docs for more details.\n\n[module]: index.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3168-0:8604":{"id":"a:2:3168-0:8604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3071-0:8613":{"id":"b:2:3071-0:8613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8613":{"id":"0:8613","crate_id":0,"name":"PushPromise","span":{"filename":"src/client.rs","begin":[258,0],"end":[264,1]},"visibility":"public","docs":"A pushed response and corresponding request headers","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3131","a:2:8871-0:8613","a:2:3127-0:8613","a:2:3139-0:8613","a:2:3168-0:8613","a:2:8870-0:8613","b:2:3850-0:8613","b:2:2733-0:8613","b:2:3066-0:8613","b:2:3071-0:8613","b:2:3060-0:8613","b:2:3056-0:8613","b:2:2730-0:8613","b:33:159-0:8613","0:8616"]}},"0:2634":{"id":"0:2634","crate_id":0,"name":"description","span":{"filename":"src/frame/reason.rs","begin":[63,4],"end":[84,5]},"visibility":"public","docs":"Get a string description of the error code.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8704":{"id":"0:8704","crate_id":0,"name":"fmt","span":{"filename":"src/server.rs","begin":[268,9],"end":[268,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3078":{"id":"0:3078","crate_id":0,"name":"max_header_list_size","span":{"filename":"src/client.rs","begin":[783,4],"end":[786,5]},"visibility":"public","docs":"Sets the max size of received header frames.\n\nThis advisory setting informs a peer of the maximum size of header list\nthat the sender is prepared to accept, in octets. The value is based on\nthe uncompressed size of header fields, including the length of the name\nand value in octets plus an overhead of 32 octets for each header field.\n\nThis setting is also used to limit the maximum amount of data that is\nbuffered to decode HEADERS frames.\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .max_header_list_size(16 * 1024)\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["max",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12986":{"id":"2:12986","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3139-0:3052":{"id":"a:2:3139-0:3052","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3069":{"id":"0:3069","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[585,0],"end":[601,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3071","0:3072"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13661":{"id":"2:13661","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13662","2:13663","2:13664","2:13665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2733-0:8609":{"id":"b:2:2733-0:8609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3118":{"id":"0:3118","crate_id":0,"name":"fmt","span":{"filename":"src/client.rs","begin":[1325,4],"end":[1327,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3402":{"id":"0:3402","crate_id":0,"name":"Output","span":{"filename":"src/server.rs","begin":[1267,4],"end":[1267,57]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"a:2:3127-0:9053":{"id":"a:2:3127-0:9053","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3136":{"id":"0:3136","crate_id":0,"name":"Output","span":{"filename":"src/client.rs","begin":[1431,4],"end":[1431,61]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Response","id":"37:1479","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"2:7907":{"id":"2:7907","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7909"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2730-0:3295":{"id":"b:2:2730-0:3295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3350":{"id":"0:3350","crate_id":0,"name":"initial_window_size","span":{"filename":"src/server.rs","begin":[673,4],"end":[676,5]},"visibility":"public","docs":"Indicates the initial window size (in octets) for stream-level\nflow control for received data.\n\nThe initial window of a stream is used as part of flow control. For more\ndetails, see [`FlowControl`].\n\nThe default value is 65,535.\n\n[`FlowControl`]: ../struct.FlowControl.html\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server::*;\n#\n# fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Handshake<T>\n# {\n// `server_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet server_fut = Builder::new()\n    .initial_window_size(1_000_000)\n    .handshake(my_io);\n# server_fut\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["size",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3343":{"id":"0:3343","crate_id":0,"name":"max_concurrent_recv_streams","span":{"filename":"src/server.rs","begin":[576,4],"end":[578,5]},"visibility":"public","docs":"Returns the maximum number of concurrent streams that may be initiated\nby the client on this connection.\n\nThis returns the value of the [`SETTINGS_MAX_CONCURRENT_STREAMS`\nparameter][1] sent in a `SETTINGS` frame that has been\nacknowledged by the remote peer. The value to be sent is configured by\nthe [`Builder::max_concurrent_streams`][2] method before handshaking\nwith the remote peer.\n\n[1]: https://tools.ietf.org/html/rfc7540#section-5.1.2\n[2]: ../struct.Builder.html#method.max_concurrent_streams","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"44:22":{"id":"44:22","crate_id":44,"name":"Equivalent","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["44:24"],"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementations":[]}},"2:12936":{"id":"2:12936","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15704"},"attrs":["#[inline]","#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3071-0:9053":{"id":"b:2:3071-0:9053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3139":{"id":"0:3139","crate_id":0,"name":"stream_id","span":{"filename":"src/client.rs","begin":[1444,4],"end":[1446,5]},"visibility":"public","docs":"Returns the stream ID of the response stream.\n\n# Panics\n\nIf the lock on the stream store has been poisoned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"crate::StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6806":{"id":"1:6806","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6807"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9859":{"id":"2:9859","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9860"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2730-0:8618":{"id":"b:2:2730-0:8618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8678":{"id":"0:8678","crate_id":0,"name":"Protocol","span":{"filename":"src/ext.rs","begin":[13,0],"end":[15,1]},"visibility":"public","docs":"Represents the `:protocol` pseudo-header used by\nthe [Extended CONNECT Protocol].\n\n[Extended CONNECT Protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3161","a:2:8871-0:8678","a:2:3127-0:8678","a:2:3139-0:8678","a:2:3168-0:8678","a:2:8870-0:8678","b:2:3850-0:8678","b:2:2733-0:8678","b:2:3066-0:8678","b:2:3071-0:8678","b:2:3060-0:8678","b:2:3056-0:8678","b:2:2730-0:8678","b:5:774-0:8678","b:33:159-0:8678","b:44:25-0:8678","0:8680","0:8682","0:8683","0:8685","0:8686","0:3165","0:3168","0:3170"]}},"2:8414":{"id":"2:8414","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:12559":{"id":"2:12559","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12561","2:12562","2:12563","2:12564","2:12565","2:12566","2:12567"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3168-0:8699":{"id":"a:2:3168-0:8699","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12977":{"id":"2:12977","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:15699","str::rsplitn":"1:15704","self::pattern":"2:12549"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:48909","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3077":{"id":"0:3077","crate_id":0,"name":"max_frame_size","span":{"filename":"src/client.rs","begin":[748,4],"end":[751,5]},"visibility":"public","docs":"Indicates the size (in octets) of the largest HTTP/2 frame payload that the\nconfigured client is able to accept.\n\nThe sender may send data frames that are **smaller** than this value,\nbut any data larger than `max` will be broken up into multiple `DATA`\nframes.\n\nThe value **must** be between 16,384 and 16,777,215. The default value is 16,384.\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .max_frame_size(1_000_000)\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```\n\n# Panics\n\nThis function panics if `max` is not within the legal range specified\nabove.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["max",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12935":{"id":"2:12935","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15704"},"attrs":["#[inline]","#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8317":{"id":"0:8317","crate_id":0,"name":null,"span":{"filename":"src/frame/reason.rs","begin":[18,9],"end":[18,18]},"visibility":{"restricted":{"parent":"0:2615","path":"::frame::reason"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3135","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3516":{"id":"0:3516","crate_id":0,"name":"drop","span":{"filename":"src/share.rs","begin":[464,4],"end":[471,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3163":{"id":"0:3163","crate_id":0,"name":"as_str","span":{"filename":"src/ext.rs","begin":[26,4],"end":[28,5]},"visibility":"public","docs":"Returns a str representation of the header.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3033":{"id":"2:3033","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3035"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:9255":{"id":"1:9255","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9256","1:9257","1:9258","1:9259","1:9260","1:9261","1:9262"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10414","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3071-0:8314":{"id":"b:2:3071-0:8314","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:22361":{"id":"2:22361","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22351","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23204":{"id":"2:23204","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23205"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3137","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3105":{"id":"2:3105","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3106"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3363":{"id":"0:3363","crate_id":0,"name":"default","span":{"filename":"src/server.rs","begin":[1017,4],"end":[1019,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4932":{"id":"1:4932","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4933","1:4934"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3135":{"id":"2:3135","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3376":{"id":"0:3376","crate_id":0,"name":"send_reset","span":{"filename":"src/server.rs","begin":[1156,4],"end":[1158,5]},"visibility":"public","docs":"Send a stream reset to the peer.\n\nThis essentially cancels the stream, including any inbound or outbound\ndata streams.\n\nIf this function is called before [`send_response`], a call to\n[`send_response`] will result in an error.\n\nIf this function is called while a [`SendStream`] instance is active,\nany further use of the instance will result in an error.\n\nThis function should only be called once.\n\n[`send_response`]: #method.send_response\n[`SendStream`]: ../struct.SendStream.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["reason",{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:376":{"id":"0:376","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[150,4],"end":[183,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3370":{"id":"0:3370","crate_id":0,"name":"send_reset","span":{"filename":"src/server.rs","begin":[1084,4],"end":[1086,5]},"visibility":"public","docs":"Send a stream reset to the peer.\n\nThis essentially cancels the stream, including any inbound or outbound\ndata streams.\n\nIf this function is called before [`send_response`], a call to\n[`send_response`] will result in an error.\n\nIf this function is called while a [`SendStream`] instance is active,\nany further use of the instance will result in an error.\n\nThis function should only be called once.\n\n[`send_response`]: #method.send_response\n[`SendStream`]: ../struct.SendStream.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["reason",{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12933":{"id":"2:12933","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:15704","str::slice_mut_unchecked":"1:15704","crate::ops::Index":"2:3431"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.29.0\", reason =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]","#[inline]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"20:53":{"id":"20:53","crate_id":20,"name":"Error","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","begin":[78,4],"end":[78,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"E"},"generics":{"params":[],"where_predicates":[]}}},"0:8695":{"id":"0:8695","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[235,9],"end":[235,14]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8696"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3234":{"id":"2:3234","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3060-0:8613":{"id":"b:2:3060-0:8613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3115":{"id":"0:3115","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[1319,0],"end":[1328,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"22:303","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3118"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3512":{"id":"0:3512","crate_id":0,"name":"stream_id","span":{"filename":"src/share.rs","begin":[441,4],"end":[443,5]},"visibility":"public","docs":"Returns the stream ID of this stream.\n\n# Panics\n\nIf the lock on the stream store has been poisoned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:360":{"id":"0:360","crate_id":0,"name":"into_io","span":{"filename":"src/error.rs","begin":[77,4],"end":[82,5]},"visibility":"public","docs":"Returns the error if the error is an io::Error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Error","id":"1:3997","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3072":{"id":"0:3072","crate_id":0,"name":"poll","span":{"filename":"src/client.rs","begin":[591,4],"end":[600,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:46975","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:13564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:49705","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:13262","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3362":{"id":"0:3362","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[1016,0],"end":[1020,1]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3105","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3363"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2730-0:3476":{"id":"b:2:2730-0:3476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8871-0:8609":{"id":"a:2:8871-0:8609","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8139":{"id":"2:8139","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8140","2:8141","2:8142","2:8143","2:8145","2:8148","2:8149","2:8150","2:8151","2:8153","2:8155","2:8156","2:8158","2:8161","2:8168","2:8170","2:8173","2:8174","2:8175","2:8177","2:8179","2:8182","2:8183","2:8184","2:8188","2:8191","2:8192","2:8193","2:8195","2:8196","2:8198","2:8201","2:8203","2:8213","2:8228","2:8230","2:8234","2:8243","2:8246","2:8248","2:8251","2:8258","2:8265","2:8272","2:8281","2:8291","2:8298","2:8305","2:8306","2:8307","2:8319","2:8326","2:8338","2:8345","2:8346","2:8351","2:8354","2:8357","2:8358","2:8360","2:8362","2:8365","2:8368","2:8371","2:8374","2:8377","2:8380","2:8382","2:8384","2:8386","2:8388","2:8390","2:8391","2:8399"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"33:103":{"id":"33:103","crate_id":33,"name":"AsField","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["33:104"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"33:373","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3066-0:3052":{"id":"b:2:3066-0:3052","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3066-0:3480":{"id":"b:2:3066-0:3480","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3134":{"id":"0:3134","crate_id":0,"name":"into_parts","span":{"filename":"src/client.rs","begin":[1423,4],"end":[1425,5]},"visibility":"public","docs":"Consumes `self`, returning the push promise's request headers and\nresponse future.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Request","id":"37:1348","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}},{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"42:135":{"id":"42:135","crate_id":42,"name":"UnsafeFutureObj","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["42:138","42:139"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"outlives":"'a"}],"implementations":[]}},"2:13005":{"id":"2:13005","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12939":{"id":"2:12939","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:48791","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8698":{"id":"0:8698","crate_id":0,"name":"fmt","span":{"filename":"src/server.rs","begin":[235,16],"end":[235,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2733-0:8598":{"id":"b:2:2733-0:8598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12929":{"id":"2:12929","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10451","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10451","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:3071":{"id":"0:3071","crate_id":0,"name":"Output","span":{"filename":"src/client.rs","begin":[589,4],"end":[589,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"SendRequest","id":"0:3048","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"2:3435":{"id":"2:3435","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3437"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3431","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2730-0:3478":{"id":"b:2:2730-0:3478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3347":{"id":"0:3347","crate_id":0,"name":"fmt","span":{"filename":"src/server.rs","begin":[599,4],"end":[603,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3169":{"id":"0:3169","crate_id":0,"name":"as_ref","span":{"filename":"src/ext.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3850-0:3295":{"id":"b:2:3850-0:3295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13285":{"id":"2:13285","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13277","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3588":{"id":"2:3588","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3590"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3060-0:8678":{"id":"b:2:3060-0:8678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:33:159-0:8609":{"id":"b:33:159-0:8609","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2730-0:9059":{"id":"b:2:2730-0:9059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3370":{"id":"2:3370","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3371"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"21:140":{"id":"21:140","crate_id":21,"name":"BufMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["21:141","21:142","21:143","21:144","21:145","21:147","21:148","21:149","21:150","21:151","21:152","21:153","21:154","21:155","21:156","21:157","21:158","21:159","21:160","21:161","21:162","21:163","21:164","21:165","21:166","21:167","21:168","21:169","21:170","21:171","21:172","21:173","21:174","21:175","21:176"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:40:482-0:3052":{"id":"b:40:482-0:3052","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.16/src/future/try_future/mod.rs","begin":[134,0],"end":[134,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fut"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"20:44","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":["err_into","unwrap_or_else","and_then","into_future","try_flatten","ok_into","map_ok","try_flatten_stream","try_poll_unpin","map_err","map_ok_or_else","or_else","inspect_ok","inspect_err"],"trait":{"kind":"resolved_path","inner":{"name":"TryFutureExt","id":"40:484","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Fut"}}},"a:2:8870-0:3478":{"id":"a:2:8870-0:3478","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2630":{"id":"0:2630","crate_id":0,"name":"CONNECT_ERROR","span":{"filename":"src/frame/reason.rs","begin":[52,4],"end":[52,49]},"visibility":"public","docs":"The connection established in response to a CONNECT request was reset\nor abnormally closed.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(10)"}},"2:12568":{"id":"2:12568","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:12570","2:12571","2:12572","2:12573"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3850-0:9059":{"id":"b:2:3850-0:9059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8322":{"id":"0:8322","crate_id":0,"name":null,"span":{"filename":"src/frame/reason.rs","begin":[18,20],"end":[18,22]},"visibility":{"restricted":{"parent":"0:2615","path":"::frame::reason"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3168-0:8609":{"id":"a:2:3168-0:8609","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3168-0:9076":{"id":"a:2:3168-0:9076","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8871-0:9053":{"id":"a:2:8871-0:9053","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3379":{"id":"2:3379","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3381","2:3382"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12995":{"id":"2:12995","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:7988","str::rmatch_indices":"1:15704","self::pattern":"2:12549","prim@char":"1:15699"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:48955","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2730-0:3480":{"id":"b:2:2730-0:3480","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:20:48-0:8609":{"id":"b:20:48-0:8609","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","begin":[73,0],"end":[84,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"20:44","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["20:52","20:53","20:54"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"0:2623":{"id":"0:2623","crate_id":0,"name":"FLOW_CONTROL_ERROR","span":{"filename":"src/frame/reason.rs","begin":[34,4],"end":[34,53]},"visibility":"public","docs":"The endpoint detected that its peer violated the flow-control protocol.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(3)"}},"b:2:3066-0:8598":{"id":"b:2:3066-0:8598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8630":{"id":"0:8630","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[309,9],"end":[309,14]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2749","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8631"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3341":{"id":"0:3341","crate_id":0,"name":"ping_pong","span":{"filename":"src/server.rs","begin":[548,4],"end":[550,5]},"visibility":"public","docs":"Takes a `PingPong` instance from the connection.\n\n# Note\n\nThis may only be called once. Calling multiple times will return `None`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3122":{"id":"0:3122","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[1343,0],"end":[1367,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3123","0:3124"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:13281-0:8609":{"id":"b:2:13281-0:8609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13277","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:13283","2:13284","2:13285"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"0:3081":{"id":"0:3081","crate_id":0,"name":"max_concurrent_reset_streams","span":{"filename":"src/client.rs","begin":[918,4],"end":[921,5]},"visibility":"public","docs":"Sets the maximum number of concurrent locally reset streams.\n\nWhen a stream is explicitly reset, the HTTP/2 specification requires\nthat any further frames received for that stream must be ignored for\n\"some time\".\n\nIn order to satisfy the specification, internal state must be maintained\nto implement the behavior. This state grows linearly with the number of\nstreams that are locally reset.\n\nThe `max_concurrent_reset_streams` setting configures sets an upper\nbound on the amount of state that is maintained. When this max value is\nreached, the oldest reset stream is purged from memory.\n\nOnce the stream has been fully purged from memory, any additional frames\nreceived for that stream will result in a connection level protocol\nerror, forcing the connection to terminate.\n\nThe default value is 10.\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::client::*;\n# use bytes::Bytes;\n#\n# async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>\n# {\n// `client_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet client_fut = Builder::new()\n    .max_concurrent_reset_streams(1000)\n    .handshake(my_io);\n# client_fut.await\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["max",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8697":{"id":"0:8697","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[235,16],"end":[235,21]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:8698"],"negative":false,"synthetic":false,"blanket_impl":null}},"22:182":{"id":"22:182","crate_id":22,"name":"AsyncBufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:183","22:184"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:44:25-0:8314":{"id":"b:44:25-0:8314","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","begin":[18,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2784","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Equivalent","id":"44:22","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["44:28"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Q"}}},"a:2:3127-0:8314":{"id":"a:2:3127-0:8314","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2636":{"id":"0:2636","crate_id":0,"name":"from","span":{"filename":"src/frame/reason.rs","begin":[88,4],"end":[90,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:9073":{"id":"0:9073","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[112,38],"end":[112,42]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10052","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:9074"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3071-0:8618":{"id":"b:2:3071-0:8618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromises","id":"0:8618","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3356":{"id":"0:3356","crate_id":0,"name":"max_send_buffer_size","span":{"filename":"src/server.rs","begin":[890,4],"end":[894,5]},"visibility":"public","docs":"Sets the maximum send buffer size per stream.\n\nOnce a stream has buffered up to (or over) the maximum, the stream's\nflow control will not \"poll\" additional capacity. Once bytes for the\nstream have been written to the connection, the send buffer capacity\nwill be freed up again.\n\nThe default is currently ~400MB, but may change.\n\n# Panics\n\nThis function panics if `max` is larger than `u32::MAX`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["max",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2638":{"id":"0:2638","crate_id":0,"name":"from","span":{"filename":"src/frame/reason.rs","begin":[94,4],"end":[96,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8871-0:3295":{"id":"a:2:8871-0:3295","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendPushedResponse","id":"0:3295","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3065":{"id":"0:3065","crate_id":0,"name":"fmt","span":{"filename":"src/client.rs","begin":[543,4],"end":[545,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3036":{"id":"2:3036","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3038","2:3039"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3285":{"id":"0:3285","crate_id":0,"name":"Handshake","span":{"filename":"src/server.rs","begin":[148,0],"end":[155,1]},"visibility":"public","docs":"In progress HTTP/2 connection handshake future.\n\nThis type implements `Future`, yielding a `Connection` instance once the\nhandshake has completed.\n\nThe handshake is completed once the connection preface is fully received\nfrom the client **and** the initial settings frame is sent to the client.\n\nThe handshake future does not wait for the initial settings frame from the\nclient.\n\nSee [module] level docs for more details.\n\n[module]: index.html","links":{},"attrs":["#[must_use = \"futures do nothing unless polled\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":{"kind":"resolved_path","inner":{"name":"Bytes","id":"21:513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:8871-0:3285","a:2:3127-0:3285","a:2:3139-0:3285","a:2:3168-0:3285","a:2:8870-0:3285","b:2:3850-0:3285","b:2:13281-0:3285","b:2:2733-0:3285","b:2:3066-0:3285","b:2:3071-0:3285","b:2:3060-0:3285","b:2:3056-0:3285","b:2:2730-0:3285","b:20:48-0:3285","b:33:159-0:3285","b:40:219-0:3285","b:40:482-0:3285","0:3399","0:3404"]}},"b:2:3056-0:9059":{"id":"b:2:3056-0:9059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"StreamId","id":"0:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3059"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3162":{"id":"0:3162","crate_id":0,"name":"from_static","span":{"filename":"src/ext.rs","begin":[19,4],"end":[23,5]},"visibility":"public","docs":"Converts a static string to a protocol name.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3109":{"id":"0:3109","crate_id":0,"name":"max_concurrent_recv_streams","span":{"filename":"src/client.rs","begin":[1301,4],"end":[1303,5]},"visibility":"public","docs":"Returns the maximum number of concurrent streams that may be initiated\nby the server on this connection.\n\nThis returns the value of the [`SETTINGS_MAX_CONCURRENT_STREAMS`\nparameter][1] sent in a `SETTINGS` frame that has been\nacknowledged by the remote peer. The value to be sent is configured by\nthe [`Builder::max_concurrent_streams`][2] method before handshaking\nwith the remote peer.\n\n[1]: https://tools.ietf.org/html/rfc7540#section-5.1.2\n[2]: ../struct.Builder.html#method.max_concurrent_streams","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"32:17":{"id":"32:17","crate_id":32,"name":"Sink","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["32:19","32:20","32:21","32:22","32:23"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3066-0:8609":{"id":"b:2:3066-0:8609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:40:219-0:8598":{"id":"b:40:219-0:8598","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.16/src/future/future/mod.rs","begin":[119,0],"end":[119,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":["map","into_stream","flatten","left_future","unit_error","poll_unpin","now_or_never","fuse","right_future","never_error","inspect","flatten_stream","map_into","then"],"trait":{"kind":"resolved_path","inner":{"name":"FutureExt","id":"40:221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3027":{"id":"2:3027","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3029"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementations":[]}},"0:3068":{"id":"0:3068","crate_id":0,"name":"clone","span":{"filename":"src/client.rs","begin":[552,4],"end":[557,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3105":{"id":"0:3105","crate_id":0,"name":"set_target_window_size","span":{"filename":"src/client.rs","begin":[1245,4],"end":[1248,5]},"visibility":"public","docs":"Sets the target window size for the whole connection.\n\nIf `size` is greater than the current value, then a `WINDOW_UPDATE`\nframe will be immediately sent to the remote, increasing the connection\nlevel window by `size - current_value`.\n\nIf `size` is less than the current value, nothing will happen\nimmediately. However, as window capacity is released by\n[`FlowControl`] instances, no `WINDOW_UPDATE` frames will be sent\nout until the number of \"in flight\" bytes drops below `size`.\n\nThe default value is 65,535.\n\nSee [`FlowControl`] documentation for more details.\n\n[`FlowControl`]: ../struct.FlowControl.html\n[library level]: ../index.html#flow-control","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["size",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4626":{"id":"1:4626","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4627","1:4628","1:4630","1:4631","1:4632","1:4633","1:4634","1:4643"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3139-0:9076":{"id":"a:2:3139-0:9076","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"FlowControl","id":"0:9076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4367":{"id":"0:4367","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[20,9],"end":[20,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8870-0:8609":{"id":"a:2:8870-0:8609","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13001":{"id":"2:13001","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2632":{"id":"0:2632","crate_id":0,"name":"INADEQUATE_SECURITY","span":{"filename":"src/frame/reason.rs","begin":[58,4],"end":[58,55]},"visibility":"public","docs":"The underlying transport has properties that do not meet minimum\nsecurity requirements.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"Reason(12)"}},"b:2:3071-0:3291":{"id":"b:2:3071-0:3291","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3030","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["2:3074","2:3075"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10093":{"id":"2:10093","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10094","2:10095","2:10096"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13012":{"id":"2:13012","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:12549","prim@char":"1:15699"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3259":{"id":"2:3259","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3261","2:3262"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13039":{"id":"2:13039","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15699"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49122","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3275":{"id":"2:3275","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3277","2:3278"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12922":{"id":"2:12922","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]","#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:359":{"id":"0:359","crate_id":0,"name":"get_io","span":{"filename":"src/error.rs","begin":[69,4],"end":[74,5]},"visibility":"public","docs":"Returns the error if the error is an io::Error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:46856","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"io::Error","id":"1:3997","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2730-0:8613":{"id":"b:2:2730-0:8613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushPromise","id":"0:8613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2732"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3850-0:3482":{"id":"b:2:3850-0:3482","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Pong","id":"0:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2733-0:3476":{"id":"b:2:2733-0:3476","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvStream","id":"0:3476","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4569":{"id":"1:4569","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4570","1:4571","1:4573","1:4574","1:4575","1:4576","1:4577","1:4579","1:4580","1:4581","1:4582","1:4584"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:8871-0:8598":{"id":"a:2:8871-0:8598","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReadySendRequest","id":"0:8598","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8871-0:8678":{"id":"a:2:8871-0:8678","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:8871","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:8678","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13008":{"id":"2:13008","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason = \"superseded by `trim_end`\",\nsuggestion = \"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3108":{"id":"0:3108","crate_id":0,"name":"max_concurrent_send_streams","span":{"filename":"src/client.rs","begin":[1287,4],"end":[1289,5]},"visibility":"public","docs":"Returns the maximum number of concurrent streams that may be initiated\nby this client.\n\nThis limit is configured by the server peer by sending the\n[`SETTINGS_MAX_CONCURRENT_STREAMS` parameter][1] in a `SETTINGS` frame.\nThis method returns the currently acknowledged value recieved from the\nremote.\n\n[1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12916":{"id":"2:12916","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8633":{"id":"0:8633","crate_id":0,"name":"fmt","span":{"filename":"src/client.rs","begin":[309,16],"end":[309,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9802","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9791","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3359":{"id":"0:3359","crate_id":0,"name":"handshake","span":{"filename":"src/server.rs","begin":[1007,4],"end":[1013,5]},"visibility":"public","docs":"Creates a new configured HTTP/2 server backed by `io`.\n\nIt is expected that `io` already be in an appropriate state to commence\nthe [HTTP/2 handshake]. See [Handshake] for more details.\n\nReturns a future which resolves to the [`Connection`] instance once the\nHTTP/2 handshake has been completed.\n\nThis function also allows the caller to configure the send payload data\ntype. See [Outbound data type] for more details.\n\n[HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader\n[Handshake]: ../index.html#handshake\n[`Connection`]: struct.Connection.html\n[Outbound data type]: ../index.html#outbound-data-type.\n\n# Examples\n\nBasic usage:\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server::*;\n#\n# fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Handshake<T>\n# {\n// `server_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet server_fut = Builder::new()\n    .handshake(my_io);\n# server_fut\n# }\n#\n# pub fn main() {}\n```\n\nConfigures the send-payload data type. In this case, the outbound data\ntype will be `&'static [u8]`.\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server::*;\n#\n# fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Handshake<T, &'static [u8]>\n# {\n// `server_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet server_fut: Handshake<_, &'static [u8]> = Builder::new()\n    .handshake(my_io);\n# server_fut\n# }\n#\n# pub fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["io",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Handshake","id":"0:3285","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"22:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"22:303","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3168","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3298":{"id":"2:3298","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3300"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2779":{"id":"2:2779","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2781","2:2782"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementations":[]}},"a:2:3127-0:3291":{"id":"a:2:3127-0:3291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2733-0:3478":{"id":"b:2:2733-0:3478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2735"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12579":{"id":"2:12579","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3850-0:8604":{"id":"b:2:3850-0:8604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3344":{"id":"0:3344","crate_id":0,"name":null,"span":{"filename":"src/server.rs","begin":[594,0],"end":[604,1]},"visibility":{"restricted":{"parent":"0:3172","path":"::server"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3347"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3139-0:3478":{"id":"a:2:3139-0:3478","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3139","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:33:159-0:8699":{"id":"b:33:159-0:8699","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.26/src/instrument.rs","begin":[155,0],"end":[155,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["instrument","in_current_span"],"trait":{"kind":"resolved_path","inner":{"name":"Instrument","id":"33:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendResponse","id":"0:8699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:7720":{"id":"1:7720","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7721"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12934":{"id":"2:12934","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15704","str::slice_unchecked":"1:15704","crate::ops::IndexMut":"2:3435"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[rustc_deprecated(since = \"1.29.0\", reason =\n\"use `get_unchecked_mut(begin..end)` instead\")]","#[inline]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:3493":{"id":"0:3493","crate_id":0,"name":"send_reset","span":{"filename":"src/share.rs","begin":[350,4],"end":[352,5]},"visibility":"public","docs":"Resets the stream.\n\nThis cancels the request / response exchange. If the response has not\nyet been received, the associated `ResponseFuture` will return an\n[`Error`] to reflect the canceled exchange.\n\n[`Error`]: struct.Error.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["reason",{"kind":"resolved_path","inner":{"name":"Reason","id":"0:8314","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3066-0:3478":{"id":"b:2:3066-0:3478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3040","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3036","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3069","2:3070"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:9053":{"id":"0:9053","crate_id":0,"name":"SendStream","span":{"filename":"src/share.rs","begin":[98,0],"end":[100,1]},"visibility":"public","docs":"Sends the body stream and trailers to the remote peer.\n\n# Overview\n\nA `SendStream` is provided by [`SendRequest`] and [`SendResponse`] once the\nHTTP/2 message header has been sent sent. It is used to stream the message\nbody and send the message trailers. See method level documentation for more\ndetails.\n\nThe `SendStream` instance is also used to manage outbound flow control.\n\nIf a `SendStream` is dropped without explicitly closing the send stream, a\n`RST_STREAM` frame will be sent. This essentially cancels the request /\nresponse exchange.\n\nThe ways to explicitly close the send stream are:\n\n* Set `end_of_stream` to true when calling [`send_request`],\n  [`send_response`], or [`send_data`].\n* Send trailers with [`send_trailers`].\n* Explicitly reset the stream with [`send_reset`].\n\n# Flow control\n\nIn HTTP/2, data cannot be sent to the remote peer unless there is\navailable window capacity on both the stream and the connection. When a data\nframe is sent, both the stream window and the connection window are\ndecremented. When the stream level window reaches zero, no further data can\nbe sent on that stream. When the connection level window reaches zero, no\nfurther data can be sent on any stream for that connection.\n\nWhen the remote peer is ready to receive more data, it sends `WINDOW_UPDATE`\nframes. These frames increment the windows. See the [specification] for more\ndetails on the principles of HTTP/2 flow control.\n\nThe implications for sending data are that the caller **should** ensure that\nboth the stream and the connection has available window capacity before\nloading the data to send into memory. The `SendStream` instance provides the\nnecessary APIs to perform this logic. This, however, is not an obligation.\nIf the caller attempts to send data on a stream when there is no available\nwindow capacity, the library will buffer the data until capacity becomes\navailable, at which point the buffer will be flushed to the connection.\n\n**NOTE**: There is no bound on the amount of data that the library will\nbuffer. If you are sending large amounts of data, you really should hook\ninto the flow control lifecycle. Otherwise, you risk using up significant\namounts of memory.\n\nTo hook into the flow control lifecycle, the caller signals to the library\nthat it intends to send data by calling [`reserve_capacity`], specifying the\namount of data, in octets, that the caller intends to send. After this,\n`poll_capacity` is used to be notified when the requested capacity is\nassigned to the stream. Once [`poll_capacity`] returns `Ready` with the number\nof octets available to the stream, the caller is able to actually send the\ndata using [`send_data`].\n\nBecause there is also a connection level window that applies to **all**\nstreams on a connection, when capacity is assigned to a stream (indicated by\n`poll_capacity` returning `Ready`), this capacity is reserved on the\nconnection and will **not** be assigned to any other stream. If data is\nnever written to the stream, that capacity is effectively lost to other\nstreams and this introduces the risk of deadlocking a connection.\n\nTo avoid throttling data on a connection, the caller should not reserve\ncapacity until ready to send data and once any capacity is assigned to the\nstream, the caller should immediately send data consuming this capacity.\nThere is no guarantee as to when the full capacity requested will become\navailable. For example, if the caller requests 64 KB of data and 512 bytes\nbecome available, the caller should immediately send 512 bytes of data.\n\nSee [`reserve_capacity`] documentation for more details.\n\n[`SendRequest`]: client/struct.SendRequest.html\n[`SendResponse`]: server/struct.SendResponse.html\n[specification]: http://httpwg.org/specs/rfc7540.html#FlowControl\n[`reserve_capacity`]: #method.reserve_capacity\n[`poll_capacity`]: #method.poll_capacity\n[`send_data`]: #method.send_data\n[`send_request`]: client/struct.SendRequest.html#method.send_request\n[`send_response`]: server/struct.SendResponse.html#method.send_response\n[`send_data`]: #method.send_data\n[`send_trailers`]: #method.send_trailers\n[`send_reset`]: #method.send_reset","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:3484","a:2:8871-0:9053","a:2:3127-0:9053","a:2:3139-0:9053","a:2:3168-0:9053","a:2:8870-0:9053","b:2:3850-0:9053","b:2:2733-0:9053","b:2:3066-0:9053","b:2:3071-0:9053","b:2:3060-0:9053","b:2:3056-0:9053","b:2:2730-0:9053","b:33:159-0:9053","0:9056"]}},"0:9056":{"id":"0:9056","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[97,9],"end":[97,14]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:9842","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:9058"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9855":{"id":"2:9855","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:9856"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3484":{"id":"0:3484","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[217,0],"end":[378,1]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"21:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SendStream","id":"0:9053","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:3487","0:3488","0:3489","0:3491","0:3492","0:3493","0:3494","0:3495"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3060-0:8609":{"id":"b:2:3060-0:8609","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3033","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PushedResponseFuture","id":"0:8609","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3089":{"id":"0:3089","crate_id":0,"name":null,"span":{"filename":"src/client.rs","begin":[1109,0],"end":[1113,1]},"visibility":{"restricted":{"parent":"0:2937","path":"::client"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3105","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:8622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3090"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8870-0:3052":{"id":"a:2:8870-0:3052","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Bytes","id":"21:513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3052","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3357":{"id":"0:3357","crate_id":0,"name":"reset_stream_duration","span":{"filename":"src/server.rs","begin":[938,4],"end":[941,5]},"visibility":"public","docs":"Sets the maximum number of concurrent locally reset streams.\n\nWhen a stream is explicitly reset by either calling\n[`SendResponse::send_reset`] or by dropping a [`SendResponse`] instance\nbefore completing the stream, the HTTP/2 specification requires that\nany further frames received for that stream must be ignored for \"some\ntime\".\n\nIn order to satisfy the specification, internal state must be maintained\nto implement the behavior. This state grows linearly with the number of\nstreams that are locally reset.\n\nThe `reset_stream_duration` setting configures the max amount of time\nthis state will be maintained in memory. Once the duration elapses, the\nstream state is purged from memory.\n\nOnce the stream has been fully purged from memory, any additional frames\nreceived for that stream will result in a connection level protocol\nerror, forcing the connection to terminate.\n\nThe default value is 30 seconds.\n\n# Examples\n\n```\n# use tokio::io::{AsyncRead, AsyncWrite};\n# use h2::server::*;\n# use std::time::Duration;\n#\n# fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)\n# -> Handshake<T>\n# {\n// `server_fut` is a future representing the completion of the HTTP/2\n// handshake.\nlet server_fut = Builder::new()\n    .reset_stream_duration(Duration::from_secs(10))\n    .handshake(my_io);\n# server_fut\n# }\n#\n# pub fn main() {}\n```","links":{"`SendResponse`":"0:8699","`SendResponse::send_reset`":"0:8699"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dur",{"kind":"resolved_path","inner":{"name":"Duration","id":"2:49549","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8870-0:3291":{"id":"a:2:8870-0:3291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:8870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Connection","id":"0:3291","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3522":{"id":"0:3522","crate_id":0,"name":"release_capacity","span":{"filename":"src/share.rs","begin":[515,4],"end":[522,5]},"visibility":"public","docs":"Release window capacity back to remote stream.\n\nThis releases capacity back to the stream level and the connection level\nwindows. Both window sizes will be increased by `sz`.\n\nSee [struct level] documentation for more details.\n\n# Errors\n\nThis function errors if increasing the receive window size by `sz` would\nresult in a window size greater than the target window size. In other\nwords, the caller cannot release more capacity than data has been\nreceived. If 1024 bytes of data have been received, at most 1024 bytes\ncan be released.\n\n[struct level]: #","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["sz",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:46983","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"crate::Error","id":"0:4364","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:40:219-0:8604":{"id":"b:40:219-0:8604","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.16/src/future/future/mod.rs","begin":[119,0],"end":[119,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13262","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":["map","into_stream","flatten","left_future","unit_error","poll_unpin","now_or_never","fuse","right_future","never_error","inspect","flatten_stream","map_into","then"],"trait":{"kind":"resolved_path","inner":{"name":"FutureExt","id":"40:221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ResponseFuture","id":"0:8604","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3850-0:3478":{"id":"b:2:3850-0:3478","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3132","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"PingPong","id":"0:3478","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3535":{"id":"0:3535","crate_id":0,"name":"opaque","span":{"filename":"src/share.rs","begin":[572,4],"end":[574,5]},"visibility":"public","docs":"Creates a new opaque `Ping` to be sent via a [`PingPong`][].\n\nThe payload is \"opaque\", such that it shouldn't be depended on.\n\n[`PingPong`]: struct.PingPong.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3534":{"id":"0:3534","crate_id":0,"name":null,"span":{"filename":"src/share.rs","begin":[566,0],"end":[575,1]},"visibility":{"restricted":{"parent":"0:3439","path":"::share"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Ping","id":"0:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3535"],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"40:4545":{"crate_id":40,"path":["futures_util","fns","IntoFn"],"kind":"struct"},"17:11678":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"9:686":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"37:2383":{"crate_id":37,"path":["http","header","map","IntoIter"],"kind":"struct"},"26:5407":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:11026":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:11640":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"26:4385":{"crate_id":26,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:15057":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"37:1948":{"crate_id":37,"path":["http","uri","port","Port"],"kind":"struct"},"5:5873":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"22:12803":{"crate_id":22,"path":["tokio","io","util","take","Take"],"kind":"struct"},"1:2752":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:8108":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"22:6709":{"crate_id":22,"path":["tokio","runtime","enter","EnterContext"],"kind":"enum"},"2:12574":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:10917":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"40:4332":{"crate_id":40,"path":["futures_util","task","spawn","SpawnExt"],"kind":"trait"},"40:10082":{"crate_id":40,"path":["futures_util","fns","InspectOkFn"],"kind":"struct"},"18:636":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:14284":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:15707":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:3429":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"14:244":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:523":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:6839":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"22:7694":{"crate_id":22,"path":["tokio","runtime","queue","Inner"],"kind":"struct"},"22:8810":{"crate_id":22,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"20:47":{"crate_id":20,"path":["futures_core","future","TryFuture","try_poll"],"kind":"foreign_type"},"17:10558":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"45:1858":{"crate_id":45,"path":["hashbrown","raw","inner","alloc","inner","Global"],"kind":"struct"},"15:230":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"22:5759":{"crate_id":22,"path":["tokio","net","unix","split","ReadHalf"],"kind":"struct"},"14:0":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"5:7758":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"18:801":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"22:10536":{"crate_id":22,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"6:1731":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:7826":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:0":{"crate_id":2,"path":["core"],"kind":"module"},"16:7378":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"9:809":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:1073":{"crate_id":1,"path":["std","ascii","AsciiExt","make_ascii_lowercase"],"kind":"foreign_type"},"17:9799":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"40:8759":{"crate_id":40,"path":["futures_util","stream","try_stream","InspectOk"],"kind":"struct"},"40:9730":{"crate_id":40,"path":["futures_util","stream","repeat","Repeat"],"kind":"struct"},"22:5116":{"crate_id":22,"path":["tokio","net","tcp","listener","TcpListener"],"kind":"struct"},"5:2632":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:10095":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:48634":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:4304":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"37:1549":{"crate_id":37,"path":["http","status"],"kind":"module"},"16:7477":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"40:8475":{"crate_id":40,"path":["futures_util","stream","stream","then","_","__Origin"],"kind":"struct"},"44:1052":{"crate_id":44,"path":["indexmap","set","Difference"],"kind":"struct"},"6:4393":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:12267":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:6964":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"37:2582":{"crate_id":37,"path":["http","header","map","Link"],"kind":"enum"},"40:8538":{"crate_id":40,"path":["futures_util","stream","stream","zip","_","__Origin"],"kind":"struct"},"17:10279":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:52759":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"22:14592":{"crate_id":22,"path":["tokio","io","util","buf_writer","BufWriter"],"kind":"struct"},"23:154":{"crate_id":23,"path":["mio","event","event","fmt","EventDetails"],"kind":"struct"},"1:4300":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"26:1716":{"crate_id":26,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"26:590":{"crate_id":26,"path":["libc","unix","linger"],"kind":"struct"},"1:2014":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:12659":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"22:11640":{"crate_id":22,"path":["tokio","io","util","write_int","WriteI32Le"],"kind":"struct"},"37:2472":{"crate_id":37,"path":["http","header","map","ValueIter"],"kind":"struct"},"5:2091":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:11045":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:3033":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:15699":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:31767":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"16:5561":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"40:6160":{"crate_id":40,"path":["futures_util","future","pending","Pending"],"kind":"struct"},"20:130":{"crate_id":20,"path":["futures_core","stream","TryStream","try_poll_next"],"kind":"foreign_type"},"2:3210":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:7279":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"44:1303":{"crate_id":44,"path":["indexmap","Bucket"],"kind":"struct"},"22:14340":{"crate_id":22,"path":["tokio","io","util","read_buf","ReadBuf"],"kind":"struct"},"16:6780":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"34:0":{"crate_id":34,"path":["tracing_core"],"kind":"module"},"40:9759":{"crate_id":40,"path":["futures_util","stream","once","Once"],"kind":"struct"},"22:8120":{"crate_id":22,"path":["tokio","coop","RestoreOnPending"],"kind":"struct"},"1:8707":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"5:8013":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"33:477":{"crate_id":33,"path":["tracing","span","EnteredSpan"],"kind":"struct"},"26:596":{"crate_id":26,"path":["libc","unix","sigval"],"kind":"struct"},"2:45805":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:9210":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:4283":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:50656":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:4255":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"33:466":{"crate_id":33,"path":["tracing","span","Inner"],"kind":"struct"},"22:5746":{"crate_id":22,"path":["tokio","net","unix","datagram","socket","UnixDatagram"],"kind":"struct"},"16:7884":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"6:5940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:10705":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:8161":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","for_each"],"kind":"foreign_type"},"34:1116":{"crate_id":34,"path":["tracing_core","metadata","LevelInner"],"kind":"enum"},"17:9528":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:5384":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:55537":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"0:4364":{"crate_id":0,"path":["h2","Error"],"kind":"struct"},"26:5984":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:11044":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"1:9190":{"crate_id":1,"path":["std","lazy","SyncLazy"],"kind":"struct"},"6:4016":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:3105":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:23533":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"34:802":{"crate_id":34,"path":["tracing_core","dispatcher","DefaultGuard"],"kind":"struct"},"1:5591":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:11809":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"45:705":{"crate_id":45,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"45:1877":{"crate_id":45,"path":["hashbrown","raw","inner","TableLayout"],"kind":"struct"},"6:509":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"33:379":{"crate_id":33,"path":["tracing","instrument","WithDispatch"],"kind":"struct"},"17:542":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"34:819":{"crate_id":34,"path":["tracing_core","field","Field"],"kind":"struct"},"22:7268":{"crate_id":22,"path":["tokio","runtime","builder","Builder"],"kind":"struct"},"1:777":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"16:7303":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:7720":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"22:9594":{"crate_id":22,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"40:6585":{"crate_id":40,"path":["futures_util","future","select","Select"],"kind":"struct"},"26:3972":{"crate_id":26,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:15204":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:10584":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:13306":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:10451":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:48823":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:4376":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"22:6645":{"crate_id":22,"path":["tokio","runtime","task","Notified"],"kind":"struct"},"1:4660":{"crate_id":1,"path":["std","io","BufRead","lines"],"kind":"foreign_type"},"2:23994":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:3590":{"crate_id":2,"path":["core","ops","try_trait","FromResidual","from_residual"],"kind":"foreign_type"},"22:1797":{"crate_id":22,"path":["tokio","io","async_fd","TryIoError"],"kind":"struct"},"6:6172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"44:409":{"crate_id":44,"path":["indexmap","map","IndexMap"],"kind":"struct"},"2:9792":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"40:6972":{"crate_id":40,"path":["futures_util","stream","stream","chain","_","__Origin"],"kind":"struct"},"22:12942":{"crate_id":22,"path":["tokio","io","util","read_until","ReadUntil"],"kind":"struct"},"26:5164":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:11750":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"29:893":{"crate_id":29,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:7406":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:4238":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"37:2215":{"crate_id":37,"path":["http","error","Error"],"kind":"struct"},"2:52873":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"22:12824":{"crate_id":22,"path":["tokio","io","util","take","_","__Origin"],"kind":"struct"},"6:5965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:1509":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:1444":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:0":{"crate_id":17,"path":["object"],"kind":"module"},"17:10448":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"40:9739":{"crate_id":40,"path":["futures_util","stream","repeat_with","RepeatWith"],"kind":"struct"},"2:52642":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:8676":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"22:2005":{"crate_id":22,"path":["tokio","io","split","WriteHalf"],"kind":"struct"},"26:3856":{"crate_id":26,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"37:3162":{"crate_id":37,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"40:9006":{"crate_id":40,"path":["futures_util","stream","try_stream","MapErr"],"kind":"struct"},"22:8680":{"crate_id":22,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"1:10459":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:12431":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"23:693":{"crate_id":23,"path":["mio","sys","unix","uds","socketaddr","SocketAddr"],"kind":"struct"},"22:14729":{"crate_id":22,"path":["tokio","io","seek","Seek"],"kind":"struct"},"1:11014":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"26:4139":{"crate_id":26,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:47877":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"6:4408":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:770":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:4570":{"crate_id":1,"path":["std","io","Read","read"],"kind":"foreign_type"},"17:13488":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"5:1746":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:6896":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:2089":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:3939":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:5320":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"22:13064":{"crate_id":22,"path":["tokio","io","util","read_to_end","ReadToEnd"],"kind":"struct"},"2:12559":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"12:463":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:48196":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"26:4333":{"crate_id":26,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:11147":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:13298":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:3145":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:5719":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"12:784":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"22:10459":{"crate_id":22,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"45:1559":{"crate_id":45,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"40:9777":{"crate_id":40,"path":["futures_util","stream","once","_","__Origin"],"kind":"struct"},"26:4027":{"crate_id":26,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"29:1002":{"crate_id":29,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:3656":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:5387":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:2132":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"45:812":{"crate_id":45,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"45:1034":{"crate_id":45,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:6163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"40:10067":{"crate_id":40,"path":["futures_util","fns","MapErrFn"],"kind":"struct"},"38:20":{"crate_id":38,"path":["fnv","FnvHasher"],"kind":"struct"},"22:7500":{"crate_id":22,"path":["tokio","runtime","context","EnterGuard"],"kind":"struct"},"22:183":{"crate_id":22,"path":["tokio","io","async_buf_read","AsyncBufRead","poll_fill_buf"],"kind":"foreign_type"},"1:2710":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:45430":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"22:11885":{"crate_id":22,"path":["tokio","io","util","write_int","WriteU16Le"],"kind":"struct"},"2:45662":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"18:766":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"5:1565":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"23:78":{"crate_id":23,"path":["mio","poll","Poll"],"kind":"struct"},"40:4381":{"crate_id":40,"path":["futures_util","fns","OkFn"],"kind":"struct"},"2:48624":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"29:153":{"crate_id":29,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:3583":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"37:2611":{"crate_id":37,"path":["http","header","name","HeaderName"],"kind":"struct"},"18:712":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:13942":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"22:12424":{"crate_id":22,"path":["tokio","io","util","write_int","WriteI8"],"kind":"struct"},"31:1255":{"crate_id":31,"path":["tokio_util","codec","framed_impl","ReadFrame"],"kind":"struct"},"17:13540":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:13764":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"22:3790":{"crate_id":22,"path":["tokio","io","util","async_read_ext","AsyncReadExt"],"kind":"trait"},"26:1747":{"crate_id":26,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:4653":{"crate_id":1,"path":["std","io","BufRead","consume"],"kind":"foreign_type"},"1:14676":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:3285":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"26:5966":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"33:482":{"crate_id":33,"path":["tracing","span","PhantomNotSend"],"kind":"struct"},"44:133":{"crate_id":44,"path":["indexmap","map","core","raw","OccupiedEntry"],"kind":"struct"},"2:47634":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:3135":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:3588":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"22:1593":{"crate_id":22,"path":["tokio","io","driver","Handle"],"kind":"struct"},"16:4704":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:14297":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"45:1885":{"crate_id":45,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:12385":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:48927":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"22:2721":{"crate_id":22,"path":["tokio","io","util","copy_bidirectional","CopyBidirectional"],"kind":"struct"},"22:437":{"crate_id":22,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"2:7235":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:11696":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"26:4339":{"crate_id":26,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"12:2005":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"21:361":{"crate_id":21,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"44:1291":{"crate_id":44,"path":["indexmap","HashValue"],"kind":"struct"},"2:12579":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:47035":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"26:1663":{"crate_id":26,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:10912":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:5679":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:8014":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator","len"],"kind":"foreign_type"},"1:2175":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:1625":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:12262":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"12:1159":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:11170":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"22:5127":{"crate_id":22,"path":["tokio","net","tcp","split","WriteHalf"],"kind":"struct"},"1:11176":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"5:7796":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:48781":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"37:3213":{"crate_id":37,"path":["http","uri","ErrorKind"],"kind":"enum"},"2:31586":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"5:2886":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:12779":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"40:2709":{"crate_id":40,"path":["futures_util","stream","stream","StreamExt","concat"],"kind":"foreign_type"},"26:4168":{"crate_id":26,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:5346":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"21:48":{"crate_id":21,"path":["bytes","buf","buf_impl","Buf","has_remaining"],"kind":"foreign_type"},"5:5167":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"33:0":{"crate_id":33,"path":["tracing"],"kind":"module"},"1:2146":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:49237":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"31:1446":{"crate_id":31,"path":["tokio_util","sync","mpsc","PollSendError"],"kind":"struct"},"1:3312":{"crate_id":1,"path":["std","io"],"kind":"module"},"31:594":{"crate_id":31,"path":["tokio_util","codec","encoder","Encoder"],"kind":"trait"},"5:1532":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"19:0":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:46052":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"22:4444":{"crate_id":22,"path":["tokio","net","addr","sealed","OneOrMore"],"kind":"enum"},"1:2445":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:48705":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:46020":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:15718":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"26:4300":{"crate_id":26,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"34:195":{"crate_id":34,"path":["tracing_core","dispatcher","NoSubscriber"],"kind":"struct"},"2:49517":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:8168":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","filter"],"kind":"foreign_type"},"26:1609":{"crate_id":26,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:4370":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:49571":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:12774":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"31:1439":{"crate_id":31,"path":["tokio_util","sync","intrusive_double_linked_list","LinkedList"],"kind":"struct"},"1:11041":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"2:45706":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:9524":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"22:5849":{"crate_id":22,"path":["tokio","park","either","Either"],"kind":"enum"},"40:4027":{"crate_id":40,"path":["futures_util","stream","poll_fn","PollFn"],"kind":"struct"},"40:6479":{"crate_id":40,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"1:12003":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:3289":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:23520":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:13685":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"26:6902":{"crate_id":26,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:5180":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"26:1571":{"crate_id":26,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"23:696":{"crate_id":23,"path":["mio","sys","unix","uds","socketaddr","AsciiEscaped"],"kind":"struct"},"2:45951":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"22:10562":{"crate_id":22,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"2:7493":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:14895":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"37:2354":{"crate_id":37,"path":["http","header","map","HeaderMap"],"kind":"struct"},"2:49791":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"26:0":{"crate_id":26,"path":["libc"],"kind":"module"},"6:5261":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"31:1375":{"crate_id":31,"path":["tokio_util","sync","cancellation_token","PollState"],"kind":"enum"},"6:6111":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:9497":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"17:11970":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:49545":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:52595":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:6768":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"8:0":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"5:3121":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:7804":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"44:988":{"crate_id":44,"path":["indexmap","set","Drain"],"kind":"struct"},"26:615":{"crate_id":26,"path":["libc","unix","servent"],"kind":"struct"},"17:13119":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:45307":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:10058":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"2:49380":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"5:1394":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:5010":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"22:6853":{"crate_id":22,"path":["tokio","runtime","task","state","Snapshot"],"kind":"struct"},"17:12456":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"22:10449":{"crate_id":22,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"17:11779":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"40:8828":{"crate_id":40,"path":["futures_util","stream","try_stream","InspectErr"],"kind":"struct"},"22:3929":{"crate_id":22,"path":["tokio","io","util","buf_writer","SeekState"],"kind":"enum"},"17:10950":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"18:866":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:7119":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"40:5509":{"crate_id":40,"path":["futures_util","future","try_future","AndThen"],"kind":"struct"},"6:4422":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"14:194":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:4198":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:14768":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"6:5117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"26:5176":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"6:1579":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"44:1134":{"crate_id":44,"path":["indexmap","set","Union"],"kind":"struct"},"40:2757":{"crate_id":40,"path":["futures_util","stream","stream","StreamExt","select_next_some"],"kind":"foreign_type"},"20:46":{"crate_id":20,"path":["futures_core","future","TryFuture","Error"],"kind":"foreign_type"},"1:11832":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"22:11542":{"crate_id":22,"path":["tokio","io","util","write_int","WriteI128Le"],"kind":"struct"},"17:11932":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"26:5365":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:12474":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"20:44":{"crate_id":20,"path":["futures_core","future","TryFuture"],"kind":"trait"},"1:11943":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"5:910":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:48791":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:11766":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"22:1462":{"crate_id":22,"path":["tokio","io","driver","interest","Interest"],"kind":"struct"},"17:13620":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:14310":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"22:12870":{"crate_id":22,"path":["tokio","io","util","split","_","__Origin"],"kind":"struct"},"34:684":{"crate_id":34,"path":["tracing_core","subscriber","Subscriber"],"kind":"trait"},"40:7021":{"crate_id":40,"path":["futures_util","stream","stream","collect","_","__Origin"],"kind":"struct"},"1:6808":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:4704":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"26:560":{"crate_id":26,"path":["libc","unix","hostent"],"kind":"struct"},"16:7024":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:3365":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:3597":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:23462":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"22:7690":{"crate_id":22,"path":["tokio","runtime","queue","Steal"],"kind":"struct"},"44:115":{"crate_id":44,"path":["indexmap","map","core","raw","DebugIndices"],"kind":"struct"},"16:6357":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:11235":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"26:5261":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:4384":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"22:1537":{"crate_id":22,"path":["tokio","io","driver","scheduled_io","ScheduledIo"],"kind":"struct"},"2:47853":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"22:6745":{"crate_id":22,"path":["tokio","runtime","enter","DisallowBlockingGuard"],"kind":"struct"},"22:7459":{"crate_id":22,"path":["tokio","runtime","blocking","pool","Spawner"],"kind":"struct"},"16:5273":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:9711":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"40:10000":{"crate_id":40,"path":["futures_util","fns","ChainFn"],"kind":"struct"},"22:11591":{"crate_id":22,"path":["tokio","io","util","write_int","WriteI64Le"],"kind":"struct"},"17:10128":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"40:5209":{"crate_id":40,"path":["futures_util","future","try_future","into_future","IntoFuture"],"kind":"struct"},"44:0":{"crate_id":44,"path":["indexmap"],"kind":"module"},"29:1030":{"crate_id":29,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"40:6556":{"crate_id":40,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"5:6383":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:5029":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:47965":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"37:3040":{"crate_id":37,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"2:46122":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:5256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"0:3172":{"crate_id":0,"path":["h2","server"],"kind":"module"},"2:10053":{"crate_id":2,"path":["core","hash","Hash","hash"],"kind":"foreign_type"},"23:265":{"crate_id":23,"path":["mio","interest","Interest"],"kind":"struct"},"17:12645":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"22:7428":{"crate_id":22,"path":["tokio","runtime","handle","TryCurrentError"],"kind":"struct"},"22:1694":{"crate_id":22,"path":["tokio","io","async_fd","AsyncFdReadyGuard"],"kind":"struct"},"6:4442":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:4542":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"12:812":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:4535":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"22:12515":{"crate_id":22,"path":["tokio","io","util","write_all_buf","WriteAllBuf"],"kind":"struct"},"5:8091":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:5729":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"40:8507":{"crate_id":40,"path":["futures_util","stream","stream","zip","Zip"],"kind":"struct"},"16:3218":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:3200":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"40:9825":{"crate_id":40,"path":["futures_util","stream","select","_","__Origin"],"kind":"struct"},"31:982":{"crate_id":31,"path":["tokio_util","codec","length_delimited"],"kind":"module"},"26:6200":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:1695":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:51472":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"26:657":{"crate_id":26,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"18:0":{"crate_id":18,"path":["memchr"],"kind":"module"},"26:4041":{"crate_id":26,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"34:1185":{"crate_id":34,"path":["tracing_core","span","Record"],"kind":"struct"},"5:5461":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:11231":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:10477":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:5855":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:14333":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"40:5362":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"5:7242":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:1597":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:48157":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"26:4108":{"crate_id":26,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:11030":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:11760":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:11794":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"22:3780":{"crate_id":22,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt"],"kind":"trait"},"22:13121":{"crate_id":22,"path":["tokio","io","util","fill_buf","FillBuf"],"kind":"struct"},"22:6591":{"crate_id":22,"path":["tokio","runtime","task","waker","WakerRef"],"kind":"struct"},"2:22557":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:1617":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"34:1101":{"crate_id":34,"path":["tracing_core","metadata","KindInner"],"kind":"enum"},"22:3942":{"crate_id":22,"path":["tokio","io","util","copy","CopyBuffer"],"kind":"struct"},"6:5279":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:2153":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"22:6440":{"crate_id":22,"path":["tokio","runtime","task","state","State"],"kind":"struct"},"40:2686":{"crate_id":40,"path":["futures_util","stream","stream","StreamExt","next"],"kind":"foreign_type"},"17:12712":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:7547":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"40:9962":{"crate_id":40,"path":["futures_util","stream","unfold","_","__Origin"],"kind":"struct"},"1:15717":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"12:747":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:7439":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"11:54":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"1:10414":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"22:14642":{"crate_id":22,"path":["tokio","io","util","buf_stream","BufStream"],"kind":"struct"},"2:23369":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:49750":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:13788":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"40:9904":{"crate_id":40,"path":["futures_util","stream","select_with_strategy","_","__Origin"],"kind":"struct"},"17:9809":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:13356":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:13240":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"40:6663":{"crate_id":40,"path":["futures_util","future","try_join","TryJoin"],"kind":"struct"},"22:565":{"crate_id":22,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"5:2416":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:6210":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:11121":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:6682":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"40:5778":{"crate_id":40,"path":["futures_util","future","try_future","InspectOk"],"kind":"struct"},"2:45881":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:6636":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:4628":{"crate_id":1,"path":["std","io","Write","write_vectored"],"kind":"foreign_type"},"26:4120":{"crate_id":26,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:10657":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"40:2745":{"crate_id":40,"path":["futures_util","stream","stream","StreamExt","zip"],"kind":"foreign_type"},"16:6110":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:5178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:4035":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:7843":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:51346":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"22:8220":{"crate_id":22,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"31:1262":{"crate_id":31,"path":["tokio_util","codec","framed_impl","RWFrames"],"kind":"struct"},"45:1318":{"crate_id":45,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"22:7537":{"crate_id":22,"path":["tokio","runtime","handle","EnterGuard"],"kind":"struct"},"17:13590":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:10061":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"22:11787":{"crate_id":22,"path":["tokio","io","util","write_int","WriteU64Le"],"kind":"struct"},"16:5753":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:46100":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:3287":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:6872":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"22:10464":{"crate_id":22,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"24:238":{"crate_id":24,"path":["log","MaybeStaticStr"],"kind":"enum"},"26:4015":{"crate_id":26,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:3609":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"29:809":{"crate_id":29,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:15721":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"45:692":{"crate_id":45,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:47371":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:2158":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:3041":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"22:11738":{"crate_id":22,"path":["tokio","io","util","write_int","WriteU128Le"],"kind":"struct"},"22:6956":{"crate_id":22,"path":["tokio","runtime","basic_scheduler","BasicScheduler"],"kind":"struct"},"16:7894":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:4300":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:15702":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:14682":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:10844":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:12327":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:10304":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:13520":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:5334":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:1542":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"26:5948":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:7073":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"26:582":{"crate_id":26,"path":["libc","unix","winsize"],"kind":"struct"},"16:6021":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"5:8036":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"22:9655":{"crate_id":22,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"26:4275":{"crate_id":26,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:7761":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:2843":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:13760":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:9802":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"26:6831":{"crate_id":26,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"12:1762":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:45964":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"40:4333":{"crate_id":40,"path":["futures_util","task","spawn","LocalSpawnExt"],"kind":"trait"},"26:4256":{"crate_id":26,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:9296":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"40:6886":{"crate_id":40,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"31:1279":{"crate_id":31,"path":["tokio_util","codec","length_delimited","Builder"],"kind":"struct"},"16:4734":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"40:8017":{"crate_id":40,"path":["futures_util","stream","stream","peek","Peek"],"kind":"struct"},"2:3035":{"crate_id":2,"path":["core","convert","From","from"],"kind":"foreign_type"},"17:12771":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:9574":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"40:4915":{"crate_id":40,"path":["futures_util","future","future","MapInto"],"kind":"struct"},"16:6152":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"37:3158":{"crate_id":37,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"2:48748":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:9971":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:12537":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"26:5393":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"31:1291":{"crate_id":31,"path":["tokio_util","codec","length_delimited","LengthDelimitedCodec"],"kind":"struct"},"2:8421":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"40:7224":{"crate_id":40,"path":["futures_util","stream","stream","filter","Filter"],"kind":"struct"},"2:46063":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:7174":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:4374":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:3139":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"0:3478":{"crate_id":0,"path":["h2","PingPong"],"kind":"struct"},"22:14451":{"crate_id":22,"path":["tokio","io","util","lines","Lines"],"kind":"struct"},"24:275":{"crate_id":24,"path":["log","Record"],"kind":"struct"},"22:895":{"crate_id":22,"path":["tokio","coop","with_budget","ResetGuard"],"kind":"struct"},"6:614":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"40:6179":{"crate_id":40,"path":["futures_util","future","try_maybe_done","TryMaybeDone"],"kind":"enum"},"2:48141":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"22:7037":{"crate_id":22,"path":["tokio","runtime","basic_scheduler","InnerGuard"],"kind":"struct"},"16:4671":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"22:5885":{"crate_id":22,"path":["tokio","park","thread","Inner"],"kind":"struct"},"2:8149":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","nth"],"kind":"foreign_type"},"5:4268":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"18:694":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"31:577":{"crate_id":31,"path":["tokio_util","codec","decoder","Decoder"],"kind":"trait"},"1:6266":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"5:1593":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:7996":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator","rfold"],"kind":"foreign_type"},"2:37057":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"40:8899":{"crate_id":40,"path":["futures_util","stream","try_stream","into_stream","IntoStream"],"kind":"struct"},"9:1056":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"29:1058":{"crate_id":29,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"12:2032":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"22:13910":{"crate_id":22,"path":["tokio","io","util","read_int","ReadI32"],"kind":"struct"},"22:8971":{"crate_id":22,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"26:4362":{"crate_id":26,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:50593":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:5215":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:45775":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"26:5350":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:2945":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"6:4477":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"22:945":{"crate_id":22,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"1:11354":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"22:9871":{"crate_id":22,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"16:4417":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:7467":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"6:1567":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:4413":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"5:4950":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"29:833":{"crate_id":29,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:52532":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:2384":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"18:136":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:888":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"18:704":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"22:4179":{"crate_id":22,"path":["tokio","io","util","vec_with_initialized","VecWithInitialized"],"kind":"struct"},"6:1685":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"21:1239":{"crate_id":21,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"2:8173":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","enumerate"],"kind":"foreign_type"},"22:8806":{"crate_id":22,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"31:1575":{"crate_id":31,"path":["tokio_util","codec","framed","Framed"],"kind":"struct"},"39:37":{"crate_id":39,"path":["itoa","private","Sealed"],"kind":"trait"},"2:3626":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"14:56":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:14833":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:24130":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:45677":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:7571":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:6166":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:51036":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"26:3965":{"crate_id":26,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"45:176":{"crate_id":45,"path":["hashbrown","raw","inner","RawTable"],"kind":"struct"},"26:3843":{"crate_id":26,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:6146":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"16:0":{"crate_id":16,"path":["gimli"],"kind":"module"},"22:10303":{"crate_id":22,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"1:9614":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"12:1253":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"9:927":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"26:5170":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"12:396":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:3743":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:51712":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:11555":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"23:1582":{"crate_id":23,"path":["mio","net","uds","datagram","UnixDatagram"],"kind":"struct"},"1:6386":{"crate_id":1,"path":["std","os","unix","process","CommandExt","pre_exec"],"kind":"foreign_type"},"2:3168":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:10901":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:23548":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:2164":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:13353":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:7453":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:4147":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:13746":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:7250":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"9:1075":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:24028":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:3571":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:1467":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"17:12073":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:9861":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:15710":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:10071":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:5488":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:10650":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:6382":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"26:6866":{"crate_id":26,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:7423":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:13661":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:3988":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:11539":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"22:10443":{"crate_id":22,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"2:3376":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"40:7425":{"crate_id":40,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"5:6307":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:3144":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"40:221":{"crate_id":40,"path":["futures_util","future","future","FutureExt"],"kind":"trait"},"26:1695":{"crate_id":26,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"40:6154":{"crate_id":40,"path":["futures_util","future","lazy","Lazy"],"kind":"struct"},"16:5717":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:9245":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:3195":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"26:6134":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:46898":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"22:7522":{"crate_id":22,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"40:5291":{"crate_id":40,"path":["futures_util","future","try_future","try_flatten_err","TryFlattenErr"],"kind":"enum"},"2:7953":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"26:6860":{"crate_id":26,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:2294":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:50551":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:7048":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:12142":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"29:877":{"crate_id":29,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"26:6872":{"crate_id":26,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:7664":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:13312":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"5:998":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:11947":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"40:8042":{"crate_id":40,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"1:15719":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:6032":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"5:6271":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"22:3990":{"crate_id":22,"path":["tokio","io","util","mem","DuplexStream"],"kind":"struct"},"26:4492":{"crate_id":26,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"37:2407":{"crate_id":37,"path":["http","header","map","ValuesMut"],"kind":"struct"},"16:3800":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"31:1769":{"crate_id":31,"path":["tokio_util","codec","framed_impl","FramedImpl"],"kind":"struct"},"22:8037":{"crate_id":22,"path":["tokio","runtime","thread_pool","idle","State"],"kind":"struct"},"22:10505":{"crate_id":22,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"2:8196":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","collect"],"kind":"foreign_type"},"2:4":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"0:3091":{"crate_id":0,"path":["h2","client","handshake"],"kind":"function"},"1:5317":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"26:6007":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:45846":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"22:12326":{"crate_id":22,"path":["tokio","io","util","write_int","WriteU32"],"kind":"struct"},"2:10940":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:51061":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"15:0":{"crate_id":15,"path":["addr2line"],"kind":"module"},"26:3893":{"crate_id":26,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:31773":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"26:6085":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:9379":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:1591":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:299":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"26:4445":{"crate_id":26,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:46914":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:51425":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"37:3194":{"crate_id":37,"path":["http","uri","Parts"],"kind":"struct"},"5:7380":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:11430":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:48546":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"22:8217":{"crate_id":22,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"37:3153":{"crate_id":37,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"40:6691":{"crate_id":40,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"2:50370":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:49549":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"34:1150":{"crate_id":34,"path":["tracing_core","parent","Parent"],"kind":"enum"},"18:739":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"27:33":{"crate_id":27,"path":["pin_project_lite","__private","UnsafeDropInPlaceGuard"],"kind":"struct"},"2:3234":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:7742":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"40:9583":{"crate_id":40,"path":["futures_util","stream","try_stream","try_skip_while","TrySkipWhile"],"kind":"struct"},"5:3479":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"40:7588":{"crate_id":40,"path":["futures_util","stream","stream","all","All"],"kind":"struct"},"1:4657":{"crate_id":1,"path":["std","io","BufRead","read_line"],"kind":"foreign_type"},"2:12572":{"crate_id":2,"path":["core","str","pattern","Searcher","next_match"],"kind":"foreign_type"},"17:13062":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:3996":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"40:9501":{"crate_id":40,"path":["futures_util","stream","try_stream","try_fold","_","__Origin"],"kind":"struct"},"42:21":{"crate_id":42,"path":["futures_task","spawn","SpawnError"],"kind":"struct"},"2:46143":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"44:586":{"crate_id":44,"path":["indexmap","map","ValuesMut"],"kind":"struct"},"22:11329":{"crate_id":22,"path":["tokio","task","unconstrained","_","__Origin"],"kind":"struct"},"40:5007":{"crate_id":40,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"40:5803":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:49741":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"40:9072":{"crate_id":40,"path":["futures_util","stream","try_stream","or_else","OrElse"],"kind":"struct"},"9:469":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"29:885":{"crate_id":29,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"18:620":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"45:372":{"crate_id":45,"path":["hashbrown","raw","inner","RawIntoIter"],"kind":"struct"},"26:1677":{"crate_id":26,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:55459":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:50982":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"5:3949":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:1486":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:8479":{"crate_id":2,"path":["core","lazy","OnceCell"],"kind":"struct"},"17:2543":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"22:10468":{"crate_id":22,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"1:8393":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:5741":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:3359":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:47245":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"37:2985":{"crate_id":37,"path":["http","method","Inner"],"kind":"enum"},"6:1718":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:14792":{"crate_id":1,"path":["std","sys","unix","time","inner","SystemTime"],"kind":"struct"},"22:3853":{"crate_id":22,"path":["tokio","io","util","async_write_ext","AsyncWriteExt"],"kind":"trait"},"31:1331":{"crate_id":31,"path":["tokio_util","codec","lines_codec","LinesCodecError"],"kind":"enum"},"33:103":{"crate_id":33,"path":["tracing","field","AsField"],"kind":"trait"},"31:1231":{"crate_id":31,"path":["tokio_util","codec","bytes_codec","BytesCodec"],"kind":"struct"},"33:486":{"crate_id":33,"path":["tracing","__macro_support","MacroCallsite"],"kind":"struct"},"22:10290":{"crate_id":22,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"22:6637":{"crate_id":22,"path":["tokio","runtime","task","Task"],"kind":"struct"},"2:46011":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"22:5984":{"crate_id":22,"path":["tokio","runtime","task","core","Header"],"kind":"struct"},"2:52469":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:4308":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:5766":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"9:692":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:13978":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:10106":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"37:1352":{"crate_id":37,"path":["http","request","Parts"],"kind":"struct"},"39:38":{"crate_id":39,"path":["itoa","Integer"],"kind":"trait"},"2:4568":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:13317":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:48775":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:45791":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:24300":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:48955":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"40:8690":{"crate_id":40,"path":["futures_util","stream","try_stream","ErrInto"],"kind":"struct"},"40:9443":{"crate_id":40,"path":["futures_util","stream","try_stream","try_concat","_","__Origin"],"kind":"struct"},"17:10975":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:15700":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"9:234":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"40:492":{"crate_id":40,"path":["futures_util","future","try_future","TryFutureExt","map_err"],"kind":"foreign_type"},"37:2428":{"crate_id":37,"path":["http","header","map","GetAll"],"kind":"struct"},"17:9332":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:15701":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"12:2309":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"23:1008":{"crate_id":23,"path":["mio","sys","unix","pipe","Receiver"],"kind":"struct"},"2:3036":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:14040":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"26:3980":{"crate_id":26,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:8141":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","next"],"kind":"foreign_type"},"40:5839":{"crate_id":40,"path":["futures_util","future","try_future","InspectErr"],"kind":"struct"},"2:46379":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"7:0":{"crate_id":7,"path":["unwind"],"kind":"module"},"26:607":{"crate_id":26,"path":["libc","unix","tms"],"kind":"struct"},"26:502":{"crate_id":26,"path":["libc","unix","group"],"kind":"struct"},"40:7853":{"crate_id":40,"path":["futures_util","stream","stream","map","_","__Origin"],"kind":"struct"},"17:12247":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:50574":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:9529":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"22:6372":{"crate_id":22,"path":["tokio","runtime","task","raw","RawTask"],"kind":"struct"},"17:9551":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:3888":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:45397":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:4330":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:5346":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:9851":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"12:160":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"40:5075":{"crate_id":40,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"16:5421":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:7420":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"2:13458":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"5:7848":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:12568":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"34:1177":{"crate_id":34,"path":["tracing_core","span","Attributes"],"kind":"struct"},"17:13221":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:9859":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"18:650":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:15716":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:11017":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"1:5928":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"3:309":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:10760":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"0:8622":{"crate_id":0,"path":["h2","client","Builder"],"kind":"struct"},"37:3059":{"crate_id":37,"path":["http","response","Builder"],"kind":"struct"},"1:11331":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:6101":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:11209":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"0:3285":{"crate_id":0,"path":["h2","server","Handshake"],"kind":"struct"},"16:3195":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"26:1645":{"crate_id":26,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"12:853":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"17:10864":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"26:510":{"crate_id":26,"path":["libc","unix","utimbuf"],"kind":"struct"},"37:2950":{"crate_id":37,"path":["http","header","value","ToStrError"],"kind":"struct"},"22:11269":{"crate_id":22,"path":["tokio","util","try_lock","LockGuard"],"kind":"struct"},"29:137":{"crate_id":29,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"40:7759":{"crate_id":40,"path":["futures_util","stream","stream","Inspect"],"kind":"struct"},"36:0":{"crate_id":36,"path":["tracing_attributes"],"kind":"module"},"1:8609":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:11616":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"26:3953":{"crate_id":26,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"26:3880":{"crate_id":26,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"12:2045":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"26:1541":{"crate_id":26,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:2815":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"26:6615":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"31:1393":{"crate_id":31,"path":["tokio_util","sync","cancellation_token","CancellationState"],"kind":"enum"},"6:4210":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:9255":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"40:8917":{"crate_id":40,"path":["futures_util","stream","try_stream","into_stream","_","__Origin"],"kind":"struct"},"26:4281":{"crate_id":26,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"40:5110":{"crate_id":40,"path":["futures_util","future","future","NeverError"],"kind":"struct"},"45:1575":{"crate_id":45,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:9371":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"22:11235":{"crate_id":22,"path":["tokio","util","wake","WakerRef"],"kind":"struct"},"16:6999":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:10987":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"40:2730":{"crate_id":40,"path":["futures_util","stream","stream","StreamExt","skip_while"],"kind":"foreign_type"},"22:10542":{"crate_id":22,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"23:1012":{"crate_id":23,"path":["mio","token","Token"],"kind":"struct"},"40:9457":{"crate_id":40,"path":["futures_util","stream","try_stream","try_fold","TryFold"],"kind":"struct"},"2:23495":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:5227":{"crate_id":2,"path":["core","iter"],"kind":"module"},"22:5923":{"crate_id":22,"path":["tokio","runtime","enter","Enter"],"kind":"struct"},"40:9841":{"crate_id":40,"path":["futures_util","stream","select_with_strategy","PollNext"],"kind":"enum"},"6:1739":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:50935":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"40:7732":{"crate_id":40,"path":["futures_util","stream","stream","fuse","_","__Origin"],"kind":"struct"},"22:14285":{"crate_id":22,"path":["tokio","io","util","read_exact","ReadExact"],"kind":"struct"},"17:10149":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:11653":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:49027":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:45690":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:10673":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"22:5821":{"crate_id":22,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"17:9769":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"40:8200":{"crate_id":40,"path":["futures_util","stream","stream","skip_while","SkipWhile"],"kind":"struct"},"29:840":{"crate_id":29,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:4922":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"22:1552":{"crate_id":22,"path":["tokio","io","driver","scheduled_io","Readiness"],"kind":"struct"},"1:15170":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:10833":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:13963":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"22:1475":{"crate_id":22,"path":["tokio","io","driver","ready","Ready"],"kind":"struct"},"17:12598":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"44:1102":{"crate_id":44,"path":["indexmap","set","SymmetricDifference"],"kind":"struct"},"6:5535":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:9729":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:375":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"40:9721":{"crate_id":40,"path":["futures_util","stream","iter","Iter"],"kind":"struct"},"2:47455":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:1032":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"40:8557":{"crate_id":40,"path":["futures_util","stream","stream","scan","Scan"],"kind":"struct"},"17:9592":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"17:10788":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"12:556":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:49223":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:5992":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"45:445":{"crate_id":45,"path":["hashbrown","raw","inner","RawIterHashInner"],"kind":"struct"},"2:10954":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"12:469":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"22:8667":{"crate_id":22,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"2:49537":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"37:1203":{"crate_id":37,"path":["http","method"],"kind":"module"},"43:51":{"crate_id":43,"path":["slab","Drain"],"kind":"struct"},"22:9413":{"crate_id":22,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"22:10412":{"crate_id":22,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"2:52935":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"40:3638":{"crate_id":40,"path":["futures_util","stream","try_stream","TryStreamExt"],"kind":"trait"},"22:5118":{"crate_id":22,"path":["tokio","net","tcp","socket","TcpSocket"],"kind":"struct"},"22:5138":{"crate_id":22,"path":["tokio","net","tcp","split_owned","OwnedWriteHalf"],"kind":"struct"},"22:11126":{"crate_id":22,"path":["tokio","util","rand","FastRand"],"kind":"struct"},"31:1430":{"crate_id":31,"path":["tokio_util","sync","intrusive_double_linked_list","ListNode"],"kind":"struct"},"6:5407":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"22:11836":{"crate_id":22,"path":["tokio","io","util","write_int","WriteU32Le"],"kind":"struct"},"22:5875":{"crate_id":22,"path":["tokio","park","thread","ParkThread"],"kind":"struct"},"1:15698":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:3259":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"40:7405":{"crate_id":40,"path":["futures_util","stream","stream","Flatten"],"kind":"struct"},"17:12040":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"27:40":{"crate_id":27,"path":["pin_project_lite","__private","UnsafeOverwriteGuard"],"kind":"struct"},"2:22133":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"5:1556":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"22:10038":{"crate_id":22,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"22:8654":{"crate_id":22,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"1:9568":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"22:3867":{"crate_id":22,"path":["tokio","io","util","async_write_ext","AsyncWriteExt","flush"],"kind":"foreign_type"},"17:11406":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"40:6414":{"crate_id":40,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"17:13799":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"40:10021":{"crate_id":40,"path":["futures_util","fns","MergeResultFn"],"kind":"struct"},"5:7842":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:4632":{"crate_id":1,"path":["std","io","Write","write_all"],"kind":"foreign_type"},"40:7957":{"crate_id":40,"path":["futures_util","stream","stream","next","Next"],"kind":"struct"},"1:10508":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"26:4076":{"crate_id":26,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:2420":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:27481":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:13965":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:7940":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"31:66":{"crate_id":31,"path":["tokio_util","sync","cancellation_token","WaitForCancellationFuture"],"kind":"struct"},"22:8856":{"crate_id":22,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"17:11981":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:13826":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"22:8979":{"crate_id":22,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"17:13933":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:11110":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"22:1008":{"crate_id":22,"path":["tokio","select"],"kind":"macro"},"1:2569":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"1:10415":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"26:623":{"crate_id":26,"path":["libc","unix","protoent"],"kind":"struct"},"6:4378":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"42:192":{"crate_id":42,"path":["futures_task","noop_waker","noop_waker_ref","SyncRawWaker"],"kind":"struct"},"22:0":{"crate_id":22,"path":["tokio"],"kind":"module"},"1:8329":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:10543":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:10571":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:10468":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"22:7941":{"crate_id":22,"path":["tokio","runtime","thread_pool","worker","block_in_place","Reset"],"kind":"struct"},"17:13282":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:37033":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"45:993":{"crate_id":45,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:8917":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:4633":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"5:8024":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"0:3052":{"crate_id":0,"path":["h2","client","Connection"],"kind":"struct"},"22:1494":{"crate_id":22,"path":["tokio","io","driver","registration","Registration"],"kind":"struct"},"16:4790":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"12:761":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:11371":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:4043":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"26:6155":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:46112":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"29:1069":{"crate_id":29,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:5228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"40:7502":{"crate_id":40,"path":["futures_util","stream","stream","fold","_","__Origin"],"kind":"struct"},"17:13884":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"22:1622":{"crate_id":22,"path":["tokio","io","poll_evented","PollEvented"],"kind":"struct"},"40:8313":{"crate_id":40,"path":["futures_util","stream","stream","take_while","TakeWhile"],"kind":"struct"},"40:5458":{"crate_id":40,"path":["futures_util","future","try_future","TryFlattenStream"],"kind":"struct"},"40:4656":{"crate_id":40,"path":["futures_util","future","future","map","Map"],"kind":"enum"},"22:12179":{"crate_id":22,"path":["tokio","io","util","write_int","WriteI16"],"kind":"struct"},"6:6072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:23926":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:10611":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"0:9059":{"crate_id":0,"path":["h2","StreamId"],"kind":"struct"},"33:446":{"crate_id":33,"path":["tracing","instrument","_","__Origin"],"kind":"struct"},"6:630":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:15681":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:13098":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"26:4498":{"crate_id":26,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:4644":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"12:181":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"26:4021":{"crate_id":26,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"40:7825":{"crate_id":40,"path":["futures_util","stream","stream","map","Map"],"kind":"struct"},"2:2640":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:13429":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"22:7763":{"crate_id":22,"path":["tokio","runtime","thread_pool","atomic_cell","AtomicCell"],"kind":"struct"},"6:1535":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:10098":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"20:194":{"crate_id":20,"path":["futures_core","task","__internal","atomic_waker","AtomicWaker"],"kind":"struct"},"2:48873":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:6876":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"26:3947":{"crate_id":26,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:12795":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:15095":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:11441":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:48615":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:50487":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"16:5456":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:5048":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"26:3920":{"crate_id":26,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"22:12081":{"crate_id":22,"path":["tokio","io","util","write_int","WriteI64"],"kind":"struct"},"1:7264":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:48805":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:8013":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:1423":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"26:5200":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"32:17":{"crate_id":32,"path":["futures_sink","Sink"],"kind":"trait"},"22:7526":{"crate_id":22,"path":["tokio","runtime","handle","Handle"],"kind":"struct"},"17:13780":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:11458":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:11424":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:47052":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"5:3128":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:3848":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:45992":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"5:779":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:4324":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"22:3987":{"crate_id":22,"path":["tokio","io","util","empty","Empty"],"kind":"struct"},"16:5360":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:12341":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"31:1414":{"crate_id":31,"path":["tokio_util","sync","cancellation_token","StateSnapshot"],"kind":"struct"},"1:11011":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"1:6640":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"26:1550":{"crate_id":26,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"37:1565":{"crate_id":37,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"40:6834":{"crate_id":40,"path":["futures_util","future","try_join","TryJoin5"],"kind":"struct"},"1:3287":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"26:1617":{"crate_id":26,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:7392":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:55511":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:7321":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"9:157":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"26:5253":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"42:0":{"crate_id":42,"path":["futures_task"],"kind":"module"},"18:720":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:13637":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"18:820":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"22:929":{"crate_id":22,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"16:3145":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"40:8416":{"crate_id":40,"path":["futures_util","stream","stream","take_until","_","__Origin"],"kind":"struct"},"23:500":{"crate_id":23,"path":["mio","sys","unix","selector","epoll","event","debug_details","EventsDetails"],"kind":"struct"},"26:4306":{"crate_id":26,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:3479":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:46966":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"29:0":{"crate_id":29,"path":["memchr"],"kind":"module"},"26:4268":{"crate_id":26,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:50679":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"40:7185":{"crate_id":40,"path":["futures_util","stream","stream","enumerate","Enumerate"],"kind":"struct"},"22:492":{"crate_id":22,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"44:44":{"crate_id":44,"path":["indexmap","mutable_keys","PrivateMarker"],"kind":"struct"},"1:6734":{"crate_id":1,"path":["std","os","linux","process","ChildExt","take_pidfd"],"kind":"foreign_type"},"2:46334":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"26:81":{"crate_id":26,"path":["libc","unix","DIR"],"kind":"enum"},"16:3772":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:1140":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:10117":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"22:8017":{"crate_id":22,"path":["tokio","runtime","thread_pool","ThreadPool"],"kind":"struct"},"18:829":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:607":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"22:2002":{"crate_id":22,"path":["tokio","io","split","ReadHalf"],"kind":"struct"},"22:10518":{"crate_id":22,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"16:6413":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"29:695":{"crate_id":29,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:4627":{"crate_id":1,"path":["std","io","Write","write"],"kind":"foreign_type"},"26:6064":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:157":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:14279":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:38277":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:12552":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"22:12032":{"crate_id":22,"path":["tokio","io","util","write_int","WriteI128"],"kind":"struct"},"17:10407":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:10645":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:11817":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"22:13567":{"crate_id":22,"path":["tokio","io","util","read_int","ReadU64Le"],"kind":"struct"},"45:728":{"crate_id":45,"path":["hashbrown","map","Values"],"kind":"struct"},"22:8096":{"crate_id":22,"path":["tokio","coop","Budget"],"kind":"struct"},"2:50832":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"37:2437":{"crate_id":37,"path":["http","header","map","Entry"],"kind":"enum"},"22:13273":{"crate_id":22,"path":["tokio","io","util","read_int","ReadF32Le"],"kind":"struct"},"2:4768":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:49584":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"21:140":{"crate_id":21,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"22:12843":{"crate_id":22,"path":["tokio","io","util","split","Split"],"kind":"struct"},"40:9375":{"crate_id":40,"path":["futures_util","stream","try_stream","try_collect","TryCollect"],"kind":"struct"},"2:24062":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:10426":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"44:269":{"crate_id":44,"path":["indexmap","map","core","Entry"],"kind":"enum"},"17:13574":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:22355":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:907":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:52279":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:9034":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"26:5146":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:8112":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"22:3787":{"crate_id":22,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","consume"],"kind":"foreign_type"},"12:1667":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:12023":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"22:10310":{"crate_id":22,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"40:7711":{"crate_id":40,"path":["futures_util","stream","stream","fuse","Fuse"],"kind":"struct"},"37:2483":{"crate_id":37,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"6:608":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:4506":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"12:2331":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"40:4755":{"crate_id":40,"path":["futures_util","future","future","FlattenStream"],"kind":"struct"},"2:14":{"crate_id":2,"path":["core","write"],"kind":"macro"},"40:8715":{"crate_id":40,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"1:1618":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:5736":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"33:403":{"crate_id":33,"path":["tracing","instrument","_","__Origin"],"kind":"struct"},"0:8604":{"crate_id":0,"path":["h2","client","ResponseFuture"],"kind":"struct"},"37:2415":{"crate_id":37,"path":["http","header","map","Drain"],"kind":"struct"},"16:5433":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:52896":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:9842":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:11015":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"0:8699":{"crate_id":0,"path":["h2","server","SendResponse"],"kind":"struct"},"2:6458":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:6845":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"37:2571":{"crate_id":37,"path":["http","header","map","ExtraValue"],"kind":"struct"},"0:8618":{"crate_id":0,"path":["h2","client","PushPromises"],"kind":"struct"},"2:3275":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"45:350":{"crate_id":45,"path":["hashbrown","raw","inner","RawIter"],"kind":"struct"},"2:50737":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:12685":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"29:1022":{"crate_id":29,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"31:312":{"crate_id":31,"path":["tokio_util","sync","poll_semaphore","PollSemaphore"],"kind":"struct"},"40:7750":{"crate_id":40,"path":["futures_util","stream","stream","into_future","StreamFuture"],"kind":"struct"},"22:10322":{"crate_id":22,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"34:1205":{"crate_id":34,"path":["tracing_core","subscriber","Interest"],"kind":"struct"},"5:4730":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"5:2885":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"40:6361":{"crate_id":40,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"6:5146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"22:303":{"crate_id":22,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"1:11998":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:2777":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:3435":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"20:39":{"crate_id":20,"path":["futures_core","future","private_try_future","Sealed"],"kind":"trait"},"16:5522":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"37:2450":{"crate_id":37,"path":["http","header","map","VacantEntry"],"kind":"struct"},"1:14327":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:1070":{"crate_id":1,"path":["std","ascii","AsciiExt","to_ascii_lowercase"],"kind":"foreign_type"},"12:892":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"16:6577":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:5358":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"22:182":{"crate_id":22,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"2:8182":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","skip"],"kind":"foreign_type"},"1:14410":{"crate_id":1,"path":["std","sys","unix","locks","futex","ReentrantMutex"],"kind":"struct"},"17:9689":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:15705":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:10542":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:3127":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"26:5527":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:52858":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"26:4414":{"crate_id":26,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:1755":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"26:1731":{"crate_id":26,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:47413":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"16:5295":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:6015":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"26:6030":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:2733":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"5:7989":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:7342":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:45489":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"21:1024":{"crate_id":21,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"2:9972":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"31:1534":{"crate_id":31,"path":["tokio_util","codec","framed_read","FramedRead"],"kind":"struct"},"29:963":{"crate_id":29,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:576":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:9933":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:23479":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:13154":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:4224":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"22:13665":{"crate_id":22,"path":["tokio","io","util","read_int","ReadU16Le"],"kind":"struct"},"5:6291":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"43:41":{"crate_id":43,"path":["slab","Iter"],"kind":"struct"},"2:12571":{"crate_id":2,"path":["core","str","pattern","Searcher","next"],"kind":"foreign_type"},"2:12576":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher","next_back"],"kind":"foreign_type"},"17:10041":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"40:6121":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"17:10814":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:5373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:2484":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:2200":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:4506":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:14879":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"22:10879":{"crate_id":22,"path":["tokio","task","local","LocalSet"],"kind":"struct"},"34:788":{"crate_id":34,"path":["tracing_core","callsite","Identifier"],"kind":"struct"},"16:7786":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:11001":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:8414":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:15706":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:10635":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"40:0":{"crate_id":40,"path":["futures_util"],"kind":"module"},"6:582":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"22:10115":{"crate_id":22,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"2:3281":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"5:7058":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:4576":{"crate_id":1,"path":["std","io","Read","read_exact"],"kind":"foreign_type"},"40:5539":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"22:11084":{"crate_id":22,"path":["tokio","util","bit","Pack"],"kind":"struct"},"5:0":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:12230":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:12221":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:2890":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"40:8355":{"crate_id":40,"path":["futures_util","stream","stream","take_while","_","__Origin"],"kind":"struct"},"40:5227":{"crate_id":40,"path":["futures_util","future","try_future","into_future","_","__Origin"],"kind":"struct"},"2:46072":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:15703":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:49764":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"6:5423":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:603":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"40:5717":{"crate_id":40,"path":["futures_util","future","try_future","OkInto"],"kind":"struct"},"6:5974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:4049":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"22:9270":{"crate_id":22,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"2:2405":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:6857":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"26:528":{"crate_id":26,"path":["libc","unix","rlimit"],"kind":"struct"},"2:9623":{"crate_id":2,"path":["core","fmt","builders","DebugMap"],"kind":"struct"},"6:567":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:4276":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:2349":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:3149":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:46923":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"23:80":{"crate_id":23,"path":["mio","poll","Registry"],"kind":"struct"},"1:10929":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:8407":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"34:776":{"crate_id":34,"path":["tracing_core","sealed","Sealed"],"kind":"trait"},"2:10631":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"37:3313":{"crate_id":37,"path":["http","extensions","IdHasher"],"kind":"struct"},"22:3793":{"crate_id":22,"path":["tokio","io","util","async_read_ext","AsyncReadExt","read"],"kind":"foreign_type"},"1:3995":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"40:6197":{"crate_id":40,"path":["futures_util","future","option","OptionFuture"],"kind":"struct"},"1:6404":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:8007":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"6:6868":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:5401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:1431":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"10:0":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"21:42":{"crate_id":21,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"20:27":{"crate_id":20,"path":["futures_core","future","FusedFuture"],"kind":"trait"},"1:3602":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:4264":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"18:660":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"33:461":{"crate_id":33,"path":["tracing","span","Span"],"kind":"struct"},"44:534":{"crate_id":44,"path":["indexmap","map","Keys"],"kind":"struct"},"29:912":{"crate_id":29,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:50718":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:9368":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:13653":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:10211":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:45731":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:13152":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:13733":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"40:5656":{"crate_id":40,"path":["futures_util","future","try_future","ErrInto"],"kind":"struct"},"2:49391":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"37:1231":{"crate_id":37,"path":["http","method","InvalidMethod"],"kind":"struct"},"1:10783":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:11456":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"22:11265":{"crate_id":22,"path":["tokio","util","try_lock","TryLock"],"kind":"struct"},"17:13912":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:11572":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:4056":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"22:13420":{"crate_id":22,"path":["tokio","io","util","read_int","ReadI32Le"],"kind":"struct"},"1:15715":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:13532":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"42:114":{"crate_id":42,"path":["futures_task","future_obj","FutureObj"],"kind":"struct"},"29:939":{"crate_id":29,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:4186":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"22:12130":{"crate_id":22,"path":["tokio","io","util","write_int","WriteI32"],"kind":"struct"},"22:74":{"crate_id":22,"path":["tokio","macros","scoped_tls","set","Reset"],"kind":"struct"},"17:10377":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:8517":{"crate_id":2,"path":["core","lazy","Lazy"],"kind":"struct"},"16:7226":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:11047":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"5:7810":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:45266":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:8148":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","advance_by"],"kind":"foreign_type"},"1:11414":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"40:4865":{"crate_id":40,"path":["futures_util","future","future","IntoStream"],"kind":"struct"},"17:10502":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:1311":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"40:5244":{"crate_id":40,"path":["futures_util","future","try_future","try_flatten","TryFlatten"],"kind":"enum"},"1:10436":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"9:1020":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:5446":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"31:1309":{"crate_id":31,"path":["tokio_util","codec","lines_codec","LinesCodec"],"kind":"struct"},"40:6947":{"crate_id":40,"path":["futures_util","stream","stream","chain","Chain"],"kind":"struct"},"26:4370":{"crate_id":26,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:49525":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:5666":{"crate_id":1,"path":["std","os","unix","fs","FileExt","write_at"],"kind":"foreign_type"},"5:3658":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"16:7360":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:1457":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"37:2505":{"crate_id":37,"path":["http","header","map","Cursor"],"kind":"enum"},"6:6922":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:48392":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"40:4830":{"crate_id":40,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"17:12699":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:7903":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:3298":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:510":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:10253":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:9162":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"26:4230":{"crate_id":26,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"22:10570":{"crate_id":22,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"2:48683":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"22:11934":{"crate_id":22,"path":["tokio","io","util","write_int","WriteF64"],"kind":"struct"},"17:9719":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"22:3849":{"crate_id":22,"path":["tokio","io","util","async_seek_ext","AsyncSeekExt"],"kind":"trait"},"26:4424":{"crate_id":26,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"40:7357":{"crate_id":40,"path":["futures_util","stream","stream","flatten","Flatten"],"kind":"struct"},"22:14057":{"crate_id":22,"path":["tokio","io","util","read_int","ReadU64"],"kind":"struct"},"16:4823":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:4335":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:1473":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:3106":{"crate_id":2,"path":["core","default","Default","default"],"kind":"foreign_type"},"22:14673":{"crate_id":22,"path":["tokio","io","util","buf_reader","BufReader"],"kind":"struct"},"2:3040":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:7218":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:6093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"22:10769":{"crate_id":22,"path":["tokio","task","task_local","LocalKey"],"kind":"struct"},"17:13497":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"22:14660":{"crate_id":22,"path":["tokio","io","util","buf_stream","_","__Origin"],"kind":"struct"},"2:45851":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:11839":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"6:6880":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"45:1869":{"crate_id":45,"path":["hashbrown","raw","inner","Fallibility"],"kind":"enum"},"2:4432":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:11914":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"45:715":{"crate_id":45,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:50439":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"16:6620":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:3155":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"40:9031":{"crate_id":40,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"17:10001":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"22:4187":{"crate_id":22,"path":["tokio","io","util","repeat","Repeat"],"kind":"struct"},"22:9817":{"crate_id":22,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"2:50785":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:11304":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:12373":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:47329":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:51084":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"40:6218":{"crate_id":40,"path":["futures_util","future","option","_","__Origin"],"kind":"struct"},"1:6806":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:1515":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:13669":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"22:13469":{"crate_id":22,"path":["tokio","io","util","read_int","ReadI16Le"],"kind":"struct"},"23:1482":{"crate_id":23,"path":["mio","net","udp","UdpSocket"],"kind":"struct"},"16:6014":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"5:7733":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:7195":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"40:10106":{"crate_id":40,"path":["futures_util","fns","UnwrapOrElseFn"],"kind":"struct"},"2:22154":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"40:9526":{"crate_id":40,"path":["futures_util","stream","try_stream","try_unfold","TryUnfold"],"kind":"struct"},"26:1583":{"crate_id":26,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:52768":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:5366":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:2727":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:7424":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:13262":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"37:2970":{"crate_id":37,"path":["http","method","Method"],"kind":"struct"},"40:5864":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"17:11847":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:10961":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:3568":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:10224":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:1078":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"6:4414":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:6735":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:10599":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"21:0":{"crate_id":21,"path":["bytes"],"kind":"module"},"22:5782":{"crate_id":22,"path":["tokio","net","unix","split_owned","ReuniteError"],"kind":"struct"},"24:352":{"crate_id":24,"path":["log","SetLoggerError"],"kind":"struct"},"22:12228":{"crate_id":22,"path":["tokio","io","util","write_int","WriteU128"],"kind":"struct"},"2:46034":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"22:10526":{"crate_id":22,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"2:8390":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","is_sorted"],"kind":"foreign_type"},"26:4190":{"crate_id":26,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:11628":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"22:8412":{"crate_id":22,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"5:7449":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:2896":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:51503":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:6187":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"26:4400":{"crate_id":26,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:2724":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"26:4216":{"crate_id":26,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"34:793":{"crate_id":34,"path":["tracing_core","dispatcher","Dispatch"],"kind":"struct"},"31:0":{"crate_id":31,"path":["tokio_util"],"kind":"module"},"40:7206":{"crate_id":40,"path":["futures_util","stream","stream","enumerate","_","__Origin"],"kind":"struct"},"11:0":{"crate_id":11,"path":["adler"],"kind":"module"},"2:45218":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"45:439":{"crate_id":45,"path":["hashbrown","raw","inner","RawIterHash"],"kind":"struct"},"26:4469":{"crate_id":26,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:8667":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"22:224":{"crate_id":22,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"1:14541":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:10266":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"26:4058":{"crate_id":26,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"22:6199":{"crate_id":22,"path":["tokio","runtime","task","harness","poll_future","Guard"],"kind":"struct"},"22:7687":{"crate_id":22,"path":["tokio","runtime","queue","Local"],"kind":"struct"},"1:5877":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"26:5291":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:3091":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:2142":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:0":{"crate_id":1,"path":["std"],"kind":"module"},"2:49254":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:3864":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"37:2495":{"crate_id":37,"path":["http","header","map","ValueDrain"],"kind":"struct"},"17:11726":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"44:560":{"crate_id":44,"path":["indexmap","map","Values"],"kind":"struct"},"37:3208":{"crate_id":37,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"6:6078":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"37:5":{"crate_id":37,"path":["http","header"],"kind":"module"},"2:47981":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"40:6708":{"crate_id":40,"path":["futures_util","future","try_join","TryJoin3"],"kind":"struct"},"6:6087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:55498":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"44:22":{"crate_id":44,"path":["indexmap","equivalent","Equivalent"],"kind":"trait"},"26:4102":{"crate_id":26,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"40:8626":{"crate_id":40,"path":["futures_util","stream","try_stream","and_then","AndThen"],"kind":"struct"},"40:8058":{"crate_id":40,"path":["futures_util","stream","stream","peek","NextIf"],"kind":"struct"},"40:9237":{"crate_id":40,"path":["futures_util","stream","try_stream","try_filter","_","__Origin"],"kind":"struct"},"27:27":{"crate_id":27,"path":["pin_project_lite","__private","AlwaysUnpin"],"kind":"struct"},"16:2889":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:11821":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"2:51665":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"5:981":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"45:1555":{"crate_id":45,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:8139":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:4176":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:6874":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"4:0":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"5:6827":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:1148":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:10968":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"15:248":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:23574":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:8844":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:4432":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"31:655":{"crate_id":31,"path":["tokio_util","codec","framed_impl","WriteFrame"],"kind":"struct"},"26:4476":{"crate_id":26,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:3264":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"22:5163":{"crate_id":22,"path":["tokio","net","udp","UdpSocket"],"kind":"struct"},"26:5248":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"16:5632":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:3269":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:4095":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"40:8274":{"crate_id":40,"path":["futures_util","stream","stream","take","Take"],"kind":"struct"},"2:48166":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:1549":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"22:8486":{"crate_id":22,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"23:1038":{"crate_id":23,"path":["mio","event","event","Event"],"kind":"struct"},"37:0":{"crate_id":37,"path":["http"],"kind":"module"},"2:50416":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:4461":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"37:3178":{"crate_id":37,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"6:4341":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:3338":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:7870":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:10052":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"26:1652":{"crate_id":26,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"37:3149":{"crate_id":37,"path":["http","uri","builder","Builder"],"kind":"struct"},"22:8076":{"crate_id":22,"path":["tokio","runtime","Runtime"],"kind":"struct"},"14:250":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"40:2685":{"crate_id":40,"path":["futures_util","stream","stream","StreamExt"],"kind":"trait"},"29:850":{"crate_id":29,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:4587":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:15035":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:9131":{"crate_id":1,"path":["std","lazy","SyncOnceCell"],"kind":"struct"},"2:3226":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:5208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:13388":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:23298":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:8793":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"12:1651":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"22:3951":{"crate_id":22,"path":["tokio","io","util","copy","Copy"],"kind":"struct"},"22:8865":{"crate_id":22,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"45:0":{"crate_id":45,"path":["hashbrown"],"kind":"module"},"26:4048":{"crate_id":26,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"18:885":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"40:9198":{"crate_id":40,"path":["futures_util","stream","try_stream","try_filter","TryFilter"],"kind":"struct"},"37:2625":{"crate_id":37,"path":["http","header","name","HdrName"],"kind":"struct"},"16:6605":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"33:422":{"crate_id":33,"path":["tracing","instrument","Instrumented"],"kind":"struct"},"17:2314":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"31:1363":{"crate_id":31,"path":["tokio_util","codec","any_delimiter_codec","AnyDelimiterCodecError"],"kind":"enum"},"22:14705":{"crate_id":22,"path":["tokio","io","util","buf_reader","_","__Origin"],"kind":"struct"},"2:10055":{"crate_id":2,"path":["core","hash","Hash","hash_slice"],"kind":"foreign_type"},"6:6142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:12408":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"22:7112":{"crate_id":22,"path":["tokio","runtime","blocking","pool","BlockingPool"],"kind":"struct"},"2:52794":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"31:1600":{"crate_id":31,"path":["tokio_util","codec","framed","_","__Origin"],"kind":"struct"},"2:8871":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:4110":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"12:877":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"16:6591":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"26:5932":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"26:5386":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:12307":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"45:1411":{"crate_id":45,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:10529":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:8299":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"22:587":{"crate_id":22,"path":["tokio","loom","std","atomic_u8","AtomicU8"],"kind":"struct"},"2:48178":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:46350":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:10518":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"37:2942":{"crate_id":37,"path":["http","header","value","HeaderValue"],"kind":"struct"},"12:949":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:11959":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"37:3244":{"crate_id":37,"path":["http","version","Version"],"kind":"struct"},"26:5957":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:10317":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:23664":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:4128":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"18:729":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:5696":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt","mtime"],"kind":"foreign_type"},"37:1483":{"crate_id":37,"path":["http","response","Parts"],"kind":"struct"},"2:23596":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"22:7463":{"crate_id":22,"path":["tokio","runtime","blocking","shutdown","Sender"],"kind":"struct"},"6:5242":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:15179":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"40:7784":{"crate_id":40,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"2:47027":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:10487":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"0:3323":{"crate_id":0,"path":["h2","server","handshake"],"kind":"function"},"23:1674":{"crate_id":23,"path":["mio","net","uds","listener","UnixListener"],"kind":"struct"},"5:4336":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:24266":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"31:1453":{"crate_id":31,"path":["tokio_util","sync","mpsc","State"],"kind":"enum"},"2:47929":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"2:9857":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"22:10418":{"crate_id":22,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"1:11262":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:11190":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"42:15":{"crate_id":42,"path":["futures_task","spawn","Spawn"],"kind":"trait"},"1:3997":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:7738":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:46043":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:11358":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:5802":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"6:561":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:45351":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"5:3466":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:15665":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"26:5358":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"44:312":{"crate_id":44,"path":["indexmap","map","core","VacantEntry"],"kind":"struct"},"1:7373":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:48973":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"0:3476":{"crate_id":0,"path":["h2","RecvStream"],"kind":"struct"},"1:14528":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:10353":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:11199":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"22:1699":{"crate_id":22,"path":["tokio","io","async_fd","AsyncFdReadyMutGuard"],"kind":"struct"},"5:2894":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:13386":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:46132":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"22:12893":{"crate_id":22,"path":["tokio","io","util","shutdown","Shutdown"],"kind":"struct"},"12:840":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:4510":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"40:4727":{"crate_id":40,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"1:10788":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:45190":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:12568":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:4008":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"23:1832":{"crate_id":23,"path":["mio","net","tcp","socket","TcpKeepalive"],"kind":"struct"},"0:8314":{"crate_id":0,"path":["h2","Reason"],"kind":"struct"},"1:10215":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"26:3941":{"crate_id":26,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"22:13763":{"crate_id":22,"path":["tokio","io","util","read_int","ReadF32"],"kind":"struct"},"34:295":{"crate_id":34,"path":["tracing_core","field","Value"],"kind":"trait"},"16:6554":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:11337":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"26:1527":{"crate_id":26,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"5:1543":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:10981":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:7514":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"40:6765":{"crate_id":40,"path":["futures_util","future","try_join","TryJoin4"],"kind":"struct"},"1:15709":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:4500":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"22:11983":{"crate_id":22,"path":["tokio","io","util","write_int","WriteF32"],"kind":"struct"},"1:2164":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"22:5756":{"crate_id":22,"path":["tokio","net","unix","listener","UnixListener"],"kind":"struct"},"17:12521":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"22:3786":{"crate_id":22,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","fill_buf"],"kind":"foreign_type"},"40:6023":{"crate_id":40,"path":["futures_util","future","try_future","MapOkOrElse"],"kind":"struct"},"40:7079":{"crate_id":40,"path":["futures_util","stream","stream","unzip","_","__Origin"],"kind":"struct"},"40:8598":{"crate_id":40,"path":["futures_util","stream","stream","scan","_","__Origin"],"kind":"struct"},"45:824":{"crate_id":45,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:3370":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"26:522":{"crate_id":26,"path":["libc","unix","timespec"],"kind":"struct"},"40:6504":{"crate_id":40,"path":["futures_util","future","join","Join5"],"kind":"struct"},"2:48388":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:13318":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:6269":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:5899":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"5:3922":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"40:7166":{"crate_id":40,"path":["futures_util","stream","stream","cycle","_","__Origin"],"kind":"struct"},"22:10976":{"crate_id":22,"path":["tokio","util","slab","Ref"],"kind":"struct"},"23:492":{"crate_id":23,"path":["mio","sys","unix","selector","epoll","Selector"],"kind":"struct"},"37:2664":{"crate_id":37,"path":["http","header","name","Custom"],"kind":"struct"},"17:12480":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"5:1498":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:11927":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"23:1362":{"crate_id":23,"path":["mio","net","tcp","stream","TcpStream"],"kind":"struct"},"29:1010":{"crate_id":29,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:7944":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:8191":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","flatten"],"kind":"foreign_type"},"18:644":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"34:284":{"crate_id":34,"path":["tracing_core","field","ValueSet"],"kind":"struct"},"1:10276":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"40:7685":{"crate_id":40,"path":["futures_util","stream","stream","for_each","_","__Origin"],"kind":"struct"},"22:11309":{"crate_id":22,"path":["tokio","task","unconstrained","Unconstrained"],"kind":"struct"},"2:51241":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:1703":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:5815":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:1724":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"26:5189":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:7894":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"2:11996":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:3222":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:7187":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11378":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:49329":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:3522":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"12:1100":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:10938":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:46975":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"34:811":{"crate_id":34,"path":["tracing_core","event","Event"],"kind":"struct"},"12:2323":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"0:3480":{"crate_id":0,"path":["h2","Ping"],"kind":"struct"},"1:5671":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:2884":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:9366":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:5441":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:4283":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:3955":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:12946":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"40:6333":{"crate_id":40,"path":["futures_util","future","join","Join"],"kind":"struct"},"2:22510":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:47868":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:1297":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"22:12752":{"crate_id":22,"path":["tokio","io","util","write","Write"],"kind":"struct"},"22:3913":{"crate_id":22,"path":["tokio","io","util","buf_reader","SeekState"],"kind":"enum"},"2:3030":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:4415":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"22:225":{"crate_id":22,"path":["tokio","io","async_read","AsyncRead","poll_read"],"kind":"foreign_type"},"17:4157":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:1528":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"34:1212":{"crate_id":34,"path":["tracing_core","subscriber","InterestKind"],"kind":"enum"},"5:1522":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:45668":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:46359":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:12010":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:3285":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:4656":{"crate_id":1,"path":["std","io","BufRead","read_until"],"kind":"foreign_type"},"1:1431":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"26:1509":{"crate_id":26,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:48644":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"16:4641":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:4626":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"40:7325":{"crate_id":40,"path":["futures_util","stream","stream","filter_map","_","__Origin"],"kind":"struct"},"2:9863":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"22:3854":{"crate_id":22,"path":["tokio","io","util","async_write_ext","AsyncWriteExt","write"],"kind":"foreign_type"},"2:52843":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:11894":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"21:1245":{"crate_id":21,"path":["bytes","buf","take","Take"],"kind":"struct"},"22:11094":{"crate_id":22,"path":["tokio","util","slab","Address"],"kind":"struct"},"34:281":{"crate_id":34,"path":["tracing_core","field","FieldSet"],"kind":"struct"},"31:1339":{"crate_id":31,"path":["tokio_util","codec","any_delimiter_codec","AnyDelimiterCodec"],"kind":"struct"},"26:5399":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:56794":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"15:269":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:1072":{"crate_id":1,"path":["std","ascii","AsciiExt","make_ascii_uppercase"],"kind":"foreign_type"},"2:49705":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:6949":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:12290":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:9943":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:10926":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:7609":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"16:7549":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:13865":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:49069":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:11076":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"24:294":{"crate_id":24,"path":["log","Metadata"],"kind":"struct"},"2:51109":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:3845":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:4488":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:1181":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"26:5271":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"29:823":{"crate_id":29,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:5154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:45931":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:12982":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"31:369":{"crate_id":31,"path":["tokio_util","sync","reusable_box","ReusableBoxFuture"],"kind":"struct"},"5:7943":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"40:5961":{"crate_id":40,"path":["futures_util","future","try_future","MapErr"],"kind":"struct"},"40:7527":{"crate_id":40,"path":["futures_util","stream","stream","any","Any"],"kind":"struct"},"1:8558":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:535":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"22:3781":{"crate_id":22,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","read_until"],"kind":"foreign_type"},"1:14259":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"40:8137":{"crate_id":40,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"12:976":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:4245":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:6464":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"22:14241":{"crate_id":22,"path":["tokio","io","util","read_int","ReadU8"],"kind":"struct"},"26:6849":{"crate_id":26,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:11665":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:9961":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:7205":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:9839":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:1009":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:1986":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"23:512":{"crate_id":23,"path":["mio","sys","unix","waker","eventfd","Waker"],"kind":"struct"},"22:10512":{"crate_id":22,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"2:45812":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"16:3264":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"40:7978":{"crate_id":40,"path":["futures_util","stream","stream","peek","Peekable"],"kind":"struct"},"2:8158":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","map"],"kind":"foreign_type"},"2:3193":{"crate_id":2,"path":["core","ops"],"kind":"module"},"40:6809":{"crate_id":40,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"22:7469":{"crate_id":22,"path":["tokio","runtime","blocking","shutdown","Receiver"],"kind":"struct"},"22:10894":{"crate_id":22,"path":["tokio","task","task_local","AccessError"],"kind":"struct"},"0:8598":{"crate_id":0,"path":["h2","client","ReadySendRequest"],"kind":"struct"},"28:0":{"crate_id":28,"path":["tokio_macros"],"kind":"module"},"26:6843":{"crate_id":26,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:1653":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"40:5681":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"5:7975":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"22:9764":{"crate_id":22,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"5:1602":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:9581":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:46983":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"29:955":{"crate_id":29,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"26:6193":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"22:3798":{"crate_id":22,"path":["tokio","io","util","async_read_ext","AsyncReadExt","read_exact"],"kind":"foreign_type"},"40:800":{"crate_id":40,"path":["futures_util","future","poll_fn","PollFn"],"kind":"struct"},"17:13180":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:49122":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"22:13371":{"crate_id":22,"path":["tokio","io","util","read_int","ReadI64Le"],"kind":"struct"},"2:46081":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"37:489":{"crate_id":37,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"2:4759":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:48855":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:47077":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"40:6166":{"crate_id":40,"path":["futures_util","future","maybe_done","MaybeDone"],"kind":"enum"},"17:10236":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:517":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:12610":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"22:5879":{"crate_id":22,"path":["tokio","park","thread","UnparkThread"],"kind":"struct"},"34:824":{"crate_id":34,"path":["tracing_core","field","Empty"],"kind":"struct"},"5:7958":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"40:499":{"crate_id":40,"path":["futures_util","future","try_future","TryFutureExt","and_then"],"kind":"foreign_type"},"1:4652":{"crate_id":1,"path":["std","io","BufRead","fill_buf"],"kind":"foreign_type"},"2:45831":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"40:5158":{"crate_id":40,"path":["futures_util","future","future","UnitError"],"kind":"struct"},"34:1191":{"crate_id":34,"path":["tracing_core","span","Current"],"kind":"struct"},"2:4787":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:1408":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"22:10964":{"crate_id":22,"path":["tokio","util","slab","Slab"],"kind":"struct"},"31:1518":{"crate_id":31,"path":["tokio_util","codec","framed_write","_","__Origin"],"kind":"struct"},"1:6644":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:8346":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","unzip"],"kind":"foreign_type"},"17:11835":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"22:13518":{"crate_id":22,"path":["tokio","io","util","read_int","ReadU128Le"],"kind":"struct"},"1:1482":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"22:11342":{"crate_id":22,"path":["tokio","task","task_local","TaskLocalFuture"],"kind":"struct"},"26:4316":{"crate_id":26,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:13582":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:5472":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:4569":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:10516":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"5:1611":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:681":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:3506":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"40:9400":{"crate_id":40,"path":["futures_util","stream","try_stream","try_collect","_","__Origin"],"kind":"struct"},"17:13547":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"34:1060":{"crate_id":34,"path":["tracing_core","metadata","Level"],"kind":"struct"},"22:7210":{"crate_id":22,"path":["tokio","runtime","blocking","task","BlockingTask"],"kind":"struct"},"17:13564":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:12118":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"26:4247":{"crate_id":26,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:6736":{"crate_id":1,"path":["std","os","linux","process","CommandExt","create_pidfd"],"kind":"foreign_type"},"17:9404":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:13609":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"34:1094":{"crate_id":34,"path":["tracing_core","metadata","ParseLevelFilterError"],"kind":"struct"},"22:13861":{"crate_id":22,"path":["tokio","io","util","read_int","ReadI64"],"kind":"struct"},"26:5234":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"40:5925":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"16:3064":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"26:5326":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:13331":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"22:13714":{"crate_id":22,"path":["tokio","io","util","read_int","ReadF64"],"kind":"struct"},"1:15714":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:12140":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:3152":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"22:10989":{"crate_id":22,"path":["tokio","util","slab","CachedPage"],"kind":"struct"},"34:1078":{"crate_id":34,"path":["tracing_core","metadata","LevelFilter"],"kind":"struct"},"40:5900":{"crate_id":40,"path":["futures_util","future","try_future","MapOk"],"kind":"struct"},"22:10388":{"crate_id":22,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"22:263":{"crate_id":22,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"24:325":{"crate_id":24,"path":["log","MetadataBuilder"],"kind":"struct"},"6:5269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"34:846":{"crate_id":34,"path":["tracing_core","field","DebugValue"],"kind":"struct"},"2:49533":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:6623":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:11499":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"40:8242":{"crate_id":40,"path":["futures_util","stream","stream","skip_while","_","__Origin"],"kind":"struct"},"37:631":{"crate_id":37,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"2:10798":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:7220":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:3413":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"5:3589":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"22:8496":{"crate_id":22,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"2:49513":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"6:4103":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"40:9422":{"crate_id":40,"path":["futures_util","stream","try_stream","try_concat","TryConcat"],"kind":"struct"},"12:925":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:50520":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:1712":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"40:9803":{"crate_id":40,"path":["futures_util","stream","select","Select"],"kind":"struct"},"2:47862":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"16:2968":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:3133":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"22:8049":{"crate_id":22,"path":["tokio","runtime","thread_pool","Spawner"],"kind":"struct"},"2:23200":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"29:902":{"crate_id":29,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"34:139":{"crate_id":34,"path":["tracing_core","dispatcher","Entered"],"kind":"struct"},"45:975":{"crate_id":45,"path":["hashbrown","map","Entry"],"kind":"enum"},"37:2544":{"crate_id":37,"path":["http","header","map","Bucket"],"kind":"struct"},"11:46":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"26:6218":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:3032":{"crate_id":2,"path":["core","convert","Into","into"],"kind":"foreign_type"},"17:9649":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:22086":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"22:3788":{"crate_id":22,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","lines"],"kind":"foreign_type"},"6:6851":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:3242":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:10420":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:10697":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"40:9652":{"crate_id":40,"path":["futures_util","stream","try_stream","try_take_while","TryTakeWhile"],"kind":"struct"},"17:11118":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:51929":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"16:5960":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"5:6569":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:7717":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:7158":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:12756":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:8902":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:5996":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"22:367":{"crate_id":22,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"22:1365":{"crate_id":22,"path":["tokio","io","driver","Inner"],"kind":"struct"},"16:6718":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"40:4885":{"crate_id":40,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"24:160":{"crate_id":24,"path":["log","Log"],"kind":"trait"},"40:9790":{"crate_id":40,"path":["futures_util","stream","pending","Pending"],"kind":"struct"},"17:9186":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:2754":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:11588":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"45:1568":{"crate_id":45,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"26:4202":{"crate_id":26,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:6910":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"22:5143":{"crate_id":22,"path":["tokio","net","tcp","split_owned","ReuniteError"],"kind":"struct"},"22:10547":{"crate_id":22,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"12:2039":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:1612":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:15713":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"26:6837":{"crate_id":26,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"26:4453":{"crate_id":26,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"5:5511":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"21:1282":{"crate_id":21,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"2:46889":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:21":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:6491":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:1671":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:49366":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"45:1019":{"crate_id":45,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:9485":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"2:45744":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"22:304":{"crate_id":22,"path":["tokio","io","async_write","AsyncWrite","poll_write"],"kind":"foreign_type"},"22:12465":{"crate_id":22,"path":["tokio","io","util","write_int","WriteU8"],"kind":"struct"},"29:1039":{"crate_id":29,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"21:518":{"crate_id":21,"path":["bytes","bytes","Vtable"],"kind":"struct"},"1:3269":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:5231":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"0:3151":{"crate_id":0,"path":["h2","ext"],"kind":"module"},"40:9860":{"crate_id":40,"path":["futures_util","stream","select_with_strategy","SelectWithStrategy"],"kind":"struct"},"1:14773":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"34:834":{"crate_id":34,"path":["tracing_core","field","Iter"],"kind":"struct"},"34:468":{"crate_id":34,"path":["tracing_core","metadata","Metadata"],"kind":"struct"},"29:917":{"crate_id":29,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:7595":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:5941":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:8188":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","flat_map"],"kind":"foreign_type"},"2:8155":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","intersperse"],"kind":"foreign_type"},"1:12481":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:4574":{"crate_id":1,"path":["std","io","Read","read_to_end"],"kind":"foreign_type"},"45:1563":{"crate_id":45,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:55379":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"26:4008":{"crate_id":26,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"40:9329":{"crate_id":40,"path":["futures_util","stream","try_stream","try_flatten","TryFlatten"],"kind":"struct"},"16:3172":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"26:6889":{"crate_id":26,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:48763":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:8208":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"16:3392":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"12:354":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:7581":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"31:1468":{"crate_id":31,"path":["tokio_util","sync","mpsc","PollSender"],"kind":"struct"},"1:8960":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:13959":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"26:1723":{"crate_id":26,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:9896":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"22:10430":{"crate_id":22,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"1:10640":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"22:142":{"crate_id":22,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"1:1400":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:3604":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:13772":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:4144":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"40:4940":{"crate_id":40,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"6:5515":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"22:7006":{"crate_id":22,"path":["tokio","runtime","basic_scheduler","enter","Guard"],"kind":"struct"},"40:5478":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"17:1236":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"22:12692":{"crate_id":22,"path":["tokio","io","util","write_vectored","WriteVectored"],"kind":"struct"},"17:9476":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"45:1582":{"crate_id":45,"path":["hashbrown","set","Difference"],"kind":"struct"},"26:6623":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:7925":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:4116":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"26:3932":{"crate_id":26,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:11714":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:10551":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"2:47119":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:8870":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"22:5134":{"crate_id":22,"path":["tokio","net","tcp","split_owned","OwnedReadHalf"],"kind":"struct"},"40:5337":{"crate_id":40,"path":["futures_util","future","try_future","TryFlatten"],"kind":"struct"},"34:1046":{"crate_id":34,"path":["tracing_core","metadata","Kind"],"kind":"struct"},"5:5457":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:1558":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:12494":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"45:110":{"crate_id":45,"path":["hashbrown","raw","inner","bitmask","BitMaskIter"],"kind":"struct"},"37:1479":{"crate_id":37,"path":["http","response","Response"],"kind":"struct"},"17:13041":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:6176":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"27:0":{"crate_id":27,"path":["pin_project_lite"],"kind":"module"},"16:6518":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:3934":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:12917":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:9853":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:6733":{"crate_id":1,"path":["std","os","linux","process","ChildExt","pidfd"],"kind":"foreign_type"},"17:9088":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:4386":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"26:4486":{"crate_id":26,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"34:1146":{"crate_id":34,"path":["tracing_core","metadata","ParseLevelError"],"kind":"struct"},"1:1066":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:13962":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:2893":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:10656":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:51586":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"23:171":{"crate_id":23,"path":["mio","event","events","Events"],"kind":"struct"},"35:0":{"crate_id":35,"path":["lazy_static"],"kind":"module"},"2:13625":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"22:3865":{"crate_id":22,"path":["tokio","io","util","async_write_ext","AsyncWriteExt","write_all"],"kind":"foreign_type"},"37:781":{"crate_id":37,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"17:9440":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"37:2372":{"crate_id":37,"path":["http","header","map","IterMut"],"kind":"struct"},"12:866":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:45752":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"37:2399":{"crate_id":37,"path":["http","header","map","Values"],"kind":"struct"},"26:575":{"crate_id":26,"path":["libc","unix","pollfd"],"kind":"struct"},"17:10160":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:7988":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"22:10406":{"crate_id":22,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"22:1024":{"crate_id":22,"path":["tokio","future","maybe_done","MaybeDone"],"kind":"enum"},"2:55524":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"9:722":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"5:6988":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"34:807":{"crate_id":34,"path":["tracing_core","dispatcher","SetGlobalDefaultError"],"kind":"struct"},"31:1039":{"crate_id":31,"path":["tokio_util","codec","length_delimited","LengthDelimitedCodecError"],"kind":"struct"},"26:5507":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:9600":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"22:13616":{"crate_id":22,"path":["tokio","io","util","read_int","ReadU32Le"],"kind":"struct"},"37:490":{"crate_id":37,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"16:6126":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"22:63":{"crate_id":22,"path":["tokio","macros","scoped_tls","ScopedKey"],"kind":"struct"},"20:110":{"crate_id":20,"path":["futures_core","stream","FusedStream"],"kind":"trait"},"16:5580":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"22:1356":{"crate_id":22,"path":["tokio","io","driver","Driver"],"kind":"struct"},"22:14400":{"crate_id":22,"path":["tokio","io","util","read","Read"],"kind":"struct"},"22:10800":{"crate_id":22,"path":["tokio","task","task_local","with_task","Guard"],"kind":"struct"},"16:4762":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"22:1543":{"crate_id":22,"path":["tokio","io","driver","scheduled_io","Waiters"],"kind":"struct"},"0:3295":{"crate_id":0,"path":["h2","server","SendPushedResponse"],"kind":"struct"},"1:11888":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"22:14204":{"crate_id":22,"path":["tokio","io","util","read_int","ReadI8"],"kind":"struct"},"6:5985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:23556":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:3205":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:10435":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:6391":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:10064":{"crate_id":2,"path":["core","hash","Hasher","write"],"kind":"foreign_type"},"22:7718":{"crate_id":22,"path":["tokio","runtime","queue","push_overflow","BatchTaskIter"],"kind":"struct"},"23:505":{"crate_id":23,"path":["mio","sys","unix","sourcefd","SourceFd"],"kind":"struct"},"40:5050":{"crate_id":40,"path":["futures_util","future","future","Inspect"],"kind":"struct"},"17:11277":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:4635":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"22:8489":{"crate_id":22,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"17:12168":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:47907":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:1503":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"0:3291":{"crate_id":0,"path":["h2","server","Connection"],"kind":"struct"},"40:5398":{"crate_id":40,"path":["futures_util","future","try_future","TryFlattenErr"],"kind":"struct"},"40:7908":{"crate_id":40,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"16:7264":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:12051":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"40:8853":{"crate_id":40,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"31:1476":{"crate_id":31,"path":["tokio_util","either","Either"],"kind":"enum"},"29:705":{"crate_id":29,"path":["memchr","cow","Imp"],"kind":"enum"},"16:5790":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:4337":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:13389":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:6631":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:4614":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"40:5178":{"crate_id":40,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"17:11962":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:7236":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"44:968":{"crate_id":44,"path":["indexmap","set","Iter"],"kind":"struct"},"1:7846":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"1:14923":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"44:197":{"crate_id":44,"path":["indexmap","map","core","IndexMapCore"],"kind":"struct"},"22:11109":{"crate_id":22,"path":["tokio","util","linked_list","DrainFilter"],"kind":"struct"},"40:9350":{"crate_id":40,"path":["futures_util","stream","try_stream","try_flatten","_","__Origin"],"kind":"struct"},"16:6252":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:49113":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:3663":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:5509":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:11482":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:12783":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:7295":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:7823":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:1143":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"29:974":{"crate_id":29,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"12:1200":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:2073":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"9:0":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"22:10874":{"crate_id":22,"path":["tokio","task","yield_now","yield_now","YieldNow"],"kind":"struct"},"6:665":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:597":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"22:14543":{"crate_id":22,"path":["tokio","io","util","chain","Chain"],"kind":"struct"},"40:4775":{"crate_id":40,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"2:48188":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"37:2364":{"crate_id":37,"path":["http","header","map","Iter"],"kind":"struct"},"1:14929":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:5975":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:3488":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"45:805":{"crate_id":45,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"45:741":{"crate_id":45,"path":["hashbrown","map","Drain"],"kind":"struct"},"26:4237":{"crate_id":26,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"31:1267":{"crate_id":31,"path":["tokio_util","codec","framed","FramedParts"],"kind":"struct"},"2:52748":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:13516":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:3431":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:5698":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt","ctime"],"kind":"foreign_type"},"1:14910":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:11915":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"24:195":{"crate_id":24,"path":["log","Level"],"kind":"enum"},"16:2773":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:10908":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:3591":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"26:150":{"crate_id":26,"path":["libc","unix","FILE"],"kind":"enum"},"40:9263":{"crate_id":40,"path":["futures_util","stream","try_stream","try_filter_map","TryFilterMap"],"kind":"struct"},"1:8934":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"21:1217":{"crate_id":21,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"17:12582":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:15720":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:1660":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"18:857":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"40:9177":{"crate_id":40,"path":["futures_util","stream","try_stream","try_for_each","_","__Origin"],"kind":"struct"},"1:8051":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"42:135":{"crate_id":42,"path":["futures_task","future_obj","UnsafeFutureObj"],"kind":"trait"},"40:9133":{"crate_id":40,"path":["futures_util","stream","try_stream","try_next","TryNext"],"kind":"struct"},"1:15193":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"40:4639":{"crate_id":40,"path":["futures_util","future","future","fuse","_","__Origin"],"kind":"struct"},"45:767":{"crate_id":45,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"17:11186":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:7856":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:13477":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"40:4364":{"crate_id":40,"path":["futures_util","fns","FnMut1"],"kind":"trait"},"2:10062":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"22:10475":{"crate_id":22,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"12:1688":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"40:9748":{"crate_id":40,"path":["futures_util","stream","empty","Empty"],"kind":"struct"},"26:5501":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:3146":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:4484":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"26:5220":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"22:10345":{"crate_id":22,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"40:7649":{"crate_id":40,"path":["futures_util","stream","stream","for_each","ForEach"],"kind":"struct"},"16:4995":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"5:4013":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"22:6969":{"crate_id":22,"path":["tokio","runtime","basic_scheduler","RemoteMsg"],"kind":"enum"},"40:6915":{"crate_id":40,"path":["futures_util","future","try_select","TrySelect"],"kind":"struct"},"37:2556":{"crate_id":37,"path":["http","header","map","Links"],"kind":"struct"},"2:49208":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"40:8784":{"crate_id":40,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"17:13453":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:47613":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:11158":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:12208":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:12343":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"22:184":{"crate_id":22,"path":["tokio","io","async_buf_read","AsyncBufRead","consume"],"kind":"foreign_type"},"40:7289":{"crate_id":40,"path":["futures_util","stream","stream","filter_map","FilterMap"],"kind":"struct"},"12:1855":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:9759":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"22:5120":{"crate_id":22,"path":["tokio","net","tcp","split","ReadHalf"],"kind":"struct"},"2:31925":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"2:10655":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"26:1687":{"crate_id":26,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"26:554":{"crate_id":26,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:31761":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"22:13170":{"crate_id":22,"path":["tokio","io","util","read_line","ReadLine"],"kind":"struct"},"29:984":{"crate_id":29,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:10546":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"34:777":{"crate_id":34,"path":["tracing_core","callsite","REGISTRY"],"kind":"struct"},"44:630":{"crate_id":44,"path":["indexmap","map","IterMut"],"kind":"struct"},"40:484":{"crate_id":40,"path":["futures_util","future","try_future","TryFutureExt"],"kind":"trait"},"13:0":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:11738":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:23612":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:2866":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"5:1217":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:11213":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"5:5497":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"17:13898":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"29:170":{"crate_id":29,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:8929":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"0:9076":{"crate_id":0,"path":["h2","FlowControl"],"kind":"struct"},"18:774":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"43:198":{"crate_id":43,"path":["slab","Slab"],"kind":"struct"},"16:7185":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:11165":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"40:8182":{"crate_id":40,"path":["futures_util","stream","stream","skip","_","__Origin"],"kind":"struct"},"26:5138":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:49059":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"18:677":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:2749":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:9845":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"12:1144":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:13465":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:12741":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:2149":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:12725":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:11779":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:8140":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","Item"],"kind":"foreign_type"},"0:8678":{"crate_id":0,"path":["h2","ext","Protocol"],"kind":"struct"},"26:4346":{"crate_id":26,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"12:2013":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:5184":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:9624":{"crate_id":1,"path":["std","sys_common","rwlock","MovableRwLock"],"kind":"struct"},"2:8153":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","zip"],"kind":"foreign_type"},"1:894":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:294":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:8228":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","is_partitioned"],"kind":"foreign_type"},"22:11689":{"crate_id":22,"path":["tokio","io","util","write_int","WriteI16Le"],"kind":"struct"},"2:3027":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"22:7606":{"crate_id":22,"path":["tokio","runtime","park","Parker"],"kind":"struct"},"2:10871":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"40:4354":{"crate_id":40,"path":["futures_util","fns","FnOnce1"],"kind":"trait"},"22:11376":{"crate_id":22,"path":["tokio","task","task_local","_","__Origin"],"kind":"struct"},"26:1589":{"crate_id":26,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"40:9299":{"crate_id":40,"path":["futures_util","stream","try_stream","try_filter_map","_","__Origin"],"kind":"struct"},"20:96":{"crate_id":20,"path":["futures_core","stream","Stream"],"kind":"trait"},"2:10093":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"26:6079":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:12306":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:6799":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:6038":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:3928":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"22:10396":{"crate_id":22,"path":["tokio","sync","notify","State"],"kind":"enum"},"1:10301":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"23:1759":{"crate_id":23,"path":["mio","net","uds","stream","UnixStream"],"kind":"struct"},"2:3132":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"43:67":{"crate_id":43,"path":["slab","compact","CleanupGuard"],"kind":"struct"},"2:12625":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:5330":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:8243":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","fold"],"kind":"foreign_type"},"1:15708":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"22:10296":{"crate_id":22,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:4066":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"35:20":{"crate_id":35,"path":["lazy_static","lazy","Lazy"],"kind":"struct"},"26:569":{"crate_id":26,"path":["libc","unix","iovec"],"kind":"struct"},"6:4023":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:6226":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"40:7126":{"crate_id":40,"path":["futures_util","stream","stream","concat","_","__Origin"],"kind":"struct"},"26:1704":{"crate_id":26,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"22:5896":{"crate_id":22,"path":["tokio","park","thread","CachedParkThread"],"kind":"struct"},"2:47627":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:51209":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:45721":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"40:10052":{"crate_id":40,"path":["futures_util","fns","MapOkFn"],"kind":"struct"},"1:6630":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"22:8266":{"crate_id":22,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"33:147":{"crate_id":33,"path":["tracing","instrument","Instrument"],"kind":"trait"},"1:1627":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:5595":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"20:28":{"crate_id":20,"path":["futures_core","future","FusedFuture","is_terminated"],"kind":"foreign_type"},"16:5927":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:814":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"22:1564":{"crate_id":22,"path":["tokio","io","driver","scheduled_io","Waiter"],"kind":"struct"},"5:4218":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"34:839":{"crate_id":34,"path":["tracing_core","field","DisplayValue"],"kind":"struct"},"17:11993":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:2178":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"26:6070":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"22:1690":{"crate_id":22,"path":["tokio","io","async_fd","AsyncFd"],"kind":"struct"},"16:3320":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"40:6996":{"crate_id":40,"path":["futures_util","stream","stream","collect","Collect"],"kind":"struct"},"2:46091":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"40:8161":{"crate_id":40,"path":["futures_util","stream","stream","skip","Skip"],"kind":"struct"},"1:13691":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:49687":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:14755":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"19:117":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"43:37":{"crate_id":43,"path":["slab","IntoIter"],"kind":"struct"},"5:7908":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"20:0":{"crate_id":20,"path":["futures_core"],"kind":"module"},"26:4178":{"crate_id":26,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"34:288":{"crate_id":34,"path":["tracing_core","field","Visit"],"kind":"trait"},"37:3145":{"crate_id":37,"path":["http","uri","authority","Authority"],"kind":"struct"},"2:12573":{"crate_id":2,"path":["core","str","pattern","Searcher","next_reject"],"kind":"foreign_type"},"22:5828":{"crate_id":22,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"1:11116":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"23:1096":{"crate_id":23,"path":["mio","io_source","IoSource"],"kind":"struct"},"17:12632":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:8142":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","size_hint"],"kind":"foreign_type"},"17:10331":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:24198":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:13377":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"39:0":{"crate_id":39,"path":["itoa"],"kind":"module"},"17:9065":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:13924":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"26:6179":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:49302":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:13598":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"22:543":{"crate_id":22,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"0:8613":{"crate_id":0,"path":["h2","client","PushPromise"],"kind":"struct"},"12:2315":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:3271":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"37:3055":{"crate_id":37,"path":["http","request","Builder"],"kind":"struct"},"2:48714":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:15449":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:4006":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"23:1191":{"crate_id":23,"path":["mio","net","tcp","listener","TcpListener"],"kind":"struct"},"24:357":{"crate_id":24,"path":["log","ParseLevelError"],"kind":"struct"},"2:55472":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:6029":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:10442":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:45282":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:10458":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:47620":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"31:62":{"crate_id":31,"path":["tokio_util","sync","cancellation_token","CancellationToken"],"kind":"struct"},"5:7772":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:6016":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"5:5412":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:46341":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:4448":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"45:678":{"crate_id":45,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:13054":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"22:14621":{"crate_id":22,"path":["tokio","io","util","buf_writer","_","__Origin"],"kind":"struct"},"45:1852":{"crate_id":45,"path":["hashbrown","raw","inner","sse2","Group"],"kind":"struct"},"17:10988":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"26:4035":{"crate_id":26,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"12:2009":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"12:937":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:4890":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"45:752":{"crate_id":45,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"22:12277":{"crate_id":22,"path":["tokio","io","util","write_int","WriteU64"],"kind":"struct"},"1:1123":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"40:4707":{"crate_id":40,"path":["futures_util","future","future","Flatten"],"kind":"struct"},"38:0":{"crate_id":38,"path":["fnv"],"kind":"module"},"16:3118":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:13394":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"0:8609":{"crate_id":0,"path":["h2","client","PushedResponseFuture"],"kind":"struct"},"26:6103":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:14343":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"12:968":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"40:8088":{"crate_id":40,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"29:947":{"crate_id":29,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"25:0":{"crate_id":25,"path":["cfg_if"],"kind":"module"},"22:8982":{"crate_id":22,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:13574":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"0:8689":{"crate_id":0,"path":["h2","server","Builder"],"kind":"struct"},"16:6136":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:3297":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:6089":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"22:14008":{"crate_id":22,"path":["tokio","io","util","read_int","ReadU128"],"kind":"struct"},"1:10502":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:13446":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:50863":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:23204":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:7561":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:24232":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:3293":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:31726":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:11096":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"23:1034":{"crate_id":23,"path":["mio","waker","Waker"],"kind":"struct"},"45:1863":{"crate_id":45,"path":["hashbrown","raw","inner","bitmask","BitMask"],"kind":"struct"},"2:38214":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:8841":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"0:3048":{"crate_id":0,"path":["h2","client","SendRequest"],"kind":"struct"},"5:3143":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:3230":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"23:0":{"crate_id":23,"path":["mio"],"kind":"module"},"26:6164":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"37:2635":{"crate_id":37,"path":["http","header","name","Repr"],"kind":"enum"},"40:9929":{"crate_id":40,"path":["futures_util","stream","unfold","Unfold"],"kind":"struct"},"22:6840":{"crate_id":22,"path":["tokio","runtime","task","join","JoinHandle"],"kind":"struct"},"1:9492":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"6:4289":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:13627":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:4852":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"22:12577":{"crate_id":22,"path":["tokio","io","util","write_buf","WriteBuf"],"kind":"struct"},"2:2962":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:48670":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:4651":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:4166":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:12671":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"37:2769":{"crate_id":37,"path":["http","header","name","StandardHeader"],"kind":"enum"},"26:5415":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:45982":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"24:164":{"crate_id":24,"path":["log","NopLogger"],"kind":"struct"},"1:2443":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:24670":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"34:1195":{"crate_id":34,"path":["tracing_core","span","CurrentInner"],"kind":"enum"},"2:49697":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:13402":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:12467":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"22:11214":{"crate_id":22,"path":["tokio","util","vec_deque_cell","VecDequeCell"],"kind":"struct"},"2:3024":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"44:668":{"crate_id":44,"path":["indexmap","map","Drain"],"kind":"struct"},"5:69":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"21:513":{"crate_id":21,"path":["bytes","bytes","Bytes"],"kind":"struct"},"37:544":{"crate_id":37,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"1:5694":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt","atime"],"kind":"foreign_type"},"22:4191":{"crate_id":22,"path":["tokio","io","util","sink","Sink"],"kind":"struct"},"22:5799":{"crate_id":22,"path":["tokio","net","unix","ucred","UCred"],"kind":"struct"},"5:1420":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"29:927":{"crate_id":29,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"21:1226":{"crate_id":21,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"17:9659":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"23:1042":{"crate_id":23,"path":["mio","event","events","Iter"],"kind":"struct"},"1:4303":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"20:127":{"crate_id":20,"path":["futures_core","stream","TryStream"],"kind":"trait"},"16:7928":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"18:782":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"14:231":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"21:771":{"crate_id":21,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"26:4376":{"crate_id":26,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:14000":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"22:11190":{"crate_id":22,"path":["tokio","util","sync_wrapper","SyncWrapper"],"kind":"struct"},"9:27":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"37:3318":{"crate_id":37,"path":["http","extensions","Extensions"],"kind":"struct"},"37:3293":{"crate_id":37,"path":["http","byte_str","ByteStr"],"kind":"struct"},"17:10052":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"39:55":{"crate_id":39,"path":["itoa","Buffer"],"kind":"struct"},"1:2382":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:49088":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"37:3264":{"crate_id":37,"path":["http","version","Http"],"kind":"enum"},"17:12182":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"9:963":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"22:517":{"crate_id":22,"path":["tokio","loom","std","atomic_ptr","AtomicPtr"],"kind":"struct"},"16:6644":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"18:811":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:48149":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"45:1595":{"crate_id":45,"path":["hashbrown","set","Union"],"kind":"struct"},"40:485":{"crate_id":40,"path":["futures_util","future","try_future","TryFutureExt","map_ok"],"kind":"foreign_type"},"2:10912":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:9855":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"40:2711":{"crate_id":40,"path":["futures_util","stream","stream","StreamExt","fold"],"kind":"foreign_type"},"9:749":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"5:6091":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:47287":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:8565":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:11794":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:8177":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","take_while"],"kind":"foreign_type"},"6:1517":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:4642":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:10525":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:2991":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:9849":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:15711":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"13:120":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"26:4394":{"crate_id":26,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:10689":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:51743":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:7971":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:8213":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","partition_in_place"],"kind":"foreign_type"},"45:405":{"crate_id":45,"path":["hashbrown","raw","inner","RawDrain"],"kind":"struct"},"40:6053":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"40:4805":{"crate_id":40,"path":["futures_util","future","future","Map"],"kind":"struct"},"2:23677":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"12:2303":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:13258":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:529":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"40:8662":{"crate_id":40,"path":["futures_util","stream","try_stream","and_then","_","__Origin"],"kind":"struct"},"0:3482":{"crate_id":0,"path":["h2","Pong"],"kind":"struct"},"31:1298":{"crate_id":31,"path":["tokio_util","codec","length_delimited","DecodeState"],"kind":"enum"},"2:52136":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"40:9625":{"crate_id":40,"path":["futures_util","stream","try_stream","try_skip_while","_","__Origin"],"kind":"struct"},"40:4977":{"crate_id":40,"path":["futures_util","future","future","Then"],"kind":"struct"},"17:10081":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:52720":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"40:10037":{"crate_id":40,"path":["futures_util","fns","InspectFn"],"kind":"struct"},"2:7723":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"26:1604":{"crate_id":26,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:5733":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"16:3714":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:11184":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"7:38":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"5:3455":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"18:744":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"12:2025":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:12442":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:2912":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"22:10361":{"crate_id":22,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"17:11328":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"9:41":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"40:8937":{"crate_id":40,"path":["futures_util","stream","try_stream","MapOk"],"kind":"struct"},"26:3837":{"crate_id":26,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"23:207":{"crate_id":23,"path":["mio","event","source","Source"],"kind":"trait"},"2:49104":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:2825":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:1636":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"22:6780":{"crate_id":22,"path":["tokio","runtime","task","error","JoinError"],"kind":"struct"},"2:51013":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"5:421":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"22:14478":{"crate_id":22,"path":["tokio","io","util","lines","_","__Origin"],"kind":"struct"},"1:14742":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:5672":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:5394":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:50698":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"40:2733":{"crate_id":40,"path":["futures_util","stream","stream","StreamExt","take_while"],"kind":"foreign_type"},"17:13172":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:5685":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"18:849":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:15712":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:13842":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"22:6736":{"crate_id":22,"path":["tokio","runtime","enter","exit","Reset"],"kind":"struct"},"40:502":{"crate_id":40,"path":["futures_util","future","try_future","TryFutureExt","or_else"],"kind":"foreign_type"},"17:11100":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:10721":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:6731":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:8156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","intersperse_with"],"kind":"foreign_type"},"1:8307":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"34:1160":{"crate_id":34,"path":["tracing_core","span","Id"],"kind":"struct"},"17:11159":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:8926":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"0:2937":{"crate_id":0,"path":["h2","client"],"kind":"module"},"17:13163":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"14:189":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"6:622":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:12020":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"22:10338":{"crate_id":22,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"17:10140":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:22114":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"22:5777":{"crate_id":22,"path":["tokio","net","unix","split_owned","OwnedWriteHalf"],"kind":"struct"},"37:1616":{"crate_id":37,"path":["http","uri"],"kind":"module"},"26:4406":{"crate_id":26,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:2750":{"crate_id":2,"path":["core","clone","Clone","clone"],"kind":"foreign_type"},"33:373":{"crate_id":33,"path":["tracing","sealed","Sealed"],"kind":"trait"},"40:10094":{"crate_id":40,"path":["futures_util","fns","InspectErrFn"],"kind":"struct"},"33:471":{"crate_id":33,"path":["tracing","span","Entered"],"kind":"struct"},"23:1828":{"crate_id":23,"path":["mio","net","tcp","socket","TcpSocket"],"kind":"struct"},"2:50886":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"26:5924":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"5:1197":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:2784":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"22:7556":{"crate_id":22,"path":["tokio","runtime","spawner","Spawner"],"kind":"enum"},"40:7458":{"crate_id":40,"path":["futures_util","stream","stream","fold","Fold"],"kind":"struct"},"43:46":{"crate_id":43,"path":["slab","IterMut"],"kind":"struct"},"40:7965":{"crate_id":40,"path":["futures_util","stream","stream","select_next_some","SelectNextSome"],"kind":"struct"},"40:2688":{"crate_id":40,"path":["futures_util","stream","stream","StreamExt","map"],"kind":"foreign_type"},"5:3231":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:1868":{"crate_id":2,"path":["core","mem"],"kind":"module"},"16:6087":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:45864":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:11254":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:5201":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"22:10371":{"crate_id":22,"path":["tokio","sync","notify","NotificationType"],"kind":"enum"},"2:45328":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"40:5583":{"crate_id":40,"path":["futures_util","future","try_future","OrElse"],"kind":"struct"},"26:4292":{"crate_id":26,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"26:5379":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:8230":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","try_fold"],"kind":"foreign_type"},"2:2084":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"16:3018":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:13263":{"crate_id":2,"path":["core","future","future","Future","Output"],"kind":"foreign_type"},"22:8975":{"crate_id":22,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"40:8107":{"crate_id":40,"path":["futures_util","stream","stream","peek","NextIfEq"],"kind":"struct"},"16:4350":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"26:6914":{"crate_id":26,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:50391":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"44:45":{"crate_id":44,"path":["indexmap","mutable_keys","MutableKeys"],"kind":"trait"},"40:5130":{"crate_id":40,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"26:516":{"crate_id":26,"path":["libc","unix","timeval"],"kind":"struct"},"2:45973":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"31:1371":{"crate_id":31,"path":["tokio_util","sync","cancellation_token","guard","DropGuard"],"kind":"struct"},"6:4494":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:11519":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:10028":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:13205":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:49079":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:4932":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"5:7895":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"26:4434":{"crate_id":26,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:49779":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:12195":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:49521":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"5:7727":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"12:774":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"22:13812":{"crate_id":22,"path":["tokio","io","util","read_int","ReadI128"],"kind":"struct"},"5:7750":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"5:7718":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:3950":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:49185":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:541":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"22:10366":{"crate_id":22,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"1:6642":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"16:3241":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:10962":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"7:85":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"40:5742":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"20:122":{"crate_id":20,"path":["futures_core","stream","private_try_stream","Sealed"],"kind":"trait"},"2:45798":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"22:14106":{"crate_id":22,"path":["tokio","io","util","read_int","ReadU32"],"kind":"struct"},"6:3940":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"14:216":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:5707":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:2961":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:9280":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:3379":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"34:348":{"crate_id":34,"path":["tracing_core","field","fmt","NullCallsite"],"kind":"struct"},"26:6593":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"12:2018":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:22351":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:31825":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:24096":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:9542":{"crate_id":2,"path":["core","fmt","builders","DebugStruct"],"kind":"struct"},"22:939":{"crate_id":22,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"22:307":{"crate_id":22,"path":["tokio","io","async_write","AsyncWrite","poll_write_vectored"],"kind":"foreign_type"},"6:6201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"16:5314":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:47161":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:8400":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:49401":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:46368":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"5:3546":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:22099":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"9:603":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:5456":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"21:1232":{"crate_id":21,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"1:1604":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:6424":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:49529":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"16:7042":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:9133":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:7989":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator","next_back"],"kind":"foreign_type"},"17:10403":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:10974":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:12043":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"22:8493":{"crate_id":22,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"1:5663":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:52390":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:52739":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:3346":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"42:18":{"crate_id":42,"path":["futures_task","spawn","LocalSpawn"],"kind":"trait"},"5:3135":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"40:9694":{"crate_id":40,"path":["futures_util","stream","try_stream","try_take_while","_","__Origin"],"kind":"struct"},"1:1492":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"26:1520":{"crate_id":26,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"6:6886":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:6219":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"26:1559":{"crate_id":26,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"37:2462":{"crate_id":37,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"37:2529":{"crate_id":37,"path":["http","header","map","HashValue"],"kind":"struct"},"6:5299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"22:1067":{"crate_id":22,"path":["tokio","future","ready","Ready"],"kind":"struct"},"2:23105":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:13192":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:3901":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"26:154":{"crate_id":26,"path":["libc","unix","fpos_t"],"kind":"enum"},"22:3800":{"crate_id":22,"path":["tokio","io","util","async_read_ext","AsyncReadExt","read_to_end"],"kind":"foreign_type"},"32:0":{"crate_id":32,"path":["futures_sink"],"kind":"module"},"2:45921":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"37:2601":{"crate_id":37,"path":["http","header","map","Danger"],"kind":"enum"},"2:22131":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"44:831":{"crate_id":44,"path":["indexmap","set","IndexSet"],"kind":"struct"},"2:3238":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"18:754":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"37:3063":{"crate_id":37,"path":["http","status","StatusCode"],"kind":"struct"},"26:3926":{"crate_id":26,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:11983":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:5415":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:6569":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"40:7878":{"crate_id":40,"path":["futures_util","stream","stream","FlatMap"],"kind":"struct"},"40:7047":{"crate_id":40,"path":["futures_util","stream","stream","unzip","Unzip"],"kind":"struct"},"26:4322":{"crate_id":26,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:547":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"22:11444":{"crate_id":22,"path":["tokio","io","util","write_int","WriteF64Le"],"kind":"struct"},"6:5932":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:52805":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:13554":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:12028":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"45:535":{"crate_id":45,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:13348":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"37:3203":{"crate_id":37,"path":["http","uri","InvalidUri"],"kind":"struct"},"40:4573":{"crate_id":40,"path":["futures_util","future","future","flatten","Flatten"],"kind":"enum"},"40:5613":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"26:4352":{"crate_id":26,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"12:0":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:23960":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:3973":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:48696":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:10671":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:24164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:51161":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:3247":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:14274":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:22555":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:46002":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:23642":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:52820":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"22:8082":{"crate_id":22,"path":["tokio","runtime","Kind"],"kind":"enum"},"6:6897":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:13272":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"22:13959":{"crate_id":22,"path":["tokio","io","util","read_int","ReadI16"],"kind":"struct"},"1:14524":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"6:3961":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:3216":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"26:601":{"crate_id":26,"path":["libc","unix","itimerval"],"kind":"struct"},"1:11809":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"40:7999":{"crate_id":40,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"6:5172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"26:3998":{"crate_id":26,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:10713":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"44:604":{"crate_id":44,"path":["indexmap","map","Iter"],"kind":"struct"},"2:22152":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:77":{"crate_id":2,"path":["core","usize"],"kind":"module"},"22:9711":{"crate_id":22,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"16:6366":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"18:610":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:7851":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"6:4402":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:10200":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:10887":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:10441":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:46163":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"44:953":{"crate_id":44,"path":["indexmap","set","IntoIter"],"kind":"struct"},"2:13733":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:10793":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:15116":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:0":{"crate_id":6,"path":["libc"],"kind":"module"},"16:4230":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:8203":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","partition"],"kind":"foreign_type"},"17:13986":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"40:6744":{"crate_id":40,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"17:11434":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"44:1077":{"crate_id":44,"path":["indexmap","set","Intersection"],"kind":"struct"},"6:589":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"5:4150":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:4714":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"5:6726":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:48724":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:12549":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:4297":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:47203":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:3137":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"18:896":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:3502":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:6208":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"26:5109":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:8776":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:6502":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"23:1004":{"crate_id":23,"path":["mio","sys","unix","pipe","Sender"],"kind":"struct"},"22:4430":{"crate_id":22,"path":["tokio","net","addr","sealed","MaybeReady"],"kind":"struct"},"12:429":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:2552":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"17:10489":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"26:6791":{"crate_id":26,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:13564":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:3851":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:22414":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:3578":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:56773":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"22:9419":{"crate_id":22,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"16:2794":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:46957":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"3:0":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:12507":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"40:9562":{"crate_id":40,"path":["futures_util","stream","try_stream","try_unfold","_","__Origin"],"kind":"struct"},"17:10926":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"30:0":{"crate_id":30,"path":["num_cpus"],"kind":"module"},"22:1597":{"crate_id":22,"path":["tokio","io","driver","Direction"],"kind":"enum"},"18:790":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"22:608":{"crate_id":22,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"2:46906":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"12:930":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"43:206":{"crate_id":43,"path":["slab","VacantEntry"],"kind":"struct"},"17:13810":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"22:6805":{"crate_id":22,"path":["tokio","runtime","task","inject","Inject"],"kind":"struct"},"6:6601":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"45:154":{"crate_id":45,"path":["hashbrown","raw","inner","Bucket"],"kind":"struct"},"6:3949":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:4637":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:8246":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","reduce"],"kind":"foreign_type"},"2:12488":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:22546":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:3150":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:9619":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"40:9141":{"crate_id":40,"path":["futures_util","stream","try_stream","try_for_each","TryForEach"],"kind":"struct"},"6:4078":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"26:4070":{"crate_id":26,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:46153":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:48909":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:7333":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"13:232":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:7216":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"12:112":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"22:13322":{"crate_id":22,"path":["tokio","io","util","read_int","ReadI128Le"],"kind":"struct"},"22:10970":{"crate_id":22,"path":["tokio","util","slab","Allocator"],"kind":"struct"},"37:2391":{"crate_id":37,"path":["http","header","map","Keys"],"kind":"struct"},"5:1584":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"14:47":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:7146":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:7907":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:15704":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:8849":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"22:10284":{"crate_id":22,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"9:996":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:5550":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:9791":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"45:851":{"crate_id":45,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"45:1589":{"crate_id":45,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"26:5977":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"40:4621":{"crate_id":40,"path":["futures_util","future","future","fuse","Fuse"],"kind":"struct"},"2:23440":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"0:0":{"crate_id":0,"path":["h2"],"kind":"module"},"18:667":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"5:2180":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:5197":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"22:10356":{"crate_id":22,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"5:1177":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"22:11402":{"crate_id":22,"path":["tokio","task","local","RunUntil"],"kind":"struct"},"26:5448":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:13506":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:74":{"crate_id":2,"path":["core","u32"],"kind":"module"},"2:52681":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"22:14155":{"crate_id":22,"path":["tokio","io","util","read_int","ReadU16"],"kind":"struct"},"2:4810":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"26:1514":{"crate_id":26,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"20:98":{"crate_id":20,"path":["futures_core","stream","Stream","poll_next"],"kind":"foreign_type"},"40:5986":{"crate_id":40,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"29:993":{"crate_id":29,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:6732":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:2512":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"22:10480":{"crate_id":22,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"12:1118":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"26:5338":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"12:1235":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"6:4084":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"23:1131":{"crate_id":23,"path":["mio","io_source","SelectorId"],"kind":"struct"},"2:8417":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"40:10143":{"crate_id":40,"path":["futures_util","unfold_state","UnfoldState"],"kind":"enum"},"2:12489":{"crate_id":2,"path":["core","str","traits","FromStr","Err"],"kind":"foreign_type"},"26:1895":{"crate_id":26,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"26:3867":{"crate_id":26,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:13277":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:5664":{"crate_id":1,"path":["std","os","unix","fs","FileExt","read_at"],"kind":"foreign_type"},"2:51265":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"26:5542":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"22:12375":{"crate_id":22,"path":["tokio","io","util","write_int","WriteU16"],"kind":"struct"},"1:6804":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"37:2564":{"crate_id":37,"path":["http","header","map","RawLinks"],"kind":"struct"},"17:8954":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"22:5791":{"crate_id":22,"path":["tokio","net","unix","stream","UnixStream"],"kind":"struct"},"20:45":{"crate_id":20,"path":["futures_core","future","TryFuture","Ok"],"kind":"foreign_type"},"1:5442":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:12155":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:12234":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"22:8646":{"crate_id":22,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"17:10827":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:9886":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:8989":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:11767":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"22:5152":{"crate_id":22,"path":["tokio","net","tcp","stream","TcpStream"],"kind":"struct"},"40:6923":{"crate_id":40,"path":["futures_util","future","either","Either"],"kind":"enum"},"2:10679":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:48606":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:5907":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:6807":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"45:800":{"crate_id":45,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"45:66":{"crate_id":45,"path":["hashbrown","raw","inner","alloc","inner","Allocator"],"kind":"trait"},"43:215":{"crate_id":43,"path":["slab","Entry"],"kind":"enum"},"2:51778":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"43:0":{"crate_id":43,"path":["slab"],"kind":"module"},"2:3373":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:6238":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:22503":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"22:5773":{"crate_id":22,"path":["tokio","net","unix","split_owned","OwnedReadHalf"],"kind":"struct"},"26:534":{"crate_id":26,"path":["libc","unix","rusage"],"kind":"struct"},"5:3601":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:4477":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"6:4347":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:5915":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:3549":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:5597":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:8872":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:45769":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:10226":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"40:8962":{"crate_id":40,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"17:11082":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"26:4158":{"crate_id":26,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:12095":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"14:11":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:55485":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:2779":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"26:1534":{"crate_id":26,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:1835":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:9849":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:2489":{"crate_id":1,"path":["std","error"],"kind":"module"},"1:1413":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:9440":{"crate_id":1,"path":["std","sys_common","condvar","Condvar"],"kind":"struct"},"17:11604":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"37:2523":{"crate_id":37,"path":["http","header","map","Pos"],"kind":"struct"},"41:0":{"crate_id":41,"path":["pin_utils"],"kind":"module"},"45:843":{"crate_id":45,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:10801":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"40:6231":{"crate_id":40,"path":["futures_util","future","ready","Ready"],"kind":"struct"},"17:13296":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:10951":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"42:80":{"crate_id":42,"path":["futures_task","future_obj","LocalFutureObj"],"kind":"struct"},"12:377":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"44:648":{"crate_id":44,"path":["indexmap","map","IntoIter"],"kind":"struct"},"22:14501":{"crate_id":22,"path":["tokio","io","util","flush","Flush"],"kind":"struct"},"2:50464":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"5:3677":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"26:6878":{"crate_id":26,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:4314":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"22:5501":{"crate_id":22,"path":["tokio","net","unix","socketaddr","SocketAddr"],"kind":"struct"},"1:11880":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"22:10982":{"crate_id":22,"path":["tokio","util","slab","Page"],"kind":"struct"},"24:288":{"crate_id":24,"path":["log","RecordBuilder"],"kind":"struct"},"16:5505":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:12287":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"22:1849":{"crate_id":22,"path":["tokio","io","split","Guard"],"kind":"struct"},"40:6378":{"crate_id":40,"path":["futures_util","future","join","Join3"],"kind":"struct"},"26:5438":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:4029":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:14660":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"22:11493":{"crate_id":22,"path":["tokio","io","util","write_int","WriteF32Le"],"kind":"struct"},"12:1180":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"40:7263":{"crate_id":40,"path":["futures_util","stream","stream","filter","_","__Origin"],"kind":"struct"},"1:7946":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"1:4203":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"17:10623":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:3980":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:47043":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"40:6096":{"crate_id":40,"path":["futures_util","future","try_future","UnwrapOrElse"],"kind":"struct"},"2:11556":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"22:13224":{"crate_id":22,"path":["tokio","io","util","read_int","ReadF64Le"],"kind":"struct"},"16:6691":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:7672":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"21:47":{"crate_id":21,"path":["bytes","buf","buf_impl","Buf","advance"],"kind":"foreign_type"},"0:9053":{"crate_id":0,"path":["h2","SendStream"],"kind":"struct"},"22:5766":{"crate_id":22,"path":["tokio","net","unix","split","WriteHalf"],"kind":"struct"},"26:3988":{"crate_id":26,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"40:7145":{"crate_id":40,"path":["futures_util","stream","stream","cycle","Cycle"],"kind":"struct"},"18:152":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"40:7105":{"crate_id":40,"path":["futures_util","stream","stream","concat","Concat"],"kind":"struct"},"37:3022":{"crate_id":37,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"17:11822":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"26:6047":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:48597":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:11280":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:88":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"22:8262":{"crate_id":22,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"40:8382":{"crate_id":40,"path":["futures_util","stream","stream","take_until","TakeUntil"],"kind":"struct"},"17:9264":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:2187":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:5407":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:3136":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"31:1559":{"crate_id":31,"path":["tokio_util","codec","framed_read","_","__Origin"],"kind":"struct"},"22:13003":{"crate_id":22,"path":["tokio","io","util","read_to_string","ReadToString"],"kind":"struct"},"2:3254":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"22:7449":{"crate_id":22,"path":["tokio","runtime","basic_scheduler","Spawner"],"kind":"struct"},"6:4354":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:1069":{"crate_id":1,"path":["std","ascii","AsciiExt","to_ascii_uppercase"],"kind":"foreign_type"},"17:10179":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:49541":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:4955":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"18:837":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"37:3188":{"crate_id":37,"path":["http","uri","Uri"],"kind":"struct"},"1:4659":{"crate_id":1,"path":["std","io","BufRead","split"],"kind":"foreign_type"},"31:1493":{"crate_id":31,"path":["tokio_util","codec","framed_write","FramedWrite"],"kind":"struct"},"17:13819":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:1903":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:4360":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:13370":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"22:3995":{"crate_id":22,"path":["tokio","io","util","mem","Pipe"],"kind":"struct"},"1:2170":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:2816":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:15697":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:6744":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"22:3975":{"crate_id":22,"path":["tokio","io","util","copy_buf","CopyBuf"],"kind":"struct"},"37:2678":{"crate_id":37,"path":["http","header","name","MaybeLower"],"kind":"struct"},"2:49097":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:15670":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:161":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:6072":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"26:4087":{"crate_id":26,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:49009":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"26:4095":{"crate_id":26,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:50625":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"26:5207":{"crate_id":26,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"22:10381":{"crate_id":22,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"2:23649":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:49414":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"2:45374":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"29:867":{"crate_id":29,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:52779":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"22:4435":{"crate_id":22,"path":["tokio","net","addr","sealed","State"],"kind":"enum"},"29:817":{"crate_id":29,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:6208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:14825":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:12483":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"40:9108":{"crate_id":40,"path":["futures_util","stream","try_stream","or_else","_","__Origin"],"kind":"struct"},"24:0":{"crate_id":24,"path":["log"],"kind":"module"},"37:1348":{"crate_id":37,"path":["http","request","Request"],"kind":"struct"},"18:169":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"37:543":{"crate_id":37,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"2:22361":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"9:900":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:11872":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"22:10488":{"crate_id":22,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"6:4453":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"9:776":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"5:7802":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:46856":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"40:6435":{"crate_id":40,"path":["futures_util","future","join","Join4"],"kind":"struct"},"1:1478":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:6055":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"22:12637":{"crate_id":22,"path":["tokio","io","util","write_all","WriteAll"],"kind":"struct"},"17:9005":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:8192":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator","fuse"],"kind":"foreign_type"},"45:327":{"crate_id":45,"path":["hashbrown","raw","inner","RawIterRange"],"kind":"struct"},"22:3783":{"crate_id":22,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","read_line"],"kind":"foreign_type"},"40:8295":{"crate_id":40,"path":["futures_util","stream","stream","take","_","__Origin"],"kind":"struct"},"17:12275":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"22:6657":{"crate_id":22,"path":["tokio","runtime","task","UnownedTask"],"kind":"struct"},"6:3875":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"24:216":{"crate_id":24,"path":["log","LevelFilter"],"kind":"enum"},"1:690":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"40:8439":{"crate_id":40,"path":["futures_util","stream","stream","then","Then"],"kind":"struct"},"2:47895":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"5:6027":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:1522":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:11423":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:5956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"5:1574":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"26:1710":{"crate_id":26,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"}},"external_crates":{"34":{"name":"tracing_core","html_root_url":"https://docs.rs/tracing-core/0.1.19/"},"37":{"name":"http","html_root_url":"https://docs.rs/http/0.2.4/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"35":{"name":"lazy_static","html_root_url":"https://docs.rs/lazy_static/1.4.0/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"42":{"name":"futures_task","html_root_url":null},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"26":{"name":"libc","html_root_url":null},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"36":{"name":"tracing_attributes","html_root_url":"https://docs.rs/tracing-attributes/0.1.15/"},"39":{"name":"itoa","html_root_url":"https://docs.rs/itoa/0.4.7/"},"29":{"name":"memchr","html_root_url":null},"33":{"name":"tracing","html_root_url":"https://docs.rs/tracing/0.1.26/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"log","html_root_url":"https://docs.rs/log/0.4.14/"},"20":{"name":"futures_core","html_root_url":null},"31":{"name":"tokio_util","html_root_url":null},"40":{"name":"futures_util","html_root_url":null},"22":{"name":"tokio","html_root_url":null},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"mio","html_root_url":"https://docs.rs/mio/0.7.13/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"45":{"name":"hashbrown","html_root_url":null},"30":{"name":"num_cpus","html_root_url":"https://docs.rs/num_cpus/1.13.0/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"32":{"name":"futures_sink","html_root_url":null},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"bytes","html_root_url":"https://docs.rs/bytes/1.0.1/"},"25":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"38":{"name":"fnv","html_root_url":null},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"28":{"name":"tokio_macros","html_root_url":null},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"41":{"name":"pin_utils","html_root_url":"https://docs.rs/pin-utils/0.1.0/"},"27":{"name":"pin_project_lite","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"44":{"name":"indexmap","html_root_url":"https://docs.rs/indexmap/1/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"43":{"name":"slab","html_root_url":null}},"format_version":14}